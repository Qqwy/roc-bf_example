; ModuleID = 'app'
source_filename = "builtins-host"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-unknown-macos-gnu"

%str.RocStr = type { i8*, i64, i64 }
%list.RocList = type { i8*, i64, i64 }
%str.FromUtf8Result = type { i64, %str.RocStr, i1, i8 }

@_str_literal_17100216405140828939 = private unnamed_addr constant [39 x i8] c"\00\00\00\00\00\00\00\00Failed to read the input file `", align 8
@_str_literal_12062936082858867291 = private unnamed_addr constant [34 x i8] c"\00\00\00\00\00\00\00\00invalid utf8 in the output", align 8
@_str_literal_15501312488748916623 = private unnamed_addr constant [42 x i8] c"\00\00\00\00\00\00\00\00integer multiplication overflowed!", align 8
@_str_literal_6416867770529264732 = private unnamed_addr constant [38 x i8] c"\00\00\00\00\00\00\00\00The BF file to be interpreted.", align 8
@_str_literal_10490427581256294289 = private unnamed_addr constant [40 x i8] c"\00\00\00\00\00\00\00\00Input (,) is not implemented yet", align 8
@_str_literal_11724802636100534137 = private unnamed_addr constant [47 x i8] c"\00\00\00\00\00\00\00\00\22 was not provided as a first argument!", align 8
@_str_literal_1169590549421570608 = private unnamed_addr constant [43 x i8] c"\00\00\00\00\00\00\00\00` is required but was not provided!", align 8
@_str_literal_12458281521289889614 = private unnamed_addr constant [34 x i8] c"\00\00\00\00\00\00\00\00` expects a value of type ", align 8
@_str_literal_9774341834311273816 = private unnamed_addr constant [82 x i8] c"\00\00\00\00\00\00\00\00A subcommand was expected, but not found!\0AThe available subcommands are:\0A\09", align 8
@_str_literal_8015680634864437174 = private unnamed_addr constant [102 x i8] c"\00\00\00\00\00\00\00\00 subcommand was found, but it's not expected in this context!\0AThe available subcommands are:\0A\09", align 8
@_str_literal_14773762520492002118 = private unnamed_addr constant [81 x i8] c"\00\00\00\00\00\00\00\00a Lambda Set is empty. Most likely there is a type error in your program.", align 8
@_str_literal_8788308771532261956 = private unnamed_addr constant [37 x i8] c"\00\00\00\00\00\00\00\00unexpected non-utf8 character", align 8

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.usub.sat.i64(i64, i64) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.cttz.i64(i64, i1 immarg) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #1

; Function Attrs: nobuiltin nounwind
define internal fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %0, %str.RocStr* nocapture nonnull readonly %1, %str.RocStr* nocapture nonnull readonly %2) unnamed_addr #2 {
Entry:
  %result.i28.i = alloca %str.RocStr, align 8
  %result.i.i = alloca %str.RocStr, align 8
  %result.i = alloca %str.RocStr, align 8
  %3 = bitcast %str.RocStr* %result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  %.idx.i.i.i = getelementptr %str.RocStr, %str.RocStr* %2, i64 0, i32 2
  %.idx.val.i.i.i = load i64, i64* %.idx.i.i.i, align 8, !noalias !4
  %4 = icmp slt i64 %.idx.val.i.i.i, 0
  br i1 %4, label %Then.i.i.i, label %Else.i.i.i

Then.i.i.i:                                       ; preds = %Entry
  %5 = lshr i64 %.idx.val.i.i.i, 56
  %6 = xor i64 %5, 128
  br label %str.RocStr.isEmpty.exit.i

Else.i.i.i:                                       ; preds = %Entry
  %7 = getelementptr inbounds %str.RocStr, %str.RocStr* %2, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !noalias !4
  %9 = and i64 %8, 9223372036854775807
  br label %str.RocStr.isEmpty.exit.i

str.RocStr.isEmpty.exit.i:                        ; preds = %Else.i.i.i, %Then.i.i.i
  %common.ret.op.i.i.i = phi i64 [ %6, %Then.i.i.i ], [ %9, %Else.i.i.i ]
  %10 = icmp eq i64 %common.ret.op.i.i.i, 0
  br i1 %10, label %Then.i, label %Else.i

Then.i:                                           ; preds = %str.RocStr.isEmpty.exit.i
  %11 = bitcast %str.RocStr* %1 to i8*
  %12 = bitcast %str.RocStr* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %12, i8* noundef nonnull align 8 dereferenceable(24) %11, i64 24, i1 false) #11
  br label %str.strConcat.exit

Else.i:                                           ; preds = %str.RocStr.isEmpty.exit.i
  %.idx.i.i = getelementptr %str.RocStr, %str.RocStr* %1, i64 0, i32 2
  %.idx.val.i.i = load i64, i64* %.idx.i.i, align 8, !noalias !4
  %13 = icmp slt i64 %.idx.val.i.i, 0
  br i1 %13, label %Then.i.i, label %Else.i.i

Then.i.i:                                         ; preds = %Else.i
  %14 = lshr i64 %.idx.val.i.i, 56
  %15 = xor i64 %14, 128
  br label %str.RocStr.len.exit.i

Else.i.i:                                         ; preds = %Else.i
  %16 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 1
  %17 = load i64, i64* %16, align 8, !noalias !4
  %18 = and i64 %17, 9223372036854775807
  br label %str.RocStr.len.exit.i

str.RocStr.len.exit.i:                            ; preds = %Else.i.i, %Then.i.i
  %common.ret.op.i.i = phi i64 [ %15, %Then.i.i ], [ %18, %Else.i.i ]
  br i1 %4, label %Then.i4.i, label %Else.i5.i

Then.i4.i:                                        ; preds = %str.RocStr.len.exit.i
  %19 = lshr i64 %.idx.val.i.i.i, 56
  %20 = xor i64 %19, 128
  br label %str.RocStr.len.exit6.i

Else.i5.i:                                        ; preds = %str.RocStr.len.exit.i
  %21 = getelementptr inbounds %str.RocStr, %str.RocStr* %2, i64 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !4
  %23 = and i64 %22, 9223372036854775807
  br label %str.RocStr.len.exit6.i

str.RocStr.len.exit6.i:                           ; preds = %Else.i5.i, %Then.i4.i
  %common.ret.op.i3.i = phi i64 [ %20, %Then.i4.i ], [ %23, %Else.i5.i ]
  %24 = add nuw i64 %common.ret.op.i3.i, %common.ret.op.i.i
  tail call void @llvm.experimental.noalias.scope.decl(metadata !7)
  br i1 %13, label %Then.i.i.i3, label %str.RocStr.isSeamlessSlice.exit.i

str.RocStr.isSeamlessSlice.exit.i:                ; preds = %str.RocStr.len.exit6.i
  %25 = getelementptr %str.RocStr, %str.RocStr* %1, i64 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !10
  %27 = icmp slt i64 %26, 0
  %28 = and i64 %26, 9223372036854775807
  %spec.select.i.i = select i1 %27, i64 %28, i64 %.idx.val.i.i
  br i1 %27, label %Else.i.i.i4, label %str.RocStr.getCapacity.exit.i.i.i.i

str.RocStr.getCapacity.exit.i.i.i.i:              ; preds = %str.RocStr.isSeamlessSlice.exit.i
  %29 = icmp eq i64 %.idx.val.i.i, 0
  br i1 %29, label %EndIf.i, label %str.RocStr.isUnique.exit.i

str.RocStr.isUnique.exit.i:                       ; preds = %str.RocStr.getCapacity.exit.i.i.i.i
  %30 = bitcast %str.RocStr* %1 to i64**
  %31 = load i64*, i64** %30, align 8, !noalias !10
  %32 = getelementptr inbounds i64, i64* %31, i64 -1
  %33 = load i64, i64* %32, align 8, !noalias !10
  %phi.cmp.i.i.not.i = icmp eq i64 %33, -9223372036854775808
  %34 = bitcast i64* %31 to i8*
  br i1 %phi.cmp.i.i.not.i, label %OptionalThen.i, label %Else.i.i.i4

Then.i.i.i3:                                      ; preds = %str.RocStr.len.exit6.i
  %35 = bitcast %str.RocStr* %result.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11, !noalias !10
  %36 = lshr i64 %.idx.val.i.i, 56
  %37 = xor i64 %36, 128
  br label %str.RocStr.len.exit.i.i

Else.i.i.i4:                                      ; preds = %str.RocStr.isUnique.exit.i, %str.RocStr.isSeamlessSlice.exit.i
  %38 = bitcast %str.RocStr* %result.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11, !noalias !10
  br label %str.RocStr.len.exit.i.i

str.RocStr.len.exit.i.i:                          ; preds = %Else.i.i.i4, %Then.i.i.i3
  %common.ret.op.i.i.i5 = phi i64 [ %37, %Then.i.i.i3 ], [ %28, %Else.i.i.i4 ]
  %.pre-phi.i.pre-phi = bitcast %str.RocStr* %result.i.i to i8*
  tail call void @llvm.experimental.noalias.scope.decl(metadata !11) #11, !noalias !4
  %39 = icmp ugt i64 %24, 23
  br i1 %39, label %Then.i5.i.i, label %str.RocStr.asU8ptrMut.exit.i.i.i

Then.i5.i.i:                                      ; preds = %str.RocStr.len.exit.i.i
  %40 = icmp ugt i64 %24, 64
  %..i.i.i.i.i = select i1 %40, i64 %24, i64 64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !14) #11, !noalias !4
  %41 = add nuw i64 %..i.i.i.i.i, 8
  %42 = tail call i8* @roc_alloc(i64 %41, i32 8) #11, !noalias !17
  %43 = icmp ne i8* %42, null
  tail call void @llvm.assume(i1 %43) #11, !noalias !4
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %42 to i64*
  store i64 -9223372036854775808, i64* %45, align 8, !noalias !17
  %46 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i.i, i64 0, i32 2
  store i64 %..i.i.i.i.i, i64* %46, align 8, !alias.scope !20, !noalias !21
  %.idx.val.i7.pre.i.i = load i64, i64* %.idx.i.i, align 8, !noalias !21
  br label %str.RocStr.allocate.exit.i.i

str.RocStr.asU8ptrMut.exit.i.i.i:                 ; preds = %str.RocStr.len.exit.i.i
  %47 = trunc i64 %24 to i8
  %48 = or i8 %47, -128
  %string.sroa.36.0..sroa_idx7.sroa_idx.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i.i, i64 0, i32 2
  %string.sroa.36.0..sroa_idx7.sroa_cast.i.i.i = bitcast i64* %string.sroa.36.0..sroa_idx7.sroa_idx.i.i.i to i56*
  store i56 0, i56* %string.sroa.36.0..sroa_idx7.sroa_cast.i.i.i, align 8, !alias.scope !11, !noalias !21
  %string.sroa.36.0..sroa_idx7.sroa_raw_idx.i.i.i = getelementptr inbounds i8, i8* %.pre-phi.i.pre-phi, i64 23
  store i8 %48, i8* %string.sroa.36.0..sroa_idx7.sroa_raw_idx.i.i.i, align 1, !alias.scope !11, !noalias !21
  br label %str.RocStr.allocate.exit.i.i

str.RocStr.allocate.exit.i.i:                     ; preds = %str.RocStr.asU8ptrMut.exit.i.i.i, %Then.i5.i.i
  %.idx.val.i7.i.i = phi i64 [ %.idx.val.i7.pre.i.i, %Then.i5.i.i ], [ %.idx.val.i.i, %str.RocStr.asU8ptrMut.exit.i.i.i ]
  %.sink10.i.i.i = phi i8* [ %44, %Then.i5.i.i ], [ null, %str.RocStr.asU8ptrMut.exit.i.i.i ]
  %.sink.i.i.i = phi i64 [ %24, %Then.i5.i.i ], [ 0, %str.RocStr.asU8ptrMut.exit.i.i.i ]
  %49 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i.i, i64 0, i32 0
  store i8* %.sink10.i.i.i, i8** %49, align 8, !alias.scope !11, !noalias !21
  %50 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i.i, i64 0, i32 1
  store i64 %.sink.i.i.i, i64* %50, align 8, !alias.scope !11, !noalias !21
  %51 = icmp slt i64 %.idx.val.i7.i.i, 0
  br i1 %51, label %Then.i9.i.i, label %Else.i10.i.i

Then.i9.i.i:                                      ; preds = %str.RocStr.allocate.exit.i.i
  %52 = bitcast %str.RocStr* %1 to i8*
  br label %str.RocStr.reallocateFresh.exit.i

Else.i10.i.i:                                     ; preds = %str.RocStr.allocate.exit.i.i
  %53 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8, !noalias !21
  br label %str.RocStr.reallocateFresh.exit.i

str.RocStr.reallocateFresh.exit.i:                ; preds = %Else.i10.i.i, %Then.i9.i.i
  %common.ret.op.i8.i.i = phi i8* [ %52, %Then.i9.i.i ], [ %54, %Else.i10.i.i ]
  %55 = sub nuw i64 %24, %common.ret.op.i.i.i5
  %.idx.i11.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i.i, i64 0, i32 2
  %.idx.val.i12.i.i = load i64, i64* %.idx.i11.i.i, align 8, !noalias !21
  %56 = icmp slt i64 %.idx.val.i12.i.i, 0
  %spec.select.i24.i = select i1 %56, i8* %.pre-phi.i.pre-phi, i8* %.sink10.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %spec.select.i24.i, i8* nonnull align 1 %common.ret.op.i8.i.i, i64 %common.ret.op.i.i.i5, i1 false) #11, !noalias !21
  %57 = getelementptr inbounds i8, i8* %spec.select.i24.i, i64 %common.ret.op.i.i.i5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %57, i8 0, i64 %55, i1 false) #11, !noalias !21
  %.idx.val.i55.i = load i64, i64* %.idx.i.i, align 8, !noalias !21
  %58 = icmp slt i64 %.idx.val.i55.i, 0
  br i1 %58, label %str.RocStr.decref.exit.i, label %Then.i.i6

Then.i.i6:                                        ; preds = %str.RocStr.reallocateFresh.exit.i
  %.idx1.i.i = getelementptr %str.RocStr, %str.RocStr* %1, i64 0, i32 0
  %.idx1.val.i.i = load i8*, i8** %.idx1.i.i, align 8, !noalias !21
  %.idx2.i.i = getelementptr %str.RocStr, %str.RocStr* %1, i64 0, i32 1
  %.idx2.val.i.i = load i64, i64* %.idx2.i.i, align 8, !noalias !21
  %59 = ptrtoint i8* %.idx1.val.i.i to i64
  %60 = shl nuw i64 %.idx.val.i55.i, 1
  %.not.i.i.i = icmp slt i64 %.idx2.val.i.i, 0
  %61 = select i1 %.not.i.i.i, i64 %60, i64 %59
  %62 = icmp ne i64 %.idx.val.i55.i, 0
  %63 = icmp ne i64 %61, 0
  %or.cond.i.i.i = select i1 %62, i1 %63, i1 false
  br i1 %or.cond.i.i.i, label %OptionalNonNull.i.i.i, label %str.RocStr.decref.exit.i

OptionalNonNull.i.i.i:                            ; preds = %Then.i.i6
  %64 = inttoptr i64 %61 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 -8
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !21
  %.not.i.i.i.i = icmp eq i64 %67, 0
  br i1 %.not.i.i.i.i, label %str.RocStr.decref.exit.i, label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %OptionalNonNull.i.i.i
  %68 = add i64 %67, -1
  store i64 %68, i64* %66, align 8, !noalias !21
  %69 = icmp eq i64 %67, -9223372036854775808
  br i1 %69, label %Then1.i.i.i.i, label %str.RocStr.decref.exit.i

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %65, i32 8) #11, !noalias !21
  br label %str.RocStr.decref.exit.i

str.RocStr.decref.exit.i:                         ; preds = %Then1.i.i.i.i, %Then.i.i.i.i, %OptionalNonNull.i.i.i, %Then.i.i6, %str.RocStr.reallocateFresh.exit.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %.pre-phi.i.pre-phi, i64 24, i1 false) #11, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %.pre-phi.i.pre-phi) #11, !noalias !10
  br label %str.RocStr.reallocate.exit

EndIf.i:                                          ; preds = %str.RocStr.getCapacity.exit.i.i.i.i
  %.phi.trans.insert.i = getelementptr %str.RocStr, %str.RocStr* %1, i64 0, i32 0
  %.pre.i = load i8*, i8** %.phi.trans.insert.i, align 8, !noalias !10
  %.not.i = icmp eq i8* %.pre.i, null
  br i1 %.not.i, label %str.RocStr.len.exit.i34.i, label %OptionalThen.i

OptionalThen.i:                                   ; preds = %EndIf.i, %str.RocStr.isUnique.exit.i
  %70 = phi i8* [ %.pre.i, %EndIf.i ], [ %34, %str.RocStr.isUnique.exit.i ]
  %71 = icmp ugt i64 %spec.select.i.i, %24
  br i1 %71, label %str.RocStr.setLen.exit.i, label %EndIf5.i

str.RocStr.setLen.exit.i:                         ; preds = %OptionalThen.i
  %72 = and i64 %26, -9223372036854775808
  %73 = or i64 %72, %24
  %output.sroa.0.0..sroa_idx72.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 0
  store i8* %70, i8** %output.sroa.0.0..sroa_idx72.i, align 8, !alias.scope !7, !noalias !4
  %output.sroa.2.0..sroa_idx75.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 1
  store i64 %73, i64* %output.sroa.2.0..sroa_idx75.i, align 8, !alias.scope !7, !noalias !4
  %output.sroa.4.0..sroa_idx78.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 2
  store i64 %.idx.val.i.i, i64* %output.sroa.4.0..sroa_idx78.i, align 8, !alias.scope !7, !noalias !4
  br label %str.RocStr.reallocate.exit

EndIf5.i:                                         ; preds = %OptionalThen.i
  %74 = icmp eq i64 %spec.select.i.i, 0
  br i1 %74, label %utils.calculateCapacity.exit.i, label %Else1.i.i

Else1.i.i:                                        ; preds = %EndIf5.i
  %75 = icmp ult i64 %spec.select.i.i, 4096
  br i1 %75, label %Then4.i.i, label %Else2.i.i

Else2.i.i:                                        ; preds = %Else1.i.i
  %76 = icmp ugt i64 %spec.select.i.i, 131072
  br i1 %76, label %Then5.i.i, label %Else6.i.i

Then4.i.i:                                        ; preds = %Else1.i.i
  %77 = shl nuw nsw i64 %spec.select.i.i, 1
  br label %utils.calculateCapacity.exit.i

Then5.i.i:                                        ; preds = %Else2.i.i
  %78 = shl nuw i64 %spec.select.i.i, 1
  br label %utils.calculateCapacity.exit.i

Else6.i.i:                                        ; preds = %Else2.i.i
  %79 = mul nuw nsw i64 %spec.select.i.i, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = lshr i64 %80, 1
  br label %utils.calculateCapacity.exit.i

utils.calculateCapacity.exit.i:                   ; preds = %Else6.i.i, %Then5.i.i, %Then4.i.i, %EndIf5.i
  %common.ret.op.i81.i = phi i64 [ %.idx.val.i.i, %Then4.i.i ], [ %.idx.val.i.i, %Then5.i.i ], [ %.idx.val.i.i, %Else6.i.i ], [ 0, %EndIf5.i ]
  %new_capacity.0.i.i = phi i64 [ %77, %Then4.i.i ], [ %78, %Then5.i.i ], [ %81, %Else6.i.i ], [ 64, %EndIf5.i ]
  %82 = icmp ugt i64 %new_capacity.0.i.i, %24
  %..i.i.i = select i1 %82, i64 %new_capacity.0.i.i, i64 %24
  %.not.i.i = icmp ult i64 %common.ret.op.i81.i, %..i.i.i
  br i1 %.not.i.i, label %EndIf.i.i, label %utils.unsafeReallocate.exit.i

EndIf.i.i:                                        ; preds = %utils.calculateCapacity.exit.i
  %83 = add nuw i64 %..i.i.i, 8
  %84 = add nuw i64 %common.ret.op.i81.i, 8
  %85 = getelementptr inbounds i8, i8* %70, i64 -8
  %86 = tail call i8* @roc_realloc(i8* %85, i64 %83, i64 %84, i32 8) #11, !noalias !10
  %87 = getelementptr inbounds i8, i8* %86, i64 8
  br label %utils.unsafeReallocate.exit.i

utils.unsafeReallocate.exit.i:                    ; preds = %EndIf.i.i, %utils.calculateCapacity.exit.i
  %common.ret.op.i27.i = phi i8* [ %87, %EndIf.i.i ], [ %70, %utils.calculateCapacity.exit.i ]
  %88 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 0
  store i8* %common.ret.op.i27.i, i8** %88, align 8, !alias.scope !7, !noalias !4
  %89 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 1
  store i64 %24, i64* %89, align 8, !alias.scope !7, !noalias !4
  %90 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 2
  store i64 %..i.i.i, i64* %90, align 8, !alias.scope !7, !noalias !4
  br label %str.RocStr.reallocate.exit

str.RocStr.len.exit.i34.i:                        ; preds = %EndIf.i
  %91 = bitcast %str.RocStr* %result.i28.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #11, !noalias !10
  tail call void @llvm.experimental.noalias.scope.decl(metadata !22) #11, !noalias !4
  %92 = icmp ugt i64 %24, 23
  br i1 %92, label %str.RocStr.allocate.exit.i46.i, label %str.RocStr.allocate.exit.i46.thread.i

str.RocStr.allocate.exit.i46.thread.i:            ; preds = %str.RocStr.len.exit.i34.i
  %93 = trunc i64 %24 to i8
  %94 = or i8 %93, -128
  %string.sroa.36.0..sroa_idx7.sroa_idx.i.i38.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i28.i, i64 0, i32 2
  %string.sroa.36.0..sroa_idx7.sroa_cast.i.i39.i = bitcast i64* %string.sroa.36.0..sroa_idx7.sroa_idx.i.i38.i to i56*
  store i56 0, i56* %string.sroa.36.0..sroa_idx7.sroa_cast.i.i39.i, align 8, !alias.scope !22, !noalias !25
  %string.sroa.36.0..sroa_idx7.sroa_raw_idx.i.i41.i = getelementptr inbounds i8, i8* %91, i64 23
  store i8 %94, i8* %string.sroa.36.0..sroa_idx7.sroa_raw_idx.i.i41.i, align 1, !alias.scope !22, !noalias !25
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %91, i8 0, i64 16, i1 false) #11, !noalias !10
  %.idx.val.i12.i51.pre.pre.i = load i64, i64* %string.sroa.36.0..sroa_idx7.sroa_idx.i.i38.i, align 8, !noalias !25
  br label %str.RocStr.reallocateFresh.exit53.i

str.RocStr.allocate.exit.i46.i:                   ; preds = %str.RocStr.len.exit.i34.i
  %95 = icmp ugt i64 %24, 64
  %..i.i.i.i35.i = select i1 %95, i64 %24, i64 64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !28) #11, !noalias !4
  %96 = add nuw i64 %..i.i.i.i35.i, 8
  %97 = tail call i8* @roc_alloc(i64 %96, i32 8) #11, !noalias !31
  %98 = icmp ne i8* %97, null
  tail call void @llvm.assume(i1 %98) #11, !noalias !4
  %99 = getelementptr inbounds i8, i8* %97, i64 8
  %100 = bitcast i8* %97 to i64*
  store i64 -9223372036854775808, i64* %100, align 8, !noalias !31
  %101 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i28.i, i64 0, i32 2
  store i64 %..i.i.i.i35.i, i64* %101, align 8, !alias.scope !32, !noalias !25
  %.idx.val.i7.pre.i36.i = load i64, i64* %.idx.i.i, align 8, !noalias !25
  %102 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i28.i, i64 0, i32 0
  store i8* %99, i8** %102, align 8, !alias.scope !22, !noalias !25
  %103 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i28.i, i64 0, i32 1
  store i64 %24, i64* %103, align 8, !alias.scope !22, !noalias !25
  %104 = icmp slt i64 %.idx.val.i7.pre.i36.i, 0
  br i1 %104, label %Then.i9.i47.i, label %str.RocStr.allocate.exit.i46.Else.i10.i48_crit_edge.i

str.RocStr.allocate.exit.i46.Else.i10.i48_crit_edge.i: ; preds = %str.RocStr.allocate.exit.i46.i
  %.pre88.i = load i8*, i8** %.phi.trans.insert.i, align 8, !noalias !25
  br label %str.RocStr.reallocateFresh.exit53.i

Then.i9.i47.i:                                    ; preds = %str.RocStr.allocate.exit.i46.i
  %105 = bitcast %str.RocStr* %1 to i8*
  br label %str.RocStr.reallocateFresh.exit53.i

str.RocStr.reallocateFresh.exit53.i:              ; preds = %Then.i9.i47.i, %str.RocStr.allocate.exit.i46.Else.i10.i48_crit_edge.i, %str.RocStr.allocate.exit.i46.thread.i
  %.idx.val.i12.i51.i = phi i64 [ %..i.i.i.i35.i, %Then.i9.i47.i ], [ %.idx.val.i12.i51.pre.pre.i, %str.RocStr.allocate.exit.i46.thread.i ], [ %..i.i.i.i35.i, %str.RocStr.allocate.exit.i46.Else.i10.i48_crit_edge.i ]
  %.sink10.i.i4486.i = phi i8* [ %99, %Then.i9.i47.i ], [ null, %str.RocStr.allocate.exit.i46.thread.i ], [ %99, %str.RocStr.allocate.exit.i46.Else.i10.i48_crit_edge.i ]
  %common.ret.op.i8.i49.i = phi i8* [ %105, %Then.i9.i47.i ], [ null, %str.RocStr.allocate.exit.i46.thread.i ], [ %.pre88.i, %str.RocStr.allocate.exit.i46.Else.i10.i48_crit_edge.i ]
  %106 = sub nuw i64 %24, %28
  %107 = icmp slt i64 %.idx.val.i12.i51.i, 0
  %spec.select.i52.i = select i1 %107, i8* %91, i8* %.sink10.i.i4486.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %spec.select.i52.i, i8* nonnull align 1 %common.ret.op.i8.i49.i, i64 %28, i1 false) #11, !noalias !25
  %108 = getelementptr inbounds i8, i8* %spec.select.i52.i, i64 %28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %108, i8 0, i64 %106, i1 false) #11, !noalias !25
  %.idx.val.i58.i = load i64, i64* %.idx.i.i, align 8, !noalias !25
  %109 = icmp slt i64 %.idx.val.i58.i, 0
  br i1 %109, label %str.RocStr.decref.exit71.i, label %Then.i65.i

Then.i65.i:                                       ; preds = %str.RocStr.reallocateFresh.exit53.i
  %.idx1.val.i60.i = load i8*, i8** %.phi.trans.insert.i, align 8, !noalias !25
  %.idx2.val.i62.i = load i64, i64* %25, align 8, !noalias !25
  %110 = ptrtoint i8* %.idx1.val.i60.i to i64
  %111 = shl nuw i64 %.idx.val.i58.i, 1
  %.not.i.i63.i = icmp slt i64 %.idx2.val.i62.i, 0
  %112 = select i1 %.not.i.i63.i, i64 %111, i64 %110
  %113 = icmp ne i64 %.idx.val.i58.i, 0
  %114 = icmp ne i64 %112, 0
  %or.cond.i.i64.i = select i1 %113, i1 %114, i1 false
  br i1 %or.cond.i.i64.i, label %OptionalNonNull.i.i67.i, label %str.RocStr.decref.exit71.i

OptionalNonNull.i.i67.i:                          ; preds = %Then.i65.i
  %115 = inttoptr i64 %112 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 -8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 8, !noalias !25
  %.not.i.i.i66.i = icmp eq i64 %118, 0
  br i1 %.not.i.i.i66.i, label %str.RocStr.decref.exit71.i, label %Then.i.i.i68.i

Then.i.i.i68.i:                                   ; preds = %OptionalNonNull.i.i67.i
  %119 = add i64 %118, -1
  store i64 %119, i64* %117, align 8, !noalias !25
  %120 = icmp eq i64 %118, -9223372036854775808
  br i1 %120, label %Then1.i.i.i69.i, label %str.RocStr.decref.exit71.i

Then1.i.i.i69.i:                                  ; preds = %Then.i.i.i68.i
  tail call void @roc_dealloc(i8* %116, i32 8) #11, !noalias !25
  br label %str.RocStr.decref.exit71.i

str.RocStr.decref.exit71.i:                       ; preds = %Then1.i.i.i69.i, %Then.i.i.i68.i, %OptionalNonNull.i.i67.i, %Then.i65.i, %str.RocStr.reallocateFresh.exit53.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %91, i64 24, i1 false) #11, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #11, !noalias !10
  br label %str.RocStr.reallocate.exit

str.RocStr.reallocate.exit:                       ; preds = %str.RocStr.decref.exit.i, %str.RocStr.setLen.exit.i, %utils.unsafeReallocate.exit.i, %str.RocStr.decref.exit71.i
  %.idx.i7.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 2
  %.idx.val.i8.i = load i64, i64* %.idx.i7.i, align 8, !noalias !4
  %121 = icmp slt i64 %.idx.val.i8.i, 0
  %122 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 0
  %123 = load i8*, i8** %122, align 8, !noalias !4
  %common.ret.op.i9.i = select i1 %121, i8* %3, i8* %123
  %.idx.val.i13.i = load i64, i64* %.idx.i.i, align 8, !noalias !4
  %124 = icmp slt i64 %.idx.val.i13.i, 0
  br i1 %124, label %Then.i15.i, label %Else.i16.i

Then.i15.i:                                       ; preds = %str.RocStr.reallocate.exit
  %125 = lshr i64 %.idx.val.i13.i, 56
  %126 = xor i64 %125, 128
  br label %str.RocStr.len.exit17.i

Else.i16.i:                                       ; preds = %str.RocStr.reallocate.exit
  %127 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 1
  %128 = load i64, i64* %127, align 8, !noalias !4
  %129 = and i64 %128, 9223372036854775807
  br label %str.RocStr.len.exit17.i

str.RocStr.len.exit17.i:                          ; preds = %Else.i16.i, %Then.i15.i
  %common.ret.op.i14.i = phi i64 [ %126, %Then.i15.i ], [ %129, %Else.i16.i ]
  %130 = getelementptr inbounds i8, i8* %common.ret.op.i9.i, i64 %common.ret.op.i14.i
  %.idx.val.i19.i = load i64, i64* %.idx.i.i.i, align 8, !noalias !4
  %131 = icmp slt i64 %.idx.val.i19.i, 0
  br i1 %131, label %Then.i26.i, label %Else.i27.i

Then.i26.i:                                       ; preds = %str.RocStr.len.exit17.i
  %132 = bitcast %str.RocStr* %2 to i8*
  %133 = lshr i64 %.idx.val.i19.i, 56
  %134 = xor i64 %133, 128
  br label %str.RocStr.len.exit28.i

Else.i27.i:                                       ; preds = %str.RocStr.len.exit17.i
  %135 = getelementptr inbounds %str.RocStr, %str.RocStr* %2, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8, !noalias !4
  %137 = getelementptr inbounds %str.RocStr, %str.RocStr* %2, i64 0, i32 1
  %138 = load i64, i64* %137, align 8, !noalias !4
  %139 = and i64 %138, 9223372036854775807
  br label %str.RocStr.len.exit28.i

str.RocStr.len.exit28.i:                          ; preds = %Else.i27.i, %Then.i26.i
  %common.ret.op.i2030.i = phi i8* [ %132, %Then.i26.i ], [ %136, %Else.i27.i ]
  %common.ret.op.i25.i = phi i64 [ %134, %Then.i26.i ], [ %139, %Else.i27.i ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %130, i8* nonnull align 1 %common.ret.op.i2030.i, i64 %common.ret.op.i25.i, i1 false) #11, !noalias !4
  %140 = bitcast %str.RocStr* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %140, i8* noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false) #11
  br label %str.strConcat.exit

str.strConcat.exit:                               ; preds = %str.RocStr.len.exit28.i, %Then.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  ret void
}

; Function Attrs: nobuiltin nounwind
define internal fastcc void @roc_builtins.str.joinWith(%str.RocStr* noalias nocapture nonnull %0, %list.RocList* nocapture nonnull readonly %1, %str.RocStr* nocapture nonnull readonly %2) unnamed_addr #2 {
Entry:
  %result.i = alloca %str.RocStr, align 8
  %substr5.i = alloca %str.RocStr, align 8
  %substr6.i = alloca %str.RocStr, align 8
  %3 = bitcast %list.RocList* %1 to %str.RocStr**
  %4 = load %str.RocStr*, %str.RocStr** %3, align 8
  %5 = getelementptr inbounds %list.RocList, %list.RocList* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  tail call void @llvm.experimental.noalias.scope.decl(metadata !33)
  %7 = bitcast %str.RocStr* %result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %substr5.i.0.sroa_cast2 = bitcast %str.RocStr* %substr5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %substr5.i.0.sroa_cast2)
  %8 = bitcast %str.RocStr* %substr6.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  switch i64 %6, label %vector.ph [
    i64 0, label %Then.i
    i64 1, label %ForBody.i.preheader
  ]

ForBody.i.preheader:                              ; preds = %middle.block, %Entry
  %total_size.06.i.ph = phi i64 [ %bin.rdx, %middle.block ], [ 0, %Entry ]
  %i.05.i.ph = phi i64 [ %n.vec, %middle.block ], [ 0, %Entry ]
  br label %ForBody.i

vector.ph:                                        ; preds = %Entry
  %n.vec = and i64 %6, -2
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi i64 [ 0, %vector.ph ], [ %27, %vector.body ]
  %vec.phi13 = phi i64 [ 0, %vector.ph ], [ %28, %vector.body ]
  %induction14 = or i64 %index, 1
  %9 = getelementptr inbounds %str.RocStr, %str.RocStr* %4, i64 %index, i32 1
  %10 = getelementptr inbounds %str.RocStr, %str.RocStr* %4, i64 %induction14, i32 1
  %11 = load i64, i64* %9, align 8, !noalias !33
  %12 = load i64, i64* %10, align 8, !noalias !33
  %13 = getelementptr inbounds %str.RocStr, %str.RocStr* %4, i64 %index, i32 2
  %14 = getelementptr inbounds %str.RocStr, %str.RocStr* %4, i64 %induction14, i32 2
  %15 = load i64, i64* %13, align 8, !noalias !33
  %16 = load i64, i64* %14, align 8, !noalias !33
  %17 = icmp slt i64 %15, 0
  %18 = icmp slt i64 %16, 0
  %19 = lshr i64 %15, 56
  %20 = lshr i64 %16, 56
  %21 = xor i64 %19, 128
  %22 = xor i64 %20, 128
  %23 = and i64 %11, 9223372036854775807
  %24 = and i64 %12, 9223372036854775807
  %25 = select i1 %17, i64 %21, i64 %23
  %26 = select i1 %18, i64 %22, i64 %24
  %27 = add i64 %25, %vec.phi
  %28 = add i64 %26, %vec.phi13
  %index.next = add nuw i64 %index, 2
  %29 = icmp eq i64 %index.next, %n.vec
  br i1 %29, label %middle.block, label %vector.body, !llvm.loop !36

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add i64 %28, %27
  %cmp.n = icmp eq i64 %6, %n.vec
  br i1 %cmp.n, label %ForEnd.i, label %ForBody.i.preheader

Then.i:                                           ; preds = %Entry
  %30 = getelementptr inbounds %str.RocStr, %str.RocStr* %0, i64 0, i32 2
  %31 = bitcast %str.RocStr* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %31, i8 0, i64 16, i1 false) #11, !alias.scope !38
  store i64 -9223372036854775808, i64* %30, align 8, !alias.scope !38
  br label %str.strJoinWith.exit

ForBody.i:                                        ; preds = %ForBody.i.preheader, %ForBody.i
  %total_size.06.i = phi i64 [ %36, %ForBody.i ], [ %total_size.06.i.ph, %ForBody.i.preheader ]
  %i.05.i = phi i64 [ %37, %ForBody.i ], [ %i.05.i.ph, %ForBody.i.preheader ]
  %substr.sroa.1.0..sroa_idx1.i = getelementptr inbounds %str.RocStr, %str.RocStr* %4, i64 %i.05.i, i32 1
  %substr.sroa.1.0.copyload.i = load i64, i64* %substr.sroa.1.0..sroa_idx1.i, align 8, !noalias !33
  %substr.sroa.2.0..sroa_idx2.i = getelementptr inbounds %str.RocStr, %str.RocStr* %4, i64 %i.05.i, i32 2
  %substr.sroa.2.0.copyload.i = load i64, i64* %substr.sroa.2.0..sroa_idx2.i, align 8, !noalias !33
  %32 = icmp slt i64 %substr.sroa.2.0.copyload.i, 0
  %33 = lshr i64 %substr.sroa.2.0.copyload.i, 56
  %34 = xor i64 %33, 128
  %35 = and i64 %substr.sroa.1.0.copyload.i, 9223372036854775807
  %common.ret.op.i.i = select i1 %32, i64 %34, i64 %35
  %36 = add nuw i64 %common.ret.op.i.i, %total_size.06.i
  %37 = add nuw i64 %i.05.i, 1
  %exitcond.not.i = icmp eq i64 %37, %6
  br i1 %exitcond.not.i, label %ForEnd.i, label %ForBody.i, !llvm.loop !41

ForEnd.i:                                         ; preds = %ForBody.i, %middle.block
  %.lcssa12 = phi i64 [ %bin.rdx, %middle.block ], [ %36, %ForBody.i ]
  %.idx.i22.i = getelementptr %str.RocStr, %str.RocStr* %2, i64 0, i32 2
  %.idx.val.i23.i = load i64, i64* %.idx.i22.i, align 8, !noalias !33
  %38 = icmp slt i64 %.idx.val.i23.i, 0
  br i1 %38, label %Then.i25.i, label %Else.i26.i

Then.i25.i:                                       ; preds = %ForEnd.i
  %39 = lshr i64 %.idx.val.i23.i, 56
  %40 = xor i64 %39, 128
  br label %str.RocStr.len.exit27.i

Else.i26.i:                                       ; preds = %ForEnd.i
  %41 = getelementptr inbounds %str.RocStr, %str.RocStr* %2, i64 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !33
  %43 = and i64 %42, 9223372036854775807
  br label %str.RocStr.len.exit27.i

str.RocStr.len.exit27.i:                          ; preds = %Else.i26.i, %Then.i25.i
  %common.ret.op.i24.i = phi i64 [ %40, %Then.i25.i ], [ %43, %Else.i26.i ]
  %44 = add i64 %6, -1
  %45 = mul nuw i64 %common.ret.op.i24.i, %44
  %46 = add nuw i64 %45, %.lcssa12
  tail call void @llvm.experimental.noalias.scope.decl(metadata !42) #11
  %47 = icmp ugt i64 %46, 23
  br i1 %47, label %Then.i28.i, label %str.RocStr.asU8ptrMut.exit.i.i

Then.i28.i:                                       ; preds = %str.RocStr.len.exit27.i
  %48 = icmp ugt i64 %46, 64
  %..i.i.i.i = select i1 %48, i64 %46, i64 64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !45) #11
  %49 = add nuw i64 %..i.i.i.i, 8
  %50 = tail call i8* @roc_alloc(i64 %49, i32 8) #11, !noalias !48
  %51 = icmp ne i8* %50, null
  tail call void @llvm.assume(i1 %51) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 8
  %53 = bitcast i8* %50 to i64*
  store i64 -9223372036854775808, i64* %53, align 8, !noalias !48
  %54 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 2
  store i64 %..i.i.i.i, i64* %54, align 8, !alias.scope !49, !noalias !33
  br label %str.RocStr.allocate.exit.i

str.RocStr.asU8ptrMut.exit.i.i:                   ; preds = %str.RocStr.len.exit27.i
  %55 = trunc i64 %46 to i8
  %56 = or i8 %55, -128
  %string.sroa.36.0..sroa_idx7.sroa_idx.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 2
  %string.sroa.36.0..sroa_idx7.sroa_cast.i.i = bitcast i64* %string.sroa.36.0..sroa_idx7.sroa_idx.i.i to i56*
  store i56 0, i56* %string.sroa.36.0..sroa_idx7.sroa_cast.i.i, align 8, !alias.scope !42, !noalias !33
  %string.sroa.36.0..sroa_idx7.sroa_raw_idx.i.i = getelementptr inbounds i8, i8* %7, i64 23
  store i8 %56, i8* %string.sroa.36.0..sroa_idx7.sroa_raw_idx.i.i, align 1, !alias.scope !42, !noalias !33
  %.idx.val.i30.pre.i = load i64, i64* %string.sroa.36.0..sroa_idx7.sroa_idx.i.i, align 8, !noalias !33
  br label %str.RocStr.allocate.exit.i

str.RocStr.allocate.exit.i:                       ; preds = %str.RocStr.asU8ptrMut.exit.i.i, %Then.i28.i
  %.idx.val.i30.i = phi i64 [ %..i.i.i.i, %Then.i28.i ], [ %.idx.val.i30.pre.i, %str.RocStr.asU8ptrMut.exit.i.i ]
  %.sink10.i.i = phi i8* [ %52, %Then.i28.i ], [ null, %str.RocStr.asU8ptrMut.exit.i.i ]
  %.sink.i.i = phi i64 [ %46, %Then.i28.i ], [ 0, %str.RocStr.asU8ptrMut.exit.i.i ]
  %57 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 0
  store i8* %.sink10.i.i, i8** %57, align 8, !alias.scope !42, !noalias !33
  %58 = getelementptr inbounds %str.RocStr, %str.RocStr* %result.i, i64 0, i32 1
  store i64 %.sink.i.i, i64* %58, align 8, !alias.scope !42, !noalias !33
  %59 = icmp slt i64 %.idx.val.i30.i, 0
  %spec.select.i = select i1 %59, i8* %7, i8* %.sink10.i.i
  %60 = getelementptr inbounds %str.RocStr, %str.RocStr* %2, i64 0, i32 0
  %61 = getelementptr inbounds %str.RocStr, %str.RocStr* %2, i64 0, i32 1
  %62 = bitcast %str.RocStr* %2 to i8*
  %.not.i = icmp eq i64 %44, 0
  br i1 %.not.i, label %ForEnd3.i, label %ForBody2.i.preheader

ForBody2.i.preheader:                             ; preds = %str.RocStr.allocate.exit.i
  %substr5.i.16.sroa_idx15 = getelementptr inbounds %str.RocStr, %str.RocStr* %substr5.i, i64 0, i32 2
  %substr5.i.0.sroa_idx11 = getelementptr inbounds %str.RocStr, %str.RocStr* %substr5.i, i64 0, i32 0
  %substr5.i.8.sroa_idx14 = getelementptr inbounds %str.RocStr, %str.RocStr* %substr5.i, i64 0, i32 1
  br label %ForBody2.i

ForBody2.i:                                       ; preds = %ForBody2.i.preheader, %str.RocStr.len.exit52.i
  %i4.08.i = phi i64 [ %84, %str.RocStr.len.exit52.i ], [ 0, %ForBody2.i.preheader ]
  %offset.07.i = phi i64 [ %83, %str.RocStr.len.exit52.i ], [ 0, %ForBody2.i.preheader ]
  %63 = getelementptr inbounds %str.RocStr, %str.RocStr* %4, i64 %i4.08.i
  %64 = bitcast %str.RocStr* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %substr5.i.0.sroa_cast2, i8* noundef nonnull align 8 dereferenceable(24) %64, i64 24, i1 false) #11, !noalias !33
  %65 = getelementptr inbounds i8, i8* %spec.select.i, i64 %offset.07.i
  %substr5.i.16.substr5.i.16.substr5.i.16.substr5.i.16.substr5.16..idx.val.i.i.i = load i64, i64* %substr5.i.16.sroa_idx15, align 8, !noalias !33
  %66 = icmp slt i64 %substr5.i.16.substr5.i.16.substr5.i.16.substr5.i.16.substr5.16..idx.val.i.i.i, 0
  br i1 %66, label %Then.i37.i, label %Else.i38.i

Then.i37.i:                                       ; preds = %ForBody2.i
  %67 = lshr i64 %substr5.i.16.substr5.i.16.substr5.i.16.substr5.i.16.substr5.16..idx.val.i.i.i, 56
  %68 = xor i64 %67, 128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* nonnull align 8 %substr5.i.0.sroa_cast2, i64 %68, i1 false) #11, !noalias !33
  br label %str.RocStr.len.exit39.i

Else.i38.i:                                       ; preds = %ForBody2.i
  %substr5.i.0.substr5.i.0.substr5.i.0.substr5.i.0.substr5.0..i = load i8*, i8** %substr5.i.0.sroa_idx11, align 8, !noalias !33
  %substr5.i.8.substr5.i.8.substr5.i.8.substr5.i.8.substr5.8..i = load i64, i64* %substr5.i.8.sroa_idx14, align 8, !noalias !33
  %69 = and i64 %substr5.i.8.substr5.i.8.substr5.i.8.substr5.i.8.substr5.8..i, 9223372036854775807
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* nonnull align 1 %substr5.i.0.substr5.i.0.substr5.i.0.substr5.i.0.substr5.0..i, i64 %69, i1 false) #11, !noalias !33
  br label %str.RocStr.len.exit39.i

str.RocStr.len.exit39.i:                          ; preds = %Else.i38.i, %Then.i37.i
  %common.ret.op.i36.i = phi i64 [ %68, %Then.i37.i ], [ %69, %Else.i38.i ]
  %70 = add nuw i64 %common.ret.op.i36.i, %offset.07.i
  %71 = getelementptr inbounds i8, i8* %spec.select.i, i64 %70
  %.idx.val.i.i41.i = load i64, i64* %.idx.i22.i, align 8, !noalias !33
  %72 = icmp slt i64 %.idx.val.i.i41.i, 0
  br i1 %72, label %Then.i4.i42.i, label %Else.i5.i43.i

Then.i4.i42.i:                                    ; preds = %str.RocStr.len.exit39.i
  %73 = lshr i64 %.idx.val.i.i41.i, 56
  %74 = xor i64 %73, 128
  br label %str.RocStr.memcpy.exit46.i

Else.i5.i43.i:                                    ; preds = %str.RocStr.len.exit39.i
  %75 = load i8*, i8** %60, align 8, !noalias !33
  %76 = load i64, i64* %61, align 8, !noalias !33
  %77 = and i64 %76, 9223372036854775807
  br label %str.RocStr.memcpy.exit46.i

str.RocStr.memcpy.exit46.i:                       ; preds = %Else.i5.i43.i, %Then.i4.i42.i
  %common.ret.op.i7.i44.i = phi i8* [ %62, %Then.i4.i42.i ], [ %75, %Else.i5.i43.i ]
  %common.ret.op.i3.i45.i = phi i64 [ %74, %Then.i4.i42.i ], [ %77, %Else.i5.i43.i ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* nonnull align 1 %common.ret.op.i7.i44.i, i64 %common.ret.op.i3.i45.i, i1 false) #11, !noalias !33
  %.idx.val.i48.i = load i64, i64* %.idx.i22.i, align 8, !noalias !33
  %78 = icmp slt i64 %.idx.val.i48.i, 0
  br i1 %78, label %Then.i50.i, label %Else.i51.i

Then.i50.i:                                       ; preds = %str.RocStr.memcpy.exit46.i
  %79 = lshr i64 %.idx.val.i48.i, 56
  %80 = xor i64 %79, 128
  br label %str.RocStr.len.exit52.i

Else.i51.i:                                       ; preds = %str.RocStr.memcpy.exit46.i
  %81 = load i64, i64* %61, align 8, !noalias !33
  %82 = and i64 %81, 9223372036854775807
  br label %str.RocStr.len.exit52.i

str.RocStr.len.exit52.i:                          ; preds = %Else.i51.i, %Then.i50.i
  %common.ret.op.i49.i = phi i64 [ %80, %Then.i50.i ], [ %82, %Else.i51.i ]
  %83 = add nuw i64 %common.ret.op.i49.i, %70
  %84 = add nuw i64 %i4.08.i, 1
  %exitcond11.not.i = icmp eq i64 %84, %44
  br i1 %exitcond11.not.i, label %ForEnd3.i, label %ForBody2.i

ForEnd3.i:                                        ; preds = %str.RocStr.len.exit52.i, %str.RocStr.allocate.exit.i
  %offset.0.lcssa.i = phi i64 [ 0, %str.RocStr.allocate.exit.i ], [ %83, %str.RocStr.len.exit52.i ]
  %85 = getelementptr inbounds %str.RocStr, %str.RocStr* %4, i64 %44
  %86 = bitcast %str.RocStr* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %8, i8* noundef nonnull align 8 dereferenceable(24) %86, i64 24, i1 false) #11, !noalias !33
  %87 = getelementptr inbounds i8, i8* %spec.select.i, i64 %offset.0.lcssa.i
  %.idx.i.i53.i = getelementptr inbounds %str.RocStr, %str.RocStr* %substr6.i, i64 0, i32 2
  %.idx.val.i.i54.i = load i64, i64* %.idx.i.i53.i, align 8, !noalias !33
  %88 = icmp slt i64 %.idx.val.i.i54.i, 0
  br i1 %88, label %Then.i4.i55.i, label %Else.i5.i56.i

Then.i4.i55.i:                                    ; preds = %ForEnd3.i
  %89 = lshr i64 %.idx.val.i.i54.i, 56
  %90 = xor i64 %89, 128
  br label %str.RocStr.memcpy.exit59.i

Else.i5.i56.i:                                    ; preds = %ForEnd3.i
  %91 = getelementptr inbounds %str.RocStr, %str.RocStr* %substr6.i, i64 0, i32 0
  %92 = load i8*, i8** %91, align 8, !noalias !33
  %93 = getelementptr inbounds %str.RocStr, %str.RocStr* %substr6.i, i64 0, i32 1
  %94 = load i64, i64* %93, align 8, !noalias !33
  %95 = and i64 %94, 9223372036854775807
  br label %str.RocStr.memcpy.exit59.i

str.RocStr.memcpy.exit59.i:                       ; preds = %Else.i5.i56.i, %Then.i4.i55.i
  %common.ret.op.i7.i57.i = phi i8* [ %8, %Then.i4.i55.i ], [ %92, %Else.i5.i56.i ]
  %common.ret.op.i3.i58.i = phi i64 [ %90, %Then.i4.i55.i ], [ %95, %Else.i5.i56.i ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %87, i8* nonnull align 1 %common.ret.op.i7.i57.i, i64 %common.ret.op.i3.i58.i, i1 false) #11, !noalias !33
  %96 = bitcast %str.RocStr* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %96, i8* noundef nonnull align 8 dereferenceable(24) %7, i64 24, i1 false) #11
  br label %str.strJoinWith.exit

str.strJoinWith.exit:                             ; preds = %str.RocStr.memcpy.exit59.i, %Then.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %substr5.i.0.sroa_cast2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  ret void
}

; Function Attrs: nobuiltin nofree norecurse nosync nounwind readonly
define internal fastcc i1 @roc_builtins.str.equal(%str.RocStr* nocapture nonnull readonly %0, %str.RocStr* nocapture nonnull readonly %1) unnamed_addr #3 {
Entry:
  %2 = getelementptr inbounds %str.RocStr, %str.RocStr* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %BoolAndTrue.i, label %EndIf.i

BoolAndTrue.i:                                    ; preds = %Entry
  %7 = getelementptr inbounds %str.RocStr, %str.RocStr* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %BoolAndTrue1.i, label %EndIf.i

BoolAndTrue1.i:                                   ; preds = %BoolAndTrue.i
  %12 = getelementptr inbounds %str.RocStr, %str.RocStr* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  br i1 %16, label %str.RocStr.eq.exit, label %EndIf.i

EndIf.i:                                          ; preds = %BoolAndTrue1.i, %BoolAndTrue.i, %Entry
  %.idx.i.i = getelementptr %str.RocStr, %str.RocStr* %0, i64 0, i32 2
  %.idx.val.i.i = load i64, i64* %.idx.i.i, align 8
  %17 = icmp slt i64 %.idx.val.i.i, 0
  br i1 %17, label %Then.i.i, label %Else.i.i

Then.i.i:                                         ; preds = %EndIf.i
  %18 = lshr i64 %.idx.val.i.i, 56
  %19 = xor i64 %18, 128
  br label %str.RocStr.len.exit.i

Else.i.i:                                         ; preds = %EndIf.i
  %20 = getelementptr inbounds %str.RocStr, %str.RocStr* %0, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 9223372036854775807
  br label %str.RocStr.len.exit.i

str.RocStr.len.exit.i:                            ; preds = %Else.i.i, %Then.i.i
  %common.ret.op.i.i = phi i64 [ %19, %Then.i.i ], [ %22, %Else.i.i ]
  %.idx.i20.i = getelementptr %str.RocStr, %str.RocStr* %1, i64 0, i32 2
  %.idx.val.i21.i = load i64, i64* %.idx.i20.i, align 8
  %23 = icmp slt i64 %.idx.val.i21.i, 0
  br i1 %23, label %Then.i23.i, label %Else.i24.i

Then.i23.i:                                       ; preds = %str.RocStr.len.exit.i
  %24 = lshr i64 %.idx.val.i21.i, 56
  %25 = xor i64 %24, 128
  br label %str.RocStr.len.exit25.i

Else.i24.i:                                       ; preds = %str.RocStr.len.exit.i
  %26 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 9223372036854775807
  br label %str.RocStr.len.exit25.i

str.RocStr.len.exit25.i:                          ; preds = %Else.i24.i, %Then.i23.i
  %common.ret.op.i22.i = phi i64 [ %25, %Then.i23.i ], [ %28, %Else.i24.i ]
  %.not.i = icmp eq i64 %common.ret.op.i.i, %common.ret.op.i22.i
  br i1 %.not.i, label %EndIf5.i, label %str.RocStr.eq.exit

EndIf5.i:                                         ; preds = %str.RocStr.len.exit25.i
  %29 = bitcast %str.RocStr* %0 to i8*
  %spec.select.i = select i1 %17, i8* %29, i8* %3
  %30 = bitcast %str.RocStr* %1 to i8*
  %common.ret.op.i33.i = select i1 %23, i8* %30, i8* %5
  %.not39.i = icmp eq i64 %common.ret.op.i.i, 0
  br i1 %.not39.i, label %str.RocStr.eq.exit, label %WhileBody.i

WhileBody.i:                                      ; preds = %EndIf5.i, %WhileBody.i
  %b.037.i = phi i64 [ %35, %WhileBody.i ], [ 0, %EndIf5.i ]
  %31 = getelementptr inbounds i8, i8* %spec.select.i, i64 %b.037.i
  %32 = load i8, i8* %31, align 1
  %33 = getelementptr inbounds i8, i8* %common.ret.op.i33.i, i64 %b.037.i
  %34 = load i8, i8* %33, align 1
  %.not18.i = icmp eq i8 %32, %34
  %35 = add nuw nsw i64 %b.037.i, 1
  %.not18.i.not = xor i1 %.not18.i, true
  %exitcond.not.i = icmp eq i64 %35, %common.ret.op.i.i
  %or.cond = select i1 %.not18.i.not, i1 true, i1 %exitcond.not.i
  br i1 %or.cond, label %str.RocStr.eq.exit, label %WhileBody.i

str.RocStr.eq.exit:                               ; preds = %WhileBody.i, %EndIf5.i, %str.RocStr.len.exit25.i, %BoolAndTrue1.i
  %common.ret.op.i = phi i1 [ true, %BoolAndTrue1.i ], [ false, %str.RocStr.len.exit25.i ], [ true, %EndIf5.i ], [ %.not18.i, %WhileBody.i ]
  ret i1 %common.ret.op.i
}

; Function Attrs: nobuiltin nounwind
define internal fastcc void @roc_builtins.str.to_utf8(%list.RocList* noalias nocapture nonnull %0, %str.RocStr* nocapture nonnull readonly %1) unnamed_addr #2 {
Entry:
  tail call void @llvm.experimental.noalias.scope.decl(metadata !50)
  %.idx.i.i = getelementptr %str.RocStr, %str.RocStr* %1, i64 0, i32 2
  %.idx.val.i.i = load i64, i64* %.idx.i.i, align 8, !noalias !50
  %2 = icmp slt i64 %.idx.val.i.i, 0
  br i1 %2, label %str.RocStr.len.exit.i, label %str.RocStr.len.exit.thread.i

str.RocStr.len.exit.i:                            ; preds = %Entry
  %3 = lshr i64 %.idx.val.i.i, 56
  %4 = xor i64 %3, 128
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %Then.i, label %Then1.i

str.RocStr.len.exit.thread.i:                     ; preds = %Entry
  %6 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !50
  %8 = and i64 %7, 9223372036854775807
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %Then.i, label %Else2.i

Then.i:                                           ; preds = %str.RocStr.len.exit.thread.i, %str.RocStr.len.exit.i
  %10 = bitcast %list.RocList* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false) #11, !alias.scope !53
  br label %str.strToBytes.exit

Then1.i:                                          ; preds = %str.RocStr.len.exit.i
  %11 = add nuw nsw i64 %4, 8
  %12 = tail call i8* @roc_alloc(i64 %11, i32 8) #11, !noalias !50
  %13 = icmp ne i8* %12, null
  tail call void @llvm.assume(i1 %13) #11
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %12 to i64*
  store i64 -9223372036854775808, i64* %15, align 8, !noalias !50
  %.idx.val.i10.i = load i64, i64* %.idx.i.i, align 8, !noalias !50
  %16 = icmp slt i64 %.idx.val.i10.i, 0
  br i1 %16, label %Then.i12.i, label %Else.i13.i

Then.i12.i:                                       ; preds = %Then1.i
  %17 = bitcast %str.RocStr* %1 to i8*
  br label %str.RocStr.asU8ptr.exit.i

Else.i13.i:                                       ; preds = %Then1.i
  %18 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !50
  br label %str.RocStr.asU8ptr.exit.i

str.RocStr.asU8ptr.exit.i:                        ; preds = %Else.i13.i, %Then.i12.i
  %common.ret.op.i11.i = phi i8* [ %17, %Then.i12.i ], [ %19, %Else.i13.i ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* nonnull align 1 %common.ret.op.i11.i, i64 %4, i1 false) #11, !noalias !50
  %20 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 1
  store i64 %4, i64* %20, align 8, !alias.scope !50
  %21 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 0
  store i8* %14, i8** %21, align 8, !alias.scope !50
  %22 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 2
  store i64 %4, i64* %22, align 8, !alias.scope !50
  br label %str.strToBytes.exit

Else2.i:                                          ; preds = %str.RocStr.len.exit.thread.i
  %23 = and i64 %7, -9223372036854775808
  %24 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 1
  store i64 %8, i64* %24, align 8, !alias.scope !50
  %25 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 0
  %26 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8, !noalias !50
  store i8* %27, i8** %25, align 8, !alias.scope !50
  %28 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 2
  %29 = or i64 %23, %.idx.val.i.i
  store i64 %29, i64* %28, align 8, !alias.scope !50
  br label %str.strToBytes.exit

str.strToBytes.exit:                              ; preds = %Else2.i, %str.RocStr.asU8ptr.exit.i, %Then.i
  ret void
}

; Function Attrs: nobuiltin nounwind
define internal fastcc void @roc_builtins.str.from_utf8_range(%str.FromUtf8Result* nocapture nonnull %0, %list.RocList* nocapture nonnull readonly %1, i64 %2) unnamed_addr #2 {
Entry:
  tail call void @llvm.experimental.noalias.scope.decl(metadata !56)
  %.idx.i = getelementptr %list.RocList, %list.RocList* %1, i64 0, i32 1
  %.idx.val.i = load i64, i64* %.idx.i, align 8, !noalias !56
  %3 = icmp eq i64 %.idx.val.i, 0
  %4 = icmp eq i64 %2, 0
  %5 = select i1 %3, i1 true, i1 %4
  %.idx9.i = getelementptr %list.RocList, %list.RocList* %1, i64 0, i32 0
  %.idx9.val.i = load i8*, i8** %.idx9.i, align 8, !noalias !56
  br i1 %5, label %Then.i, label %EndIf.i

Then.i:                                           ; preds = %Entry
  %.idx10.i = getelementptr %list.RocList, %list.RocList* %1, i64 0, i32 2
  %.idx10.val.i = load i64, i64* %.idx10.i, align 8, !noalias !56
  %6 = ptrtoint i8* %.idx9.val.i to i64
  %7 = shl i64 %.idx10.val.i, 1
  %.not.i.i.i = icmp slt i64 %.idx10.val.i, 0
  %8 = select i1 %.not.i.i.i, i64 %7, i64 %6
  %9 = icmp ne i64 %.idx10.val.i, 0
  %10 = icmp ne i64 %8, 0
  %or.cond.i.i.i = select i1 %9, i1 %10, i1 false
  br i1 %or.cond.i.i.i, label %OptionalNonNull.i.i.i, label %list.RocList.decref.exit.i

OptionalNonNull.i.i.i:                            ; preds = %Then.i
  %11 = inttoptr i64 %8 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 -8
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !56
  %.not.i.i.i.i = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i, label %list.RocList.decref.exit.i, label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %OptionalNonNull.i.i.i
  %15 = add i64 %14, -1
  store i64 %15, i64* %13, align 8, !noalias !56
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i, label %list.RocList.decref.exit.i

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %12, i32 8) #11, !noalias !56
  br label %list.RocList.decref.exit.i

list.RocList.decref.exit.i:                       ; preds = %Then1.i.i.i.i, %Then.i.i.i.i, %OptionalNonNull.i.i.i, %Then.i
  %17 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 2
  store i1 true, i1* %17, align 8, !alias.scope !56
  %18 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 1
  %19 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 1, i32 2
  %20 = bitcast %str.RocStr* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %20, i8 0, i64 16, i1 false) #11, !alias.scope !59
  store i64 -9223372036854775808, i64* %19, align 8, !alias.scope !59
  br label %str.fromUtf8Range.exit

EndIf.i:                                          ; preds = %Entry
  %21 = icmp ugt i64 %2, 8
  br i1 %21, label %WhileBody.i.i, label %WhileEnd12.i.i

WhileBody.i.i:                                    ; preds = %EndIf.i, %WhileCond.backedge.i.i
  %22 = phi i64 [ %28, %WhileCond.backedge.i.i ], [ 8, %EndIf.i ]
  %i.050.i.i = phi i64 [ %i.0.be.i.i, %WhileCond.backedge.i.i ], [ 0, %EndIf.i ]
  %23 = getelementptr inbounds i8, i8* %.idx9.val.i, i64 %i.050.i.i
  %bytes.0..sroa_cast.i.i = bitcast i8* %23 to i64*
  %bytes.0.copyload.i.i = load i64, i64* %bytes.0..sroa_cast.i.i, align 1, !noalias !56
  %24 = and i64 %bytes.0.copyload.i.i, -9187201950435737472
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %WhileCond.backedge.i.i, label %WhileCond1.preheader.i.i

WhileCond1.preheader.i.i:                         ; preds = %WhileBody.i.i
  %26 = trunc i64 %bytes.0.copyload.i.i to i8
  %27 = icmp sgt i8 %26, -1
  br i1 %27, label %WhileCond1.WhileCond1_crit_edge.i.i, label %WhileCond3.preheader.i.i

WhileCond.backedge.i.i:                           ; preds = %EndIf10.i.i, %WhileCond3.preheader.i.i, %WhileBody.i.i
  %i.0.be.i.i = phi i64 [ %22, %WhileBody.i.i ], [ %i.1.i.lcssa.i, %WhileCond3.preheader.i.i ], [ %77, %EndIf10.i.i ]
  %28 = add nuw i64 %i.0.be.i.i, 8
  %29 = icmp ult i64 %28, %2
  br i1 %29, label %WhileBody.i.i, label %WhileEnd12.i.i

WhileCond1.WhileCond1_crit_edge.i.i:              ; preds = %WhileCond1.preheader.i.i, %WhileCond1.WhileCond1_crit_edge.i.i
  %.in.i = phi i64 [ %30, %WhileCond1.WhileCond1_crit_edge.i.i ], [ %i.050.i.i, %WhileCond1.preheader.i.i ]
  %30 = add nuw i64 %.in.i, 1
  %.phi.trans.insert.i.i = getelementptr inbounds i8, i8* %.idx9.val.i, i64 %30
  %.pre.i.i = load i8, i8* %.phi.trans.insert.i.i, align 1, !noalias !56
  %31 = icmp sgt i8 %.pre.i.i, -1
  br i1 %31, label %WhileCond1.WhileCond1_crit_edge.i.i, label %WhileCond3.preheader.i.i

WhileCond3.preheader.i.i:                         ; preds = %WhileCond1.WhileCond1_crit_edge.i.i, %WhileCond1.preheader.i.i
  %i.1.i.lcssa.i = phi i64 [ %i.050.i.i, %WhileCond1.preheader.i.i ], [ %30, %WhileCond1.WhileCond1_crit_edge.i.i ]
  %32 = add nuw i64 %i.1.i.lcssa.i, 4
  %.not47.i.i = icmp ult i64 %32, %2
  br i1 %.not47.i.i, label %EndIf7.i.preheader.i, label %WhileCond.backedge.i.i

EndIf7.i.preheader.i:                             ; preds = %WhileCond3.preheader.i.i
  %33 = getelementptr inbounds i8, i8* %.idx9.val.i, i64 %i.1.i.lcssa.i
  br label %EndIf7.i.i

EndIf7.i.i:                                       ; preds = %EndIf10.i.i, %EndIf7.i.preheader.i
  %34 = phi i8* [ %78, %EndIf10.i.i ], [ %33, %EndIf7.i.preheader.i ]
  %i.249.i.i = phi i64 [ %77, %EndIf10.i.i ], [ %i.1.i.lcssa.i, %EndIf7.i.preheader.i ]
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1, !noalias !56
  %small_buf.sroa.0.0.extract.trunc.i.i = trunc i32 %36 to i8
  %small_buf.sroa.6.0.extract.shift.i.i = lshr i32 %36, 8
  %small_buf.sroa.6.0.extract.trunc.i.i = trunc i32 %small_buf.sroa.6.0.extract.shift.i.i to i8
  %small_buf.sroa.9.0.extract.shift.i.i = lshr i32 %36, 16
  %small_buf.sroa.9.0.extract.trunc.i.i = trunc i32 %small_buf.sroa.9.0.extract.shift.i.i to i8
  %small_buf.sroa.11.0.extract.shift.i.i = lshr i32 %36, 24
  %small_buf.sroa.11.0.extract.trunc.i.i = trunc i32 %small_buf.sroa.11.0.extract.shift.i.i to i8
  %37 = icmp sgt i8 %small_buf.sroa.0.0.extract.trunc.i.i, -1
  br i1 %37, label %EndIf10.i.i, label %SwitchRangeNo.i.i.i

SwitchRangeNo.i.i.i:                              ; preds = %EndIf7.i.i
  %38 = and i8 %small_buf.sroa.0.0.extract.trunc.i.i, -32
  %39 = icmp eq i8 %38, -64
  br i1 %39, label %SwitchProng1.i.i.i, label %SwitchRangeNo2.i.i.i

SwitchRangeNo2.i.i.i:                             ; preds = %SwitchRangeNo.i.i.i
  %40 = and i8 %small_buf.sroa.0.0.extract.trunc.i.i, -16
  %41 = icmp eq i8 %40, -32
  br i1 %41, label %SwitchProng2.i.i.i, label %SwitchRangeNo4.i.i.i

SwitchRangeNo4.i.i.i:                             ; preds = %SwitchRangeNo2.i.i.i
  %42 = and i8 %small_buf.sroa.0.0.extract.trunc.i.i, -8
  %43 = icmp eq i8 %42, -16
  br i1 %43, label %SwitchProng3.i.i.i, label %WhileCond.i.i.preheader

SwitchProng1.i.i.i:                               ; preds = %SwitchRangeNo.i.i.i
  %44 = and i8 %small_buf.sroa.6.0.extract.trunc.i.i, -64
  %.not.i.i.i12.i = icmp ne i8 %44, -128
  %45 = and i8 %small_buf.sroa.0.0.extract.trunc.i.i, 30
  %46 = icmp eq i8 %45, 0
  %or.cond40.i.i = select i1 %.not.i.i.i12.i, i1 true, i1 %46
  br i1 %or.cond40.i.i, label %WhileCond.i.i.preheader, label %EndIf10.i.i

SwitchProng2.i.i.i:                               ; preds = %SwitchRangeNo2.i.i.i
  %47 = and i8 %small_buf.sroa.6.0.extract.trunc.i.i, -64
  %.not.i51.i.i = icmp eq i8 %47, -128
  %48 = and i8 %small_buf.sroa.9.0.extract.trunc.i.i, -64
  %.not42.i.i.i = icmp eq i8 %48, -128
  %or.cond33.i.i = select i1 %.not.i51.i.i, i1 %.not42.i.i.i, i1 false
  br i1 %or.cond33.i.i, label %EndIf3.i55.i.i, label %WhileCond.i.i.preheader

EndIf3.i55.i.i:                                   ; preds = %SwitchProng2.i.i.i
  %49 = and i8 %small_buf.sroa.0.0.extract.trunc.i.i, 15
  %50 = zext i8 %49 to i21
  %51 = and i8 %small_buf.sroa.6.0.extract.trunc.i.i, 63
  %52 = zext i8 %51 to i21
  %53 = shl nuw nsw i21 %50, 12
  %54 = shl nuw nsw i21 %52, 6
  %55 = or i21 %54, %53
  %56 = icmp ult i21 %55, 2048
  %57 = and i21 %55, 63488
  %58 = icmp eq i21 %57, 55296
  %or.cond35.i.i = or i1 %56, %58
  br i1 %or.cond35.i.i, label %WhileCond.i.i.preheader, label %EndIf10.i.i

SwitchProng3.i.i.i:                               ; preds = %SwitchRangeNo4.i.i.i
  %59 = and i8 %small_buf.sroa.6.0.extract.trunc.i.i, -64
  %.not.i49.i.i = icmp eq i8 %59, -128
  %60 = and i8 %small_buf.sroa.9.0.extract.trunc.i.i, -64
  %.not52.i.i.i = icmp eq i8 %60, -128
  %or.cond36.i.i = select i1 %.not.i49.i.i, i1 %.not52.i.i.i, i1 false
  %61 = and i8 %small_buf.sroa.11.0.extract.trunc.i.i, -64
  %.not53.i.i.i = icmp eq i8 %61, -128
  %or.cond37.i.i = select i1 %or.cond36.i.i, i1 %.not53.i.i.i, i1 false
  br i1 %or.cond37.i.i, label %EndIf6.i.i.i, label %WhileCond.i.i.preheader

EndIf6.i.i.i:                                     ; preds = %SwitchProng3.i.i.i
  %62 = trunc i32 %36 to i21
  %63 = shl i21 %62, 12
  %64 = and i8 %small_buf.sroa.6.0.extract.trunc.i.i, 63
  %65 = zext i8 %64 to i21
  %66 = shl nuw nsw i21 %65, 6
  %67 = or i21 %66, %63
  %68 = and i8 %small_buf.sroa.9.0.extract.trunc.i.i, 63
  %69 = zext i8 %68 to i21
  %70 = or i21 %67, %69
  %71 = shl i21 %70, 6
  %72 = and i8 %small_buf.sroa.11.0.extract.trunc.i.i, 63
  %73 = zext i8 %72 to i21
  %74 = or i21 %73, -65536
  %.off.i.i = add i21 %74, %71
  %75 = icmp slt i21 %.off.i.i, 0
  br i1 %75, label %WhileCond.i.i.preheader, label %EndIf10.i.i

EndIf10.i.i:                                      ; preds = %EndIf6.i.i.i, %EndIf3.i55.i.i, %SwitchProng1.i.i.i, %EndIf7.i.i
  %76 = phi i64 [ 1, %EndIf7.i.i ], [ 2, %SwitchProng1.i.i.i ], [ 3, %EndIf3.i55.i.i ], [ 4, %EndIf6.i.i.i ]
  %77 = add nuw i64 %76, %i.249.i.i
  %78 = getelementptr inbounds i8, i8* %.idx9.val.i, i64 %77
  %79 = load i8, i8* %78, align 1, !noalias !56
  %80 = icmp slt i8 %79, 0
  %81 = add nuw i64 %77, 4
  %.not.i.i = icmp ult i64 %81, %2
  %or.cond.i.i = select i1 %80, i1 %.not.i.i, i1 false
  br i1 %or.cond.i.i, label %EndIf7.i.i, label %WhileCond.backedge.i.i

WhileEnd12.i.i:                                   ; preds = %WhileCond.backedge.i.i, %EndIf.i
  %i.0.lcssa.i.i = phi i64 [ 0, %EndIf.i ], [ %i.0.be.i.i, %WhileCond.backedge.i.i ]
  %82 = icmp eq i64 %i.0.lcssa.i.i, %2
  br i1 %82, label %Then1.i, label %WhileCond16.i.i

WhileCond16.i.i:                                  ; preds = %WhileEnd12.i.i, %WhileBody17.i.i
  %i.3.i.i = phi i64 [ %86, %WhileBody17.i.i ], [ %i.0.lcssa.i.i, %WhileEnd12.i.i ]
  %83 = getelementptr inbounds i8, i8* %.idx9.val.i, i64 %i.3.i.i
  %84 = load i8, i8* %83, align 1, !noalias !56
  %85 = icmp sgt i8 %84, -1
  br i1 %85, label %WhileBody17.i.i, label %WhileEnd21.i.i

WhileBody17.i.i:                                  ; preds = %WhileCond16.i.i
  %86 = add nuw i64 %i.3.i.i, 1
  %87 = icmp eq i64 %86, %2
  br i1 %87, label %Then1.i, label %WhileCond16.i.i

WhileEnd21.i.i:                                   ; preds = %WhileCond16.i.i
  %88 = sub nuw i64 %2, %i.3.i.i
  %.not.i.i13.i = icmp eq i64 %88, 0
  br i1 %.not.i.i13.i, label %Then1.i, label %WhileBody.i.i.i

WhileBody.i.i.i:                                  ; preds = %WhileEnd21.i.i, %std.unicode.utf8Decode.exit.i.i.i
  %i.046.i.i.i = phi i64 [ %98, %std.unicode.utf8Decode.exit.i.i.i ], [ 0, %WhileEnd21.i.i ]
  %.idx.i.i = add nsw i64 %i.046.i.i.i, %i.3.i.i
  %89 = getelementptr inbounds i8, i8* %.idx9.val.i, i64 %.idx.i.i
  %90 = load i8, i8* %89, align 1, !noalias !56
  %91 = icmp sgt i8 %90, -1
  br i1 %91, label %TryOk.i.i.i, label %SwitchRangeNo.i.i.i.i

SwitchRangeNo.i.i.i.i:                            ; preds = %WhileBody.i.i.i
  %92 = and i8 %90, -32
  %93 = icmp eq i8 %92, -64
  br i1 %93, label %TryOk.i.i.i, label %SwitchRangeNo2.i.i.i.i

SwitchRangeNo2.i.i.i.i:                           ; preds = %SwitchRangeNo.i.i.i.i
  %94 = and i8 %90, -16
  %95 = icmp eq i8 %94, -32
  br i1 %95, label %TryOk.i.i.i, label %SwitchRangeNo4.i.i.i.i

SwitchRangeNo4.i.i.i.i:                           ; preds = %SwitchRangeNo2.i.i.i.i
  %96 = and i8 %90, -8
  %97 = icmp eq i8 %96, -16
  br i1 %97, label %TryOk.i.i.i, label %WhileCond.i.i.preheader

WhileCond.i.i.preheader:                          ; preds = %EndIf6.i.i.i, %SwitchProng3.i.i.i, %EndIf3.i55.i.i, %SwitchProng2.i.i.i, %SwitchProng1.i.i.i, %SwitchRangeNo4.i.i.i, %EndIf6.i.i.i.i, %EndIf3.i.i.i.i, %EndIf.i.i.i.i, %SwitchProng3.i.i.i.i, %EndIf3.i22.i.i.i, %EndIf.i20.i.i.i, %SwitchProng2.i.i.i.i, %SwitchProng1.i.i.i.i, %TryOk.i.i.i, %SwitchRangeNo4.i.i.i.i
  br label %WhileCond.i.i

TryOk.i.i.i:                                      ; preds = %SwitchRangeNo4.i.i.i.i, %SwitchRangeNo2.i.i.i.i, %SwitchRangeNo.i.i.i.i, %WhileBody.i.i.i
  %.sroa.035.1.ph.i.i.i = phi i64 [ 4, %SwitchRangeNo4.i.i.i.i ], [ 3, %SwitchRangeNo2.i.i.i.i ], [ 2, %SwitchRangeNo.i.i.i.i ], [ 1, %WhileBody.i.i.i ]
  %98 = add nuw i64 %.sroa.035.1.ph.i.i.i, %i.046.i.i.i
  %99 = icmp ugt i64 %98, %88
  br i1 %99, label %WhileCond.i.i.preheader, label %EndIf.i.i.i

EndIf.i.i.i:                                      ; preds = %TryOk.i.i.i
  switch i64 %.sroa.035.1.ph.i.i.i, label %SwitchElse.i16.i.i.i [
    i64 1, label %std.unicode.utf8Decode.exit.i.i.i
    i64 2, label %SwitchProng1.i.i.i.i
    i64 3, label %SwitchProng2.i.i.i.i
    i64 4, label %SwitchProng3.i.i.i.i
  ]

SwitchElse.i16.i.i.i:                             ; preds = %EndIf.i.i.i
  unreachable

SwitchProng1.i.i.i.i:                             ; preds = %EndIf.i.i.i
  %.idx.val.idx.i.i.i.i = getelementptr i8, i8* %89, i64 1
  %.idx.val.idx.val.i.i.i.i = load i8, i8* %.idx.val.idx.i.i.i.i, align 1, !noalias !62
  %100 = and i8 %90, -32
  %101 = icmp eq i8 %100, -64
  tail call void @llvm.assume(i1 %101) #11
  %102 = and i8 %.idx.val.idx.val.i.i.i.i, -64
  %.not.i.i.i.i.i = icmp ne i8 %102, -128
  %103 = and i8 %90, 30
  %104 = icmp eq i8 %103, 0
  %or.cond45.i.i.i = select i1 %.not.i.i.i.i.i, i1 true, i1 %104
  br i1 %or.cond45.i.i.i, label %WhileCond.i.i.preheader, label %std.unicode.utf8Decode.exit.i.i.i

SwitchProng2.i.i.i.i:                             ; preds = %EndIf.i.i.i
  %105 = and i8 %90, -16
  %106 = icmp eq i8 %105, -32
  tail call void @llvm.assume(i1 %106) #11
  %107 = getelementptr inbounds i8, i8* %89, i64 1
  %108 = load i8, i8* %107, align 1, !noalias !65
  %109 = and i8 %108, -64
  %.not.i18.i.i.i = icmp eq i8 %109, -128
  br i1 %.not.i18.i.i.i, label %EndIf.i20.i.i.i, label %WhileCond.i.i.preheader

EndIf.i20.i.i.i:                                  ; preds = %SwitchProng2.i.i.i.i
  %110 = getelementptr inbounds i8, i8* %89, i64 2
  %111 = load i8, i8* %110, align 1, !noalias !65
  %112 = and i8 %111, -64
  %.not42.i.i.i.i = icmp eq i8 %112, -128
  br i1 %.not42.i.i.i.i, label %EndIf3.i22.i.i.i, label %WhileCond.i.i.preheader

EndIf3.i22.i.i.i:                                 ; preds = %EndIf.i20.i.i.i
  %113 = and i8 %90, 15
  %114 = zext i8 %113 to i21
  %115 = and i8 %108, 63
  %116 = zext i8 %115 to i21
  %117 = shl nuw nsw i21 %114, 12
  %118 = shl nuw nsw i21 %116, 6
  %119 = or i21 %118, %117
  %120 = icmp ult i21 %119, 2048
  %121 = and i21 %119, 63488
  %122 = icmp eq i21 %121, 55296
  %or.cond.i.i14.i = or i1 %120, %122
  br i1 %or.cond.i.i14.i, label %WhileCond.i.i.preheader, label %std.unicode.utf8Decode.exit.i.i.i

SwitchProng3.i.i.i.i:                             ; preds = %EndIf.i.i.i
  %123 = and i8 %90, -8
  %124 = icmp eq i8 %123, -16
  tail call void @llvm.assume(i1 %124) #11
  %125 = getelementptr inbounds i8, i8* %89, i64 1
  %126 = load i8, i8* %125, align 1, !noalias !68
  %127 = and i8 %126, -64
  %.not.i17.i.i.i = icmp eq i8 %127, -128
  br i1 %.not.i17.i.i.i, label %EndIf.i.i.i.i, label %WhileCond.i.i.preheader

EndIf.i.i.i.i:                                    ; preds = %SwitchProng3.i.i.i.i
  %128 = getelementptr inbounds i8, i8* %89, i64 2
  %129 = load i8, i8* %128, align 1, !noalias !68
  %130 = and i8 %129, -64
  %.not52.i.i.i.i = icmp eq i8 %130, -128
  br i1 %.not52.i.i.i.i, label %EndIf3.i.i.i.i, label %WhileCond.i.i.preheader

EndIf3.i.i.i.i:                                   ; preds = %EndIf.i.i.i.i
  %131 = getelementptr inbounds i8, i8* %89, i64 3
  %132 = load i8, i8* %131, align 1, !noalias !68
  %133 = and i8 %132, -64
  %.not53.i.i.i.i = icmp eq i8 %133, -128
  br i1 %.not53.i.i.i.i, label %EndIf6.i.i.i.i, label %WhileCond.i.i.preheader

EndIf6.i.i.i.i:                                   ; preds = %EndIf3.i.i.i.i
  %134 = zext i8 %90 to i21
  %135 = shl nuw nsw i21 %134, 12
  %136 = and i8 %126, 63
  %137 = zext i8 %136 to i21
  %138 = shl nuw nsw i21 %137, 6
  %139 = or i21 %138, %135
  %140 = and i8 %129, 63
  %141 = zext i8 %140 to i21
  %142 = or i21 %139, %141
  %143 = shl i21 %142, 6
  %144 = add i21 %143, -65536
  %145 = icmp slt i21 %144, 0
  br i1 %145, label %WhileCond.i.i.preheader, label %std.unicode.utf8Decode.exit.i.i.i

std.unicode.utf8Decode.exit.i.i.i:                ; preds = %EndIf6.i.i.i.i, %EndIf3.i22.i.i.i, %SwitchProng1.i.i.i.i, %EndIf.i.i.i
  %146 = icmp ult i64 %98, %88
  br i1 %146, label %WhileBody.i.i.i, label %Then1.i

Then1.i:                                          ; preds = %WhileBody17.i.i, %std.unicode.utf8Decode.exit.i.i.i, %WhileEnd21.i.i, %WhileEnd12.i.i
  %.idx.i15.i = getelementptr %list.RocList, %list.RocList* %1, i64 0, i32 2
  %.idx.val.i.i = load i64, i64* %.idx.i15.i, align 8, !noalias !71
  %147 = icmp slt i64 %.idx.val.i.i, 0
  br i1 %147, label %Then.i.i, label %BoolAndTrue.i.i

Then.i.i:                                         ; preds = %Then1.i
  %148 = or i64 %2, -9223372036854775808
  %149 = and i64 %.idx.val.i.i, 9223372036854775807
  br label %str.RocStr.fromSubListUnsafe.exit.i

BoolAndTrue.i.i:                                  ; preds = %Then1.i
  %.not.i16.i = icmp eq i64 %.idx.val.i.i, 0
  br i1 %.not.i16.i, label %str.RocStr.fromSubListUnsafe.exit.i, label %list.RocList.isUnique.exit.i.i

list.RocList.isUnique.exit.i.i:                   ; preds = %BoolAndTrue.i.i
  %150 = getelementptr inbounds i8, i8* %.idx9.val.i, i64 -8
  %151 = bitcast i8* %150 to i64*
  %152 = load i64, i64* %151, align 8, !noalias !71
  %phi.cmp.i.i.i = icmp eq i64 %152, -9223372036854775808
  br i1 %phi.cmp.i.i.i, label %str.RocStr.fromSubListUnsafe.exit.i, label %Else2.i.i

Else2.i.i:                                        ; preds = %list.RocList.isUnique.exit.i.i
  %153 = or i64 %2, -9223372036854775808
  %154 = ptrtoint i8* %.idx9.val.i to i64
  %155 = lshr i64 %154, 1
  br label %str.RocStr.fromSubListUnsafe.exit.i

str.RocStr.fromSubListUnsafe.exit.i:              ; preds = %Else2.i.i, %list.RocList.isUnique.exit.i.i, %BoolAndTrue.i.i, %Then.i.i
  %string.sroa.4.0.i = phi i64 [ %148, %Then.i.i ], [ %153, %Else2.i.i ], [ %2, %list.RocList.isUnique.exit.i.i ], [ %2, %BoolAndTrue.i.i ]
  %string.sroa.7.0.i = phi i64 [ %149, %Then.i.i ], [ %155, %Else2.i.i ], [ %.idx.val.i.i, %list.RocList.isUnique.exit.i.i ], [ 0, %BoolAndTrue.i.i ]
  %156 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 2
  store i1 true, i1* %156, align 8, !alias.scope !56
  %string.sroa.0.0..sroa_idx.i = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 1, i32 0
  store i8* %.idx9.val.i, i8** %string.sroa.0.0..sroa_idx.i, align 8, !alias.scope !56
  %string.sroa.4.0..sroa_idx42.i = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 1, i32 1
  store i64 %string.sroa.4.0.i, i64* %string.sroa.4.0..sroa_idx42.i, align 8, !alias.scope !56
  %string.sroa.7.0..sroa_idx43.i = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 1, i32 2
  store i64 %string.sroa.7.0.i, i64* %string.sroa.7.0..sroa_idx43.i, align 8, !alias.scope !56
  br label %str.fromUtf8Range.exit

WhileCond.i.i:                                    ; preds = %WhileCond.i.i.backedge, %WhileCond.i.i.preheader
  %index.0.i.i = phi i64 [ 0, %WhileCond.i.i.preheader ], [ %167, %WhileCond.i.i.backedge ]
  %157 = icmp ult i64 %index.0.i.i, %.idx.val.i
  tail call void @llvm.assume(i1 %157) #11
  %158 = getelementptr inbounds i8, i8* %.idx9.val.i, i64 %index.0.i.i
  %159 = load i8, i8* %158, align 1, !noalias !74
  %160 = icmp sgt i8 %159, -1
  br i1 %160, label %ErrRetContinue.i.i.i, label %SwitchRangeNo.i.i.i18.i

SwitchRangeNo.i.i.i18.i:                          ; preds = %WhileCond.i.i
  %161 = and i8 %159, -32
  %162 = icmp eq i8 %161, -64
  br i1 %162, label %ErrRetContinue.i.i.i, label %SwitchRangeNo2.i.i.i19.i

SwitchRangeNo2.i.i.i19.i:                         ; preds = %SwitchRangeNo.i.i.i18.i
  %163 = and i8 %159, -16
  %164 = icmp eq i8 %163, -32
  br i1 %164, label %ErrRetContinue.i.i.i, label %SwitchRangeNo4.i.i.i20.i

SwitchRangeNo4.i.i.i20.i:                         ; preds = %SwitchRangeNo2.i.i.i19.i
  %165 = and i8 %159, -8
  %166 = icmp eq i8 %165, -16
  br i1 %166, label %ErrRetContinue.i.i.i, label %str.errorToProblem.exit.i

ErrRetContinue.i.i.i:                             ; preds = %SwitchRangeNo4.i.i.i20.i, %SwitchRangeNo2.i.i.i19.i, %SwitchRangeNo.i.i.i18.i, %WhileCond.i.i
  %.sroa.031.0.ph.i.i.i = phi i64 [ 4, %SwitchRangeNo4.i.i.i20.i ], [ 3, %SwitchRangeNo2.i.i.i19.i ], [ 2, %SwitchRangeNo.i.i.i18.i ], [ 1, %WhileCond.i.i ]
  %167 = add nuw i64 %.sroa.031.0.ph.i.i.i, %index.0.i.i
  %168 = icmp ugt i64 %167, %.idx.val.i
  br i1 %168, label %str.errorToProblem.exit.i, label %EndIf.i.i21.i

EndIf.i.i21.i:                                    ; preds = %ErrRetContinue.i.i.i
  switch i64 %.sroa.031.0.ph.i.i.i, label %SwitchElse.i13.i.i.i [
    i64 1, label %WhileCond.i.i.backedge
    i64 2, label %SwitchProng1.i.i.i25.i
    i64 3, label %SwitchProng2.i.i.i26.i
    i64 4, label %SwitchProng3.i.i.i29.i
  ]

SwitchElse.i13.i.i.i:                             ; preds = %EndIf.i.i21.i
  unreachable

SwitchProng1.i.i.i25.i:                           ; preds = %EndIf.i.i21.i
  %.idx.val.idx.i.i.i22.i = getelementptr i8, i8* %158, i64 1
  %.idx.val.idx.val.i.i.i23.i = load i8, i8* %.idx.val.idx.i.i.i22.i, align 1, !noalias !79
  %169 = and i8 %159, -32
  %170 = icmp eq i8 %169, -64
  tail call void @llvm.assume(i1 %170) #11
  %171 = and i8 %.idx.val.idx.val.i.i.i23.i, -64
  %.not.i.i.i.i24.i = icmp eq i8 %171, -128
  br i1 %.not.i.i.i.i24.i, label %EndIf.i.i.i.i.i, label %str.errorToProblem.exit.i

EndIf.i.i.i.i.i:                                  ; preds = %SwitchProng1.i.i.i25.i
  %172 = and i8 %159, 30
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %str.errorToProblem.exit.i, label %WhileCond.i.i.backedge

SwitchProng2.i.i.i26.i:                           ; preds = %EndIf.i.i21.i
  %174 = and i8 %159, -16
  %175 = icmp eq i8 %174, -32
  tail call void @llvm.assume(i1 %175) #11
  %176 = getelementptr inbounds i8, i8* %158, i64 1
  %177 = load i8, i8* %176, align 1, !noalias !82
  %178 = and i8 %177, -64
  %.not.i14.i.i.i = icmp eq i8 %178, -128
  br i1 %.not.i14.i.i.i, label %EndIf.i16.i.i.i, label %str.errorToProblem.exit.i

EndIf.i16.i.i.i:                                  ; preds = %SwitchProng2.i.i.i26.i
  %179 = getelementptr inbounds i8, i8* %158, i64 2
  %180 = load i8, i8* %179, align 1, !noalias !82
  %181 = and i8 %180, -64
  %.not42.i.i.i27.i = icmp eq i8 %181, -128
  br i1 %.not42.i.i.i27.i, label %EndIf3.i18.i.i.i, label %str.errorToProblem.exit.i

EndIf3.i18.i.i.i:                                 ; preds = %EndIf.i16.i.i.i
  %182 = and i8 %159, 15
  %183 = zext i8 %182 to i21
  %184 = and i8 %177, 63
  %185 = zext i8 %184 to i21
  %186 = shl nuw nsw i21 %183, 12
  %187 = shl nuw nsw i21 %185, 6
  %188 = or i21 %187, %186
  %189 = icmp ult i21 %188, 2048
  br i1 %189, label %str.errorToProblem.exit.i, label %EndIf6.i20.i.i.i

EndIf6.i20.i.i.i:                                 ; preds = %EndIf3.i18.i.i.i
  %190 = and i21 %188, 63488
  %191 = icmp eq i21 %190, 55296
  br i1 %191, label %str.errorToProblem.exit.i, label %WhileCond.i.i.backedge

SwitchProng3.i.i.i29.i:                           ; preds = %EndIf.i.i21.i
  %192 = and i8 %159, -8
  %193 = icmp eq i8 %192, -16
  tail call void @llvm.assume(i1 %193) #11
  %194 = getelementptr inbounds i8, i8* %158, i64 1
  %195 = load i8, i8* %194, align 1, !noalias !85
  %196 = and i8 %195, -64
  %.not.i.i.i28.i = icmp eq i8 %196, -128
  br i1 %.not.i.i.i28.i, label %EndIf.i.i.i31.i, label %str.errorToProblem.exit.i

EndIf.i.i.i31.i:                                  ; preds = %SwitchProng3.i.i.i29.i
  %197 = getelementptr inbounds i8, i8* %158, i64 2
  %198 = load i8, i8* %197, align 1, !noalias !85
  %199 = and i8 %198, -64
  %.not52.i.i.i30.i = icmp eq i8 %199, -128
  br i1 %.not52.i.i.i30.i, label %EndIf3.i.i.i33.i, label %str.errorToProblem.exit.i

EndIf3.i.i.i33.i:                                 ; preds = %EndIf.i.i.i31.i
  %200 = getelementptr inbounds i8, i8* %158, i64 3
  %201 = load i8, i8* %200, align 1, !noalias !85
  %202 = and i8 %201, -64
  %.not53.i.i.i32.i = icmp eq i8 %202, -128
  br i1 %.not53.i.i.i32.i, label %EndIf6.i.i.i34.i, label %str.errorToProblem.exit.i

EndIf6.i.i.i34.i:                                 ; preds = %EndIf3.i.i.i33.i
  %203 = zext i8 %159 to i21
  %204 = shl nuw nsw i21 %203, 12
  %205 = and i8 %195, 63
  %206 = zext i8 %205 to i21
  %207 = shl nuw nsw i21 %206, 6
  %208 = or i21 %207, %204
  %209 = and i8 %198, 63
  %210 = zext i8 %209 to i21
  %211 = or i21 %208, %210
  %212 = shl i21 %211, 6
  %213 = and i8 %201, 63
  %214 = zext i8 %213 to i21
  %215 = or i21 %212, %214
  %216 = icmp ult i21 %215, 65536
  br i1 %216, label %str.errorToProblem.exit.i, label %EndIf9.i.i.i.i

EndIf9.i.i.i.i:                                   ; preds = %EndIf6.i.i.i34.i
  %217 = icmp ugt i21 %215, -983041
  br i1 %217, label %str.errorToProblem.exit.i, label %WhileCond.i.i.backedge

WhileCond.i.i.backedge:                           ; preds = %EndIf9.i.i.i.i, %EndIf6.i20.i.i.i, %EndIf.i.i.i.i.i, %EndIf.i.i21.i
  br label %WhileCond.i.i

str.errorToProblem.exit.i:                        ; preds = %EndIf9.i.i.i.i, %EndIf6.i.i.i34.i, %EndIf3.i.i.i33.i, %EndIf.i.i.i31.i, %SwitchProng3.i.i.i29.i, %EndIf6.i20.i.i.i, %EndIf3.i18.i.i.i, %EndIf.i16.i.i.i, %SwitchProng2.i.i.i26.i, %EndIf.i.i.i.i.i, %SwitchProng1.i.i.i25.i, %ErrRetContinue.i.i.i, %SwitchRangeNo4.i.i.i20.i
  %.sink.i.i = phi i8 [ 5, %ErrRetContinue.i.i.i ], [ 3, %SwitchRangeNo4.i.i.i20.i ], [ 2, %EndIf3.i.i.i33.i ], [ 2, %EndIf.i.i.i31.i ], [ 2, %SwitchProng3.i.i.i29.i ], [ 2, %EndIf.i16.i.i.i ], [ 2, %SwitchProng2.i.i.i26.i ], [ 2, %SwitchProng1.i.i.i25.i ], [ 4, %EndIf6.i.i.i34.i ], [ 4, %EndIf3.i18.i.i.i ], [ 4, %EndIf.i.i.i.i.i ], [ 1, %EndIf6.i20.i.i.i ], [ 0, %EndIf9.i.i.i.i ]
  %.idx8.i = getelementptr %list.RocList, %list.RocList* %1, i64 0, i32 2
  %.idx8.val.i = load i64, i64* %.idx8.i, align 8, !noalias !56
  %218 = ptrtoint i8* %.idx9.val.i to i64
  %219 = shl i64 %.idx8.val.i, 1
  %.not.i.i35.i = icmp slt i64 %.idx8.val.i, 0
  %220 = select i1 %.not.i.i35.i, i64 %219, i64 %218
  %221 = icmp ne i64 %.idx8.val.i, 0
  %222 = icmp ne i64 %220, 0
  %or.cond.i.i36.i = select i1 %221, i1 %222, i1 false
  br i1 %or.cond.i.i36.i, label %OptionalNonNull.i.i38.i, label %list.RocList.decref.exit41.i

OptionalNonNull.i.i38.i:                          ; preds = %str.errorToProblem.exit.i
  %223 = inttoptr i64 %220 to i8*
  %224 = getelementptr inbounds i8, i8* %223, i64 -8
  %225 = bitcast i8* %224 to i64*
  %226 = load i64, i64* %225, align 8, !noalias !56
  %.not.i.i.i37.i = icmp eq i64 %226, 0
  br i1 %.not.i.i.i37.i, label %list.RocList.decref.exit41.i, label %Then.i.i.i39.i

Then.i.i.i39.i:                                   ; preds = %OptionalNonNull.i.i38.i
  %227 = add i64 %226, -1
  store i64 %227, i64* %225, align 8, !noalias !56
  %228 = icmp eq i64 %226, -9223372036854775808
  br i1 %228, label %Then1.i.i.i40.i, label %list.RocList.decref.exit41.i

Then1.i.i.i40.i:                                  ; preds = %Then.i.i.i39.i
  tail call void @roc_dealloc(i8* %224, i32 8) #11, !noalias !56
  br label %list.RocList.decref.exit41.i

list.RocList.decref.exit41.i:                     ; preds = %Then1.i.i.i40.i, %Then.i.i.i39.i, %OptionalNonNull.i.i38.i, %str.errorToProblem.exit.i
  %229 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 2
  store i1 false, i1* %229, align 8, !alias.scope !56
  %230 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 1
  %231 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 1, i32 2
  %232 = bitcast %str.RocStr* %230 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %232, i8 0, i64 16, i1 false) #11, !alias.scope !88
  store i64 -9223372036854775808, i64* %231, align 8, !alias.scope !88
  br label %str.fromUtf8Range.exit

str.fromUtf8Range.exit:                           ; preds = %list.RocList.decref.exit41.i, %str.RocStr.fromSubListUnsafe.exit.i, %list.RocList.decref.exit.i
  %index.0.i.lcssa.sink.i = phi i64 [ %index.0.i.i, %list.RocList.decref.exit41.i ], [ 0, %str.RocStr.fromSubListUnsafe.exit.i ], [ 0, %list.RocList.decref.exit.i ]
  %.sink.i.sink.i = phi i8 [ %.sink.i.i, %list.RocList.decref.exit41.i ], [ 3, %str.RocStr.fromSubListUnsafe.exit.i ], [ 3, %list.RocList.decref.exit.i ]
  %233 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 0
  store i64 %index.0.i.lcssa.sink.i, i64* %233, align 8, !alias.scope !56
  %234 = getelementptr inbounds %str.FromUtf8Result, %str.FromUtf8Result* %0, i64 0, i32 3
  store i8 %.sink.i.sink.i, i8* %234, align 1, !alias.scope !56
  ret void
}

; Function Attrs: nobuiltin nounwind
define internal fastcc void @roc_builtins.str.repeat(%str.RocStr* noalias nocapture nonnull %0, %str.RocStr* nocapture nonnull readonly %1, i64 %2) unnamed_addr #2 {
Entry:
  %ret_string = alloca %str.RocStr, align 8
  %.idx.i = getelementptr %str.RocStr, %str.RocStr* %1, i64 0, i32 2
  %.idx.val.i = load i64, i64* %.idx.i, align 8
  %3 = icmp slt i64 %.idx.val.i, 0
  br i1 %3, label %Then.i9, label %Else.i10

Then.i9:                                          ; preds = %Entry
  %4 = lshr i64 %.idx.val.i, 56
  %5 = xor i64 %4, 128
  %6 = bitcast %str.RocStr* %1 to i8*
  br label %str.RocStr.asU8ptr.exit

Else.i10:                                         ; preds = %Entry
  %7 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 9223372036854775807
  %10 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  br label %str.RocStr.asU8ptr.exit

str.RocStr.asU8ptr.exit:                          ; preds = %Else.i10, %Then.i9
  %common.ret.op.i18 = phi i64 [ %5, %Then.i9 ], [ %9, %Else.i10 ]
  %common.ret.op.i8 = phi i8* [ %6, %Then.i9 ], [ %11, %Else.i10 ]
  %12 = mul nuw i64 %common.ret.op.i18, %2
  tail call void @llvm.experimental.noalias.scope.decl(metadata !91)
  %13 = icmp ugt i64 %12, 23
  br i1 %13, label %Then.i11, label %str.RocStr.asU8ptrMut.exit.i

Then.i11:                                         ; preds = %str.RocStr.asU8ptr.exit
  %14 = icmp ugt i64 %12, 64
  %..i.i.i = select i1 %14, i64 %12, i64 64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !94) #11
  %15 = add nuw i64 %..i.i.i, 8
  %16 = tail call i8* @roc_alloc(i64 %15, i32 8) #11, !noalias !97
  %17 = icmp ne i8* %16, null
  tail call void @llvm.assume(i1 %17) #11
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %16 to i64*
  store i64 -9223372036854775808, i64* %19, align 8, !noalias !97
  %20 = getelementptr inbounds %str.RocStr, %str.RocStr* %ret_string, i64 0, i32 2
  store i64 %..i.i.i, i64* %20, align 8, !alias.scope !97
  br label %str.RocStr.allocate.exit

str.RocStr.asU8ptrMut.exit.i:                     ; preds = %str.RocStr.asU8ptr.exit
  %21 = trunc i64 %12 to i8
  %22 = or i8 %21, -128
  %string.sroa.36.0..sroa_idx7.sroa_idx.i = getelementptr inbounds %str.RocStr, %str.RocStr* %ret_string, i64 0, i32 2
  %string.sroa.36.0..sroa_idx7.sroa_cast.i = bitcast i64* %string.sroa.36.0..sroa_idx7.sroa_idx.i to i56*
  store i56 0, i56* %string.sroa.36.0..sroa_idx7.sroa_cast.i, align 8, !alias.scope !91
  %string.sroa.36.0..sroa_idx7.sroa_raw_cast.i = bitcast %str.RocStr* %ret_string to i8*
  %string.sroa.36.0..sroa_idx7.sroa_raw_idx.i = getelementptr inbounds i8, i8* %string.sroa.36.0..sroa_idx7.sroa_raw_cast.i, i64 23
  store i8 %22, i8* %string.sroa.36.0..sroa_idx7.sroa_raw_idx.i, align 1, !alias.scope !91
  %.idx.val.i13.pre = load i64, i64* %string.sroa.36.0..sroa_idx7.sroa_idx.i, align 8
  br label %str.RocStr.allocate.exit

str.RocStr.allocate.exit:                         ; preds = %str.RocStr.asU8ptrMut.exit.i, %Then.i11
  %.idx.val.i13 = phi i64 [ %..i.i.i, %Then.i11 ], [ %.idx.val.i13.pre, %str.RocStr.asU8ptrMut.exit.i ]
  %.sink10.i = phi i8* [ %18, %Then.i11 ], [ null, %str.RocStr.asU8ptrMut.exit.i ]
  %.sink.i = phi i64 [ %12, %Then.i11 ], [ 0, %str.RocStr.asU8ptrMut.exit.i ]
  %.pre-phi.pre-phi = bitcast %str.RocStr* %ret_string to i8*
  %23 = getelementptr inbounds %str.RocStr, %str.RocStr* %ret_string, i64 0, i32 0
  store i8* %.sink10.i, i8** %23, align 8, !alias.scope !91
  %24 = getelementptr inbounds %str.RocStr, %str.RocStr* %ret_string, i64 0, i32 1
  store i64 %.sink.i, i64* %24, align 8, !alias.scope !91
  %25 = icmp slt i64 %.idx.val.i13, 0
  %spec.select = select i1 %25, i8* %.pre-phi.pre-phi, i8* %.sink10.i
  %.not = icmp eq i64 %2, 0
  br i1 %.not, label %WhileEnd, label %WhileBody

WhileBody:                                        ; preds = %str.RocStr.allocate.exit, %WhileBody
  %i.020 = phi i64 [ %28, %WhileBody ], [ 0, %str.RocStr.allocate.exit ]
  %26 = mul nuw i64 %i.020, %common.ret.op.i18
  %27 = getelementptr inbounds i8, i8* %spec.select, i64 %26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* nonnull align 1 %common.ret.op.i8, i64 %common.ret.op.i18, i1 false)
  %28 = add nuw i64 %i.020, 1
  %exitcond.not = icmp eq i64 %28, %2
  br i1 %exitcond.not, label %WhileEnd, label %WhileBody

WhileEnd:                                         ; preds = %WhileBody, %str.RocStr.allocate.exit
  %29 = bitcast %str.RocStr* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %29, i8* noundef nonnull align 8 dereferenceable(24) %.pre-phi.pre-phi, i64 24, i1 false)
  ret void
}

; Function Attrs: mustprogress nobuiltin nofree norecurse nosync nounwind readonly willreturn
define internal fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %0) unnamed_addr #4 {
Entry:
  %.idx = getelementptr %str.RocStr, %str.RocStr* %0, i64 0, i32 0
  %.idx.val = load i8*, i8** %.idx, align 8
  %.idx1 = getelementptr %str.RocStr, %str.RocStr* %0, i64 0, i32 1
  %.idx1.val = load i64, i64* %.idx1, align 8
  %.idx2 = getelementptr %str.RocStr, %str.RocStr* %0, i64 0, i32 2
  %.idx2.val = load i64, i64* %.idx2, align 8
  %1 = ptrtoint i8* %.idx.val to i64
  %2 = shl i64 %.idx2.val, 1
  %.not.i = icmp slt i64 %.idx1.val, 0
  %3 = select i1 %.not.i, i64 %2, i64 %1
  %4 = inttoptr i64 %3 to i8*
  ret i8* %4
}

; Function Attrs: nobuiltin nounwind
define internal fastcc void @roc_builtins.utils.free_rc_ptr(i64* %0) unnamed_addr #2 {
Entry:
  %.not = icmp eq i64* %0, null
  br i1 %.not, label %common.ret, label %OptionalNonNull

common.ret:                                       ; preds = %OptionalNonNull, %Entry
  ret void

OptionalNonNull:                                  ; preds = %Entry
  %1 = bitcast i64* %0 to i8*
  tail call void @roc_dealloc(i8* %1, i32 8) #11
  br label %common.ret
}

; Function Attrs: nobuiltin nounwind
define internal fastcc nonnull i8* @roc_builtins.utils.allocate_with_refcount(i64 %0) unnamed_addr #2 {
Entry:
  %1 = add nuw i64 %0, 8
  %2 = tail call i8* @roc_alloc(i64 %1, i32 8) #11
  %3 = icmp ne i8* %2, null
  tail call void @llvm.assume(i1 %3) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %2 to i64*
  store i64 -9223372036854775808, i64* %5, align 8
  ret i8* %4
}

; Function Attrs: mustprogress nobuiltin nofree norecurse nosync nounwind readnone willreturn
define internal i64 @roc_builtins.utils.dict_pseudo_seed() #5 {
Entry:
  ret i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64)
}

; Function Attrs: nobuiltin nounwind
declare void @roc_panic(%str.RocStr* nonnull readonly, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
define weak_odr i32 @__roc_force_setjmp(i32* %0) local_unnamed_addr #2 {
Entry:
  %1 = tail call i32 @setjmp(i32* %0)
  ret i32 %1
}

; Function Attrs: nobuiltin nounwind
declare i32 @setjmp(i32*) local_unnamed_addr #2

; Function Attrs: nobuiltin noreturn nounwind
define weak_odr void @__roc_force_longjmp(i32* %0, i32 %1) local_unnamed_addr #6 {
Entry:
  tail call void @longjmp(i32* %0, i32 %1)
  unreachable
}

; Function Attrs: nobuiltin noreturn nounwind
declare void @longjmp(i32*, i32) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
define weak i128 @__muloti4(i128 %0, i128 %1, i32* nonnull %2) local_unnamed_addr #2 {
Entry:
  store i32 0, i32* %2, align 4
  %3 = mul i128 %1, %0
  %4 = icmp slt i128 %0, 0
  %5 = icmp eq i128 %1, -170141183460469231731687303715884105728
  %6 = select i1 %4, i1 %5, i1 false
  br i1 %6, label %Then.i, label %BoolOrFalse.i

BoolOrFalse.i:                                    ; preds = %Entry
  %.not.i = icmp eq i128 %0, 0
  br i1 %.not.i, label %compiler_rt.muloXi4_genericSmall.exit, label %BoolAndTrue1.i

BoolAndTrue1.i:                                   ; preds = %BoolOrFalse.i
  %7 = sdiv i128 %3, %0
  %.not12.i = icmp eq i128 %7, %1
  br i1 %.not12.i, label %compiler_rt.muloXi4_genericSmall.exit, label %Then.i

Then.i:                                           ; preds = %BoolAndTrue1.i, %Entry
  store i32 1, i32* %2, align 4
  br label %compiler_rt.muloXi4_genericSmall.exit

compiler_rt.muloXi4_genericSmall.exit:            ; preds = %Then.i, %BoolAndTrue1.i, %BoolOrFalse.i
  ret i128 %3
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__lshrti3(i128 %0, i32 %1) local_unnamed_addr #2 {
Entry:
  %input.sroa.0.0.extract.trunc.i = trunc i128 %0 to i64
  %input.sroa.2.0.extract.shift.i = lshr i128 %0, 64
  %input.sroa.2.0.extract.trunc.i = trunc i128 %input.sroa.2.0.extract.shift.i to i64
  %2 = icmp sgt i32 %1, 63
  br i1 %2, label %Then1.i, label %Else.i

Else.i:                                           ; preds = %Entry
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %compiler_rt.lshrXi3.exit, label %Else2.i

Then1.i:                                          ; preds = %Entry
  %4 = and i32 %1, 63
  %5 = zext i32 %4 to i64
  %6 = lshr i64 %input.sroa.2.0.extract.trunc.i, %5
  br label %EndIf3.i

Else2.i:                                          ; preds = %Else.i
  %7 = and i32 %1, 63
  %8 = zext i32 %7 to i64
  %9 = lshr i64 %input.sroa.2.0.extract.trunc.i, %8
  %10 = sub i32 0, %1
  %11 = and i32 %10, 63
  %12 = zext i32 %11 to i64
  %13 = shl i64 %input.sroa.2.0.extract.trunc.i, %12
  %14 = lshr i64 %input.sroa.0.0.extract.trunc.i, %8
  %15 = or i64 %13, %14
  br label %EndIf3.i

EndIf3.i:                                         ; preds = %Else2.i, %Then1.i
  %output.sroa.0.0.i = phi i64 [ %6, %Then1.i ], [ %15, %Else2.i ]
  %output.sroa.5.0.i = phi i64 [ 0, %Then1.i ], [ %9, %Else2.i ]
  %output.sroa.5.0.insert.ext.i = zext i64 %output.sroa.5.0.i to i128
  %output.sroa.5.0.insert.shift.i = shl nuw i128 %output.sroa.5.0.insert.ext.i, 64
  %output.sroa.0.0.insert.ext.i = zext i64 %output.sroa.0.0.i to i128
  %output.sroa.0.0.insert.insert.i = or i128 %output.sroa.5.0.insert.shift.i, %output.sroa.0.0.insert.ext.i
  br label %compiler_rt.lshrXi3.exit

compiler_rt.lshrXi3.exit:                         ; preds = %EndIf3.i, %Else.i
  %common.ret.op.i = phi i128 [ %output.sroa.0.0.insert.insert.i, %EndIf3.i ], [ %0, %Else.i ]
  ret i128 %common.ret.op.i
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__divti3(i128 %0, i128 %1) local_unnamed_addr #2 {
Entry:
  %2 = ashr i128 %0, 127
  %3 = ashr i128 %1, 127
  %4 = xor i128 %2, %0
  %5 = sub i128 %4, %2
  %6 = xor i128 %3, %1
  %7 = sub i128 %6, %3
  %n.sroa.0.0.extract.trunc.i = trunc i128 %5 to i64
  %n.sroa.18.0.extract.shift.i = lshr i128 %5, 64
  %n.sroa.18.0.extract.trunc.i = trunc i128 %n.sroa.18.0.extract.shift.i to i64
  %d.sroa.0.0.extract.trunc.i = trunc i128 %7 to i64
  %d.sroa.12.0.extract.shift.i = lshr i128 %7, 64
  %d.sroa.12.0.extract.trunc.i = trunc i128 %d.sroa.12.0.extract.shift.i to i64
  %8 = icmp eq i64 %n.sroa.18.0.extract.trunc.i, 0
  br i1 %8, label %Then.i, label %EndIf6.i

Then.i:                                           ; preds = %Entry
  %9 = icmp eq i64 %d.sroa.12.0.extract.trunc.i, 0
  br i1 %9, label %Then1.i, label %compiler_rt.udivmod.exit

Then1.i:                                          ; preds = %Then.i
  %n.sroa.0.0.extract.trunc.frozen.i = freeze i64 %n.sroa.0.0.extract.trunc.i
  %d.sroa.0.0.extract.trunc.frozen.i = freeze i64 %d.sroa.0.0.extract.trunc.i
  %10 = udiv i64 %n.sroa.0.0.extract.trunc.frozen.i, %d.sroa.0.0.extract.trunc.frozen.i
  %11 = zext i64 %10 to i128
  br label %compiler_rt.udivmod.exit

EndIf6.i:                                         ; preds = %Entry
  %12 = icmp eq i64 %d.sroa.0.0.extract.trunc.i, 0
  %13 = icmp eq i64 %d.sroa.12.0.extract.trunc.i, 0
  br i1 %12, label %Then7.i, label %Else31.i

Then7.i:                                          ; preds = %EndIf6.i
  br i1 %13, label %compiler_rt.udivmod.exit, label %EndIf13.i

EndIf13.i:                                        ; preds = %Then7.i
  %14 = icmp eq i64 %n.sroa.0.0.extract.trunc.i, 0
  br i1 %14, label %Then14.i, label %EndIf19.i

Then14.i:                                         ; preds = %EndIf13.i
  %n.sroa.18.0.extract.trunc.frozen.i = freeze i64 %n.sroa.18.0.extract.trunc.i
  %d.sroa.12.0.extract.trunc.frozen.i = freeze i64 %d.sroa.12.0.extract.trunc.i
  %15 = udiv i64 %n.sroa.18.0.extract.trunc.frozen.i, %d.sroa.12.0.extract.trunc.frozen.i
  %16 = zext i64 %15 to i128
  br label %compiler_rt.udivmod.exit

EndIf19.i:                                        ; preds = %EndIf13.i
  %17 = tail call i64 @llvm.ctpop.i64(i64 %d.sroa.12.0.extract.trunc.i) #11, !range !98
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %Then20.i, label %EndIf25.i

Then20.i:                                         ; preds = %EndIf19.i
  %19 = tail call i64 @llvm.cttz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %20 = lshr i64 %n.sroa.18.0.extract.trunc.i, %19
  %21 = zext i64 %20 to i128
  br label %compiler_rt.udivmod.exit

EndIf25.i:                                        ; preds = %EndIf19.i
  %22 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %23 = trunc i64 %22 to i32
  %24 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %25 = trunc i64 %24 to i32
  %26 = sub nsw i32 %23, %25
  %27 = icmp ugt i32 %26, 62
  br i1 %27, label %compiler_rt.udivmod.exit, label %EndIf58.i

Else31.i:                                         ; preds = %EndIf6.i
  br i1 %13, label %Then32.i, label %Else47.i

Then32.i:                                         ; preds = %Else31.i
  %28 = tail call i64 @llvm.ctpop.i64(i64 %d.sroa.0.0.extract.trunc.i) #11, !range !98
  %29 = icmp ult i64 %28, 2
  br i1 %29, label %Then33.i, label %EndIf41.i

Then33.i:                                         ; preds = %Then32.i
  %30 = icmp eq i64 %d.sroa.0.0.extract.trunc.i, 1
  br i1 %30, label %compiler_rt.udivmod.exit, label %EndIf39.i

EndIf39.i:                                        ; preds = %Then33.i
  %31 = tail call i64 @llvm.cttz.i64(i64 %d.sroa.0.0.extract.trunc.i, i1 true) #11, !range !98
  %32 = lshr i64 %n.sroa.18.0.extract.trunc.i, %31
  %33 = sub nsw i64 0, %31
  %34 = and i64 %33, 63
  %35 = shl i64 %n.sroa.18.0.extract.trunc.i, %34
  %36 = lshr i64 %n.sroa.0.0.extract.trunc.i, %31
  %37 = or i64 %35, %36
  %result.sroa.20.0.insert.ext271.i = zext i64 %32 to i128
  %result.sroa.20.0.insert.shift272.i = shl nuw i128 %result.sroa.20.0.insert.ext271.i, 64
  %result.sroa.0.0.insert.ext221.i = zext i64 %37 to i128
  %result.sroa.0.0.insert.insert223.i = or i128 %result.sroa.20.0.insert.shift272.i, %result.sroa.0.0.insert.ext221.i
  br label %compiler_rt.udivmod.exit

EndIf41.i:                                        ; preds = %Then32.i
  %38 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.0.0.extract.trunc.i, i1 true) #11, !range !98
  %39 = trunc i64 %38 to i32
  %40 = add nuw nsw i32 %39, 65
  %41 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %42 = trunc i64 %41 to i32
  %43 = sub nuw nsw i32 %40, %42
  %44 = icmp eq i32 %43, 64
  br i1 %44, label %WhileBody.i.preheader, label %Else42.i

Else42.i:                                         ; preds = %EndIf41.i
  %45 = icmp ult i32 %43, 64
  %46 = sub nsw i32 0, %43
  %47 = and i32 %46, 63
  %48 = zext i32 %47 to i64
  %49 = shl i64 %n.sroa.0.0.extract.trunc.i, %48
  br i1 %45, label %Then44.i, label %Else45.i

Then44.i:                                         ; preds = %Else42.i
  %50 = zext i32 %43 to i64
  %51 = lshr i64 %n.sroa.18.0.extract.trunc.i, %50
  %52 = shl i64 %n.sroa.18.0.extract.trunc.i, %48
  %53 = lshr i64 %n.sroa.0.0.extract.trunc.i, %50
  %54 = or i64 %52, %53
  br label %WhileBody.i.preheader

Else45.i:                                         ; preds = %Else42.i
  %55 = shl i64 %n.sroa.18.0.extract.trunc.i, %48
  %56 = and i32 %43, 63
  %57 = zext i32 %56 to i64
  %58 = lshr i64 %n.sroa.0.0.extract.trunc.i, %57
  %59 = or i64 %55, %58
  %60 = lshr i64 %n.sroa.18.0.extract.trunc.i, %57
  br label %WhileBody.i.preheader

Else47.i:                                         ; preds = %Else31.i
  %61 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %62 = trunc i64 %61 to i32
  %63 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %64 = trunc i64 %63 to i32
  %65 = sub nsw i32 %62, %64
  %66 = icmp ugt i32 %65, 63
  br i1 %66, label %compiler_rt.udivmod.exit, label %EndIf53.i

EndIf53.i:                                        ; preds = %Else47.i
  %67 = add nuw nsw i32 %65, 1
  %68 = icmp eq i32 %67, 64
  br i1 %68, label %WhileBody.i.preheader, label %Else55.i

Else55.i:                                         ; preds = %EndIf53.i
  %69 = zext i32 %67 to i64
  %70 = lshr i64 %n.sroa.18.0.extract.trunc.i, %69
  %71 = sub nuw nsw i32 63, %65
  %72 = zext i32 %71 to i64
  %73 = shl i64 %n.sroa.18.0.extract.trunc.i, %72
  %74 = lshr i64 %n.sroa.0.0.extract.trunc.i, %69
  %75 = or i64 %73, %74
  %76 = shl i64 %n.sroa.0.0.extract.trunc.i, %72
  br label %WhileBody.i.preheader

EndIf58.i:                                        ; preds = %EndIf25.i
  %77 = add nuw nsw i32 %26, 1
  %78 = sub nuw nsw i32 63, %26
  %79 = zext i32 %78 to i64
  %80 = shl i64 %n.sroa.0.0.extract.trunc.i, %79
  %81 = zext i32 %77 to i64
  %82 = lshr i64 %n.sroa.18.0.extract.trunc.i, %81
  %83 = shl i64 %n.sroa.18.0.extract.trunc.i, %79
  %84 = lshr i64 %n.sroa.0.0.extract.trunc.i, %81
  %85 = or i64 %83, %84
  br label %WhileBody.i.preheader

WhileBody.i.preheader:                            ; preds = %EndIf58.i, %Else55.i, %EndIf53.i, %Else45.i, %Then44.i, %EndIf41.i
  %q.sroa.11.1311.i.ph = phi i64 [ %80, %EndIf58.i ], [ %49, %Then44.i ], [ %59, %Else45.i ], [ %76, %Else55.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf41.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf53.i ]
  %q.sroa.0.1310.i.ph = phi i64 [ 0, %EndIf58.i ], [ 0, %Then44.i ], [ %49, %Else45.i ], [ 0, %Else55.i ], [ 0, %EndIf41.i ], [ 0, %EndIf53.i ]
  %r.sroa.15.1309.i.ph = phi i64 [ %82, %EndIf58.i ], [ %51, %Then44.i ], [ 0, %Else45.i ], [ %70, %Else55.i ], [ 0, %EndIf41.i ], [ 0, %EndIf53.i ]
  %r.sroa.0.1308.i.ph = phi i64 [ %85, %EndIf58.i ], [ %54, %Then44.i ], [ %60, %Else45.i ], [ %75, %Else55.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf41.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf53.i ]
  %sr.1307.i.ph = phi i32 [ %77, %EndIf58.i ], [ %43, %Then44.i ], [ %43, %Else45.i ], [ %67, %Else55.i ], [ 64, %EndIf41.i ], [ 64, %EndIf53.i ]
  br label %WhileBody.i

WhileBody.i:                                      ; preds = %WhileBody.i.preheader, %WhileBody.i
  %q.sroa.11.1311.i = phi i64 [ %88, %WhileBody.i ], [ %q.sroa.11.1311.i.ph, %WhileBody.i.preheader ]
  %q.sroa.0.1310.i = phi i64 [ %91, %WhileBody.i ], [ %q.sroa.0.1310.i.ph, %WhileBody.i.preheader ]
  %r.sroa.15.1309.i = phi i64 [ %r.sroa.15.0.extract.trunc.i, %WhileBody.i ], [ %r.sroa.15.1309.i.ph, %WhileBody.i.preheader ]
  %r.sroa.0.1308.i = phi i64 [ %r.sroa.0.0.extract.trunc.i, %WhileBody.i ], [ %r.sroa.0.1308.i.ph, %WhileBody.i.preheader ]
  %sr.1307.i = phi i32 [ %99, %WhileBody.i ], [ %sr.1307.i.ph, %WhileBody.i.preheader ]
  %carry.0306.i = phi i32 [ %96, %WhileBody.i ], [ 0, %WhileBody.i.preheader ]
  %86 = tail call i64 @llvm.fshl.i64(i64 %r.sroa.15.1309.i, i64 %r.sroa.0.1308.i, i64 1) #11
  %87 = tail call i64 @llvm.fshl.i64(i64 %r.sroa.0.1308.i, i64 %q.sroa.11.1311.i, i64 1) #11
  %88 = tail call i64 @llvm.fshl.i64(i64 %q.sroa.11.1311.i, i64 %q.sroa.0.1310.i, i64 1) #11
  %89 = shl i64 %q.sroa.0.1310.i, 1
  %90 = zext i32 %carry.0306.i to i64
  %91 = or i64 %89, %90
  %r.sroa.15.0.insert.ext.i = zext i64 %86 to i128
  %r.sroa.15.0.insert.shift.i = shl nuw i128 %r.sroa.15.0.insert.ext.i, 64
  %r.sroa.0.0.insert.ext.i = zext i64 %87 to i128
  %r.sroa.0.0.insert.insert.i = or i128 %r.sroa.15.0.insert.shift.i, %r.sroa.0.0.insert.ext.i
  %92 = xor i128 %r.sroa.0.0.insert.insert.i, -1
  %93 = add i128 %7, %92
  %94 = ashr i128 %93, 127
  %95 = trunc i128 %94 to i32
  %96 = and i32 %95, 1
  %97 = and i128 %94, %7
  %98 = sub nuw i128 %r.sroa.0.0.insert.insert.i, %97
  %r.sroa.0.0.extract.trunc.i = trunc i128 %98 to i64
  %r.sroa.15.0.extract.shift.i = lshr i128 %98, 64
  %r.sroa.15.0.extract.trunc.i = trunc i128 %r.sroa.15.0.extract.shift.i to i64
  %99 = add i32 %sr.1307.i, -1
  %.not.i = icmp eq i32 %99, 0
  br i1 %.not.i, label %WhileEnd.i, label %WhileBody.i

WhileEnd.i:                                       ; preds = %WhileBody.i
  %q.sroa.11.0.insert.ext.i = zext i64 %88 to i128
  %q.sroa.0.0.insert.ext.i = zext i64 %91 to i128
  %100 = shl i128 %q.sroa.11.0.insert.ext.i, 65
  %101 = shl nuw nsw i128 %q.sroa.0.0.insert.ext.i, 1
  %102 = zext i32 %96 to i128
  %.masked304.i = and i128 %101, 18446744073709551616
  %result.sroa.20.0.extract.shift280.i = or i128 %.masked304.i, %100
  %.masked.i = and i128 %101, 18446744073709551614
  %result.sroa.0.0.insert.ext230.i = or i128 %.masked.i, %102
  %result.sroa.0.0.insert.insert232.i = or i128 %result.sroa.0.0.insert.ext230.i, %result.sroa.20.0.extract.shift280.i
  br label %compiler_rt.udivmod.exit

compiler_rt.udivmod.exit:                         ; preds = %Else47.i, %EndIf25.i, %Then.i, %Then1.i, %Then7.i, %Then14.i, %Then20.i, %Then33.i, %EndIf39.i, %WhileEnd.i
  %common.ret.op.i = phi i128 [ %11, %Then1.i ], [ %16, %Then14.i ], [ %21, %Then20.i ], [ %result.sroa.0.0.insert.insert223.i, %EndIf39.i ], [ %result.sroa.0.0.insert.insert232.i, %WhileEnd.i ], [ %5, %Then33.i ], [ poison, %Then7.i ], [ 0, %Then.i ], [ 0, %EndIf25.i ], [ 0, %Else47.i ]
  %103 = xor i128 %3, %2
  %104 = xor i128 %common.ret.op.i, %103
  %105 = sub i128 %104, %103
  ret i128 %105
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__modti3(i128 %0, i128 %1) local_unnamed_addr #2 {
Entry:
  %2 = ashr i128 %0, 127
  %3 = xor i128 %2, %0
  %4 = sub i128 %3, %2
  %5 = tail call i128 @llvm.abs.i128(i128 %1, i1 false) #11
  %n.sroa.0.0.extract.trunc.i = trunc i128 %4 to i64
  %n.sroa.18.0.extract.shift.i = lshr i128 %4, 64
  %n.sroa.18.0.extract.trunc.i = trunc i128 %n.sroa.18.0.extract.shift.i to i64
  %d.sroa.0.0.extract.trunc.i = trunc i128 %5 to i64
  %d.sroa.12.0.extract.shift.i = lshr i128 %5, 64
  %d.sroa.12.0.extract.trunc.i = trunc i128 %d.sroa.12.0.extract.shift.i to i64
  %6 = icmp eq i64 %n.sroa.18.0.extract.trunc.i, 0
  br i1 %6, label %Then.i, label %EndIf6.i

Then.i:                                           ; preds = %Entry
  %7 = icmp eq i64 %d.sroa.12.0.extract.trunc.i, 0
  br i1 %7, label %Then1.i, label %compiler_rt.udivmod.exit

Then1.i:                                          ; preds = %Then.i
  %n.sroa.0.0.extract.trunc.frozen.i = freeze i64 %n.sroa.0.0.extract.trunc.i
  %d.sroa.0.0.extract.trunc.frozen.i = freeze i64 %d.sroa.0.0.extract.trunc.i
  %8 = urem i64 %n.sroa.0.0.extract.trunc.frozen.i, %d.sroa.0.0.extract.trunc.frozen.i
  br label %compiler_rt.udivmod.exit

EndIf6.i:                                         ; preds = %Entry
  %9 = icmp eq i64 %d.sroa.0.0.extract.trunc.i, 0
  %10 = icmp eq i64 %d.sroa.12.0.extract.trunc.i, 0
  br i1 %9, label %Then7.i, label %Else31.i

Then7.i:                                          ; preds = %EndIf6.i
  br i1 %10, label %compiler_rt.udivmod.exit, label %EndIf13.i

EndIf13.i:                                        ; preds = %Then7.i
  %11 = icmp eq i64 %n.sroa.0.0.extract.trunc.i, 0
  br i1 %11, label %Then14.i, label %EndIf19.i

Then14.i:                                         ; preds = %EndIf13.i
  %n.sroa.18.0.extract.trunc.frozen.i = freeze i64 %n.sroa.18.0.extract.trunc.i
  %d.sroa.12.0.extract.trunc.frozen.i = freeze i64 %d.sroa.12.0.extract.trunc.i
  %12 = urem i64 %n.sroa.18.0.extract.trunc.frozen.i, %d.sroa.12.0.extract.trunc.frozen.i
  br label %compiler_rt.udivmod.exit

EndIf19.i:                                        ; preds = %EndIf13.i
  %13 = tail call i64 @llvm.ctpop.i64(i64 %d.sroa.12.0.extract.trunc.i) #11, !range !98
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %Then20.i, label %EndIf25.i

Then20.i:                                         ; preds = %EndIf19.i
  %15 = add i64 %d.sroa.12.0.extract.trunc.i, -1
  %16 = and i64 %15, %n.sroa.18.0.extract.trunc.i
  br label %compiler_rt.udivmod.exit

EndIf25.i:                                        ; preds = %EndIf19.i
  %17 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %18 = trunc i64 %17 to i32
  %19 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %20 = trunc i64 %19 to i32
  %21 = sub nsw i32 %18, %20
  %22 = icmp ugt i32 %21, 62
  br i1 %22, label %compiler_rt.udivmod.exit, label %EndIf58.i

Else31.i:                                         ; preds = %EndIf6.i
  br i1 %10, label %Then32.i, label %Else47.i

Then32.i:                                         ; preds = %Else31.i
  %23 = tail call i64 @llvm.ctpop.i64(i64 %d.sroa.0.0.extract.trunc.i) #11, !range !98
  %24 = icmp ult i64 %23, 2
  br i1 %24, label %Then33.i, label %EndIf41.i

Then33.i:                                         ; preds = %Then32.i
  %25 = icmp eq i64 %d.sroa.0.0.extract.trunc.i, 1
  br i1 %25, label %compiler_rt.udivmod.exit, label %EndIf39.i

EndIf39.i:                                        ; preds = %Then33.i
  %26 = add i64 %d.sroa.0.0.extract.trunc.i, -1
  %27 = and i64 %26, %n.sroa.0.0.extract.trunc.i
  br label %compiler_rt.udivmod.exit

EndIf41.i:                                        ; preds = %Then32.i
  %28 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.0.0.extract.trunc.i, i1 true) #11, !range !98
  %29 = trunc i64 %28 to i32
  %30 = add nuw nsw i32 %29, 65
  %31 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %32 = trunc i64 %31 to i32
  %33 = sub nuw nsw i32 %30, %32
  %34 = icmp eq i32 %33, 64
  br i1 %34, label %WhileBody.i.preheader, label %Else42.i

Else42.i:                                         ; preds = %EndIf41.i
  %35 = icmp ult i32 %33, 64
  %36 = sub nsw i32 0, %33
  %37 = and i32 %36, 63
  %38 = zext i32 %37 to i64
  %39 = shl i64 %n.sroa.0.0.extract.trunc.i, %38
  br i1 %35, label %Then44.i, label %Else45.i

Then44.i:                                         ; preds = %Else42.i
  %40 = zext i32 %33 to i64
  %41 = lshr i64 %n.sroa.18.0.extract.trunc.i, %40
  %42 = shl i64 %n.sroa.18.0.extract.trunc.i, %38
  %43 = lshr i64 %n.sroa.0.0.extract.trunc.i, %40
  %44 = or i64 %42, %43
  br label %WhileBody.i.preheader

Else45.i:                                         ; preds = %Else42.i
  %45 = shl i64 %n.sroa.18.0.extract.trunc.i, %38
  %46 = and i32 %33, 63
  %47 = zext i32 %46 to i64
  %48 = lshr i64 %n.sroa.0.0.extract.trunc.i, %47
  %49 = or i64 %45, %48
  %50 = lshr i64 %n.sroa.18.0.extract.trunc.i, %47
  br label %WhileBody.i.preheader

Else47.i:                                         ; preds = %Else31.i
  %51 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %52 = trunc i64 %51 to i32
  %53 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %54 = trunc i64 %53 to i32
  %55 = sub nsw i32 %52, %54
  %56 = icmp ugt i32 %55, 63
  br i1 %56, label %compiler_rt.udivmod.exit, label %EndIf53.i

EndIf53.i:                                        ; preds = %Else47.i
  %57 = add nuw nsw i32 %55, 1
  %58 = icmp eq i32 %57, 64
  br i1 %58, label %WhileBody.i.preheader, label %Else55.i

Else55.i:                                         ; preds = %EndIf53.i
  %59 = zext i32 %57 to i64
  %60 = lshr i64 %n.sroa.18.0.extract.trunc.i, %59
  %61 = sub nuw nsw i32 63, %55
  %62 = zext i32 %61 to i64
  %63 = shl i64 %n.sroa.18.0.extract.trunc.i, %62
  %64 = lshr i64 %n.sroa.0.0.extract.trunc.i, %59
  %65 = or i64 %63, %64
  %66 = shl i64 %n.sroa.0.0.extract.trunc.i, %62
  br label %WhileBody.i.preheader

EndIf58.i:                                        ; preds = %EndIf25.i
  %67 = add nuw nsw i32 %21, 1
  %68 = sub nuw nsw i32 63, %21
  %69 = zext i32 %68 to i64
  %70 = shl i64 %n.sroa.0.0.extract.trunc.i, %69
  %71 = zext i32 %67 to i64
  %72 = lshr i64 %n.sroa.18.0.extract.trunc.i, %71
  %73 = shl i64 %n.sroa.18.0.extract.trunc.i, %69
  %74 = lshr i64 %n.sroa.0.0.extract.trunc.i, %71
  %75 = or i64 %73, %74
  br label %WhileBody.i.preheader

WhileBody.i.preheader:                            ; preds = %EndIf58.i, %Else55.i, %EndIf53.i, %Else45.i, %Then44.i, %EndIf41.i
  %q.sroa.11.1311.i.ph = phi i64 [ %70, %EndIf58.i ], [ %39, %Then44.i ], [ %49, %Else45.i ], [ %66, %Else55.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf41.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf53.i ]
  %q.sroa.0.1310.i.ph = phi i64 [ 0, %EndIf58.i ], [ 0, %Then44.i ], [ %39, %Else45.i ], [ 0, %Else55.i ], [ 0, %EndIf41.i ], [ 0, %EndIf53.i ]
  %r.sroa.15.1309.i.ph = phi i64 [ %72, %EndIf58.i ], [ %41, %Then44.i ], [ 0, %Else45.i ], [ %60, %Else55.i ], [ 0, %EndIf41.i ], [ 0, %EndIf53.i ]
  %r.sroa.0.1308.i.ph = phi i64 [ %75, %EndIf58.i ], [ %44, %Then44.i ], [ %50, %Else45.i ], [ %65, %Else55.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf41.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf53.i ]
  %sr.1307.i.ph = phi i32 [ %67, %EndIf58.i ], [ %33, %Then44.i ], [ %33, %Else45.i ], [ %57, %Else55.i ], [ 64, %EndIf41.i ], [ 64, %EndIf53.i ]
  br label %WhileBody.i

WhileBody.i:                                      ; preds = %WhileBody.i.preheader, %WhileBody.i
  %q.sroa.11.1311.i = phi i64 [ %78, %WhileBody.i ], [ %q.sroa.11.1311.i.ph, %WhileBody.i.preheader ]
  %q.sroa.0.1310.i = phi i64 [ %80, %WhileBody.i ], [ %q.sroa.0.1310.i.ph, %WhileBody.i.preheader ]
  %r.sroa.15.1309.i = phi i64 [ %r.sroa.15.0.extract.trunc.i, %WhileBody.i ], [ %r.sroa.15.1309.i.ph, %WhileBody.i.preheader ]
  %r.sroa.0.1308.i = phi i64 [ %r.sroa.0.0.extract.trunc.i, %WhileBody.i ], [ %r.sroa.0.1308.i.ph, %WhileBody.i.preheader ]
  %sr.1307.i = phi i32 [ %88, %WhileBody.i ], [ %sr.1307.i.ph, %WhileBody.i.preheader ]
  %carry.0306.i = phi i64 [ %85, %WhileBody.i ], [ 0, %WhileBody.i.preheader ]
  %76 = tail call i64 @llvm.fshl.i64(i64 %r.sroa.15.1309.i, i64 %r.sroa.0.1308.i, i64 1) #11
  %77 = tail call i64 @llvm.fshl.i64(i64 %r.sroa.0.1308.i, i64 %q.sroa.11.1311.i, i64 1) #11
  %78 = tail call i64 @llvm.fshl.i64(i64 %q.sroa.11.1311.i, i64 %q.sroa.0.1310.i, i64 1) #11
  %79 = shl i64 %q.sroa.0.1310.i, 1
  %80 = or i64 %carry.0306.i, %79
  %r.sroa.15.0.insert.ext.i = zext i64 %76 to i128
  %r.sroa.15.0.insert.shift.i = shl nuw i128 %r.sroa.15.0.insert.ext.i, 64
  %r.sroa.0.0.insert.ext.i = zext i64 %77 to i128
  %r.sroa.0.0.insert.insert.i = or i128 %r.sroa.15.0.insert.shift.i, %r.sroa.0.0.insert.ext.i
  %81 = xor i128 %r.sroa.0.0.insert.insert.i, -1
  %82 = add i128 %5, %81
  %83 = ashr i128 %82, 127
  %84 = trunc i128 %83 to i64
  %85 = and i64 %84, 1
  %86 = and i128 %83, %5
  %87 = sub nuw i128 %r.sroa.0.0.insert.insert.i, %86
  %r.sroa.0.0.extract.trunc.i = trunc i128 %87 to i64
  %r.sroa.15.0.extract.shift.i = lshr i128 %87, 64
  %r.sroa.15.0.extract.trunc.i = trunc i128 %r.sroa.15.0.extract.shift.i to i64
  %88 = add i32 %sr.1307.i, -1
  %.not.i = icmp eq i32 %88, 0
  br i1 %.not.i, label %compiler_rt.udivmod.exit.loopexit, label %WhileBody.i

compiler_rt.udivmod.exit.loopexit:                ; preds = %WhileBody.i
  %r.sroa.0.0.extract.trunc.i.le = trunc i128 %87 to i64
  %r.sroa.15.0.extract.trunc.i.le = trunc i128 %r.sroa.15.0.extract.shift.i to i64
  br label %compiler_rt.udivmod.exit

compiler_rt.udivmod.exit:                         ; preds = %compiler_rt.udivmod.exit.loopexit, %Then.i, %Else47.i, %EndIf25.i, %Then1.i, %Then7.i, %Then14.i, %Then20.i, %Then33.i, %EndIf39.i
  %r.i.sroa.11.0 = phi i64 [ 0, %Then1.i ], [ undef, %Then7.i ], [ %12, %Then14.i ], [ %16, %Then20.i ], [ 0, %Then33.i ], [ 0, %EndIf39.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf25.i ], [ %n.sroa.18.0.extract.trunc.i, %Else47.i ], [ 0, %Then.i ], [ %r.sroa.15.0.extract.trunc.i.le, %compiler_rt.udivmod.exit.loopexit ]
  %r.i.sroa.0.0 = phi i64 [ %8, %Then1.i ], [ undef, %Then7.i ], [ 0, %Then14.i ], [ %n.sroa.0.0.extract.trunc.i, %Then20.i ], [ 0, %Then33.i ], [ %27, %EndIf39.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf25.i ], [ %n.sroa.0.0.extract.trunc.i, %Else47.i ], [ %n.sroa.0.0.extract.trunc.i, %Then.i ], [ %r.sroa.0.0.extract.trunc.i.le, %compiler_rt.udivmod.exit.loopexit ]
  %r.i.sroa.11.0.insert.ext = zext i64 %r.i.sroa.11.0 to i128
  %r.i.sroa.11.0.insert.shift = shl nuw i128 %r.i.sroa.11.0.insert.ext, 64
  %r.i.sroa.0.0.insert.ext = zext i64 %r.i.sroa.0.0 to i128
  %r.i.sroa.0.0.insert.insert = or i128 %r.i.sroa.11.0.insert.shift, %r.i.sroa.0.0.insert.ext
  %89 = xor i128 %r.i.sroa.0.0.insert.insert, %2
  %90 = sub i128 %89, %2
  ret i128 %90
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__umodti3(i128 %0, i128 %1) local_unnamed_addr #2 {
Entry:
  %n.sroa.0.0.extract.trunc.i = trunc i128 %0 to i64
  %n.sroa.18.0.extract.shift.i = lshr i128 %0, 64
  %n.sroa.18.0.extract.trunc.i = trunc i128 %n.sroa.18.0.extract.shift.i to i64
  %d.sroa.0.0.extract.trunc.i = trunc i128 %1 to i64
  %d.sroa.12.0.extract.shift.i = lshr i128 %1, 64
  %d.sroa.12.0.extract.trunc.i = trunc i128 %d.sroa.12.0.extract.shift.i to i64
  %2 = icmp eq i64 %n.sroa.18.0.extract.trunc.i, 0
  br i1 %2, label %Then.i, label %EndIf6.i

Then.i:                                           ; preds = %Entry
  %3 = icmp eq i64 %d.sroa.12.0.extract.trunc.i, 0
  br i1 %3, label %Then1.i, label %compiler_rt.udivmod.exit

Then1.i:                                          ; preds = %Then.i
  %n.sroa.0.0.extract.trunc.frozen.i = freeze i64 %n.sroa.0.0.extract.trunc.i
  %d.sroa.0.0.extract.trunc.frozen.i = freeze i64 %d.sroa.0.0.extract.trunc.i
  %4 = urem i64 %n.sroa.0.0.extract.trunc.frozen.i, %d.sroa.0.0.extract.trunc.frozen.i
  br label %compiler_rt.udivmod.exit

EndIf6.i:                                         ; preds = %Entry
  %5 = icmp eq i64 %d.sroa.0.0.extract.trunc.i, 0
  %6 = icmp eq i64 %d.sroa.12.0.extract.trunc.i, 0
  br i1 %5, label %Then7.i, label %Else31.i

Then7.i:                                          ; preds = %EndIf6.i
  br i1 %6, label %compiler_rt.udivmod.exit, label %EndIf13.i

EndIf13.i:                                        ; preds = %Then7.i
  %7 = icmp eq i64 %n.sroa.0.0.extract.trunc.i, 0
  br i1 %7, label %Then14.i, label %EndIf19.i

Then14.i:                                         ; preds = %EndIf13.i
  %n.sroa.18.0.extract.trunc.frozen.i = freeze i64 %n.sroa.18.0.extract.trunc.i
  %d.sroa.12.0.extract.trunc.frozen.i = freeze i64 %d.sroa.12.0.extract.trunc.i
  %8 = urem i64 %n.sroa.18.0.extract.trunc.frozen.i, %d.sroa.12.0.extract.trunc.frozen.i
  br label %compiler_rt.udivmod.exit

EndIf19.i:                                        ; preds = %EndIf13.i
  %9 = tail call i64 @llvm.ctpop.i64(i64 %d.sroa.12.0.extract.trunc.i) #11, !range !98
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %Then20.i, label %EndIf25.i

Then20.i:                                         ; preds = %EndIf19.i
  %11 = add i64 %d.sroa.12.0.extract.trunc.i, -1
  %12 = and i64 %11, %n.sroa.18.0.extract.trunc.i
  br label %compiler_rt.udivmod.exit

EndIf25.i:                                        ; preds = %EndIf19.i
  %13 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %14 = trunc i64 %13 to i32
  %15 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %16 = trunc i64 %15 to i32
  %17 = sub nsw i32 %14, %16
  %18 = icmp ugt i32 %17, 62
  br i1 %18, label %compiler_rt.udivmod.exit, label %EndIf58.i

Else31.i:                                         ; preds = %EndIf6.i
  br i1 %6, label %Then32.i, label %Else47.i

Then32.i:                                         ; preds = %Else31.i
  %19 = tail call i64 @llvm.ctpop.i64(i64 %d.sroa.0.0.extract.trunc.i) #11, !range !98
  %20 = icmp ult i64 %19, 2
  br i1 %20, label %Then33.i, label %EndIf41.i

Then33.i:                                         ; preds = %Then32.i
  %21 = icmp eq i64 %d.sroa.0.0.extract.trunc.i, 1
  br i1 %21, label %compiler_rt.udivmod.exit, label %EndIf39.i

EndIf39.i:                                        ; preds = %Then33.i
  %22 = add i64 %d.sroa.0.0.extract.trunc.i, -1
  %23 = and i64 %22, %n.sroa.0.0.extract.trunc.i
  br label %compiler_rt.udivmod.exit

EndIf41.i:                                        ; preds = %Then32.i
  %24 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.0.0.extract.trunc.i, i1 true) #11, !range !98
  %25 = trunc i64 %24 to i32
  %26 = add nuw nsw i32 %25, 65
  %27 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %28 = trunc i64 %27 to i32
  %29 = sub nuw nsw i32 %26, %28
  %30 = icmp eq i32 %29, 64
  br i1 %30, label %WhileBody.i.preheader, label %Else42.i

Else42.i:                                         ; preds = %EndIf41.i
  %31 = icmp ult i32 %29, 64
  %32 = sub nsw i32 0, %29
  %33 = and i32 %32, 63
  %34 = zext i32 %33 to i64
  %35 = shl i64 %n.sroa.0.0.extract.trunc.i, %34
  br i1 %31, label %Then44.i, label %Else45.i

Then44.i:                                         ; preds = %Else42.i
  %36 = zext i32 %29 to i64
  %37 = lshr i64 %n.sroa.18.0.extract.trunc.i, %36
  %38 = shl i64 %n.sroa.18.0.extract.trunc.i, %34
  %39 = lshr i64 %n.sroa.0.0.extract.trunc.i, %36
  %40 = or i64 %38, %39
  br label %WhileBody.i.preheader

Else45.i:                                         ; preds = %Else42.i
  %41 = shl i64 %n.sroa.18.0.extract.trunc.i, %34
  %42 = and i32 %29, 63
  %43 = zext i32 %42 to i64
  %44 = lshr i64 %n.sroa.0.0.extract.trunc.i, %43
  %45 = or i64 %41, %44
  %46 = lshr i64 %n.sroa.18.0.extract.trunc.i, %43
  br label %WhileBody.i.preheader

Else47.i:                                         ; preds = %Else31.i
  %47 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %48 = trunc i64 %47 to i32
  %49 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %50 = trunc i64 %49 to i32
  %51 = sub nsw i32 %48, %50
  %52 = icmp ugt i32 %51, 63
  br i1 %52, label %compiler_rt.udivmod.exit, label %EndIf53.i

EndIf53.i:                                        ; preds = %Else47.i
  %53 = add nuw nsw i32 %51, 1
  %54 = icmp eq i32 %53, 64
  br i1 %54, label %WhileBody.i.preheader, label %Else55.i

Else55.i:                                         ; preds = %EndIf53.i
  %55 = zext i32 %53 to i64
  %56 = lshr i64 %n.sroa.18.0.extract.trunc.i, %55
  %57 = sub nuw nsw i32 63, %51
  %58 = zext i32 %57 to i64
  %59 = shl i64 %n.sroa.18.0.extract.trunc.i, %58
  %60 = lshr i64 %n.sroa.0.0.extract.trunc.i, %55
  %61 = or i64 %59, %60
  %62 = shl i64 %n.sroa.0.0.extract.trunc.i, %58
  br label %WhileBody.i.preheader

EndIf58.i:                                        ; preds = %EndIf25.i
  %63 = add nuw nsw i32 %17, 1
  %64 = sub nuw nsw i32 63, %17
  %65 = zext i32 %64 to i64
  %66 = shl i64 %n.sroa.0.0.extract.trunc.i, %65
  %67 = zext i32 %63 to i64
  %68 = lshr i64 %n.sroa.18.0.extract.trunc.i, %67
  %69 = shl i64 %n.sroa.18.0.extract.trunc.i, %65
  %70 = lshr i64 %n.sroa.0.0.extract.trunc.i, %67
  %71 = or i64 %69, %70
  br label %WhileBody.i.preheader

WhileBody.i.preheader:                            ; preds = %EndIf58.i, %Else55.i, %EndIf53.i, %Else45.i, %Then44.i, %EndIf41.i
  %q.sroa.11.1311.i.ph = phi i64 [ %66, %EndIf58.i ], [ %35, %Then44.i ], [ %45, %Else45.i ], [ %62, %Else55.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf41.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf53.i ]
  %q.sroa.0.1310.i.ph = phi i64 [ 0, %EndIf58.i ], [ 0, %Then44.i ], [ %35, %Else45.i ], [ 0, %Else55.i ], [ 0, %EndIf41.i ], [ 0, %EndIf53.i ]
  %r.sroa.15.1309.i.ph = phi i64 [ %68, %EndIf58.i ], [ %37, %Then44.i ], [ 0, %Else45.i ], [ %56, %Else55.i ], [ 0, %EndIf41.i ], [ 0, %EndIf53.i ]
  %r.sroa.0.1308.i.ph = phi i64 [ %71, %EndIf58.i ], [ %40, %Then44.i ], [ %46, %Else45.i ], [ %61, %Else55.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf41.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf53.i ]
  %sr.1307.i.ph = phi i32 [ %63, %EndIf58.i ], [ %29, %Then44.i ], [ %29, %Else45.i ], [ %53, %Else55.i ], [ 64, %EndIf41.i ], [ 64, %EndIf53.i ]
  br label %WhileBody.i

WhileBody.i:                                      ; preds = %WhileBody.i.preheader, %WhileBody.i
  %q.sroa.11.1311.i = phi i64 [ %74, %WhileBody.i ], [ %q.sroa.11.1311.i.ph, %WhileBody.i.preheader ]
  %q.sroa.0.1310.i = phi i64 [ %76, %WhileBody.i ], [ %q.sroa.0.1310.i.ph, %WhileBody.i.preheader ]
  %r.sroa.15.1309.i = phi i64 [ %r.sroa.15.0.extract.trunc.i, %WhileBody.i ], [ %r.sroa.15.1309.i.ph, %WhileBody.i.preheader ]
  %r.sroa.0.1308.i = phi i64 [ %r.sroa.0.0.extract.trunc.i, %WhileBody.i ], [ %r.sroa.0.1308.i.ph, %WhileBody.i.preheader ]
  %sr.1307.i = phi i32 [ %84, %WhileBody.i ], [ %sr.1307.i.ph, %WhileBody.i.preheader ]
  %carry.0306.i = phi i64 [ %81, %WhileBody.i ], [ 0, %WhileBody.i.preheader ]
  %72 = tail call i64 @llvm.fshl.i64(i64 %r.sroa.15.1309.i, i64 %r.sroa.0.1308.i, i64 1) #11
  %73 = tail call i64 @llvm.fshl.i64(i64 %r.sroa.0.1308.i, i64 %q.sroa.11.1311.i, i64 1) #11
  %74 = tail call i64 @llvm.fshl.i64(i64 %q.sroa.11.1311.i, i64 %q.sroa.0.1310.i, i64 1) #11
  %75 = shl i64 %q.sroa.0.1310.i, 1
  %76 = or i64 %carry.0306.i, %75
  %r.sroa.15.0.insert.ext.i = zext i64 %72 to i128
  %r.sroa.15.0.insert.shift.i = shl nuw i128 %r.sroa.15.0.insert.ext.i, 64
  %r.sroa.0.0.insert.ext.i = zext i64 %73 to i128
  %r.sroa.0.0.insert.insert.i = or i128 %r.sroa.15.0.insert.shift.i, %r.sroa.0.0.insert.ext.i
  %77 = xor i128 %r.sroa.0.0.insert.insert.i, -1
  %78 = add i128 %77, %1
  %79 = ashr i128 %78, 127
  %80 = trunc i128 %79 to i64
  %81 = and i64 %80, 1
  %82 = and i128 %79, %1
  %83 = sub nuw i128 %r.sroa.0.0.insert.insert.i, %82
  %r.sroa.0.0.extract.trunc.i = trunc i128 %83 to i64
  %r.sroa.15.0.extract.shift.i = lshr i128 %83, 64
  %r.sroa.15.0.extract.trunc.i = trunc i128 %r.sroa.15.0.extract.shift.i to i64
  %84 = add i32 %sr.1307.i, -1
  %.not.i = icmp eq i32 %84, 0
  br i1 %.not.i, label %compiler_rt.udivmod.exit.loopexit, label %WhileBody.i

compiler_rt.udivmod.exit.loopexit:                ; preds = %WhileBody.i
  %r.sroa.0.0.extract.trunc.i.le = trunc i128 %83 to i64
  %r.sroa.15.0.extract.trunc.i.le = trunc i128 %r.sroa.15.0.extract.shift.i to i64
  br label %compiler_rt.udivmod.exit

compiler_rt.udivmod.exit:                         ; preds = %compiler_rt.udivmod.exit.loopexit, %Then.i, %Else47.i, %EndIf25.i, %Then1.i, %Then7.i, %Then14.i, %Then20.i, %Then33.i, %EndIf39.i
  %r.sroa.9.0 = phi i64 [ 0, %Then1.i ], [ undef, %Then7.i ], [ %8, %Then14.i ], [ %12, %Then20.i ], [ 0, %Then33.i ], [ 0, %EndIf39.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf25.i ], [ %n.sroa.18.0.extract.trunc.i, %Else47.i ], [ 0, %Then.i ], [ %r.sroa.15.0.extract.trunc.i.le, %compiler_rt.udivmod.exit.loopexit ]
  %r.sroa.0.0 = phi i64 [ %4, %Then1.i ], [ undef, %Then7.i ], [ 0, %Then14.i ], [ %n.sroa.0.0.extract.trunc.i, %Then20.i ], [ 0, %Then33.i ], [ %23, %EndIf39.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf25.i ], [ %n.sroa.0.0.extract.trunc.i, %Else47.i ], [ %n.sroa.0.0.extract.trunc.i, %Then.i ], [ %r.sroa.0.0.extract.trunc.i.le, %compiler_rt.udivmod.exit.loopexit ]
  %r.sroa.9.0.insert.ext = zext i64 %r.sroa.9.0 to i128
  %r.sroa.9.0.insert.shift = shl nuw i128 %r.sroa.9.0.insert.ext, 64
  %r.sroa.0.0.insert.ext = zext i64 %r.sroa.0.0 to i128
  %r.sroa.0.0.insert.insert = or i128 %r.sroa.9.0.insert.shift, %r.sroa.0.0.insert.ext
  ret i128 %r.sroa.0.0.insert.insert
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__udivti3(i128 %0, i128 %1) local_unnamed_addr #2 {
Entry:
  %n.sroa.0.0.extract.trunc.i = trunc i128 %0 to i64
  %n.sroa.18.0.extract.shift.i = lshr i128 %0, 64
  %n.sroa.18.0.extract.trunc.i = trunc i128 %n.sroa.18.0.extract.shift.i to i64
  %d.sroa.0.0.extract.trunc.i = trunc i128 %1 to i64
  %d.sroa.12.0.extract.shift.i = lshr i128 %1, 64
  %d.sroa.12.0.extract.trunc.i = trunc i128 %d.sroa.12.0.extract.shift.i to i64
  %2 = icmp eq i64 %n.sroa.18.0.extract.trunc.i, 0
  br i1 %2, label %Then.i, label %EndIf6.i

Then.i:                                           ; preds = %Entry
  %3 = icmp eq i64 %d.sroa.12.0.extract.trunc.i, 0
  br i1 %3, label %Then1.i, label %compiler_rt.udivmod.exit

Then1.i:                                          ; preds = %Then.i
  %n.sroa.0.0.extract.trunc.frozen.i = freeze i64 %n.sroa.0.0.extract.trunc.i
  %d.sroa.0.0.extract.trunc.frozen.i = freeze i64 %d.sroa.0.0.extract.trunc.i
  %4 = udiv i64 %n.sroa.0.0.extract.trunc.frozen.i, %d.sroa.0.0.extract.trunc.frozen.i
  %5 = zext i64 %4 to i128
  br label %compiler_rt.udivmod.exit

EndIf6.i:                                         ; preds = %Entry
  %6 = icmp eq i64 %d.sroa.0.0.extract.trunc.i, 0
  %7 = icmp eq i64 %d.sroa.12.0.extract.trunc.i, 0
  br i1 %6, label %Then7.i, label %Else31.i

Then7.i:                                          ; preds = %EndIf6.i
  br i1 %7, label %compiler_rt.udivmod.exit, label %EndIf13.i

EndIf13.i:                                        ; preds = %Then7.i
  %8 = icmp eq i64 %n.sroa.0.0.extract.trunc.i, 0
  br i1 %8, label %Then14.i, label %EndIf19.i

Then14.i:                                         ; preds = %EndIf13.i
  %n.sroa.18.0.extract.trunc.frozen.i = freeze i64 %n.sroa.18.0.extract.trunc.i
  %d.sroa.12.0.extract.trunc.frozen.i = freeze i64 %d.sroa.12.0.extract.trunc.i
  %9 = udiv i64 %n.sroa.18.0.extract.trunc.frozen.i, %d.sroa.12.0.extract.trunc.frozen.i
  %10 = zext i64 %9 to i128
  br label %compiler_rt.udivmod.exit

EndIf19.i:                                        ; preds = %EndIf13.i
  %11 = tail call i64 @llvm.ctpop.i64(i64 %d.sroa.12.0.extract.trunc.i) #11, !range !98
  %12 = icmp ult i64 %11, 2
  br i1 %12, label %Then20.i, label %EndIf25.i

Then20.i:                                         ; preds = %EndIf19.i
  %13 = tail call i64 @llvm.cttz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %14 = lshr i64 %n.sroa.18.0.extract.trunc.i, %13
  %15 = zext i64 %14 to i128
  br label %compiler_rt.udivmod.exit

EndIf25.i:                                        ; preds = %EndIf19.i
  %16 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %17 = trunc i64 %16 to i32
  %18 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %19 = trunc i64 %18 to i32
  %20 = sub nsw i32 %17, %19
  %21 = icmp ugt i32 %20, 62
  br i1 %21, label %compiler_rt.udivmod.exit, label %EndIf58.i

Else31.i:                                         ; preds = %EndIf6.i
  br i1 %7, label %Then32.i, label %Else47.i

Then32.i:                                         ; preds = %Else31.i
  %22 = tail call i64 @llvm.ctpop.i64(i64 %d.sroa.0.0.extract.trunc.i) #11, !range !98
  %23 = icmp ult i64 %22, 2
  br i1 %23, label %Then33.i, label %EndIf41.i

Then33.i:                                         ; preds = %Then32.i
  %24 = icmp eq i64 %d.sroa.0.0.extract.trunc.i, 1
  br i1 %24, label %compiler_rt.udivmod.exit, label %EndIf39.i

EndIf39.i:                                        ; preds = %Then33.i
  %25 = tail call i64 @llvm.cttz.i64(i64 %d.sroa.0.0.extract.trunc.i, i1 true) #11, !range !98
  %26 = lshr i64 %n.sroa.18.0.extract.trunc.i, %25
  %27 = sub nsw i64 0, %25
  %28 = and i64 %27, 63
  %29 = shl i64 %n.sroa.18.0.extract.trunc.i, %28
  %30 = lshr i64 %n.sroa.0.0.extract.trunc.i, %25
  %31 = or i64 %29, %30
  %result.sroa.20.0.insert.ext271.i = zext i64 %26 to i128
  %result.sroa.20.0.insert.shift272.i = shl nuw i128 %result.sroa.20.0.insert.ext271.i, 64
  %result.sroa.0.0.insert.ext221.i = zext i64 %31 to i128
  %result.sroa.0.0.insert.insert223.i = or i128 %result.sroa.20.0.insert.shift272.i, %result.sroa.0.0.insert.ext221.i
  br label %compiler_rt.udivmod.exit

EndIf41.i:                                        ; preds = %Then32.i
  %32 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.0.0.extract.trunc.i, i1 true) #11, !range !98
  %33 = trunc i64 %32 to i32
  %34 = add nuw nsw i32 %33, 65
  %35 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %36 = trunc i64 %35 to i32
  %37 = sub nuw nsw i32 %34, %36
  %38 = icmp eq i32 %37, 64
  br i1 %38, label %WhileBody.i.preheader, label %Else42.i

Else42.i:                                         ; preds = %EndIf41.i
  %39 = icmp ult i32 %37, 64
  %40 = sub nsw i32 0, %37
  %41 = and i32 %40, 63
  %42 = zext i32 %41 to i64
  %43 = shl i64 %n.sroa.0.0.extract.trunc.i, %42
  br i1 %39, label %Then44.i, label %Else45.i

Then44.i:                                         ; preds = %Else42.i
  %44 = zext i32 %37 to i64
  %45 = lshr i64 %n.sroa.18.0.extract.trunc.i, %44
  %46 = shl i64 %n.sroa.18.0.extract.trunc.i, %42
  %47 = lshr i64 %n.sroa.0.0.extract.trunc.i, %44
  %48 = or i64 %46, %47
  br label %WhileBody.i.preheader

Else45.i:                                         ; preds = %Else42.i
  %49 = shl i64 %n.sroa.18.0.extract.trunc.i, %42
  %50 = and i32 %37, 63
  %51 = zext i32 %50 to i64
  %52 = lshr i64 %n.sroa.0.0.extract.trunc.i, %51
  %53 = or i64 %49, %52
  %54 = lshr i64 %n.sroa.18.0.extract.trunc.i, %51
  br label %WhileBody.i.preheader

Else47.i:                                         ; preds = %Else31.i
  %55 = tail call i64 @llvm.ctlz.i64(i64 %d.sroa.12.0.extract.trunc.i, i1 true) #11, !range !98
  %56 = trunc i64 %55 to i32
  %57 = tail call i64 @llvm.ctlz.i64(i64 %n.sroa.18.0.extract.trunc.i, i1 true) #11, !range !98
  %58 = trunc i64 %57 to i32
  %59 = sub nsw i32 %56, %58
  %60 = icmp ugt i32 %59, 63
  br i1 %60, label %compiler_rt.udivmod.exit, label %EndIf53.i

EndIf53.i:                                        ; preds = %Else47.i
  %61 = add nuw nsw i32 %59, 1
  %62 = icmp eq i32 %61, 64
  br i1 %62, label %WhileBody.i.preheader, label %Else55.i

Else55.i:                                         ; preds = %EndIf53.i
  %63 = zext i32 %61 to i64
  %64 = lshr i64 %n.sroa.18.0.extract.trunc.i, %63
  %65 = sub nuw nsw i32 63, %59
  %66 = zext i32 %65 to i64
  %67 = shl i64 %n.sroa.18.0.extract.trunc.i, %66
  %68 = lshr i64 %n.sroa.0.0.extract.trunc.i, %63
  %69 = or i64 %67, %68
  %70 = shl i64 %n.sroa.0.0.extract.trunc.i, %66
  br label %WhileBody.i.preheader

EndIf58.i:                                        ; preds = %EndIf25.i
  %71 = add nuw nsw i32 %20, 1
  %72 = sub nuw nsw i32 63, %20
  %73 = zext i32 %72 to i64
  %74 = shl i64 %n.sroa.0.0.extract.trunc.i, %73
  %75 = zext i32 %71 to i64
  %76 = lshr i64 %n.sroa.18.0.extract.trunc.i, %75
  %77 = shl i64 %n.sroa.18.0.extract.trunc.i, %73
  %78 = lshr i64 %n.sroa.0.0.extract.trunc.i, %75
  %79 = or i64 %77, %78
  br label %WhileBody.i.preheader

WhileBody.i.preheader:                            ; preds = %EndIf58.i, %Else55.i, %EndIf53.i, %Else45.i, %Then44.i, %EndIf41.i
  %q.sroa.11.1311.i.ph = phi i64 [ %74, %EndIf58.i ], [ %43, %Then44.i ], [ %53, %Else45.i ], [ %70, %Else55.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf41.i ], [ %n.sroa.0.0.extract.trunc.i, %EndIf53.i ]
  %q.sroa.0.1310.i.ph = phi i64 [ 0, %EndIf58.i ], [ 0, %Then44.i ], [ %43, %Else45.i ], [ 0, %Else55.i ], [ 0, %EndIf41.i ], [ 0, %EndIf53.i ]
  %r.sroa.15.1309.i.ph = phi i64 [ %76, %EndIf58.i ], [ %45, %Then44.i ], [ 0, %Else45.i ], [ %64, %Else55.i ], [ 0, %EndIf41.i ], [ 0, %EndIf53.i ]
  %r.sroa.0.1308.i.ph = phi i64 [ %79, %EndIf58.i ], [ %48, %Then44.i ], [ %54, %Else45.i ], [ %69, %Else55.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf41.i ], [ %n.sroa.18.0.extract.trunc.i, %EndIf53.i ]
  %sr.1307.i.ph = phi i32 [ %71, %EndIf58.i ], [ %37, %Then44.i ], [ %37, %Else45.i ], [ %61, %Else55.i ], [ 64, %EndIf41.i ], [ 64, %EndIf53.i ]
  br label %WhileBody.i

WhileBody.i:                                      ; preds = %WhileBody.i.preheader, %WhileBody.i
  %q.sroa.11.1311.i = phi i64 [ %82, %WhileBody.i ], [ %q.sroa.11.1311.i.ph, %WhileBody.i.preheader ]
  %q.sroa.0.1310.i = phi i64 [ %85, %WhileBody.i ], [ %q.sroa.0.1310.i.ph, %WhileBody.i.preheader ]
  %r.sroa.15.1309.i = phi i64 [ %r.sroa.15.0.extract.trunc.i, %WhileBody.i ], [ %r.sroa.15.1309.i.ph, %WhileBody.i.preheader ]
  %r.sroa.0.1308.i = phi i64 [ %r.sroa.0.0.extract.trunc.i, %WhileBody.i ], [ %r.sroa.0.1308.i.ph, %WhileBody.i.preheader ]
  %sr.1307.i = phi i32 [ %93, %WhileBody.i ], [ %sr.1307.i.ph, %WhileBody.i.preheader ]
  %carry.0306.i = phi i32 [ %90, %WhileBody.i ], [ 0, %WhileBody.i.preheader ]
  %80 = tail call i64 @llvm.fshl.i64(i64 %r.sroa.15.1309.i, i64 %r.sroa.0.1308.i, i64 1) #11
  %81 = tail call i64 @llvm.fshl.i64(i64 %r.sroa.0.1308.i, i64 %q.sroa.11.1311.i, i64 1) #11
  %82 = tail call i64 @llvm.fshl.i64(i64 %q.sroa.11.1311.i, i64 %q.sroa.0.1310.i, i64 1) #11
  %83 = shl i64 %q.sroa.0.1310.i, 1
  %84 = zext i32 %carry.0306.i to i64
  %85 = or i64 %83, %84
  %r.sroa.15.0.insert.ext.i = zext i64 %80 to i128
  %r.sroa.15.0.insert.shift.i = shl nuw i128 %r.sroa.15.0.insert.ext.i, 64
  %r.sroa.0.0.insert.ext.i = zext i64 %81 to i128
  %r.sroa.0.0.insert.insert.i = or i128 %r.sroa.15.0.insert.shift.i, %r.sroa.0.0.insert.ext.i
  %86 = xor i128 %r.sroa.0.0.insert.insert.i, -1
  %87 = add i128 %86, %1
  %88 = ashr i128 %87, 127
  %89 = trunc i128 %88 to i32
  %90 = and i32 %89, 1
  %91 = and i128 %88, %1
  %92 = sub nuw i128 %r.sroa.0.0.insert.insert.i, %91
  %r.sroa.0.0.extract.trunc.i = trunc i128 %92 to i64
  %r.sroa.15.0.extract.shift.i = lshr i128 %92, 64
  %r.sroa.15.0.extract.trunc.i = trunc i128 %r.sroa.15.0.extract.shift.i to i64
  %93 = add i32 %sr.1307.i, -1
  %.not.i = icmp eq i32 %93, 0
  br i1 %.not.i, label %WhileEnd.i, label %WhileBody.i

WhileEnd.i:                                       ; preds = %WhileBody.i
  %q.sroa.11.0.insert.ext.i = zext i64 %82 to i128
  %q.sroa.0.0.insert.ext.i = zext i64 %85 to i128
  %94 = shl i128 %q.sroa.11.0.insert.ext.i, 65
  %95 = shl nuw nsw i128 %q.sroa.0.0.insert.ext.i, 1
  %96 = zext i32 %90 to i128
  %.masked304.i = and i128 %95, 18446744073709551616
  %result.sroa.20.0.extract.shift280.i = or i128 %.masked304.i, %94
  %.masked.i = and i128 %95, 18446744073709551614
  %result.sroa.0.0.insert.ext230.i = or i128 %.masked.i, %96
  %result.sroa.0.0.insert.insert232.i = or i128 %result.sroa.0.0.insert.ext230.i, %result.sroa.20.0.extract.shift280.i
  br label %compiler_rt.udivmod.exit

compiler_rt.udivmod.exit:                         ; preds = %Else47.i, %EndIf25.i, %Then.i, %Then1.i, %Then7.i, %Then14.i, %Then20.i, %Then33.i, %EndIf39.i, %WhileEnd.i
  %common.ret.op.i = phi i128 [ %5, %Then1.i ], [ %10, %Then14.i ], [ %15, %Then20.i ], [ %result.sroa.0.0.insert.insert223.i, %EndIf39.i ], [ %result.sroa.0.0.insert.insert232.i, %WhileEnd.i ], [ %0, %Then33.i ], [ poison, %Then7.i ], [ 0, %Then.i ], [ 0, %EndIf25.i ], [ 0, %Else47.i ]
  ret i128 %common.ret.op.i
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__fixdfti(double %0) local_unnamed_addr #2 {
Entry:
  %1 = bitcast double %0 to i64
  %.not.i = icmp sgt i64 %1, -1
  %2 = lshr i64 %1, 52
  %3 = trunc i64 %2 to i32
  %4 = and i32 %3, 2047
  %5 = and i64 %1, 4503599627370495
  %6 = or i64 %5, 4503599627370496
  %7 = icmp ult i32 %4, 1023
  br i1 %7, label %compiler_rt.floatToInt.exit, label %EndIf.i

EndIf.i:                                          ; preds = %Entry
  %8 = add nsw i32 %4, -1023
  %9 = icmp ugt i32 %8, 126
  br i1 %9, label %Then1.i, label %EndIf6.i

Then1.i:                                          ; preds = %EndIf.i
  %..i = select i1 %.not.i, i128 170141183460469231731687303715884105727, i128 -170141183460469231731687303715884105728
  br label %compiler_rt.floatToInt.exit

EndIf6.i:                                         ; preds = %EndIf.i
  %10 = icmp ult i32 %4, 1075
  br i1 %10, label %Then7.i, label %Else8.i

Then7.i:                                          ; preds = %EndIf6.i
  %11 = sub nsw i64 51, %2
  %12 = and i64 %11, 63
  %13 = lshr i64 %6, %12
  %14 = zext i64 %13 to i128
  br label %EndIf9.i

Else8.i:                                          ; preds = %EndIf6.i
  %15 = zext i64 %6 to i128
  %16 = add nuw nsw i32 %3, 77
  %.mask.i = and i32 %16, 127
  %17 = zext i32 %.mask.i to i128
  %18 = shl i128 %15, %17
  br label %EndIf9.i

EndIf9.i:                                         ; preds = %Else8.i, %Then7.i
  %result13.0.i = phi i128 [ %14, %Then7.i ], [ %18, %Else8.i ]
  %19 = sub i128 0, %result13.0.i
  %spec.select.i = select i1 %.not.i, i128 %result13.0.i, i128 %19
  br label %compiler_rt.floatToInt.exit

compiler_rt.floatToInt.exit:                      ; preds = %EndIf9.i, %Then1.i, %Entry
  %common.ret.op.i = phi i128 [ %..i, %Then1.i ], [ 0, %Entry ], [ %spec.select.i, %EndIf9.i ]
  ret i128 %common.ret.op.i
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__fixsfti(float %0) local_unnamed_addr #2 {
Entry:
  %1 = bitcast float %0 to i32
  %.not.i = icmp sgt i32 %1, -1
  %2 = lshr i32 %1, 23
  %3 = and i32 %2, 255
  %4 = and i32 %1, 8388607
  %5 = or i32 %4, 8388608
  %6 = icmp ult i32 %3, 127
  br i1 %6, label %compiler_rt.floatToInt.121.exit, label %EndIf.i

EndIf.i:                                          ; preds = %Entry
  %7 = add nsw i32 %3, -127
  %8 = icmp ugt i32 %7, 126
  br i1 %8, label %Then1.i, label %EndIf6.i

Then1.i:                                          ; preds = %EndIf.i
  %..i = select i1 %.not.i, i128 170141183460469231731687303715884105727, i128 -170141183460469231731687303715884105728
  br label %compiler_rt.floatToInt.121.exit

EndIf6.i:                                         ; preds = %EndIf.i
  %9 = icmp ult i32 %3, 150
  br i1 %9, label %Then7.i, label %Else8.i

Then7.i:                                          ; preds = %EndIf6.i
  %10 = sub nsw i32 22, %2
  %11 = and i32 %10, 31
  %12 = lshr i32 %5, %11
  %13 = zext i32 %12 to i128
  br label %EndIf9.i

Else8.i:                                          ; preds = %EndIf6.i
  %14 = zext i32 %5 to i128
  %15 = add nuw nsw i32 %2, 106
  %.mask.i = and i32 %15, 127
  %16 = zext i32 %.mask.i to i128
  %17 = shl i128 %14, %16
  br label %EndIf9.i

EndIf9.i:                                         ; preds = %Else8.i, %Then7.i
  %result13.0.i = phi i128 [ %13, %Then7.i ], [ %17, %Else8.i ]
  %18 = sub i128 0, %result13.0.i
  %spec.select.i = select i1 %.not.i, i128 %result13.0.i, i128 %18
  br label %compiler_rt.floatToInt.121.exit

compiler_rt.floatToInt.121.exit:                  ; preds = %EndIf9.i, %Then1.i, %Entry
  %common.ret.op.i = phi i128 [ %..i, %Then1.i ], [ 0, %Entry ], [ %spec.select.i, %EndIf9.i ]
  ret i128 %common.ret.op.i
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__fixunsdfti(double %0) local_unnamed_addr #2 {
Entry:
  %1 = bitcast double %0 to i64
  %2 = lshr i64 %1, 52
  %3 = trunc i64 %2 to i32
  %4 = and i32 %3, 2047
  %5 = and i64 %1, 4503599627370495
  %6 = or i64 %5, 4503599627370496
  %7 = icmp ugt i32 %4, 1022
  %.not.i = icmp sgt i64 %1, -1
  %or.cond.i = select i1 %7, i1 %.not.i, i1 false
  br i1 %or.cond.i, label %EndIf3.i, label %compiler_rt.floatToInt.122.exit

EndIf3.i:                                         ; preds = %Entry
  %8 = add nsw i32 %4, -1023
  %9 = icmp ugt i32 %8, 127
  br i1 %9, label %compiler_rt.floatToInt.122.exit, label %EndIf6.i

EndIf6.i:                                         ; preds = %EndIf3.i
  %10 = icmp ult i32 %4, 1075
  br i1 %10, label %Then7.i, label %Else8.i

Then7.i:                                          ; preds = %EndIf6.i
  %11 = sub nsw i64 51, %2
  %12 = and i64 %11, 63
  %13 = lshr i64 %6, %12
  %14 = zext i64 %13 to i128
  br label %compiler_rt.floatToInt.122.exit

Else8.i:                                          ; preds = %EndIf6.i
  %15 = zext i64 %6 to i128
  %16 = add nuw nsw i32 %3, 77
  %.mask.i = and i32 %16, 127
  %17 = zext i32 %.mask.i to i128
  %18 = shl i128 %15, %17
  br label %compiler_rt.floatToInt.122.exit

compiler_rt.floatToInt.122.exit:                  ; preds = %Else8.i, %Then7.i, %EndIf3.i, %Entry
  %common.ret.op.i = phi i128 [ 0, %Entry ], [ -1, %EndIf3.i ], [ %14, %Then7.i ], [ %18, %Else8.i ]
  ret i128 %common.ret.op.i
}

; Function Attrs: nobuiltin nounwind
define weak_odr i128 @__fixunssfti(float %0) local_unnamed_addr #2 {
Entry:
  %1 = bitcast float %0 to i32
  %2 = lshr i32 %1, 23
  %3 = and i32 %2, 255
  %4 = and i32 %1, 8388607
  %5 = or i32 %4, 8388608
  %6 = icmp ugt i32 %3, 126
  %.not.i = icmp sgt i32 %1, -1
  %or.cond.i = select i1 %6, i1 %.not.i, i1 false
  br i1 %or.cond.i, label %EndIf3.i, label %compiler_rt.floatToInt.123.exit

EndIf3.i:                                         ; preds = %Entry
  %7 = add nsw i32 %3, -127
  %8 = icmp ugt i32 %7, 127
  br i1 %8, label %compiler_rt.floatToInt.123.exit, label %EndIf6.i

EndIf6.i:                                         ; preds = %EndIf3.i
  %9 = icmp ult i32 %3, 150
  br i1 %9, label %Then7.i, label %Else8.i

Then7.i:                                          ; preds = %EndIf6.i
  %10 = sub nsw i32 22, %2
  %11 = and i32 %10, 31
  %12 = lshr i32 %5, %11
  %13 = zext i32 %12 to i128
  br label %compiler_rt.floatToInt.123.exit

Else8.i:                                          ; preds = %EndIf6.i
  %14 = zext i32 %5 to i128
  %15 = add nuw nsw i32 %2, 106
  %.mask.i = and i32 %15, 127
  %16 = zext i32 %.mask.i to i128
  %17 = shl i128 %14, %16
  br label %compiler_rt.floatToInt.123.exit

compiler_rt.floatToInt.123.exit:                  ; preds = %Else8.i, %Then7.i, %EndIf3.i, %Entry
  %common.ret.op.i = phi i128 [ 0, %Entry ], [ -1, %EndIf3.i ], [ %13, %Then7.i ], [ %17, %Else8.i ]
  ret i128 %common.ret.op.i
}

; Function Attrs: nobuiltin nofree nosync nounwind
define nonnull i8* @memcpy(i8* noalias nonnull returned %0, i8* noalias nonnull readonly %1, i64 %2) local_unnamed_addr #7 {
Entry:
  tail call void @llvm.experimental.noalias.scope.decl(metadata !99)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !102)
  %3 = ptrtoint i8* %1 to i64
  %4 = and i64 %3, 3
  %5 = icmp ne i64 %4, 0
  %6 = icmp ne i64 %2, 0
  %7 = select i1 %5, i1 %6, i1 false
  br i1 %7, label %WhileBody.i, label %WhileEnd.i

WhileBody.i:                                      ; preds = %Entry, %WhileBody.i
  %d.0332.i = phi i8* [ %9, %WhileBody.i ], [ %0, %Entry ]
  %s.0331.i = phi i8* [ %10, %WhileBody.i ], [ %1, %Entry ]
  %n.0330.i = phi i64 [ %11, %WhileBody.i ], [ %2, %Entry ]
  %8 = load i8, i8* %s.0331.i, align 1, !alias.scope !102, !noalias !99
  store i8 %8, i8* %d.0332.i, align 1, !alias.scope !99, !noalias !102
  %9 = getelementptr inbounds i8, i8* %d.0332.i, i64 1
  %10 = getelementptr inbounds i8, i8* %s.0331.i, i64 1
  %11 = add i64 %n.0330.i, -1
  %12 = ptrtoint i8* %10 to i64
  %13 = and i64 %12, 3
  %14 = icmp ne i64 %13, 0
  %15 = icmp ne i64 %11, 0
  %16 = select i1 %14, i1 %15, i1 false
  br i1 %16, label %WhileBody.i, label %WhileEnd.i

WhileEnd.i:                                       ; preds = %WhileBody.i, %Entry
  %n.0.lcssa.i = phi i64 [ %2, %Entry ], [ %11, %WhileBody.i ]
  %s.0.lcssa.i = phi i8* [ %1, %Entry ], [ %10, %WhileBody.i ]
  %d.0.lcssa.i = phi i8* [ %0, %Entry ], [ %9, %WhileBody.i ]
  %17 = ptrtoint i8* %d.0.lcssa.i to i64
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %WhileCond1.preheader.i, label %EndIf15.i

WhileCond1.preheader.i:                           ; preds = %WhileEnd.i
  %20 = icmp ugt i64 %n.0.lcssa.i, 15
  br i1 %20, label %WhileBody2.i.preheader, label %WhileEnd3.i

WhileBody2.i.preheader:                           ; preds = %WhileCond1.preheader.i
  %21 = add i64 %n.0.lcssa.i, -16
  %22 = lshr i64 %21, 4
  %23 = add nuw nsw i64 %22, 1
  %min.iters.check = icmp ult i64 %21, 112
  br i1 %min.iters.check, label %WhileBody2.i.preheader70, label %vector.ph

vector.ph:                                        ; preds = %WhileBody2.i.preheader
  %n.vec = and i64 %23, 2305843009213693944
  %24 = mul i64 %n.vec, -16
  %25 = shl nuw i64 %n.vec, 4
  %ind.end66 = getelementptr i8, i8* %d.0.lcssa.i, i64 %25
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %26 = shl i64 %index, 4
  %next.gep70 = getelementptr i8, i8* %s.0.lcssa.i, i64 %26
  %27 = or i64 %26, 64
  %next.gep71 = getelementptr i8, i8* %s.0.lcssa.i, i64 %27
  %28 = bitcast i8* %next.gep70 to <16 x i32>*
  %29 = bitcast i8* %next.gep71 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %28, align 4, !alias.scope !102, !noalias !99
  %wide.vec72 = load <16 x i32>, <16 x i32>* %29, align 4, !alias.scope !102, !noalias !99
  %30 = getelementptr i8, i8* %d.0.lcssa.i, i64 %26
  %31 = bitcast i8* %30 to <16 x i32>*
  %32 = getelementptr i8, i8* %d.0.lcssa.i, i64 %27
  %33 = bitcast i8* %32 to <16 x i32>*
  store <16 x i32> %wide.vec, <16 x i32>* %31, align 4, !alias.scope !99, !noalias !102
  store <16 x i32> %wide.vec72, <16 x i32>* %33, align 4, !alias.scope !99, !noalias !102
  %index.next = add nuw i64 %index, 8
  %34 = icmp eq i64 %index.next, %n.vec
  br i1 %34, label %middle.block, label %vector.body, !llvm.loop !104

middle.block:                                     ; preds = %vector.body
  %ind.end = add i64 %24, %n.0.lcssa.i
  %ind.end68 = getelementptr i8, i8* %s.0.lcssa.i, i64 %25
  %cmp.n = icmp eq i64 %23, %n.vec
  br i1 %cmp.n, label %WhileEnd3.i, label %WhileBody2.i.preheader70

WhileBody2.i.preheader70:                         ; preds = %middle.block, %WhileBody2.i.preheader
  %n.1358.i.ph = phi i64 [ %ind.end, %middle.block ], [ %n.0.lcssa.i, %WhileBody2.i.preheader ]
  %d4.0357.i.ph = phi i8* [ %ind.end66, %middle.block ], [ %d.0.lcssa.i, %WhileBody2.i.preheader ]
  %s4.0356.i.ph = phi i8* [ %ind.end68, %middle.block ], [ %s.0.lcssa.i, %WhileBody2.i.preheader ]
  br label %WhileBody2.i

WhileBody2.i:                                     ; preds = %WhileBody2.i.preheader70, %WhileBody2.i
  %n.1358.i = phi i64 [ %40, %WhileBody2.i ], [ %n.1358.i.ph, %WhileBody2.i.preheader70 ]
  %d4.0357.i = phi i8* [ %38, %WhileBody2.i ], [ %d4.0357.i.ph, %WhileBody2.i.preheader70 ]
  %s4.0356.i = phi i8* [ %39, %WhileBody2.i ], [ %s4.0356.i.ph, %WhileBody2.i.preheader70 ]
  %35 = bitcast i8* %s4.0356.i to <4 x i32>*
  %36 = load <4 x i32>, <4 x i32>* %35, align 4, !alias.scope !102, !noalias !99
  %37 = bitcast i8* %d4.0357.i to <4 x i32>*
  store <4 x i32> %36, <4 x i32>* %37, align 4, !alias.scope !99, !noalias !102
  %38 = getelementptr inbounds i8, i8* %d4.0357.i, i64 16
  %39 = getelementptr inbounds i8, i8* %s4.0356.i, i64 16
  %40 = add i64 %n.1358.i, -16
  %41 = icmp ugt i64 %40, 15
  br i1 %41, label %WhileBody2.i, label %WhileEnd3.i, !llvm.loop !105

WhileEnd3.i:                                      ; preds = %WhileBody2.i, %middle.block, %WhileCond1.preheader.i
  %s4.0.lcssa.i = phi i8* [ %s.0.lcssa.i, %WhileCond1.preheader.i ], [ %ind.end68, %middle.block ], [ %39, %WhileBody2.i ]
  %d4.0.lcssa.i = phi i8* [ %d.0.lcssa.i, %WhileCond1.preheader.i ], [ %ind.end66, %middle.block ], [ %38, %WhileBody2.i ]
  %n.1.lcssa.i = phi i64 [ %n.0.lcssa.i, %WhileCond1.preheader.i ], [ %ind.end, %middle.block ], [ %40, %WhileBody2.i ]
  %42 = and i64 %n.1.lcssa.i, 8
  %.not324.i = icmp eq i64 %42, 0
  br i1 %.not324.i, label %EndIf.i, label %Then4.i

Then4.i:                                          ; preds = %WhileEnd3.i
  %43 = bitcast i8* %s4.0.lcssa.i to <2 x i32>*
  %44 = load <2 x i32>, <2 x i32>* %43, align 4, !alias.scope !102, !noalias !99
  %45 = bitcast i8* %d4.0.lcssa.i to <2 x i32>*
  store <2 x i32> %44, <2 x i32>* %45, align 4, !alias.scope !99, !noalias !102
  %46 = getelementptr inbounds i8, i8* %d4.0.lcssa.i, i64 8
  %47 = getelementptr inbounds i8, i8* %s4.0.lcssa.i, i64 8
  br label %EndIf.i

EndIf.i:                                          ; preds = %Then4.i, %WhileEnd3.i
  %s4.1.i = phi i8* [ %47, %Then4.i ], [ %s4.0.lcssa.i, %WhileEnd3.i ]
  %d4.1.i = phi i8* [ %46, %Then4.i ], [ %d4.0.lcssa.i, %WhileEnd3.i ]
  %48 = and i64 %n.1.lcssa.i, 4
  %.not325.i = icmp eq i64 %48, 0
  br i1 %.not325.i, label %EndIf7.i, label %Then5.i

Then5.i:                                          ; preds = %EndIf.i
  %49 = bitcast i8* %d4.1.i to i32*
  %50 = bitcast i8* %s4.1.i to i32*
  %51 = load i32, i32* %50, align 4, !alias.scope !102, !noalias !99
  store i32 %51, i32* %49, align 4, !alias.scope !99, !noalias !102
  %52 = getelementptr inbounds i8, i8* %d4.1.i, i64 4
  %53 = getelementptr inbounds i8, i8* %s4.1.i, i64 4
  br label %EndIf7.i

EndIf7.i:                                         ; preds = %Then5.i, %EndIf.i
  %s4.2.i = phi i8* [ %53, %Then5.i ], [ %s4.1.i, %EndIf.i ]
  %d4.2.i = phi i8* [ %52, %Then5.i ], [ %d4.1.i, %EndIf.i ]
  %54 = and i64 %n.1.lcssa.i, 2
  %.not326.i = icmp eq i64 %54, 0
  br i1 %.not326.i, label %EndIf10.i, label %Then8.i

Then8.i:                                          ; preds = %EndIf7.i
  %55 = load i8, i8* %s4.2.i, align 1, !alias.scope !102, !noalias !99
  store i8 %55, i8* %d4.2.i, align 1, !alias.scope !99, !noalias !102
  %56 = getelementptr inbounds i8, i8* %d4.2.i, i64 1
  %57 = getelementptr inbounds i8, i8* %s4.2.i, i64 1
  %58 = load i8, i8* %57, align 1, !alias.scope !102, !noalias !99
  store i8 %58, i8* %56, align 1, !alias.scope !99, !noalias !102
  %59 = getelementptr inbounds i8, i8* %d4.2.i, i64 2
  %60 = getelementptr inbounds i8, i8* %s4.2.i, i64 2
  br label %EndIf10.i

EndIf10.i:                                        ; preds = %Then8.i, %EndIf7.i
  %s.1.i = phi i8* [ %60, %Then8.i ], [ %s4.2.i, %EndIf7.i ]
  %d.1.i = phi i8* [ %59, %Then8.i ], [ %d4.2.i, %EndIf7.i ]
  %61 = and i64 %n.1.lcssa.i, 1
  %.not327.i = icmp eq i64 %61, 0
  br i1 %.not327.i, label %libc.musl.memcpy.fallback_memcpy.exit, label %common.ret.sink.split.i

common.ret.sink.split.i:                          ; preds = %EndIf41.i, %EndIf10.i
  %s.9.sink.i = phi i8* [ %s.9.i, %EndIf41.i ], [ %s.1.i, %EndIf10.i ]
  %d.9.sink.i = phi i8* [ %d.9.i, %EndIf41.i ], [ %d.1.i, %EndIf10.i ]
  %62 = load i8, i8* %s.9.sink.i, align 1, !alias.scope !102, !noalias !99
  store i8 %62, i8* %d.9.sink.i, align 1, !alias.scope !99, !noalias !102
  br label %libc.musl.memcpy.fallback_memcpy.exit

EndIf15.i:                                        ; preds = %WhileEnd.i
  %63 = icmp ugt i64 %n.0.lcssa.i, 31
  br i1 %63, label %Then16.i, label %EndIf29.i

Then16.i:                                         ; preds = %EndIf15.i
  switch i64 %18, label %SwitchElse.i [
    i64 1, label %WhileBody18.preheader.i
    i64 2, label %WhileBody21.preheader.i
    i64 3, label %WhileBody24.preheader.i
  ]

SwitchElse.i:                                     ; preds = %Then16.i
  unreachable

WhileBody18.preheader.i:                          ; preds = %Then16.i
  %64 = bitcast i8* %s.0.lcssa.i to i32*
  %65 = load i32, i32* %64, align 4, !alias.scope !102, !noalias !99
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %d.0.lcssa.i, align 1, !alias.scope !99, !noalias !102
  %67 = getelementptr inbounds i8, i8* %d.0.lcssa.i, i64 1
  %68 = lshr i32 %65, 8
  %69 = trunc i32 %68 to i8
  store i8 %69, i8* %67, align 1, !alias.scope !99, !noalias !102
  %70 = getelementptr inbounds i8, i8* %d.0.lcssa.i, i64 2
  %71 = lshr i32 %65, 16
  %72 = trunc i32 %71 to i8
  store i8 %72, i8* %70, align 1, !alias.scope !99, !noalias !102
  %73 = getelementptr inbounds i8, i8* %d.0.lcssa.i, i64 3
  %74 = getelementptr inbounds i8, i8* %s.0.lcssa.i, i64 3
  %75 = add i64 %n.0.lcssa.i, -3
  br label %WhileBody18.i

WhileBody18.i:                                    ; preds = %WhileBody18.i, %WhileBody18.preheader.i
  %d.2352.i = phi i8* [ %99, %WhileBody18.i ], [ %73, %WhileBody18.preheader.i ]
  %s.2351.i = phi i8* [ %100, %WhileBody18.i ], [ %74, %WhileBody18.preheader.i ]
  %n.2350.i = phi i64 [ %101, %WhileBody18.i ], [ %75, %WhileBody18.preheader.i ]
  %w.0349.i = phi i32 [ %95, %WhileBody18.i ], [ %65, %WhileBody18.preheader.i ]
  %76 = bitcast i8* %d.2352.i to i32*
  %77 = getelementptr inbounds i8, i8* %s.2351.i, i64 1
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 4, !alias.scope !102, !noalias !99
  %80 = tail call i32 @llvm.fshl.i32(i32 %79, i32 %w.0349.i, i32 8) #11
  store i32 %80, i32* %76, align 4, !alias.scope !99, !noalias !102
  %81 = getelementptr inbounds i8, i8* %s.2351.i, i64 5
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4, !alias.scope !102, !noalias !99
  %84 = getelementptr inbounds i8, i8* %d.2352.i, i64 4
  %85 = bitcast i8* %84 to i32*
  %86 = tail call i32 @llvm.fshl.i32(i32 %83, i32 %79, i32 8) #11
  store i32 %86, i32* %85, align 4, !alias.scope !99, !noalias !102
  %87 = getelementptr inbounds i8, i8* %s.2351.i, i64 9
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 4, !alias.scope !102, !noalias !99
  %90 = getelementptr inbounds i8, i8* %d.2352.i, i64 8
  %91 = bitcast i8* %90 to i32*
  %92 = tail call i32 @llvm.fshl.i32(i32 %89, i32 %83, i32 8) #11
  store i32 %92, i32* %91, align 4, !alias.scope !99, !noalias !102
  %93 = getelementptr inbounds i8, i8* %s.2351.i, i64 13
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 4, !alias.scope !102, !noalias !99
  %96 = getelementptr inbounds i8, i8* %d.2352.i, i64 12
  %97 = bitcast i8* %96 to i32*
  %98 = tail call i32 @llvm.fshl.i32(i32 %95, i32 %89, i32 8) #11
  store i32 %98, i32* %97, align 4, !alias.scope !99, !noalias !102
  %99 = getelementptr inbounds i8, i8* %d.2352.i, i64 16
  %100 = getelementptr inbounds i8, i8* %s.2351.i, i64 16
  %101 = add i64 %n.2350.i, -16
  %102 = icmp ugt i64 %101, 16
  br i1 %102, label %WhileBody18.i, label %EndIf29.i

WhileBody21.preheader.i:                          ; preds = %Then16.i
  %103 = bitcast i8* %s.0.lcssa.i to i32*
  %104 = load i32, i32* %103, align 4, !alias.scope !102, !noalias !99
  %105 = trunc i32 %104 to i8
  store i8 %105, i8* %d.0.lcssa.i, align 1, !alias.scope !99, !noalias !102
  %106 = getelementptr inbounds i8, i8* %d.0.lcssa.i, i64 1
  %107 = lshr i32 %104, 8
  %108 = trunc i32 %107 to i8
  store i8 %108, i8* %106, align 1, !alias.scope !99, !noalias !102
  %109 = getelementptr inbounds i8, i8* %d.0.lcssa.i, i64 2
  %110 = getelementptr inbounds i8, i8* %s.0.lcssa.i, i64 2
  %111 = add i64 %n.0.lcssa.i, -2
  br label %WhileBody21.i

WhileBody21.i:                                    ; preds = %WhileBody21.i, %WhileBody21.preheader.i
  %d.3345.i = phi i8* [ %135, %WhileBody21.i ], [ %109, %WhileBody21.preheader.i ]
  %s.3344.i = phi i8* [ %136, %WhileBody21.i ], [ %110, %WhileBody21.preheader.i ]
  %n.3343.i = phi i64 [ %137, %WhileBody21.i ], [ %111, %WhileBody21.preheader.i ]
  %w51.0342.i = phi i32 [ %131, %WhileBody21.i ], [ %104, %WhileBody21.preheader.i ]
  %112 = bitcast i8* %d.3345.i to i32*
  %113 = getelementptr inbounds i8, i8* %s.3344.i, i64 2
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 4, !alias.scope !102, !noalias !99
  %116 = tail call i32 @llvm.fshl.i32(i32 %115, i32 %w51.0342.i, i32 16) #11
  store i32 %116, i32* %112, align 4, !alias.scope !99, !noalias !102
  %117 = getelementptr inbounds i8, i8* %s.3344.i, i64 6
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 4, !alias.scope !102, !noalias !99
  %120 = getelementptr inbounds i8, i8* %d.3345.i, i64 4
  %121 = bitcast i8* %120 to i32*
  %122 = tail call i32 @llvm.fshl.i32(i32 %119, i32 %115, i32 16) #11
  store i32 %122, i32* %121, align 4, !alias.scope !99, !noalias !102
  %123 = getelementptr inbounds i8, i8* %s.3344.i, i64 10
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 4, !alias.scope !102, !noalias !99
  %126 = getelementptr inbounds i8, i8* %d.3345.i, i64 8
  %127 = bitcast i8* %126 to i32*
  %128 = tail call i32 @llvm.fshl.i32(i32 %125, i32 %119, i32 16) #11
  store i32 %128, i32* %127, align 4, !alias.scope !99, !noalias !102
  %129 = getelementptr inbounds i8, i8* %s.3344.i, i64 14
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %130, align 4, !alias.scope !102, !noalias !99
  %132 = getelementptr inbounds i8, i8* %d.3345.i, i64 12
  %133 = bitcast i8* %132 to i32*
  %134 = tail call i32 @llvm.fshl.i32(i32 %131, i32 %125, i32 16) #11
  store i32 %134, i32* %133, align 4, !alias.scope !99, !noalias !102
  %135 = getelementptr inbounds i8, i8* %d.3345.i, i64 16
  %136 = getelementptr inbounds i8, i8* %s.3344.i, i64 16
  %137 = add i64 %n.3343.i, -16
  %138 = icmp ugt i64 %137, 17
  br i1 %138, label %WhileBody21.i, label %EndIf29.i

WhileBody24.preheader.i:                          ; preds = %Then16.i
  %139 = bitcast i8* %s.0.lcssa.i to i32*
  %140 = load i32, i32* %139, align 4, !alias.scope !102, !noalias !99
  %141 = trunc i32 %140 to i8
  store i8 %141, i8* %d.0.lcssa.i, align 1, !alias.scope !99, !noalias !102
  %142 = getelementptr inbounds i8, i8* %d.0.lcssa.i, i64 1
  %143 = getelementptr inbounds i8, i8* %s.0.lcssa.i, i64 1
  %144 = add i64 %n.0.lcssa.i, -1
  br label %WhileBody24.i

WhileBody24.i:                                    ; preds = %WhileBody24.i, %WhileBody24.preheader.i
  %d.4338.i = phi i8* [ %168, %WhileBody24.i ], [ %142, %WhileBody24.preheader.i ]
  %s.4337.i = phi i8* [ %169, %WhileBody24.i ], [ %143, %WhileBody24.preheader.i ]
  %n.4336.i = phi i64 [ %170, %WhileBody24.i ], [ %144, %WhileBody24.preheader.i ]
  %w55.0335.i = phi i32 [ %164, %WhileBody24.i ], [ %140, %WhileBody24.preheader.i ]
  %145 = bitcast i8* %d.4338.i to i32*
  %146 = getelementptr inbounds i8, i8* %s.4337.i, i64 3
  %147 = bitcast i8* %146 to i32*
  %148 = load i32, i32* %147, align 4, !alias.scope !102, !noalias !99
  %149 = tail call i32 @llvm.fshl.i32(i32 %148, i32 %w55.0335.i, i32 24) #11
  store i32 %149, i32* %145, align 4, !alias.scope !99, !noalias !102
  %150 = getelementptr inbounds i8, i8* %s.4337.i, i64 7
  %151 = bitcast i8* %150 to i32*
  %152 = load i32, i32* %151, align 4, !alias.scope !102, !noalias !99
  %153 = getelementptr inbounds i8, i8* %d.4338.i, i64 4
  %154 = bitcast i8* %153 to i32*
  %155 = tail call i32 @llvm.fshl.i32(i32 %152, i32 %148, i32 24) #11
  store i32 %155, i32* %154, align 4, !alias.scope !99, !noalias !102
  %156 = getelementptr inbounds i8, i8* %s.4337.i, i64 11
  %157 = bitcast i8* %156 to i32*
  %158 = load i32, i32* %157, align 4, !alias.scope !102, !noalias !99
  %159 = getelementptr inbounds i8, i8* %d.4338.i, i64 8
  %160 = bitcast i8* %159 to i32*
  %161 = tail call i32 @llvm.fshl.i32(i32 %158, i32 %152, i32 24) #11
  store i32 %161, i32* %160, align 4, !alias.scope !99, !noalias !102
  %162 = getelementptr inbounds i8, i8* %s.4337.i, i64 15
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 4, !alias.scope !102, !noalias !99
  %165 = getelementptr inbounds i8, i8* %d.4338.i, i64 12
  %166 = bitcast i8* %165 to i32*
  %167 = tail call i32 @llvm.fshl.i32(i32 %164, i32 %158, i32 24) #11
  store i32 %167, i32* %166, align 4, !alias.scope !99, !noalias !102
  %168 = getelementptr inbounds i8, i8* %d.4338.i, i64 16
  %169 = getelementptr inbounds i8, i8* %s.4337.i, i64 16
  %170 = add i64 %n.4336.i, -16
  %171 = icmp ugt i64 %170, 18
  br i1 %171, label %WhileBody24.i, label %EndIf29.i

EndIf29.i:                                        ; preds = %WhileBody24.i, %WhileBody21.i, %WhileBody18.i, %EndIf15.i
  %n.5.i = phi i64 [ %n.0.lcssa.i, %EndIf15.i ], [ %101, %WhileBody18.i ], [ %137, %WhileBody21.i ], [ %170, %WhileBody24.i ]
  %s.5.i = phi i8* [ %s.0.lcssa.i, %EndIf15.i ], [ %100, %WhileBody18.i ], [ %136, %WhileBody21.i ], [ %169, %WhileBody24.i ]
  %d.5.i = phi i8* [ %d.0.lcssa.i, %EndIf15.i ], [ %99, %WhileBody18.i ], [ %135, %WhileBody21.i ], [ %168, %WhileBody24.i ]
  %172 = and i64 %n.5.i, 16
  %.not.i = icmp eq i64 %172, 0
  br i1 %.not.i, label %EndIf32.i, label %Then30.i

Then30.i:                                         ; preds = %EndIf29.i
  %173 = bitcast i8* %s.5.i to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !102, !noalias !99
  %175 = bitcast i8* %d.5.i to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %175, align 1, !alias.scope !99, !noalias !102
  %176 = getelementptr inbounds i8, i8* %d.5.i, i64 16
  %177 = getelementptr inbounds i8, i8* %s.5.i, i64 16
  br label %EndIf32.i

EndIf32.i:                                        ; preds = %Then30.i, %EndIf29.i
  %s.6.i = phi i8* [ %177, %Then30.i ], [ %s.5.i, %EndIf29.i ]
  %d.6.i = phi i8* [ %176, %Then30.i ], [ %d.5.i, %EndIf29.i ]
  %178 = and i64 %n.5.i, 8
  %.not320.i = icmp eq i64 %178, 0
  br i1 %.not320.i, label %EndIf35.i, label %Then33.i

Then33.i:                                         ; preds = %EndIf32.i
  %179 = bitcast i8* %s.6.i to <8 x i8>*
  %180 = load <8 x i8>, <8 x i8>* %179, align 1, !alias.scope !102, !noalias !99
  %181 = bitcast i8* %d.6.i to <8 x i8>*
  store <8 x i8> %180, <8 x i8>* %181, align 1, !alias.scope !99, !noalias !102
  %182 = getelementptr inbounds i8, i8* %d.6.i, i64 8
  %183 = getelementptr inbounds i8, i8* %s.6.i, i64 8
  br label %EndIf35.i

EndIf35.i:                                        ; preds = %Then33.i, %EndIf32.i
  %s.7.i = phi i8* [ %183, %Then33.i ], [ %s.6.i, %EndIf32.i ]
  %d.7.i = phi i8* [ %182, %Then33.i ], [ %d.6.i, %EndIf32.i ]
  %184 = and i64 %n.5.i, 4
  %.not321.i = icmp eq i64 %184, 0
  br i1 %.not321.i, label %EndIf38.i, label %Then36.i

Then36.i:                                         ; preds = %EndIf35.i
  %185 = load i8, i8* %s.7.i, align 1, !alias.scope !102, !noalias !99
  store i8 %185, i8* %d.7.i, align 1, !alias.scope !99, !noalias !102
  %186 = getelementptr inbounds i8, i8* %d.7.i, i64 1
  %187 = getelementptr inbounds i8, i8* %s.7.i, i64 1
  %188 = load i8, i8* %187, align 1, !alias.scope !102, !noalias !99
  store i8 %188, i8* %186, align 1, !alias.scope !99, !noalias !102
  %189 = getelementptr inbounds i8, i8* %d.7.i, i64 2
  %190 = getelementptr inbounds i8, i8* %s.7.i, i64 2
  %191 = load i8, i8* %190, align 1, !alias.scope !102, !noalias !99
  store i8 %191, i8* %189, align 1, !alias.scope !99, !noalias !102
  %192 = getelementptr inbounds i8, i8* %d.7.i, i64 3
  %193 = getelementptr inbounds i8, i8* %s.7.i, i64 3
  %194 = load i8, i8* %193, align 1, !alias.scope !102, !noalias !99
  store i8 %194, i8* %192, align 1, !alias.scope !99, !noalias !102
  %195 = getelementptr inbounds i8, i8* %d.7.i, i64 4
  %196 = getelementptr inbounds i8, i8* %s.7.i, i64 4
  br label %EndIf38.i

EndIf38.i:                                        ; preds = %Then36.i, %EndIf35.i
  %s.8.i = phi i8* [ %196, %Then36.i ], [ %s.7.i, %EndIf35.i ]
  %d.8.i = phi i8* [ %195, %Then36.i ], [ %d.7.i, %EndIf35.i ]
  %197 = and i64 %n.5.i, 2
  %.not322.i = icmp eq i64 %197, 0
  br i1 %.not322.i, label %EndIf41.i, label %Then39.i

Then39.i:                                         ; preds = %EndIf38.i
  %198 = load i8, i8* %s.8.i, align 1, !alias.scope !102, !noalias !99
  store i8 %198, i8* %d.8.i, align 1, !alias.scope !99, !noalias !102
  %199 = getelementptr inbounds i8, i8* %d.8.i, i64 1
  %200 = getelementptr inbounds i8, i8* %s.8.i, i64 1
  %201 = load i8, i8* %200, align 1, !alias.scope !102, !noalias !99
  store i8 %201, i8* %199, align 1, !alias.scope !99, !noalias !102
  %202 = getelementptr inbounds i8, i8* %d.8.i, i64 2
  %203 = getelementptr inbounds i8, i8* %s.8.i, i64 2
  br label %EndIf41.i

EndIf41.i:                                        ; preds = %Then39.i, %EndIf38.i
  %s.9.i = phi i8* [ %203, %Then39.i ], [ %s.8.i, %EndIf38.i ]
  %d.9.i = phi i8* [ %202, %Then39.i ], [ %d.8.i, %EndIf38.i ]
  %204 = and i64 %n.5.i, 1
  %.not323.i = icmp eq i64 %204, 0
  br i1 %.not323.i, label %libc.musl.memcpy.fallback_memcpy.exit, label %common.ret.sink.split.i

libc.musl.memcpy.fallback_memcpy.exit:            ; preds = %EndIf41.i, %common.ret.sink.split.i, %EndIf10.i
  ret i8* %0
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #1

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin nounwind
declare void @roc_dealloc(i8* nonnull, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare i8* @roc_alloc(i64, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare i8* @roc_realloc(i8* nonnull, i64, i64, i32) local_unnamed_addr #2

; Function Attrs: inaccessiblememonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #9

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i128 @llvm.abs.i128(i128, i1 immarg) #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fshl.i64(i64, i64, i64) #1

; Function Attrs: inaccessiblememonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #9

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #10

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #10

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #0

; Function Attrs: mustprogress nobuiltin nofree norecurse nosync nounwind readonly willreturn
define internal fastcc i64 @roc_builtins.str.number_of_bytes(%str.RocStr* nocapture nonnull readonly %0) unnamed_addr #4 {
  %.idx.i.i = getelementptr %str.RocStr, %str.RocStr* %0, i64 0, i32 2
  %.idx.val.i.i = load i64, i64* %.idx.i.i, align 8
  %2 = icmp slt i64 %.idx.val.i.i, 0
  br i1 %2, label %Then.i.i, label %Else.i.i

Then.i.i:                                         ; preds = %1
  %3 = lshr i64 %.idx.val.i.i, 56
  %4 = xor i64 %3, 128
  br label %roc_builtins.str.count_utf8_bytes.exit

Else.i.i:                                         ; preds = %1
  %5 = getelementptr inbounds %str.RocStr, %str.RocStr* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 9223372036854775807
  br label %roc_builtins.str.count_utf8_bytes.exit

roc_builtins.str.count_utf8_bytes.exit:           ; preds = %Then.i.i, %Else.i.i
  %common.ret.op.i.i = phi i64 [ %4, %Then.i.i ], [ %7, %Else.i.i ]
  ret i64 %common.ret.op.i.i
}

; Function Attrs: nounwind
define internal fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture readonly %"549", i64 %key, { %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value26 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %struct_field.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 0, i32 0
  %struct_field.unpack = load i8*, i8** %struct_field.elt, align 8
  %1 = insertvalue %list.RocList undef, i8* %struct_field.unpack, 0
  %struct_field.elt28 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 0, i32 1
  %struct_field.unpack29 = load i64, i64* %struct_field.elt28, align 8
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack29, 1
  %struct_field.elt30 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 0, i32 2
  %struct_field.unpack31 = load i64, i64* %struct_field.elt30, align 8
  %struct_field32 = insertvalue %list.RocList %2, i64 %struct_field.unpack31, 2
  %"cap > 0.i.not" = icmp eq i64 %struct_field.unpack31, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#inc_9.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %entry
  %3 = ptrtoint i8* %struct_field.unpack to i64
  %4 = shl i64 %struct_field.unpack31, 1
  %.not.i.i.i = icmp slt i64 %struct_field.unpack31, 0
  %5 = select i1 %.not.i.i.i, i64 %4, i64 %3
  %as_usize_ptr.i = inttoptr i64 %5 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %6 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i = icmp eq i64 %6, 0
  br i1 %.not.i.i, label %"#Attr_#inc_9.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modification_list_block.i
  %7 = add nsw i64 %6, 1
  store i64 %7, i64* %get_rc_ptr.i, align 8
  br label %"#Attr_#inc_9.exit"

"#Attr_#inc_9.exit":                              ; preds = %entry, %modification_list_block.i, %Then.i.i
  %struct_field1.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 1, i32 0
  %struct_field1.unpack = load i8*, i8** %struct_field1.elt, align 8
  %8 = insertvalue %list.RocList undef, i8* %struct_field1.unpack, 0
  %struct_field1.elt33 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 1, i32 1
  %struct_field1.unpack34 = load i64, i64* %struct_field1.elt33, align 8
  %9 = insertvalue %list.RocList %8, i64 %struct_field1.unpack34, 1
  %struct_field1.elt35 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 1, i32 2
  %struct_field1.unpack36 = load i64, i64* %struct_field1.elt35, align 8
  %struct_field137 = insertvalue %list.RocList %9, i64 %struct_field1.unpack36, 2
  %"cap > 0.i81.not" = icmp eq i64 %struct_field1.unpack36, 0
  br i1 %"cap > 0.i81.not", label %"#Attr_#inc_10.exit", label %modification_list_block.i90

modification_list_block.i90:                      ; preds = %"#Attr_#inc_9.exit"
  %10 = ptrtoint i8* %struct_field1.unpack to i64
  %11 = shl i64 %struct_field1.unpack36, 1
  %.not.i.i.i86 = icmp slt i64 %struct_field1.unpack36, 0
  %12 = select i1 %.not.i.i.i86, i64 %11, i64 %10
  %as_usize_ptr.i87 = inttoptr i64 %12 to i64*
  %get_rc_ptr.i88 = getelementptr inbounds i64, i64* %as_usize_ptr.i87, i64 -1
  %13 = load i64, i64* %get_rc_ptr.i88, align 8
  %.not.i.i89 = icmp eq i64 %13, 0
  br i1 %.not.i.i89, label %"#Attr_#inc_10.exit", label %Then.i.i91

Then.i.i91:                                       ; preds = %modification_list_block.i90
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %get_rc_ptr.i88, align 8
  br label %"#Attr_#inc_10.exit"

"#Attr_#inc_10.exit":                             ; preds = %"#Attr_#inc_9.exit", %modification_list_block.i90, %Then.i.i91
  %struct_field2.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 2, i32 0
  %struct_field2.unpack = load i8*, i8** %struct_field2.elt, align 8
  %15 = insertvalue %list.RocList undef, i8* %struct_field2.unpack, 0
  %struct_field2.elt38 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 2, i32 1
  %struct_field2.unpack39 = load i64, i64* %struct_field2.elt38, align 8
  %16 = insertvalue %list.RocList %15, i64 %struct_field2.unpack39, 1
  %struct_field2.elt40 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 2, i32 2
  %struct_field2.unpack41 = load i64, i64* %struct_field2.elt40, align 8
  %struct_field242 = insertvalue %list.RocList %16, i64 %struct_field2.unpack41, 2
  %"cap > 0.i93.not" = icmp eq i64 %struct_field2.unpack41, 0
  br i1 %"cap > 0.i93.not", label %"#Attr_#inc_11.exit", label %modification_list_block.i102

modification_list_block.i102:                     ; preds = %"#Attr_#inc_10.exit"
  %17 = ptrtoint i8* %struct_field2.unpack to i64
  %18 = shl i64 %struct_field2.unpack41, 1
  %.not.i.i.i98 = icmp slt i64 %struct_field2.unpack41, 0
  %19 = select i1 %.not.i.i.i98, i64 %18, i64 %17
  %as_usize_ptr.i99 = inttoptr i64 %19 to i64*
  %get_rc_ptr.i100 = getelementptr inbounds i64, i64* %as_usize_ptr.i99, i64 -1
  %20 = load i64, i64* %get_rc_ptr.i100, align 8
  %.not.i.i101 = icmp eq i64 %20, 0
  br i1 %.not.i.i101, label %"#Attr_#inc_11.exit", label %Then.i.i103

Then.i.i103:                                      ; preds = %modification_list_block.i102
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %get_rc_ptr.i100, align 8
  br label %"#Attr_#inc_11.exit"

"#Attr_#inc_11.exit":                             ; preds = %"#Attr_#inc_10.exit", %modification_list_block.i102, %Then.i.i103
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 3
  %struct_field3 = load i64, i64* %struct_field_access_record_3, align 8
  %int_bitwise_or.i14.i.i = tail call i64 @llvm.fshl.i64(i64 %key, i64 %key, i64 32) #11
  %int_bitwise_xor.i.i.i.i = xor i64 %int_bitwise_or.i14.i.i, -1800455987208640293
  %inc_cast.i.i.i26.i.i.i = zext i64 %int_bitwise_xor.i.i.i.i to i128
  %int_bitwise_xor.i24.i.i.i = xor i64 %key, xor (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64), i64 -6884282663029611473)
  %inc_cast.i9.i.i27.i.i.i = zext i64 %int_bitwise_xor.i24.i.i.i to i128
  %call.i.i.i28.i.i.i = mul nuw i128 %inc_cast.i.i.i26.i.i.i, %inc_cast.i9.i.i27.i.i.i
  %call.i.i.i28.i.i.masked.i = and i128 %call.i.i.i28.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i33.i.i.i = lshr i128 %call.i.i.i28.i.i.i, 64
  %inc_cast.i9.i.i12.i.i.i = xor i128 %call.i.i.i28.i.i.masked.i, %int_shift_right_zf.i.i.i33.i.i.i
  %call.i.i.i13.i.i.i = mul nuw i128 %inc_cast.i9.i.i12.i.i.i, 16646288086500911315
  %call.i.i.i13.i.i.masked.i = and i128 %call.i.i.i13.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i18.i.i.i = lshr i128 %call.i.i.i13.i.i.i, 64
  %inc_cast.i9.i.i.i.i.i = xor i128 %call.i.i.i13.i.i.masked.i, %int_shift_right_zf.i.i.i18.i.i.i
  %call.i.i.i.i.i.i = mul nuw i128 %inc_cast.i9.i.i.i.i.i, zext (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64) to i128)
  %int_shift_right_zf.i.i.i.i.i.i = lshr i128 %call.i.i.i.i.i.i, 64
  %int_bitwise_xor.i.i.i.i3.i = xor i128 %int_shift_right_zf.i.i.i.i.i.i, %call.i.i.i.i.i.i
  %int_bitwise_xor.i.i.i.i.i = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i64
  %int_shift_right_zf.i.i = lshr i64 %int_bitwise_xor.i.i.i.i.i, 7
  %22 = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i8
  %inc_cast.i.i = and i8 %22, 127
  %int_shift_right_zf.i.i105 = lshr i64 %struct_field2.unpack39, 3
  %call.i.i = tail call i64 @llvm.usub.sat.i64(i64 %int_shift_right_zf.i.i105, i64 1) #11
  %int_bitwise_and.i.i107 = and i64 %call.i.i, %int_shift_right_zf.i.i
  %insert_record_field.i108 = insertvalue { i64, i64, i64 } zeroinitializer, i64 %call.i.i, 0
  %insert_record_field3.i = insertvalue { i64, i64, i64 } %insert_record_field.i108, i64 1, 1
  %insert_record_field4.i = insertvalue { i64, i64, i64 } %insert_record_field3.i, i64 %int_bitwise_and.i.i107, 2
  call fastcc void @Dict_findIndexHelper_ed169764ca9d337498c6be1dfb74e7ca1e917efa1f3a396b19453fd5d3901cc1(%list.RocList %struct_field242, %list.RocList %struct_field137, %list.RocList %struct_field32, i8 %inc_cast.i.i, i64 %key, { i64, i64, i64 } %insert_record_field4.i, { [0 x i64], [1 x i64], i8, [7 x i8] }* nonnull %result_value)
  %tag_id_ptr11 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr11, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %Dict_insertNotFoundHelper_f4dbc64ef75deb77c4ca0c031ec719e7536bf7feb1472ac492d336536d3fead.exit, %List_set_c2353f50e08bc0cfe6f25f4ec6fe6d31e3f7f4c514545cc2967e632f546.exit
  ret void

then_block:                                       ; preds = %"#Attr_#inc_11.exit"
  br i1 %"cap > 0.i81.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split, label %modification_list_block.i151

modification_list_block.i151:                     ; preds = %then_block
  %23 = ptrtoint i8* %struct_field1.unpack to i64
  %24 = shl i64 %struct_field1.unpack36, 1
  %.not.i.i.i147 = icmp slt i64 %struct_field1.unpack36, 0
  %25 = select i1 %.not.i.i.i147, i64 %24, i64 %23
  %as_usize_ptr.i148 = inttoptr i64 %25 to i64*
  %get_rc_ptr.i149 = getelementptr inbounds i64, i64* %as_usize_ptr.i148, i64 -1
  %26 = load i64, i64* %get_rc_ptr.i149, align 8
  %.not.i.i150 = icmp eq i64 %26, 0
  br i1 %.not.i.i150, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split, label %modification_list_block.i.i137

modification_list_block.i.i137:                   ; preds = %modification_list_block.i151
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* %get_rc_ptr.i149, align 8
  %get_opaque_data_ptr1299 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_element100 = load i64, i64* %get_opaque_data_ptr1299, align 8
  %cast_basic_basic.i101 = bitcast i8* %struct_field1.unpack to i64*
  %list_get_element.i102 = getelementptr inbounds i64, i64* %cast_basic_basic.i101, i64 %load_element100
  %list_get_load_element.i103 = load i64, i64* %list_get_element.i102, align 8
  %.not.i.i.i.i.i136 = icmp eq i64 %27, 0
  %spec.store.select = select i1 %.not.i.i.i.i.i136, i64 0, i64 %26
  store i64 %spec.store.select, i64* %get_rc_ptr.i149, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split: ; preds = %then_block, %modification_list_block.i151
  %get_opaque_data_ptr1299159 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_element100160 = load i64, i64* %get_opaque_data_ptr1299159, align 8
  %cast_basic_basic.i101161 = bitcast i8* %struct_field1.unpack to i64*
  %list_get_element.i102162 = getelementptr inbounds i64, i64* %cast_basic_basic.i101161, i64 %load_element100160
  %list_get_load_element.i103163 = load i64, i64* %list_get_element.i102162, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit: ; preds = %modification_list_block.i.i137, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split
  %list_get_load_element.i105 = phi i64 [ %list_get_load_element.i103, %modification_list_block.i.i137 ], [ %list_get_load_element.i103163, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split ]
  %lt_uint.i.i.i = icmp ult i64 %list_get_load_element.i105, %struct_field.unpack29
  br i1 %lt_uint.i.i.i, label %then_block.i.i, label %List_set_c2353f50e08bc0cfe6f25f4ec6fe6d31e3f7f4c514545cc2967e632f546.exit

then_block.i.i:                                   ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit
  %28 = shl nuw i64 %list_get_load_element.i105, 3
  %29 = getelementptr inbounds i8, i8* %struct_field.unpack, i64 %28
  %30 = bitcast i8* %29 to i64*
  store i64 %key, i64* %30, align 1
  br label %List_set_c2353f50e08bc0cfe6f25f4ec6fe6d31e3f7f4c514545cc2967e632f546.exit

List_set_c2353f50e08bc0cfe6f25f4ec6fe6d31e3f7f4c514545cc2967e632f546.exit: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit, %then_block.i.i
  %struct_alloca = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca.repack.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 0
  store i8* %struct_field.unpack, i8** %struct_alloca.repack.repack, align 8
  %struct_alloca.repack.repack67 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 1
  store i64 %struct_field.unpack29, i64* %struct_alloca.repack.repack67, align 8
  %struct_alloca.repack.repack69 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 2
  store i64 %struct_field.unpack31, i64* %struct_alloca.repack.repack69, align 8
  %struct_alloca.repack61.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 0
  store i8* %struct_field1.unpack, i8** %struct_alloca.repack61.repack, align 8
  %struct_alloca.repack61.repack71 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack34, i64* %struct_alloca.repack61.repack71, align 8
  %struct_alloca.repack61.repack73 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 2
  store i64 %struct_field1.unpack36, i64* %struct_alloca.repack61.repack73, align 8
  %struct_alloca.repack63.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 0
  store i8* %struct_field2.unpack, i8** %struct_alloca.repack63.repack, align 8
  %struct_alloca.repack63.repack75 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack39, i64* %struct_alloca.repack63.repack75, align 8
  %struct_alloca.repack63.repack77 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 2
  store i64 %struct_field2.unpack41, i64* %struct_alloca.repack63.repack77, align 8
  %struct_alloca.repack65 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3
  store i64 %struct_field3, i64* %struct_alloca.repack65, align 8
  %31 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %0 to i8*
  %32 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %31, i8* noundef nonnull align 8 dereferenceable(80) %32, i64 80, i1 false)
  br label %common.ret

else_block:                                       ; preds = %"#Attr_#inc_11.exit"
  %call.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field3, i64 1) #11
  %has_overflowed.i = extractvalue { i64, i1 } %call.i, 1
  br i1 %has_overflowed.i, label %throw_block.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit

throw_block.i:                                    ; preds = %else_block
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit: ; preds = %else_block
  %operation_result.i = extractvalue { i64, i1 } %call.i, 0
  %struct_alloca25 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca25.repack.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 0, i32 0
  store i8* %struct_field.unpack, i8** %struct_alloca25.repack.repack, align 8
  %struct_alloca25.repack.repack49 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 0, i32 1
  store i64 %struct_field.unpack29, i64* %struct_alloca25.repack.repack49, align 8
  %struct_alloca25.repack.repack51 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 0, i32 2
  store i64 %struct_field.unpack31, i64* %struct_alloca25.repack.repack51, align 8
  %struct_alloca25.repack43.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 1, i32 0
  store i8* %struct_field1.unpack, i8** %struct_alloca25.repack43.repack, align 8
  %struct_alloca25.repack43.repack53 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack34, i64* %struct_alloca25.repack43.repack53, align 8
  %struct_alloca25.repack43.repack55 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 1, i32 2
  store i64 %struct_field1.unpack36, i64* %struct_alloca25.repack43.repack55, align 8
  %struct_alloca25.repack45.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 2, i32 0
  store i8* %struct_field2.unpack, i8** %struct_alloca25.repack45.repack, align 8
  %struct_alloca25.repack45.repack57 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack39, i64* %struct_alloca25.repack45.repack57, align 8
  %struct_alloca25.repack45.repack59 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 2, i32 2
  store i64 %struct_field2.unpack41, i64* %struct_alloca25.repack45.repack59, align 8
  %struct_alloca25.repack47 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 3
  store i64 %operation_result.i, i64* %struct_alloca25.repack47, align 8
  call fastcc void @Dict_maybeRehash_afdad4ce2583f139e38144aba5570615aaa08b5ab66dd411bb77eec63827e({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_alloca25, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value26)
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt16.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 0, i32 1
  %struct_field.unpack17.i = load i64, i64* %struct_field.elt16.i, align 8
  %struct_field.elt18.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 0, i32 2
  %struct_field.unpack19.i = load i64, i64* %struct_field.elt18.i, align 8
  %struct_field1.elt.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 1, i32 0
  %struct_field1.unpack.i = load i8*, i8** %struct_field1.elt.i, align 8
  %struct_field1.elt21.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 1, i32 1
  %struct_field1.unpack22.i = load i64, i64* %struct_field1.elt21.i, align 8
  %struct_field1.elt23.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 1, i32 2
  %struct_field1.unpack24.i = load i64, i64* %struct_field1.elt23.i, align 8
  %struct_field2.elt.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 2, i32 0
  %struct_field2.unpack.i = load i8*, i8** %struct_field2.elt.i, align 8
  %struct_field2.elt26.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 2, i32 1
  %struct_field2.unpack27.i = load i64, i64* %struct_field2.elt26.i, align 8
  %struct_field2.elt28.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 2, i32 2
  %struct_field2.unpack29.i = load i64, i64* %struct_field2.elt28.i, align 8
  %"cap > 0.i.i.not" = icmp eq i64 %struct_field2.unpack29.i, 0
  %.pre156 = ptrtoint i8* %struct_field2.unpack.i to i64
  br i1 %"cap > 0.i.i.not", label %"#Attr_#inc_11.exit.i", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit
  %33 = shl i64 %struct_field2.unpack29.i, 1
  %.not.i.i.i.i = icmp slt i64 %struct_field2.unpack29.i, 0
  %34 = select i1 %.not.i.i.i.i, i64 %33, i64 %.pre156
  %as_usize_ptr.i.i = inttoptr i64 %34 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %35 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i79 = icmp eq i64 %35, 0
  br i1 %.not.i.i.i79, label %"#Attr_#inc_11.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modification_list_block.i.i
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %get_rc_ptr.i.i, align 8
  br label %"#Attr_#inc_11.exit.i"

"#Attr_#inc_11.exit.i":                           ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit, %Then.i.i.i, %modification_list_block.i.i
  %.pre-phi158 = phi i64 [ %33, %Then.i.i.i ], [ %33, %modification_list_block.i.i ], [ 0, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %struct_field_access_record_3.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 3
  %struct_field3.i = load i64, i64* %struct_field_access_record_3.i, align 8
  %int_shift_right_zf.i.i.i = lshr i64 %struct_field2.unpack27.i, 3
  %call.i.i.i = tail call i64 @llvm.usub.sat.i64(i64 %int_shift_right_zf.i.i.i, i64 1) #11
  %.not.i.i.i93.i = icmp slt i64 %struct_field2.unpack29.i, 0
  %37 = select i1 %.not.i.i.i93.i, i64 %.pre-phi158, i64 %.pre156
  %as_usize_ptr.i94.i = inttoptr i64 %37 to i64*
  %get_rc_ptr.i95.i = getelementptr inbounds i64, i64* %as_usize_ptr.i94.i, i64 -1
  %38 = bitcast i64* %get_rc_ptr.i95.i to i8*
  br i1 %"cap > 0.i.i.not", label %joinpointcont.outer.i.i.us.preheader, label %joinpointcont.outer.i.i.preheader

joinpointcont.outer.i.i.us.preheader:             ; preds = %"#Attr_#inc_11.exit.i"
  %int_bitwise_and.i.i.i.i.pn.us197 = and i64 %int_shift_right_zf.i.i, %call.i.i.i
  %int_shift_left.i.i.i.i.us198 = shl nuw nsw i64 %int_bitwise_and.i.i.i.i.pn.us197, 3
  %list_get_element.i.i.i.us.us199 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %int_shift_left.i.i.i.i.us198
  %list_get_load_element.i.i.i.us.us200 = load i8, i8* %list_get_element.i.i.i.us.us199, align 1
  %lt_int.i.i.i114.us.us201 = icmp slt i8 %list_get_load_element.i.i.i.us.us200, 0
  br i1 %lt_int.i.i.i114.us.us201, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us

joinpointcont.outer.i.i.preheader:                ; preds = %"#Attr_#inc_11.exit.i"
  %.pre = load i64, i64* %get_rc_ptr.i95.i, align 8
  br label %joinpointcont.outer.i.i

else_block.i.i.us.us:                             ; preds = %joinpointcont.outer.i.i.us.preheader, %else_block.i.i.us.us.7
  %int_shift_left.i.i.i.i.us204 = phi i64 [ %int_shift_left.i.i.i.i.us, %else_block.i.i.us.us.7 ], [ %int_shift_left.i.i.i.i.us198, %joinpointcont.outer.i.i.us.preheader ]
  %int_bitwise_and.i.i.i.i.pn.us203 = phi i64 [ %int_bitwise_and.i.i.i.i.pn.us, %else_block.i.i.us.us.7 ], [ %int_bitwise_and.i.i.i.i.pn.us197, %joinpointcont.outer.i.i.us.preheader ]
  %add_int_wrap.i5.i.i.i.pn.us202 = phi i64 [ %add_int_wrap.i5.i.i.i.us, %else_block.i.i.us.us.7 ], [ 1, %joinpointcont.outer.i.i.us.preheader ]
  %add_int_wrap.i13.i.i.us.us.1 = or i64 %int_shift_left.i.i.i.i.us204, 1
  %list_get_element.i.i.i.us.us.1 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.1
  %list_get_load_element.i.i.i.us.us.1 = load i8, i8* %list_get_element.i.i.i.us.us.1, align 1
  %lt_int.i.i.i114.us.us.1 = icmp slt i8 %list_get_load_element.i.i.i.us.us.1, 0
  br i1 %lt_int.i.i.i114.us.us.1, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.1

joinpointcont.outer.i.i:                          ; preds = %joinpointcont.outer.i.i.preheader, %else_block.i.i.7
  %39 = phi i64 [ %113, %else_block.i.i.7 ], [ %.pre, %joinpointcont.outer.i.i.preheader ]
  %add_int_wrap.i5.i.i.i.pn = phi i64 [ %add_int_wrap.i5.i.i.i, %else_block.i.i.7 ], [ 1, %joinpointcont.outer.i.i.preheader ]
  %add_int_wrap.i.i.i.i.pn = phi i64 [ %add_int_wrap.i.i.i.i, %else_block.i.i.7 ], [ %int_shift_right_zf.i.i, %joinpointcont.outer.i.i.preheader ]
  %int_bitwise_and.i.i.i.i.pn = and i64 %add_int_wrap.i.i.i.i.pn, %call.i.i.i
  %int_shift_left.i.i.i.i = shl nuw i64 %int_bitwise_and.i.i.i.i.pn, 3
  %.not.i.i96.i = icmp eq i64 %39, 0
  br i1 %.not.i.i96.i, label %modification_list_block.i.i.i.i.thread, label %modification_list_block.i.i.i.i

modification_list_block.i.i.i.i.thread:           ; preds = %joinpointcont.outer.i.i
  %list_get_element.i.i.i106165 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %int_shift_left.i.i.i.i
  %list_get_load_element.i.i.i107166 = load i8, i8* %list_get_element.i.i.i106165, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i

modification_list_block.i.i.i.i:                  ; preds = %joinpointcont.outer.i.i
  %40 = add nsw i64 %39, 1
  store i64 %40, i64* %get_rc_ptr.i95.i, align 8
  %list_get_element.i.i.i106 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %int_shift_left.i.i.i.i
  %list_get_load_element.i.i.i107 = load i8, i8* %list_get_element.i.i.i106, align 1
  %.not.i.i.i.i.i.i.i = icmp eq i64 %40, 0
  %spec.store.select212 = select i1 %.not.i.i.i.i.i.i.i, i64 0, i64 %39
  store i64 %spec.store.select212, i64* %get_rc_ptr.i95.i, align 8
  %spec.select = select i1 %.not.i.i.i.i.i.i.i, i64 0, i64 %39
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i: ; preds = %modification_list_block.i.i.i.i, %modification_list_block.i.i.i.i.thread
  %list_get_load_element.i.i.i107168 = phi i8 [ %list_get_load_element.i.i.i107166, %modification_list_block.i.i.i.i.thread ], [ %list_get_load_element.i.i.i107, %modification_list_block.i.i.i.i ]
  %41 = phi i64 [ 0, %modification_list_block.i.i.i.i.thread ], [ %spec.select, %modification_list_block.i.i.i.i ]
  %lt_int.i.i.i = icmp slt i8 %list_get_load_element.i.i.i107168, 0
  br i1 %lt_int.i.i.i, label %modification_list_block.i110.i, label %else_block.i.i

else_block.i.i:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i
  %add_int_wrap.i13.i.i.1 = or i64 %int_shift_left.i.i.i.i, 1
  %.not.i.i96.i.1 = icmp eq i64 %41, 0
  br i1 %.not.i.i96.i.1, label %modification_list_block.i.i.i.i.1.thread, label %modification_list_block.i.i.i.i.1

modification_list_block.i.i.i.i.1.thread:         ; preds = %else_block.i.i
  %list_get_element.i.i.i106.1169 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.1
  %list_get_load_element.i.i.i107.1170 = load i8, i8* %list_get_element.i.i.i106.1169, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1

modification_list_block.i110.i:                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7
  %42 = phi i64 [ %41, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i ], [ %101, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1 ], [ %103, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2 ], [ %105, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3 ], [ %107, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4 ], [ %109, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5 ], [ %111, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6 ], [ %113, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7 ]
  %add_int_wrap.i13.i.i.lcssa = phi i64 [ %int_shift_left.i.i.i.i, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i ], [ %add_int_wrap.i13.i.i.1, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1 ], [ %add_int_wrap.i13.i.i.2, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2 ], [ %add_int_wrap.i13.i.i.3, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3 ], [ %add_int_wrap.i13.i.i.4, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4 ], [ %add_int_wrap.i13.i.i.5, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5 ], [ %add_int_wrap.i13.i.i.6, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6 ], [ %add_int_wrap.i13.i.i.7, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7 ]
  %.not.i.i.i.i109.i = icmp eq i64 %42, 0
  br i1 %.not.i.i.i.i109.i, label %"#Attr_#dec_11.exit.i", label %Then.i.i.i.i111.i

Then.i.i.i.i111.i:                                ; preds = %modification_list_block.i110.i
  %43 = add i64 %42, -1
  store i64 %43, i64* %get_rc_ptr.i95.i, align 8
  %44 = icmp eq i64 %42, -9223372036854775808
  br i1 %44, label %Then1.i.i.i.i112.i, label %"#Attr_#dec_11.exit.i"

Then1.i.i.i.i112.i:                               ; preds = %Then.i.i.i.i111.i
  tail call void @roc_dealloc(i8* %38, i32 8) #11
  br label %"#Attr_#dec_11.exit.i"

"#Attr_#dec_11.exit.i":                           ; preds = %else_block.i.i.us.us.6, %else_block.i.i.us.us.5, %else_block.i.i.us.us.4, %else_block.i.i.us.us.3, %else_block.i.i.us.us.2, %else_block.i.i.us.us.1, %else_block.i.i.us.us, %else_block.i.i.us.us.7, %joinpointcont.outer.i.i.us.preheader, %modification_list_block.i110.i, %Then.i.i.i.i111.i, %Then1.i.i.i.i112.i
  %add_int_wrap.i13.i.i127 = phi i64 [ %add_int_wrap.i13.i.i.lcssa, %modification_list_block.i110.i ], [ %add_int_wrap.i13.i.i.lcssa, %Then.i.i.i.i111.i ], [ %add_int_wrap.i13.i.i.lcssa, %Then1.i.i.i.i112.i ], [ %int_shift_left.i.i.i.i.us198, %joinpointcont.outer.i.i.us.preheader ], [ %int_shift_left.i.i.i.i.us, %else_block.i.i.us.us.7 ], [ %add_int_wrap.i13.i.i.us.us.1, %else_block.i.i.us.us ], [ %add_int_wrap.i13.i.i.us.us.2, %else_block.i.i.us.us.1 ], [ %add_int_wrap.i13.i.i.us.us.3, %else_block.i.i.us.us.2 ], [ %add_int_wrap.i13.i.i.us.us.4, %else_block.i.i.us.us.3 ], [ %add_int_wrap.i13.i.i.us.us.5, %else_block.i.i.us.us.4 ], [ %add_int_wrap.i13.i.i.us.us.6, %else_block.i.i.us.us.5 ], [ %add_int_wrap.i13.i.i.us.us.7, %else_block.i.i.us.us.6 ]
  %list_get_element.i.i.i109115117 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i127
  %.not.i.i.i.i.i = icmp slt i64 %struct_field.unpack19.i, 0
  %45 = select i1 %.not.i.i.i.i.i, i64 %struct_field.unpack17.i, i64 %struct_field.unpack19.i
  %46 = add nuw i64 %struct_field.unpack17.i, 1
  %.not.i.i.i82.i.not = icmp ugt i64 %45, %struct_field.unpack17.i
  %.not.i.i6.i.i = icmp eq i8* %struct_field.unpack.i, null
  br i1 %.not.i.i.i82.i.not, label %List_reserve_887b2c467bba43eb9f381e88aa7ee49c72ef29a77919fdff16cac7939d7b7a8.exit.i.i, label %Else.i.i.i.i

Else.i.i.i.i:                                     ; preds = %"#Attr_#dec_11.exit.i"
  br i1 %.not.i.i6.i.i, label %EndIf.i27.i.i.i.i.i, label %OptionalThen.i.i.i.i.i

OptionalThen.i.i.i.i.i:                           ; preds = %Else.i.i.i.i
  %47 = icmp ne i64 %45, 0
  %48 = or i1 %.not.i.i.i.i.i, %47
  br i1 %48, label %list.RocList.isUnique.exit.i.i.i.i.i, label %Then.i.i.i.i.i

list.RocList.isUnique.exit.i.i.i.i.i:             ; preds = %OptionalThen.i.i.i.i.i
  %49 = getelementptr inbounds i8, i8* %struct_field.unpack.i, i64 -8
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8, !noalias !107
  %phi.cmp.i.i.i.i.i.i = icmp eq i64 %51, -9223372036854775808
  %52 = xor i1 %.not.i.i.i.i.i, true
  %or.cond.i.i.i.i.i = select i1 %phi.cmp.i.i.i.i.i.i, i1 %52, i1 false
  br i1 %or.cond.i.i.i.i.i, label %Then.i.i.i.i.i, label %OptionalEndIf.i.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %list.RocList.isUnique.exit.i.i.i.i.i, %OptionalThen.i.i.i.i.i
  %.not21.i.i.i.i.i.not = icmp ugt i64 %struct_field.unpack19.i, %struct_field.unpack17.i
  br i1 %.not21.i.i.i.i.i.not, label %OptionalThen1.i.i.i.i, label %Else.i.i.i.i.i

Else.i.i.i.i.i:                                   ; preds = %Then.i.i.i.i.i
  %53 = icmp eq i64 %struct_field.unpack19.i, 0
  br i1 %53, label %EndIf9.i.i.i.i.i.i, label %Else1.i.i.i.i.i.i

Else1.i.i.i.i.i.i:                                ; preds = %Else.i.i.i.i.i
  %54 = icmp ult i64 %struct_field.unpack19.i, 512
  br i1 %54, label %Then4.i.i.i.i.i.i, label %Else2.i.i.i.i.i.i

Else2.i.i.i.i.i.i:                                ; preds = %Else1.i.i.i.i.i.i
  %55 = icmp ugt i64 %struct_field.unpack19.i, 16384
  br i1 %55, label %Then5.i.i.i.i.i.i, label %Else6.i.i.i.i.i.i

Then4.i.i.i.i.i.i:                                ; preds = %Else1.i.i.i.i.i.i
  %56 = shl nuw nsw i64 %struct_field.unpack19.i, 1
  br label %EndIf9.i.i.i.i.i.i

Then5.i.i.i.i.i.i:                                ; preds = %Else2.i.i.i.i.i.i
  %57 = shl nuw i64 %struct_field.unpack19.i, 1
  br label %EndIf9.i.i.i.i.i.i

Else6.i.i.i.i.i.i:                                ; preds = %Else2.i.i.i.i.i.i
  %58 = mul nuw nsw i64 %struct_field.unpack19.i, 3
  %59 = add nuw nsw i64 %58, 1
  %60 = lshr i64 %59, 1
  br label %EndIf9.i.i.i.i.i.i

EndIf9.i.i.i.i.i.i:                               ; preds = %Else6.i.i.i.i.i.i, %Then5.i.i.i.i.i.i, %Then4.i.i.i.i.i.i, %Else.i.i.i.i.i
  %new_capacity.0.i.i.i.i.i.i = phi i64 [ %56, %Then4.i.i.i.i.i.i ], [ %57, %Then5.i.i.i.i.i.i ], [ %60, %Else6.i.i.i.i.i.i ], [ 8, %Else.i.i.i.i.i ]
  %61 = icmp ugt i64 %new_capacity.0.i.i.i.i.i.i, %46
  %..i.i.i.i.i.i.i = select i1 %61, i64 %new_capacity.0.i.i.i.i.i.i, i64 %46
  %62 = shl nuw i64 %struct_field.unpack19.i, 3
  %63 = shl nuw i64 %..i.i.i.i.i.i.i, 3
  %.not.i.i.i.i.i.i = icmp ult i64 %62, %63
  br i1 %.not.i.i.i.i.i.i, label %EndIf.i.i.i.i.i.i, label %OptionalThen1.i.i.i.i

EndIf.i.i.i.i.i.i:                                ; preds = %EndIf9.i.i.i.i.i.i
  %64 = add nuw i64 %63, 8
  %65 = add nuw i64 %62, 8
  %66 = getelementptr inbounds i8, i8* %struct_field.unpack.i, i64 -8
  %67 = tail call i8* @roc_realloc(i8* %66, i64 %64, i64 %65, i32 8) #11, !noalias !107
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  br label %OptionalThen1.i.i.i.i

OptionalEndIf.i.i.i.i.i.i:                        ; preds = %list.RocList.isUnique.exit.i.i.i.i.i
  %.inv = icmp ult i64 %struct_field.unpack17.i, 8
  %..i.i.i.i.i.i.i.i.i = select i1 %.inv, i64 8, i64 %46
  %69 = shl nuw i64 %..i.i.i.i.i.i.i.i.i, 3
  %70 = add nuw i64 %69, 8
  %71 = tail call i8* @roc_alloc(i64 %70, i32 8) #11, !noalias !112
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #11
  %73 = getelementptr inbounds i8, i8* %71, i64 8
  %74 = bitcast i8* %71 to i64*
  store i64 -9223372036854775808, i64* %74, align 8, !noalias !112
  %75 = shl nuw i64 %struct_field.unpack17.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* nonnull align 1 %struct_field.unpack.i, i64 %75, i1 false) #11, !noalias !117
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  %77 = bitcast i8* %76 to i64*
  store i64 0, i64* %77, align 1
  %phi.cast.i.i.i.i.i.i = ptrtoint i8* %struct_field.unpack.i to i64
  %78 = shl i64 %struct_field.unpack19.i, 1
  %79 = select i1 %.not.i.i.i.i.i, i64 %78, i64 %phi.cast.i.i.i.i.i.i
  %80 = icmp ne i64 %struct_field.unpack19.i, 0
  %81 = icmp ne i64 %79, 0
  %or.cond.i.i.i.i.i.i.i.i = select i1 %80, i1 %81, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i.i, label %OptionalNonNull.i.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i.i

OptionalNonNull.i.i.i.i.i.i.i.i:                  ; preds = %OptionalEndIf.i.i.i.i.i.i
  %82 = inttoptr i64 %79 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 -8
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8, !noalias !117
  %.not.i.i.i.i.i.i.i.i.i = icmp eq i64 %85, 0
  br i1 %.not.i.i.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i.i, label %Then.i.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i.i:                           ; preds = %OptionalNonNull.i.i.i.i.i.i.i.i
  %86 = add i64 %85, -1
  store i64 %86, i64* %84, align 8, !noalias !117
  %87 = icmp eq i64 %85, -9223372036854775808
  br i1 %87, label %Then1.i.i.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i.i

Then1.i.i.i.i.i.i.i.i.i:                          ; preds = %Then.i.i.i.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %83, i32 8) #11, !noalias !117
  br label %OptionalThen1.i.i.i.i

EndIf.i27.i.i.i.i.i:                              ; preds = %Else.i.i.i.i
  %.inv4 = icmp ult i64 %struct_field.unpack17.i, 8
  %..i.i.i.i.i.i.i.i = select i1 %.inv4, i64 8, i64 %46
  %88 = shl nuw i64 %..i.i.i.i.i.i.i.i, 3
  %89 = add nuw i64 %88, 8
  %90 = tail call i8* @roc_alloc(i64 %89, i32 8) #11, !noalias !118
  %91 = icmp ne i8* %90, null
  tail call void @llvm.assume(i1 %91) #11
  %92 = getelementptr inbounds i8, i8* %90, i64 8
  %93 = bitcast i8* %90 to i64*
  store i64 -9223372036854775808, i64* %93, align 8, !noalias !118
  br label %OptionalThen1.i.i.i.i

List_reserve_887b2c467bba43eb9f381e88aa7ee49c72ef29a77919fdff16cac7939d7b7a8.exit.i.i: ; preds = %"#Attr_#dec_11.exit.i"
  br i1 %.not.i.i6.i.i, label %List_append_fcf113c985a67741abb587c957d5c0cf109c463a8d23bb1911c81bd6346b2d.exit.i, label %OptionalThen1.i.i.i.i

OptionalThen1.i.i.i.i:                            ; preds = %OptionalEndIf.i.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i.i, %EndIf9.i.i.i.i.i.i, %EndIf.i.i.i.i.i.i, %Then.i.i.i.i.i, %EndIf.i27.i.i.i.i.i, %List_reserve_887b2c467bba43eb9f381e88aa7ee49c72ef29a77919fdff16cac7939d7b7a8.exit.i.i
  %list_alloca.i.i.i.sroa.6.0123 = phi i64 [ %struct_field.unpack19.i, %List_reserve_887b2c467bba43eb9f381e88aa7ee49c72ef29a77919fdff16cac7939d7b7a8.exit.i.i ], [ %..i.i.i.i.i.i.i.i.i, %OptionalEndIf.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i, %EndIf9.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i, %EndIf.i.i.i.i.i.i ], [ %struct_field.unpack19.i, %Then.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i, %EndIf.i27.i.i.i.i.i ]
  %list_alloca.i.i.i.sroa.0.0121 = phi i8* [ %struct_field.unpack.i, %List_reserve_887b2c467bba43eb9f381e88aa7ee49c72ef29a77919fdff16cac7939d7b7a8.exit.i.i ], [ %73, %OptionalEndIf.i.i.i.i.i.i ], [ %73, %OptionalNonNull.i.i.i.i.i.i.i.i ], [ %73, %Then.i.i.i.i.i.i.i.i.i ], [ %73, %Then1.i.i.i.i.i.i.i.i.i ], [ %struct_field.unpack.i, %EndIf9.i.i.i.i.i.i ], [ %68, %EndIf.i.i.i.i.i.i ], [ %struct_field.unpack.i, %Then.i.i.i.i.i ], [ %92, %EndIf.i27.i.i.i.i.i ]
  %94 = shl nuw i64 %struct_field.unpack17.i, 3
  %95 = getelementptr inbounds i8, i8* %list_alloca.i.i.i.sroa.0.0121, i64 %94
  %96 = bitcast i8* %95 to i64*
  store i64 %key, i64* %96, align 1
  br label %List_append_fcf113c985a67741abb587c957d5c0cf109c463a8d23bb1911c81bd6346b2d.exit.i

List_append_fcf113c985a67741abb587c957d5c0cf109c463a8d23bb1911c81bd6346b2d.exit.i: ; preds = %OptionalThen1.i.i.i.i, %List_reserve_887b2c467bba43eb9f381e88aa7ee49c72ef29a77919fdff16cac7939d7b7a8.exit.i.i
  %list_alloca.i.i.i.sroa.6.0124 = phi i64 [ %list_alloca.i.i.i.sroa.6.0123, %OptionalThen1.i.i.i.i ], [ %struct_field.unpack19.i, %List_reserve_887b2c467bba43eb9f381e88aa7ee49c72ef29a77919fdff16cac7939d7b7a8.exit.i.i ]
  %list_alloca.i.i.i.sroa.0.0122 = phi i8* [ %list_alloca.i.i.i.sroa.0.0121, %OptionalThen1.i.i.i.i ], [ null, %List_reserve_887b2c467bba43eb9f381e88aa7ee49c72ef29a77919fdff16cac7939d7b7a8.exit.i.i ]
  %lt_uint.i.i.i62.i = icmp ult i64 %add_int_wrap.i13.i.i127, %struct_field1.unpack22.i
  br i1 %lt_uint.i.i.i62.i, label %then_block.i.i76.i, label %List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit.i

then_block.i.i76.i:                               ; preds = %List_append_fcf113c985a67741abb587c957d5c0cf109c463a8d23bb1911c81bd6346b2d.exit.i
  %97 = shl nuw i64 %add_int_wrap.i13.i.i127, 3
  %98 = getelementptr inbounds i8, i8* %struct_field1.unpack.i, i64 %97
  %99 = bitcast i8* %98 to i64*
  store i64 %struct_field.unpack17.i, i64* %99, align 1
  br label %List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit.i

List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit.i: ; preds = %List_append_fcf113c985a67741abb587c957d5c0cf109c463a8d23bb1911c81bd6346b2d.exit.i, %then_block.i.i76.i
  %lt_uint.i.i.i.i = icmp ult i64 %add_int_wrap.i13.i.i127, %struct_field2.unpack27.i
  br i1 %lt_uint.i.i.i.i, label %then_block.i.i.i, label %Dict_insertNotFoundHelper_f4dbc64ef75deb77c4ca0c031ec719e7536bf7feb1472ac492d336536d3fead.exit

then_block.i.i.i:                                 ; preds = %List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit.i
  store i8 %inc_cast.i.i, i8* %list_get_element.i.i.i109115117, align 1
  br label %Dict_insertNotFoundHelper_f4dbc64ef75deb77c4ca0c031ec719e7536bf7feb1472ac492d336536d3fead.exit

Dict_insertNotFoundHelper_f4dbc64ef75deb77c4ca0c031ec719e7536bf7feb1472ac492d336536d3fead.exit: ; preds = %List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit.i, %then_block.i.i.i
  %result_value27.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 0
  store i8* %list_alloca.i.i.i.sroa.0.0122, i8** %result_value27.sroa.0.0..sroa_idx, align 8
  %result_value27.sroa.2.0..sroa_idx44 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 1
  store i64 %46, i64* %result_value27.sroa.2.0..sroa_idx44, align 8
  %result_value27.sroa.3.0..sroa_idx45 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 2
  store i64 %list_alloca.i.i.i.sroa.6.0124, i64* %result_value27.sroa.3.0..sroa_idx45, align 8
  %result_value27.sroa.4.0..sroa_idx46 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 0
  store i8* %struct_field1.unpack.i, i8** %result_value27.sroa.4.0..sroa_idx46, align 8
  %result_value27.sroa.5.0..sroa_idx47 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack22.i, i64* %result_value27.sroa.5.0..sroa_idx47, align 8
  %result_value27.sroa.6.0..sroa_idx48 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 2
  store i64 %struct_field1.unpack24.i, i64* %result_value27.sroa.6.0..sroa_idx48, align 8
  %result_value27.sroa.7.0..sroa_idx49 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 0
  store i8* %struct_field2.unpack.i, i8** %result_value27.sroa.7.0..sroa_idx49, align 8
  %result_value27.sroa.8.0..sroa_idx50 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack27.i, i64* %result_value27.sroa.8.0..sroa_idx50, align 8
  %result_value27.sroa.9.0..sroa_idx51 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 2
  store i64 %struct_field2.unpack29.i, i64* %result_value27.sroa.9.0..sroa_idx51, align 8
  %result_value27.sroa.10.0..sroa_idx52 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 3
  store i64 %struct_field3.i, i64* %result_value27.sroa.10.0..sroa_idx52, align 8
  br label %common.ret

else_block.i.i.us.us.1:                           ; preds = %else_block.i.i.us.us
  %add_int_wrap.i13.i.i.us.us.2 = or i64 %int_shift_left.i.i.i.i.us204, 2
  %list_get_element.i.i.i.us.us.2 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.2
  %list_get_load_element.i.i.i.us.us.2 = load i8, i8* %list_get_element.i.i.i.us.us.2, align 1
  %lt_int.i.i.i114.us.us.2 = icmp slt i8 %list_get_load_element.i.i.i.us.us.2, 0
  br i1 %lt_int.i.i.i114.us.us.2, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.2

else_block.i.i.us.us.2:                           ; preds = %else_block.i.i.us.us.1
  %add_int_wrap.i13.i.i.us.us.3 = or i64 %int_shift_left.i.i.i.i.us204, 3
  %list_get_element.i.i.i.us.us.3 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.3
  %list_get_load_element.i.i.i.us.us.3 = load i8, i8* %list_get_element.i.i.i.us.us.3, align 1
  %lt_int.i.i.i114.us.us.3 = icmp slt i8 %list_get_load_element.i.i.i.us.us.3, 0
  br i1 %lt_int.i.i.i114.us.us.3, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.3

else_block.i.i.us.us.3:                           ; preds = %else_block.i.i.us.us.2
  %add_int_wrap.i13.i.i.us.us.4 = or i64 %int_shift_left.i.i.i.i.us204, 4
  %list_get_element.i.i.i.us.us.4 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.4
  %list_get_load_element.i.i.i.us.us.4 = load i8, i8* %list_get_element.i.i.i.us.us.4, align 1
  %lt_int.i.i.i114.us.us.4 = icmp slt i8 %list_get_load_element.i.i.i.us.us.4, 0
  br i1 %lt_int.i.i.i114.us.us.4, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.4

else_block.i.i.us.us.4:                           ; preds = %else_block.i.i.us.us.3
  %add_int_wrap.i13.i.i.us.us.5 = or i64 %int_shift_left.i.i.i.i.us204, 5
  %list_get_element.i.i.i.us.us.5 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.5
  %list_get_load_element.i.i.i.us.us.5 = load i8, i8* %list_get_element.i.i.i.us.us.5, align 1
  %lt_int.i.i.i114.us.us.5 = icmp slt i8 %list_get_load_element.i.i.i.us.us.5, 0
  br i1 %lt_int.i.i.i114.us.us.5, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.5

else_block.i.i.us.us.5:                           ; preds = %else_block.i.i.us.us.4
  %add_int_wrap.i13.i.i.us.us.6 = or i64 %int_shift_left.i.i.i.i.us204, 6
  %list_get_element.i.i.i.us.us.6 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.6
  %list_get_load_element.i.i.i.us.us.6 = load i8, i8* %list_get_element.i.i.i.us.us.6, align 1
  %lt_int.i.i.i114.us.us.6 = icmp slt i8 %list_get_load_element.i.i.i.us.us.6, 0
  br i1 %lt_int.i.i.i114.us.us.6, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.6

else_block.i.i.us.us.6:                           ; preds = %else_block.i.i.us.us.5
  %add_int_wrap.i13.i.i.us.us.7 = or i64 %int_shift_left.i.i.i.i.us204, 7
  %list_get_element.i.i.i.us.us.7 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.7
  %list_get_load_element.i.i.i.us.us.7 = load i8, i8* %list_get_element.i.i.i.us.us.7, align 1
  %lt_int.i.i.i114.us.us.7 = icmp slt i8 %list_get_load_element.i.i.i.us.us.7, 0
  br i1 %lt_int.i.i.i114.us.us.7, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.7

else_block.i.i.us.us.7:                           ; preds = %else_block.i.i.us.us.6
  %add_int_wrap.i.i.i.i.us = add i64 %int_bitwise_and.i.i.i.i.pn.us203, %add_int_wrap.i5.i.i.i.pn.us202
  %add_int_wrap.i5.i.i.i.us = add i64 %add_int_wrap.i5.i.i.i.pn.us202, 1
  %int_bitwise_and.i.i.i.i.pn.us = and i64 %add_int_wrap.i.i.i.i.us, %call.i.i.i
  %int_shift_left.i.i.i.i.us = shl nuw i64 %int_bitwise_and.i.i.i.i.pn.us, 3
  %list_get_element.i.i.i.us.us = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %int_shift_left.i.i.i.i.us
  %list_get_load_element.i.i.i.us.us = load i8, i8* %list_get_element.i.i.i.us.us, align 1
  %lt_int.i.i.i114.us.us = icmp slt i8 %list_get_load_element.i.i.i.us.us, 0
  br i1 %lt_int.i.i.i114.us.us, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us

modification_list_block.i.i.i.i.1:                ; preds = %else_block.i.i
  %100 = add nsw i64 %41, 1
  store i64 %100, i64* %get_rc_ptr.i95.i, align 8
  %list_get_element.i.i.i106.1 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.1
  %list_get_load_element.i.i.i107.1 = load i8, i8* %list_get_element.i.i.i106.1, align 1
  %.not.i.i.i.i.i.i.i.1 = icmp eq i64 %100, 0
  %spec.store.select213 = select i1 %.not.i.i.i.i.i.i.i.1, i64 0, i64 %41
  store i64 %spec.store.select213, i64* %get_rc_ptr.i95.i, align 8
  %spec.select214 = select i1 %.not.i.i.i.i.i.i.i.1, i64 0, i64 %41
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1: ; preds = %modification_list_block.i.i.i.i.1, %modification_list_block.i.i.i.i.1.thread
  %list_get_load_element.i.i.i107.1172 = phi i8 [ %list_get_load_element.i.i.i107.1170, %modification_list_block.i.i.i.i.1.thread ], [ %list_get_load_element.i.i.i107.1, %modification_list_block.i.i.i.i.1 ]
  %101 = phi i64 [ 0, %modification_list_block.i.i.i.i.1.thread ], [ %spec.select214, %modification_list_block.i.i.i.i.1 ]
  %lt_int.i.i.i.1 = icmp slt i8 %list_get_load_element.i.i.i107.1172, 0
  br i1 %lt_int.i.i.i.1, label %modification_list_block.i110.i, label %else_block.i.i.1

else_block.i.i.1:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1
  %add_int_wrap.i13.i.i.2 = or i64 %int_shift_left.i.i.i.i, 2
  %.not.i.i96.i.2 = icmp eq i64 %101, 0
  br i1 %.not.i.i96.i.2, label %modification_list_block.i.i.i.i.2.thread, label %modification_list_block.i.i.i.i.2

modification_list_block.i.i.i.i.2.thread:         ; preds = %else_block.i.i.1
  %list_get_element.i.i.i106.2173 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.2
  %list_get_load_element.i.i.i107.2174 = load i8, i8* %list_get_element.i.i.i106.2173, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2

modification_list_block.i.i.i.i.2:                ; preds = %else_block.i.i.1
  %102 = add nsw i64 %101, 1
  store i64 %102, i64* %get_rc_ptr.i95.i, align 8
  %list_get_element.i.i.i106.2 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.2
  %list_get_load_element.i.i.i107.2 = load i8, i8* %list_get_element.i.i.i106.2, align 1
  %.not.i.i.i.i.i.i.i.2 = icmp eq i64 %102, 0
  %spec.store.select215 = select i1 %.not.i.i.i.i.i.i.i.2, i64 0, i64 %101
  store i64 %spec.store.select215, i64* %get_rc_ptr.i95.i, align 8
  %spec.select216 = select i1 %.not.i.i.i.i.i.i.i.2, i64 0, i64 %101
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2: ; preds = %modification_list_block.i.i.i.i.2, %modification_list_block.i.i.i.i.2.thread
  %list_get_load_element.i.i.i107.2176 = phi i8 [ %list_get_load_element.i.i.i107.2174, %modification_list_block.i.i.i.i.2.thread ], [ %list_get_load_element.i.i.i107.2, %modification_list_block.i.i.i.i.2 ]
  %103 = phi i64 [ 0, %modification_list_block.i.i.i.i.2.thread ], [ %spec.select216, %modification_list_block.i.i.i.i.2 ]
  %lt_int.i.i.i.2 = icmp slt i8 %list_get_load_element.i.i.i107.2176, 0
  br i1 %lt_int.i.i.i.2, label %modification_list_block.i110.i, label %else_block.i.i.2

else_block.i.i.2:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2
  %add_int_wrap.i13.i.i.3 = or i64 %int_shift_left.i.i.i.i, 3
  %.not.i.i96.i.3 = icmp eq i64 %103, 0
  br i1 %.not.i.i96.i.3, label %modification_list_block.i.i.i.i.3.thread, label %modification_list_block.i.i.i.i.3

modification_list_block.i.i.i.i.3.thread:         ; preds = %else_block.i.i.2
  %list_get_element.i.i.i106.3177 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.3
  %list_get_load_element.i.i.i107.3178 = load i8, i8* %list_get_element.i.i.i106.3177, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3

modification_list_block.i.i.i.i.3:                ; preds = %else_block.i.i.2
  %104 = add nsw i64 %103, 1
  store i64 %104, i64* %get_rc_ptr.i95.i, align 8
  %list_get_element.i.i.i106.3 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.3
  %list_get_load_element.i.i.i107.3 = load i8, i8* %list_get_element.i.i.i106.3, align 1
  %.not.i.i.i.i.i.i.i.3 = icmp eq i64 %104, 0
  %spec.store.select217 = select i1 %.not.i.i.i.i.i.i.i.3, i64 0, i64 %103
  store i64 %spec.store.select217, i64* %get_rc_ptr.i95.i, align 8
  %spec.select218 = select i1 %.not.i.i.i.i.i.i.i.3, i64 0, i64 %103
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3: ; preds = %modification_list_block.i.i.i.i.3, %modification_list_block.i.i.i.i.3.thread
  %list_get_load_element.i.i.i107.3180 = phi i8 [ %list_get_load_element.i.i.i107.3178, %modification_list_block.i.i.i.i.3.thread ], [ %list_get_load_element.i.i.i107.3, %modification_list_block.i.i.i.i.3 ]
  %105 = phi i64 [ 0, %modification_list_block.i.i.i.i.3.thread ], [ %spec.select218, %modification_list_block.i.i.i.i.3 ]
  %lt_int.i.i.i.3 = icmp slt i8 %list_get_load_element.i.i.i107.3180, 0
  br i1 %lt_int.i.i.i.3, label %modification_list_block.i110.i, label %else_block.i.i.3

else_block.i.i.3:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3
  %add_int_wrap.i13.i.i.4 = or i64 %int_shift_left.i.i.i.i, 4
  %.not.i.i96.i.4 = icmp eq i64 %105, 0
  br i1 %.not.i.i96.i.4, label %modification_list_block.i.i.i.i.4.thread, label %modification_list_block.i.i.i.i.4

modification_list_block.i.i.i.i.4.thread:         ; preds = %else_block.i.i.3
  %list_get_element.i.i.i106.4181 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.4
  %list_get_load_element.i.i.i107.4182 = load i8, i8* %list_get_element.i.i.i106.4181, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4

modification_list_block.i.i.i.i.4:                ; preds = %else_block.i.i.3
  %106 = add nsw i64 %105, 1
  store i64 %106, i64* %get_rc_ptr.i95.i, align 8
  %list_get_element.i.i.i106.4 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.4
  %list_get_load_element.i.i.i107.4 = load i8, i8* %list_get_element.i.i.i106.4, align 1
  %.not.i.i.i.i.i.i.i.4 = icmp eq i64 %106, 0
  %spec.store.select219 = select i1 %.not.i.i.i.i.i.i.i.4, i64 0, i64 %105
  store i64 %spec.store.select219, i64* %get_rc_ptr.i95.i, align 8
  %spec.select220 = select i1 %.not.i.i.i.i.i.i.i.4, i64 0, i64 %105
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4: ; preds = %modification_list_block.i.i.i.i.4, %modification_list_block.i.i.i.i.4.thread
  %list_get_load_element.i.i.i107.4184 = phi i8 [ %list_get_load_element.i.i.i107.4182, %modification_list_block.i.i.i.i.4.thread ], [ %list_get_load_element.i.i.i107.4, %modification_list_block.i.i.i.i.4 ]
  %107 = phi i64 [ 0, %modification_list_block.i.i.i.i.4.thread ], [ %spec.select220, %modification_list_block.i.i.i.i.4 ]
  %lt_int.i.i.i.4 = icmp slt i8 %list_get_load_element.i.i.i107.4184, 0
  br i1 %lt_int.i.i.i.4, label %modification_list_block.i110.i, label %else_block.i.i.4

else_block.i.i.4:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4
  %add_int_wrap.i13.i.i.5 = or i64 %int_shift_left.i.i.i.i, 5
  %.not.i.i96.i.5 = icmp eq i64 %107, 0
  br i1 %.not.i.i96.i.5, label %modification_list_block.i.i.i.i.5.thread, label %modification_list_block.i.i.i.i.5

modification_list_block.i.i.i.i.5.thread:         ; preds = %else_block.i.i.4
  %list_get_element.i.i.i106.5185 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.5
  %list_get_load_element.i.i.i107.5186 = load i8, i8* %list_get_element.i.i.i106.5185, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5

modification_list_block.i.i.i.i.5:                ; preds = %else_block.i.i.4
  %108 = add nsw i64 %107, 1
  store i64 %108, i64* %get_rc_ptr.i95.i, align 8
  %list_get_element.i.i.i106.5 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.5
  %list_get_load_element.i.i.i107.5 = load i8, i8* %list_get_element.i.i.i106.5, align 1
  %.not.i.i.i.i.i.i.i.5 = icmp eq i64 %108, 0
  %spec.store.select221 = select i1 %.not.i.i.i.i.i.i.i.5, i64 0, i64 %107
  store i64 %spec.store.select221, i64* %get_rc_ptr.i95.i, align 8
  %spec.select222 = select i1 %.not.i.i.i.i.i.i.i.5, i64 0, i64 %107
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5: ; preds = %modification_list_block.i.i.i.i.5, %modification_list_block.i.i.i.i.5.thread
  %list_get_load_element.i.i.i107.5188 = phi i8 [ %list_get_load_element.i.i.i107.5186, %modification_list_block.i.i.i.i.5.thread ], [ %list_get_load_element.i.i.i107.5, %modification_list_block.i.i.i.i.5 ]
  %109 = phi i64 [ 0, %modification_list_block.i.i.i.i.5.thread ], [ %spec.select222, %modification_list_block.i.i.i.i.5 ]
  %lt_int.i.i.i.5 = icmp slt i8 %list_get_load_element.i.i.i107.5188, 0
  br i1 %lt_int.i.i.i.5, label %modification_list_block.i110.i, label %else_block.i.i.5

else_block.i.i.5:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5
  %add_int_wrap.i13.i.i.6 = or i64 %int_shift_left.i.i.i.i, 6
  %.not.i.i96.i.6 = icmp eq i64 %109, 0
  br i1 %.not.i.i96.i.6, label %modification_list_block.i.i.i.i.6.thread, label %modification_list_block.i.i.i.i.6

modification_list_block.i.i.i.i.6.thread:         ; preds = %else_block.i.i.5
  %list_get_element.i.i.i106.6189 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.6
  %list_get_load_element.i.i.i107.6190 = load i8, i8* %list_get_element.i.i.i106.6189, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6

modification_list_block.i.i.i.i.6:                ; preds = %else_block.i.i.5
  %110 = add nsw i64 %109, 1
  store i64 %110, i64* %get_rc_ptr.i95.i, align 8
  %list_get_element.i.i.i106.6 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.6
  %list_get_load_element.i.i.i107.6 = load i8, i8* %list_get_element.i.i.i106.6, align 1
  %.not.i.i.i.i.i.i.i.6 = icmp eq i64 %110, 0
  %spec.store.select223 = select i1 %.not.i.i.i.i.i.i.i.6, i64 0, i64 %109
  store i64 %spec.store.select223, i64* %get_rc_ptr.i95.i, align 8
  %spec.select224 = select i1 %.not.i.i.i.i.i.i.i.6, i64 0, i64 %109
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6: ; preds = %modification_list_block.i.i.i.i.6, %modification_list_block.i.i.i.i.6.thread
  %list_get_load_element.i.i.i107.6192 = phi i8 [ %list_get_load_element.i.i.i107.6190, %modification_list_block.i.i.i.i.6.thread ], [ %list_get_load_element.i.i.i107.6, %modification_list_block.i.i.i.i.6 ]
  %111 = phi i64 [ 0, %modification_list_block.i.i.i.i.6.thread ], [ %spec.select224, %modification_list_block.i.i.i.i.6 ]
  %lt_int.i.i.i.6 = icmp slt i8 %list_get_load_element.i.i.i107.6192, 0
  br i1 %lt_int.i.i.i.6, label %modification_list_block.i110.i, label %else_block.i.i.6

else_block.i.i.6:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6
  %add_int_wrap.i13.i.i.7 = or i64 %int_shift_left.i.i.i.i, 7
  %.not.i.i96.i.7 = icmp eq i64 %111, 0
  br i1 %.not.i.i96.i.7, label %modification_list_block.i.i.i.i.7.thread, label %modification_list_block.i.i.i.i.7

modification_list_block.i.i.i.i.7.thread:         ; preds = %else_block.i.i.6
  %list_get_element.i.i.i106.7193 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.7
  %list_get_load_element.i.i.i107.7194 = load i8, i8* %list_get_element.i.i.i106.7193, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7

modification_list_block.i.i.i.i.7:                ; preds = %else_block.i.i.6
  %112 = add nsw i64 %111, 1
  store i64 %112, i64* %get_rc_ptr.i95.i, align 8
  %list_get_element.i.i.i106.7 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.7
  %list_get_load_element.i.i.i107.7 = load i8, i8* %list_get_element.i.i.i106.7, align 1
  %.not.i.i.i.i.i.i.i.7 = icmp eq i64 %112, 0
  %spec.store.select225 = select i1 %.not.i.i.i.i.i.i.i.7, i64 0, i64 %111
  store i64 %spec.store.select225, i64* %get_rc_ptr.i95.i, align 8
  %spec.select226 = select i1 %.not.i.i.i.i.i.i.i.7, i64 0, i64 %111
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7: ; preds = %modification_list_block.i.i.i.i.7, %modification_list_block.i.i.i.i.7.thread
  %list_get_load_element.i.i.i107.7196 = phi i8 [ %list_get_load_element.i.i.i107.7194, %modification_list_block.i.i.i.i.7.thread ], [ %list_get_load_element.i.i.i107.7, %modification_list_block.i.i.i.i.7 ]
  %113 = phi i64 [ 0, %modification_list_block.i.i.i.i.7.thread ], [ %spec.select226, %modification_list_block.i.i.i.i.7 ]
  %lt_int.i.i.i.7 = icmp slt i8 %list_get_load_element.i.i.i107.7196, 0
  br i1 %lt_int.i.i.i.7, label %modification_list_block.i110.i, label %else_block.i.i.7

else_block.i.i.7:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7
  %add_int_wrap.i.i.i.i = add i64 %int_bitwise_and.i.i.i.i.pn, %add_int_wrap.i5.i.i.i.pn
  %add_int_wrap.i5.i.i.i = add i64 %add_int_wrap.i5.i.i.i.pn, 1
  br label %joinpointcont.outer.i.i
}

; Function Attrs: nounwind
define internal fastcc void @Dict_insert_8f3cca30279c62eb87d49f74f6e2d0aff9714f4cd7f7d89048851b8ec7aa2944({ %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture readonly %"549", i64 %key, { %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value26 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %struct_field.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 0, i32 0
  %struct_field.unpack = load i8*, i8** %struct_field.elt, align 8
  %1 = insertvalue %list.RocList undef, i8* %struct_field.unpack, 0
  %struct_field.elt28 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 0, i32 1
  %struct_field.unpack29 = load i64, i64* %struct_field.elt28, align 8
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack29, 1
  %struct_field.elt30 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 0, i32 2
  %struct_field.unpack31 = load i64, i64* %struct_field.elt30, align 8
  %struct_field32 = insertvalue %list.RocList %2, i64 %struct_field.unpack31, 2
  %"cap > 0.i.not" = icmp eq i64 %struct_field.unpack31, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#inc_9.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %entry
  %3 = ptrtoint i8* %struct_field.unpack to i64
  %4 = shl i64 %struct_field.unpack31, 1
  %.not.i.i.i = icmp slt i64 %struct_field.unpack31, 0
  %5 = select i1 %.not.i.i.i, i64 %4, i64 %3
  %as_usize_ptr.i = inttoptr i64 %5 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %6 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i = icmp eq i64 %6, 0
  br i1 %.not.i.i, label %"#Attr_#inc_9.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modification_list_block.i
  %7 = add nsw i64 %6, 1
  store i64 %7, i64* %get_rc_ptr.i, align 8
  br label %"#Attr_#inc_9.exit"

"#Attr_#inc_9.exit":                              ; preds = %entry, %modification_list_block.i, %Then.i.i
  %struct_field1.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 1, i32 0
  %struct_field1.unpack = load i8*, i8** %struct_field1.elt, align 8
  %8 = insertvalue %list.RocList undef, i8* %struct_field1.unpack, 0
  %struct_field1.elt33 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 1, i32 1
  %struct_field1.unpack34 = load i64, i64* %struct_field1.elt33, align 8
  %9 = insertvalue %list.RocList %8, i64 %struct_field1.unpack34, 1
  %struct_field1.elt35 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 1, i32 2
  %struct_field1.unpack36 = load i64, i64* %struct_field1.elt35, align 8
  %struct_field137 = insertvalue %list.RocList %9, i64 %struct_field1.unpack36, 2
  %"cap > 0.i81.not" = icmp eq i64 %struct_field1.unpack36, 0
  br i1 %"cap > 0.i81.not", label %"#Attr_#inc_10.exit", label %modification_list_block.i90

modification_list_block.i90:                      ; preds = %"#Attr_#inc_9.exit"
  %10 = ptrtoint i8* %struct_field1.unpack to i64
  %11 = shl i64 %struct_field1.unpack36, 1
  %.not.i.i.i86 = icmp slt i64 %struct_field1.unpack36, 0
  %12 = select i1 %.not.i.i.i86, i64 %11, i64 %10
  %as_usize_ptr.i87 = inttoptr i64 %12 to i64*
  %get_rc_ptr.i88 = getelementptr inbounds i64, i64* %as_usize_ptr.i87, i64 -1
  %13 = load i64, i64* %get_rc_ptr.i88, align 8
  %.not.i.i89 = icmp eq i64 %13, 0
  br i1 %.not.i.i89, label %"#Attr_#inc_10.exit", label %Then.i.i91

Then.i.i91:                                       ; preds = %modification_list_block.i90
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %get_rc_ptr.i88, align 8
  br label %"#Attr_#inc_10.exit"

"#Attr_#inc_10.exit":                             ; preds = %"#Attr_#inc_9.exit", %modification_list_block.i90, %Then.i.i91
  %struct_field2.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 2, i32 0
  %struct_field2.unpack = load i8*, i8** %struct_field2.elt, align 8
  %15 = insertvalue %list.RocList undef, i8* %struct_field2.unpack, 0
  %struct_field2.elt38 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 2, i32 1
  %struct_field2.unpack39 = load i64, i64* %struct_field2.elt38, align 8
  %16 = insertvalue %list.RocList %15, i64 %struct_field2.unpack39, 1
  %struct_field2.elt40 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 2, i32 2
  %struct_field2.unpack41 = load i64, i64* %struct_field2.elt40, align 8
  %struct_field242 = insertvalue %list.RocList %16, i64 %struct_field2.unpack41, 2
  %"cap > 0.i93.not" = icmp eq i64 %struct_field2.unpack41, 0
  br i1 %"cap > 0.i93.not", label %"#Attr_#inc_11.exit", label %modification_list_block.i102

modification_list_block.i102:                     ; preds = %"#Attr_#inc_10.exit"
  %17 = ptrtoint i8* %struct_field2.unpack to i64
  %18 = shl i64 %struct_field2.unpack41, 1
  %.not.i.i.i98 = icmp slt i64 %struct_field2.unpack41, 0
  %19 = select i1 %.not.i.i.i98, i64 %18, i64 %17
  %as_usize_ptr.i99 = inttoptr i64 %19 to i64*
  %get_rc_ptr.i100 = getelementptr inbounds i64, i64* %as_usize_ptr.i99, i64 -1
  %20 = load i64, i64* %get_rc_ptr.i100, align 8
  %.not.i.i101 = icmp eq i64 %20, 0
  br i1 %.not.i.i101, label %"#Attr_#inc_11.exit", label %Then.i.i103

Then.i.i103:                                      ; preds = %modification_list_block.i102
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %get_rc_ptr.i100, align 8
  br label %"#Attr_#inc_11.exit"

"#Attr_#inc_11.exit":                             ; preds = %"#Attr_#inc_10.exit", %modification_list_block.i102, %Then.i.i103
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"549", i64 0, i32 3
  %struct_field3 = load i64, i64* %struct_field_access_record_3, align 8
  %int_bitwise_or.i14.i.i = tail call i64 @llvm.fshl.i64(i64 %key, i64 %key, i64 32) #11
  %int_bitwise_xor.i.i.i.i = xor i64 %int_bitwise_or.i14.i.i, -1800455987208640293
  %inc_cast.i.i.i26.i.i.i = zext i64 %int_bitwise_xor.i.i.i.i to i128
  %int_bitwise_xor.i24.i.i.i = xor i64 %key, xor (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64), i64 -6884282663029611473)
  %inc_cast.i9.i.i27.i.i.i = zext i64 %int_bitwise_xor.i24.i.i.i to i128
  %call.i.i.i28.i.i.i = mul nuw i128 %inc_cast.i.i.i26.i.i.i, %inc_cast.i9.i.i27.i.i.i
  %call.i.i.i28.i.i.masked.i = and i128 %call.i.i.i28.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i33.i.i.i = lshr i128 %call.i.i.i28.i.i.i, 64
  %inc_cast.i9.i.i12.i.i.i = xor i128 %call.i.i.i28.i.i.masked.i, %int_shift_right_zf.i.i.i33.i.i.i
  %call.i.i.i13.i.i.i = mul nuw i128 %inc_cast.i9.i.i12.i.i.i, 16646288086500911315
  %call.i.i.i13.i.i.masked.i = and i128 %call.i.i.i13.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i18.i.i.i = lshr i128 %call.i.i.i13.i.i.i, 64
  %inc_cast.i9.i.i.i.i.i = xor i128 %call.i.i.i13.i.i.masked.i, %int_shift_right_zf.i.i.i18.i.i.i
  %call.i.i.i.i.i.i = mul nuw i128 %inc_cast.i9.i.i.i.i.i, zext (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64) to i128)
  %int_shift_right_zf.i.i.i.i.i.i = lshr i128 %call.i.i.i.i.i.i, 64
  %int_bitwise_xor.i.i.i.i3.i = xor i128 %int_shift_right_zf.i.i.i.i.i.i, %call.i.i.i.i.i.i
  %int_bitwise_xor.i.i.i.i.i = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i64
  %int_shift_right_zf.i.i = lshr i64 %int_bitwise_xor.i.i.i.i.i, 7
  %22 = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i8
  %inc_cast.i.i = and i8 %22, 127
  %int_shift_right_zf.i.i105 = lshr i64 %struct_field2.unpack39, 3
  %call.i.i = tail call i64 @llvm.usub.sat.i64(i64 %int_shift_right_zf.i.i105, i64 1) #11
  %int_bitwise_and.i.i106 = and i64 %call.i.i, %int_shift_right_zf.i.i
  %insert_record_field.i107 = insertvalue { i64, i64, i64 } zeroinitializer, i64 %call.i.i, 0
  %insert_record_field3.i = insertvalue { i64, i64, i64 } %insert_record_field.i107, i64 1, 1
  %insert_record_field4.i = insertvalue { i64, i64, i64 } %insert_record_field3.i, i64 %int_bitwise_and.i.i106, 2
  call fastcc void @Dict_findIndexHelper_e47c9feb62d02dbc5afe27826eafa0261cd425616a549be729759631e1bdb82c(%list.RocList %struct_field242, %list.RocList %struct_field137, %list.RocList %struct_field32, i8 %inc_cast.i.i, i64 %key, { i64, i64, i64 } %insert_record_field4.i, { [0 x i64], [1 x i64], i8, [7 x i8] }* nonnull %result_value)
  %tag_id_ptr11 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr11, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %Dict_insertNotFoundHelper_bf1cdcacc8dd9385ad85e8797abbf788d336a1405490ec9e7ca0fbf044195a.exit, %List_set_808d7aa3b77d4a75381528fd29ac3d726963900b646d95e4fd431f7199cc9a.exit
  ret void

then_block:                                       ; preds = %"#Attr_#inc_11.exit"
  br i1 %"cap > 0.i81.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split, label %modification_list_block.i118

modification_list_block.i118:                     ; preds = %then_block
  %23 = ptrtoint i8* %struct_field1.unpack to i64
  %24 = shl i64 %struct_field1.unpack36, 1
  %.not.i.i.i114 = icmp slt i64 %struct_field1.unpack36, 0
  %25 = select i1 %.not.i.i.i114, i64 %24, i64 %23
  %as_usize_ptr.i115 = inttoptr i64 %25 to i64*
  %get_rc_ptr.i116 = getelementptr inbounds i64, i64* %as_usize_ptr.i115, i64 -1
  %26 = load i64, i64* %get_rc_ptr.i116, align 8
  %.not.i.i117 = icmp eq i64 %26, 0
  br i1 %.not.i.i117, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split, label %modification_list_block.i.i131

modification_list_block.i.i131:                   ; preds = %modification_list_block.i118
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* %get_rc_ptr.i116, align 8
  %get_opaque_data_ptr12145 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_element146 = load i64, i64* %get_opaque_data_ptr12145, align 8
  %cast_basic_basic.i147 = bitcast i8* %struct_field1.unpack to i64*
  %list_get_element.i148 = getelementptr inbounds i64, i64* %cast_basic_basic.i147, i64 %load_element146
  %list_get_load_element.i149 = load i64, i64* %list_get_element.i148, align 8
  %.not.i.i.i.i.i130 = icmp eq i64 %27, 0
  %spec.store.select = select i1 %.not.i.i.i.i.i130, i64 0, i64 %26
  store i64 %spec.store.select, i64* %get_rc_ptr.i116, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split: ; preds = %then_block, %modification_list_block.i118
  %get_opaque_data_ptr12145206 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_element146207 = load i64, i64* %get_opaque_data_ptr12145206, align 8
  %cast_basic_basic.i147208 = bitcast i8* %struct_field1.unpack to i64*
  %list_get_element.i148209 = getelementptr inbounds i64, i64* %cast_basic_basic.i147208, i64 %load_element146207
  %list_get_load_element.i149210 = load i64, i64* %list_get_element.i148209, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit: ; preds = %modification_list_block.i.i131, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split
  %list_get_load_element.i151 = phi i64 [ %list_get_load_element.i149, %modification_list_block.i.i131 ], [ %list_get_load_element.i149210, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split ]
  %lt_uint.i.i.i = icmp ult i64 %list_get_load_element.i151, %struct_field.unpack29
  br i1 %lt_uint.i.i.i, label %then_block.i.i, label %List_set_808d7aa3b77d4a75381528fd29ac3d726963900b646d95e4fd431f7199cc9a.exit

then_block.i.i:                                   ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit
  %.not.i.i.i.i.i.i.i.i147 = icmp slt i64 %struct_field.unpack31, 0
  %28 = select i1 %.not.i.i.i.i.i.i.i.i147, i64 %struct_field.unpack29, i64 %struct_field.unpack31
  %29 = icmp ne i64 %28, 0
  %30 = or i1 %.not.i.i.i.i.i.i.i.i147, %29
  br i1 %30, label %list.RocList.isUnique.exit.i.i.i.i.i149, label %List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i

list.RocList.isUnique.exit.i.i.i.i.i149:          ; preds = %then_block.i.i
  %31 = getelementptr inbounds i8, i8* %struct_field.unpack, i64 -8
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !121
  %phi.cmp.i.i.i.i.i.i148 = icmp eq i64 %33, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i.i.i148, label %List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i, label %EndIf.i.i.i.i.i.i155

EndIf.i.i.i.i.i.i155:                             ; preds = %list.RocList.isUnique.exit.i.i.i.i.i149
  %34 = icmp ugt i64 %struct_field.unpack29, 8
  %..i.i.i.i.i.i.i.i153 = select i1 %34, i64 %struct_field.unpack29, i64 8
  %35 = shl nuw i64 %..i.i.i.i.i.i.i.i153, 3
  %36 = add nuw i64 %35, 8
  %37 = tail call i8* @roc_alloc(i64 %36, i32 8) #11, !noalias !126
  %38 = icmp ne i8* %37, null
  tail call void @llvm.assume(i1 %38) #11
  %39 = getelementptr inbounds i8, i8* %37, i64 8
  %40 = bitcast i8* %37 to i64*
  store i64 -9223372036854775808, i64* %40, align 8, !noalias !126
  %41 = shl nuw i64 %struct_field.unpack29, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* nonnull align 1 %struct_field.unpack, i64 %41, i1 false) #11, !noalias !121
  %42 = ptrtoint i8* %struct_field.unpack to i64
  %43 = shl i64 %struct_field.unpack31, 1
  %44 = select i1 %.not.i.i.i.i.i.i.i.i147, i64 %43, i64 %42
  %45 = icmp ne i64 %struct_field.unpack31, 0
  %46 = icmp ne i64 %44, 0
  %or.cond.i.i15.i.i.i.i.i = select i1 %45, i1 %46, i1 false
  br i1 %or.cond.i.i15.i.i.i.i.i, label %OptionalNonNull.i.i17.i.i.i.i.i, label %List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i

OptionalNonNull.i.i17.i.i.i.i.i:                  ; preds = %EndIf.i.i.i.i.i.i155
  %47 = inttoptr i64 %44 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 -8
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !121
  %.not.i.i.i16.i.i.i.i.i = icmp eq i64 %50, 0
  br i1 %.not.i.i.i16.i.i.i.i.i, label %List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i, label %Then.i.i.i18.i.i.i.i.i

Then.i.i.i18.i.i.i.i.i:                           ; preds = %OptionalNonNull.i.i17.i.i.i.i.i
  %51 = add i64 %50, -1
  store i64 %51, i64* %49, align 8, !noalias !121
  %52 = icmp eq i64 %50, -9223372036854775808
  br i1 %52, label %Then1.i.i.i20.i.i.i.i.i, label %List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i

Then1.i.i.i20.i.i.i.i.i:                          ; preds = %Then.i.i.i18.i.i.i.i.i
  tail call void @roc_dealloc(i8* %48, i32 8) #11, !noalias !121
  br label %List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i

List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i: ; preds = %EndIf.i.i.i.i.i.i155, %OptionalNonNull.i.i17.i.i.i.i.i, %Then.i.i.i18.i.i.i.i.i, %Then1.i.i.i20.i.i.i.i.i, %then_block.i.i, %list.RocList.isUnique.exit.i.i.i.i.i149
  %.sroa.10139.0 = phi i64 [ %struct_field.unpack31, %list.RocList.isUnique.exit.i.i.i.i.i149 ], [ %struct_field.unpack31, %then_block.i.i ], [ %..i.i.i.i.i.i.i.i153, %Then1.i.i.i20.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i153, %Then.i.i.i18.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i153, %OptionalNonNull.i.i17.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i153, %EndIf.i.i.i.i.i.i155 ]
  %.sroa.0133.0 = phi i8* [ %struct_field.unpack, %list.RocList.isUnique.exit.i.i.i.i.i149 ], [ %struct_field.unpack, %then_block.i.i ], [ %39, %Then1.i.i.i20.i.i.i.i.i ], [ %39, %Then.i.i.i18.i.i.i.i.i ], [ %39, %OptionalNonNull.i.i17.i.i.i.i.i ], [ %39, %EndIf.i.i.i.i.i.i155 ]
  %53 = shl nuw i64 %list_get_load_element.i151, 3
  %54 = getelementptr inbounds i8, i8* %.sroa.0133.0, i64 %53
  %55 = bitcast i8* %54 to i64*
  store i64 %key, i64* %55, align 1
  %56 = insertvalue %list.RocList undef, i8* %.sroa.0133.0, 0
  %57 = insertvalue %list.RocList %56, i64 %struct_field.unpack29, 1
  %load_list12.i.i.i162 = insertvalue %list.RocList %57, i64 %.sroa.10139.0, 2
  br label %List_set_808d7aa3b77d4a75381528fd29ac3d726963900b646d95e4fd431f7199cc9a.exit

List_set_808d7aa3b77d4a75381528fd29ac3d726963900b646d95e4fd431f7199cc9a.exit: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit, %List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i
  %load_list12.i.i.i162.pn = phi %list.RocList [ %load_list12.i.i.i162, %List_replaceUnsafe_97724acc24c5e8da77dea372456247235c9ff3f8de91477eb8449bb6c8dd46.exit.i.i ], [ %struct_field32, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit ]
  %struct_alloca = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca.repack.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 0
  %call15.elt = extractvalue %list.RocList %load_list12.i.i.i162.pn, 0
  store i8* %call15.elt, i8** %struct_alloca.repack.repack, align 8
  %struct_alloca.repack.repack67 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 1
  %call15.elt68 = extractvalue %list.RocList %load_list12.i.i.i162.pn, 1
  store i64 %call15.elt68, i64* %struct_alloca.repack.repack67, align 8
  %struct_alloca.repack.repack69 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 2
  %call15.elt70 = extractvalue %list.RocList %load_list12.i.i.i162.pn, 2
  store i64 %call15.elt70, i64* %struct_alloca.repack.repack69, align 8
  %struct_alloca.repack61.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 0
  store i8* %struct_field1.unpack, i8** %struct_alloca.repack61.repack, align 8
  %struct_alloca.repack61.repack71 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack34, i64* %struct_alloca.repack61.repack71, align 8
  %struct_alloca.repack61.repack73 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 2
  store i64 %struct_field1.unpack36, i64* %struct_alloca.repack61.repack73, align 8
  %struct_alloca.repack63.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 0
  store i8* %struct_field2.unpack, i8** %struct_alloca.repack63.repack, align 8
  %struct_alloca.repack63.repack75 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack39, i64* %struct_alloca.repack63.repack75, align 8
  %struct_alloca.repack63.repack77 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 2
  store i64 %struct_field2.unpack41, i64* %struct_alloca.repack63.repack77, align 8
  %struct_alloca.repack65 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3
  store i64 %struct_field3, i64* %struct_alloca.repack65, align 8
  %58 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %0 to i8*
  %59 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %58, i8* noundef nonnull align 8 dereferenceable(80) %59, i64 80, i1 false)
  br label %common.ret

else_block:                                       ; preds = %"#Attr_#inc_11.exit"
  %call.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field3, i64 1) #11
  %has_overflowed.i = extractvalue { i64, i1 } %call.i, 1
  br i1 %has_overflowed.i, label %throw_block.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit

throw_block.i:                                    ; preds = %else_block
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit: ; preds = %else_block
  %operation_result.i = extractvalue { i64, i1 } %call.i, 0
  %struct_alloca25 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca25.repack.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 0, i32 0
  store i8* %struct_field.unpack, i8** %struct_alloca25.repack.repack, align 8
  %struct_alloca25.repack.repack49 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 0, i32 1
  store i64 %struct_field.unpack29, i64* %struct_alloca25.repack.repack49, align 8
  %struct_alloca25.repack.repack51 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 0, i32 2
  store i64 %struct_field.unpack31, i64* %struct_alloca25.repack.repack51, align 8
  %struct_alloca25.repack43.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 1, i32 0
  store i8* %struct_field1.unpack, i8** %struct_alloca25.repack43.repack, align 8
  %struct_alloca25.repack43.repack53 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack34, i64* %struct_alloca25.repack43.repack53, align 8
  %struct_alloca25.repack43.repack55 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 1, i32 2
  store i64 %struct_field1.unpack36, i64* %struct_alloca25.repack43.repack55, align 8
  %struct_alloca25.repack45.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 2, i32 0
  store i8* %struct_field2.unpack, i8** %struct_alloca25.repack45.repack, align 8
  %struct_alloca25.repack45.repack57 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack39, i64* %struct_alloca25.repack45.repack57, align 8
  %struct_alloca25.repack45.repack59 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 2, i32 2
  store i64 %struct_field2.unpack41, i64* %struct_alloca25.repack45.repack59, align 8
  %struct_alloca25.repack47 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca25, i64 0, i32 3
  store i64 %operation_result.i, i64* %struct_alloca25.repack47, align 8
  call fastcc void @Dict_maybeRehash_922133a322eca5f989b59c16de354928864aa2246622ff4e01750630af36ed({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_alloca25, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value26)
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt16.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 0, i32 1
  %struct_field.unpack17.i = load i64, i64* %struct_field.elt16.i, align 8
  %struct_field.elt18.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 0, i32 2
  %struct_field.unpack19.i = load i64, i64* %struct_field.elt18.i, align 8
  %struct_field1.elt.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 1, i32 0
  %struct_field1.unpack.i = load i8*, i8** %struct_field1.elt.i, align 8
  %struct_field1.elt21.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 1, i32 1
  %struct_field1.unpack22.i = load i64, i64* %struct_field1.elt21.i, align 8
  %struct_field1.elt23.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 1, i32 2
  %struct_field1.unpack24.i = load i64, i64* %struct_field1.elt23.i, align 8
  %struct_field2.elt.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 2, i32 0
  %struct_field2.unpack.i = load i8*, i8** %struct_field2.elt.i, align 8
  %struct_field2.elt26.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 2, i32 1
  %struct_field2.unpack27.i = load i64, i64* %struct_field2.elt26.i, align 8
  %struct_field2.elt28.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 2, i32 2
  %struct_field2.unpack29.i = load i64, i64* %struct_field2.elt28.i, align 8
  %"cap > 0.i.i.not" = icmp eq i64 %struct_field2.unpack29.i, 0
  %.pre202 = ptrtoint i8* %struct_field2.unpack.i to i64
  br i1 %"cap > 0.i.i.not", label %"#Attr_#inc_11.exit.i", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit
  %60 = shl i64 %struct_field2.unpack29.i, 1
  %.not.i.i.i.i = icmp slt i64 %struct_field2.unpack29.i, 0
  %61 = select i1 %.not.i.i.i.i, i64 %60, i64 %.pre202
  %as_usize_ptr.i.i = inttoptr i64 %61 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %62 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i79 = icmp eq i64 %62, 0
  br i1 %.not.i.i.i79, label %"#Attr_#inc_11.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modification_list_block.i.i
  %63 = add nsw i64 %62, 1
  store i64 %63, i64* %get_rc_ptr.i.i, align 8
  br label %"#Attr_#inc_11.exit.i"

"#Attr_#inc_11.exit.i":                           ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit, %Then.i.i.i, %modification_list_block.i.i
  %.pre-phi205 = phi i64 [ %60, %Then.i.i.i ], [ %60, %modification_list_block.i.i ], [ 0, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %struct_field_access_record_3.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value26, i64 0, i32 3
  %struct_field3.i = load i64, i64* %struct_field_access_record_3.i, align 8
  %int_shift_right_zf.i.i.i = lshr i64 %struct_field2.unpack27.i, 3
  %call.i.i.i = tail call i64 @llvm.usub.sat.i64(i64 %int_shift_right_zf.i.i.i, i64 1) #11
  %.not.i.i.i122.i = icmp slt i64 %struct_field2.unpack29.i, 0
  %64 = select i1 %.not.i.i.i122.i, i64 %.pre-phi205, i64 %.pre202
  %as_usize_ptr.i123.i = inttoptr i64 %64 to i64*
  %get_rc_ptr.i124.i = getelementptr inbounds i64, i64* %as_usize_ptr.i123.i, i64 -1
  %65 = bitcast i64* %get_rc_ptr.i124.i to i8*
  br i1 %"cap > 0.i.i.not", label %joinpointcont.outer.i.i.us.preheader, label %joinpointcont.outer.i.i.preheader

joinpointcont.outer.i.i.us.preheader:             ; preds = %"#Attr_#inc_11.exit.i"
  %int_bitwise_and.i.i.i.i.pn.us248 = and i64 %int_shift_right_zf.i.i, %call.i.i.i
  %int_shift_left.i.i.i.i.us249 = shl nuw nsw i64 %int_bitwise_and.i.i.i.i.pn.us248, 3
  %list_get_element.i.i.i.us.us250 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %int_shift_left.i.i.i.i.us249
  %list_get_load_element.i.i.i.us.us251 = load i8, i8* %list_get_element.i.i.i.us.us250, align 1
  %lt_int.i.i.i157.us.us252 = icmp slt i8 %list_get_load_element.i.i.i.us.us251, 0
  br i1 %lt_int.i.i.i157.us.us252, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us

joinpointcont.outer.i.i.preheader:                ; preds = %"#Attr_#inc_11.exit.i"
  %.pre201 = load i64, i64* %get_rc_ptr.i124.i, align 8
  br label %joinpointcont.outer.i.i

else_block.i.i.us.us:                             ; preds = %joinpointcont.outer.i.i.us.preheader, %else_block.i.i.us.us.7
  %int_shift_left.i.i.i.i.us255 = phi i64 [ %int_shift_left.i.i.i.i.us, %else_block.i.i.us.us.7 ], [ %int_shift_left.i.i.i.i.us249, %joinpointcont.outer.i.i.us.preheader ]
  %int_bitwise_and.i.i.i.i.pn.us254 = phi i64 [ %int_bitwise_and.i.i.i.i.pn.us, %else_block.i.i.us.us.7 ], [ %int_bitwise_and.i.i.i.i.pn.us248, %joinpointcont.outer.i.i.us.preheader ]
  %add_int_wrap.i5.i.i.i.pn.us253 = phi i64 [ %add_int_wrap.i5.i.i.i.us, %else_block.i.i.us.us.7 ], [ 1, %joinpointcont.outer.i.i.us.preheader ]
  %add_int_wrap.i13.i.i.us.us.1 = or i64 %int_shift_left.i.i.i.i.us255, 1
  %list_get_element.i.i.i.us.us.1 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.1
  %list_get_load_element.i.i.i.us.us.1 = load i8, i8* %list_get_element.i.i.i.us.us.1, align 1
  %lt_int.i.i.i157.us.us.1 = icmp slt i8 %list_get_load_element.i.i.i.us.us.1, 0
  br i1 %lt_int.i.i.i157.us.us.1, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.1

joinpointcont.outer.i.i:                          ; preds = %joinpointcont.outer.i.i.preheader, %else_block.i.i.7
  %66 = phi i64 [ %186, %else_block.i.i.7 ], [ %.pre201, %joinpointcont.outer.i.i.preheader ]
  %add_int_wrap.i5.i.i.i.pn = phi i64 [ %add_int_wrap.i5.i.i.i, %else_block.i.i.7 ], [ 1, %joinpointcont.outer.i.i.preheader ]
  %add_int_wrap.i.i.i.i.pn = phi i64 [ %add_int_wrap.i.i.i.i, %else_block.i.i.7 ], [ %int_shift_right_zf.i.i, %joinpointcont.outer.i.i.preheader ]
  %int_bitwise_and.i.i.i.i.pn = and i64 %add_int_wrap.i.i.i.i.pn, %call.i.i.i
  %int_shift_left.i.i.i.i = shl nuw i64 %int_bitwise_and.i.i.i.i.pn, 3
  %.not.i.i125.i = icmp eq i64 %66, 0
  br i1 %.not.i.i125.i, label %modification_list_block.i.i.i.i.thread, label %modification_list_block.i.i.i.i

modification_list_block.i.i.i.i.thread:           ; preds = %joinpointcont.outer.i.i
  %list_get_element.i.i.i152212 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %int_shift_left.i.i.i.i
  %list_get_load_element.i.i.i153213 = load i8, i8* %list_get_element.i.i.i152212, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i

modification_list_block.i.i.i.i:                  ; preds = %joinpointcont.outer.i.i
  %67 = add nsw i64 %66, 1
  store i64 %67, i64* %get_rc_ptr.i124.i, align 8
  %list_get_element.i.i.i152 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %int_shift_left.i.i.i.i
  %list_get_load_element.i.i.i153 = load i8, i8* %list_get_element.i.i.i152, align 1
  %.not.i.i.i.i.i.i.i = icmp eq i64 %67, 0
  %spec.store.select263 = select i1 %.not.i.i.i.i.i.i.i, i64 0, i64 %66
  store i64 %spec.store.select263, i64* %get_rc_ptr.i124.i, align 8
  %spec.select = select i1 %.not.i.i.i.i.i.i.i, i64 0, i64 %66
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i: ; preds = %modification_list_block.i.i.i.i, %modification_list_block.i.i.i.i.thread
  %list_get_load_element.i.i.i153215 = phi i8 [ %list_get_load_element.i.i.i153213, %modification_list_block.i.i.i.i.thread ], [ %list_get_load_element.i.i.i153, %modification_list_block.i.i.i.i ]
  %68 = phi i64 [ 0, %modification_list_block.i.i.i.i.thread ], [ %spec.select, %modification_list_block.i.i.i.i ]
  %lt_int.i.i.i = icmp slt i8 %list_get_load_element.i.i.i153215, 0
  br i1 %lt_int.i.i.i, label %modification_list_block.i138.i, label %else_block.i.i

else_block.i.i:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i
  %add_int_wrap.i13.i.i.1 = or i64 %int_shift_left.i.i.i.i, 1
  %.not.i.i125.i.1 = icmp eq i64 %68, 0
  br i1 %.not.i.i125.i.1, label %modification_list_block.i.i.i.i.1.thread, label %modification_list_block.i.i.i.i.1

modification_list_block.i.i.i.i.1.thread:         ; preds = %else_block.i.i
  %list_get_element.i.i.i152.1220 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.1
  %list_get_load_element.i.i.i153.1221 = load i8, i8* %list_get_element.i.i.i152.1220, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1

modification_list_block.i138.i:                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7
  %69 = phi i64 [ %68, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i ], [ %174, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1 ], [ %176, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2 ], [ %178, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3 ], [ %180, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4 ], [ %182, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5 ], [ %184, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6 ], [ %186, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7 ]
  %add_int_wrap.i13.i.i.lcssa = phi i64 [ %int_shift_left.i.i.i.i, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i ], [ %add_int_wrap.i13.i.i.1, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1 ], [ %add_int_wrap.i13.i.i.2, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2 ], [ %add_int_wrap.i13.i.i.3, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3 ], [ %add_int_wrap.i13.i.i.4, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4 ], [ %add_int_wrap.i13.i.i.5, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5 ], [ %add_int_wrap.i13.i.i.6, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6 ], [ %add_int_wrap.i13.i.i.7, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7 ]
  %.not.i.i.i.i.i = icmp eq i64 %69, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_11.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i138.i
  %70 = add i64 %69, -1
  store i64 %70, i64* %get_rc_ptr.i124.i, align 8
  %71 = icmp eq i64 %69, -9223372036854775808
  br i1 %71, label %Then1.i.i.i.i.i, label %"#Attr_#dec_11.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %65, i32 8) #11
  br label %"#Attr_#dec_11.exit.i"

"#Attr_#dec_11.exit.i":                           ; preds = %else_block.i.i.us.us.6, %else_block.i.i.us.us.5, %else_block.i.i.us.us.4, %else_block.i.i.us.us.3, %else_block.i.i.us.us.2, %else_block.i.i.us.us.1, %else_block.i.i.us.us, %else_block.i.i.us.us.7, %joinpointcont.outer.i.i.us.preheader, %modification_list_block.i138.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i
  %add_int_wrap.i13.i.i173 = phi i64 [ %add_int_wrap.i13.i.i.lcssa, %modification_list_block.i138.i ], [ %add_int_wrap.i13.i.i.lcssa, %Then.i.i.i.i.i ], [ %add_int_wrap.i13.i.i.lcssa, %Then1.i.i.i.i.i ], [ %int_shift_left.i.i.i.i.us249, %joinpointcont.outer.i.i.us.preheader ], [ %int_shift_left.i.i.i.i.us, %else_block.i.i.us.us.7 ], [ %add_int_wrap.i13.i.i.us.us.1, %else_block.i.i.us.us ], [ %add_int_wrap.i13.i.i.us.us.2, %else_block.i.i.us.us.1 ], [ %add_int_wrap.i13.i.i.us.us.3, %else_block.i.i.us.us.2 ], [ %add_int_wrap.i13.i.i.us.us.4, %else_block.i.i.us.us.3 ], [ %add_int_wrap.i13.i.i.us.us.5, %else_block.i.i.us.us.4 ], [ %add_int_wrap.i13.i.i.us.us.6, %else_block.i.i.us.us.5 ], [ %add_int_wrap.i13.i.i.us.us.7, %else_block.i.i.us.us.6 ]
  %.not.i.i.i.i.i.i139.i = icmp slt i64 %struct_field.unpack19.i, 0
  %72 = select i1 %.not.i.i.i.i.i.i139.i, i64 %struct_field.unpack17.i, i64 %struct_field.unpack19.i
  %73 = icmp ne i64 %72, 0
  %74 = or i1 %.not.i.i.i.i.i.i139.i, %73
  br i1 %74, label %list.RocList.isUnique.exit.i.i.i.i, label %BoolAndTrue.i.i.i.i

list.RocList.isUnique.exit.i.i.i.i:               ; preds = %"#Attr_#dec_11.exit.i"
  %75 = getelementptr inbounds i8, i8* %struct_field.unpack.i, i64 -8
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !129
  %phi.cmp.i.i.i.i.i = icmp eq i64 %77, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i.i, label %BoolAndTrue.i.i.i.i, label %list.RocList.isUnique.exit.i.i.i.i.i.thread

list.RocList.isUnique.exit.i.i.i.i.i.thread:      ; preds = %list.RocList.isUnique.exit.i.i.i.i
  %.pre-phi.i.i.i.i158 = add nuw i64 %struct_field.unpack17.i, 1
  br label %OptionalEndIf.i.i.i.i.i.i

BoolAndTrue.i.i.i.i:                              ; preds = %list.RocList.isUnique.exit.i.i.i.i, %"#Attr_#dec_11.exit.i"
  %.not.i.i.i141.i.not = icmp ugt i64 %72, %struct_field.unpack17.i
  br i1 %.not.i.i.i141.i.not, label %List_reserve_4498d20401fc2d1d8c2d5242e14c2cce043ad88d3d1f9b71dbafd1538a2898.exit.i.i, label %Else.i.i.i.i

Else.i.i.i.i:                                     ; preds = %BoolAndTrue.i.i.i.i
  %.pre-phi.i.i.i.i = add nuw i64 %struct_field.unpack17.i, 1
  %.not.i1.i.i.i.i = icmp eq i8* %struct_field.unpack.i, null
  br i1 %.not.i1.i.i.i.i, label %OptionalEndIf.i.i.i.i.i, label %OptionalThen.i.i.i.i.i

OptionalThen.i.i.i.i.i:                           ; preds = %Else.i.i.i.i
  br i1 %74, label %list.RocList.isUnique.exit.i.i.i.i.i, label %Then.i.i.i.i142.i

list.RocList.isUnique.exit.i.i.i.i.i:             ; preds = %OptionalThen.i.i.i.i.i
  %.phi.trans.insert = getelementptr inbounds i8, i8* %struct_field.unpack.i, i64 -8
  %.phi.trans.insert200 = bitcast i8* %.phi.trans.insert to i64*
  %.pre = load i64, i64* %.phi.trans.insert200, align 8, !noalias !132
  %phi.cmp.i.i.i.i.i.i = icmp eq i64 %.pre, -9223372036854775808
  %78 = xor i1 %.not.i.i.i.i.i.i139.i, true
  %or.cond.i.i.i.i.i = select i1 %phi.cmp.i.i.i.i.i.i, i1 %78, i1 false
  br i1 %or.cond.i.i.i.i.i, label %Then.i.i.i.i142.i, label %OptionalEndIf.i.i.i.i.i.i

Then.i.i.i.i142.i:                                ; preds = %list.RocList.isUnique.exit.i.i.i.i.i, %OptionalThen.i.i.i.i.i
  %.not21.i.i.i.i.i.not = icmp ugt i64 %struct_field.unpack19.i, %struct_field.unpack17.i
  br i1 %.not21.i.i.i.i.i.not, label %OptionalThen1.i.i.i.i, label %Else.i.i.i.i.i

Else.i.i.i.i.i:                                   ; preds = %Then.i.i.i.i142.i
  %79 = icmp eq i64 %struct_field.unpack19.i, 0
  br i1 %79, label %EndIf9.i.i.i.i.i.i, label %Else1.i.i.i.i.i.i

Else1.i.i.i.i.i.i:                                ; preds = %Else.i.i.i.i.i
  %80 = icmp ult i64 %struct_field.unpack19.i, 512
  br i1 %80, label %Then4.i.i.i.i.i.i, label %Else2.i.i.i.i.i.i

Else2.i.i.i.i.i.i:                                ; preds = %Else1.i.i.i.i.i.i
  %81 = icmp ugt i64 %struct_field.unpack19.i, 16384
  br i1 %81, label %Then5.i.i.i.i.i.i, label %Else6.i.i.i.i.i.i

Then4.i.i.i.i.i.i:                                ; preds = %Else1.i.i.i.i.i.i
  %82 = shl nuw nsw i64 %struct_field.unpack19.i, 1
  br label %EndIf9.i.i.i.i.i.i

Then5.i.i.i.i.i.i:                                ; preds = %Else2.i.i.i.i.i.i
  %83 = shl nuw i64 %struct_field.unpack19.i, 1
  br label %EndIf9.i.i.i.i.i.i

Else6.i.i.i.i.i.i:                                ; preds = %Else2.i.i.i.i.i.i
  %84 = mul nuw nsw i64 %struct_field.unpack19.i, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = lshr i64 %85, 1
  br label %EndIf9.i.i.i.i.i.i

EndIf9.i.i.i.i.i.i:                               ; preds = %Else6.i.i.i.i.i.i, %Then5.i.i.i.i.i.i, %Then4.i.i.i.i.i.i, %Else.i.i.i.i.i
  %new_capacity.0.i.i.i.i.i.i = phi i64 [ %82, %Then4.i.i.i.i.i.i ], [ %83, %Then5.i.i.i.i.i.i ], [ %86, %Else6.i.i.i.i.i.i ], [ 8, %Else.i.i.i.i.i ]
  %87 = icmp ugt i64 %new_capacity.0.i.i.i.i.i.i, %.pre-phi.i.i.i.i
  %..i.i.i.i.i.i.i = select i1 %87, i64 %new_capacity.0.i.i.i.i.i.i, i64 %.pre-phi.i.i.i.i
  %88 = shl nuw i64 %struct_field.unpack19.i, 3
  %89 = shl nuw i64 %..i.i.i.i.i.i.i, 3
  %.not.i.i.i.i.i144.i = icmp ult i64 %88, %89
  br i1 %.not.i.i.i.i.i144.i, label %EndIf.i.i.i.i.i145.i, label %OptionalThen1.i.i.i.i

EndIf.i.i.i.i.i145.i:                             ; preds = %EndIf9.i.i.i.i.i.i
  %90 = add nuw i64 %89, 8
  %91 = add nuw i64 %88, 8
  %92 = getelementptr inbounds i8, i8* %struct_field.unpack.i, i64 -8
  %93 = tail call i8* @roc_realloc(i8* %92, i64 %90, i64 %91, i32 8) #11, !noalias !132
  %94 = getelementptr inbounds i8, i8* %93, i64 8
  br label %OptionalThen1.i.i.i.i

OptionalEndIf.i.i.i.i.i.i:                        ; preds = %list.RocList.isUnique.exit.i.i.i.i.i.thread, %list.RocList.isUnique.exit.i.i.i.i.i
  %.pre-phi.i.i.i.i160163219 = phi i64 [ %.pre-phi.i.i.i.i158, %list.RocList.isUnique.exit.i.i.i.i.i.thread ], [ %.pre-phi.i.i.i.i, %list.RocList.isUnique.exit.i.i.i.i.i ]
  %.inv = icmp ult i64 %struct_field.unpack17.i, 8
  %..i.i.i.i.i.i.i.i146.i = select i1 %.inv, i64 8, i64 %.pre-phi.i.i.i.i160163219
  %95 = shl nuw i64 %..i.i.i.i.i.i.i.i146.i, 3
  %96 = add nuw i64 %95, 8
  %97 = tail call i8* @roc_alloc(i64 %96, i32 8) #11, !noalias !135
  %98 = icmp ne i8* %97, null
  tail call void @llvm.assume(i1 %98) #11
  %99 = getelementptr inbounds i8, i8* %97, i64 8
  %100 = bitcast i8* %97 to i64*
  store i64 -9223372036854775808, i64* %100, align 8, !noalias !135
  %101 = shl nuw i64 %struct_field.unpack17.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %99, i8* nonnull align 1 %struct_field.unpack.i, i64 %101, i1 false) #11, !noalias !140
  %102 = getelementptr inbounds i8, i8* %99, i64 %101
  %103 = bitcast i8* %102 to i64*
  store i64 0, i64* %103, align 1
  %phi.cast.i.i.i.i.i.i = ptrtoint i8* %struct_field.unpack.i to i64
  %104 = shl i64 %struct_field.unpack19.i, 1
  %105 = select i1 %.not.i.i.i.i.i.i139.i, i64 %104, i64 %phi.cast.i.i.i.i.i.i
  %106 = icmp ne i64 %struct_field.unpack19.i, 0
  %107 = icmp ne i64 %105, 0
  %or.cond.i.i.i.i.i.i.i148.i = select i1 %106, i1 %107, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i148.i, label %OptionalNonNull.i.i.i.i.i.i.i150.i, label %OptionalThen1.i.i.i.i

OptionalNonNull.i.i.i.i.i.i.i150.i:               ; preds = %OptionalEndIf.i.i.i.i.i.i
  %108 = inttoptr i64 %105 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 -8
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 8, !noalias !140
  %.not.i.i.i.i.i.i.i.i149.i = icmp eq i64 %111, 0
  br i1 %.not.i.i.i.i.i.i.i.i149.i, label %OptionalThen1.i.i.i.i, label %Then.i.i.i.i.i.i.i.i151.i

Then.i.i.i.i.i.i.i.i151.i:                        ; preds = %OptionalNonNull.i.i.i.i.i.i.i150.i
  %112 = add i64 %111, -1
  store i64 %112, i64* %110, align 8, !noalias !140
  %113 = icmp eq i64 %111, -9223372036854775808
  br i1 %113, label %Then1.i.i.i.i.i.i.i.i152.i, label %OptionalThen1.i.i.i.i

Then1.i.i.i.i.i.i.i.i152.i:                       ; preds = %Then.i.i.i.i.i.i.i.i151.i
  tail call void @roc_dealloc(i8* %109, i32 8) #11, !noalias !140
  br label %OptionalThen1.i.i.i.i

OptionalEndIf.i.i.i.i.i:                          ; preds = %Else.i.i.i.i
  %.inv4 = icmp ult i64 %struct_field.unpack17.i, 8
  %..i.i.i.i.i.i.i.i = select i1 %.inv4, i64 8, i64 %.pre-phi.i.i.i.i
  %114 = shl nuw i64 %..i.i.i.i.i.i.i.i, 3
  %115 = add nuw i64 %114, 8
  %116 = tail call i8* @roc_alloc(i64 %115, i32 8) #11, !noalias !141
  %117 = icmp ne i8* %116, null
  tail call void @llvm.assume(i1 %117) #11
  %118 = getelementptr inbounds i8, i8* %116, i64 8
  %119 = bitcast i8* %116 to i64*
  store i64 -9223372036854775808, i64* %119, align 8, !noalias !141
  br label %OptionalThen1.i.i.i.i

List_reserve_4498d20401fc2d1d8c2d5242e14c2cce043ad88d3d1f9b71dbafd1538a2898.exit.i.i: ; preds = %BoolAndTrue.i.i.i.i
  %.not.i.i6.i.i = icmp eq i8* %struct_field.unpack.i, null
  br i1 %.not.i.i6.i.i, label %List_append_e4e1b5aaeffbfd96b54c5782ca36653a2a639b2274b2ed325ebcdb3dc9e0.exit.i, label %OptionalThen1.i.i.i.i

OptionalThen1.i.i.i.i:                            ; preds = %OptionalEndIf.i.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i150.i, %Then.i.i.i.i.i.i.i.i151.i, %Then1.i.i.i.i.i.i.i.i152.i, %EndIf9.i.i.i.i.i.i, %EndIf.i.i.i.i.i145.i, %Then.i.i.i.i142.i, %OptionalEndIf.i.i.i.i.i, %List_reserve_4498d20401fc2d1d8c2d5242e14c2cce043ad88d3d1f9b71dbafd1538a2898.exit.i.i
  %list_alloca.i.i.i.sroa.6.0169 = phi i64 [ %struct_field.unpack19.i, %List_reserve_4498d20401fc2d1d8c2d5242e14c2cce043ad88d3d1f9b71dbafd1538a2898.exit.i.i ], [ %..i.i.i.i.i.i.i.i146.i, %OptionalEndIf.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i146.i, %OptionalNonNull.i.i.i.i.i.i.i150.i ], [ %..i.i.i.i.i.i.i.i146.i, %Then.i.i.i.i.i.i.i.i151.i ], [ %..i.i.i.i.i.i.i.i146.i, %Then1.i.i.i.i.i.i.i.i152.i ], [ %..i.i.i.i.i.i.i, %EndIf9.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i, %EndIf.i.i.i.i.i145.i ], [ %struct_field.unpack19.i, %Then.i.i.i.i142.i ], [ %..i.i.i.i.i.i.i.i, %OptionalEndIf.i.i.i.i.i ]
  %list_alloca.i.i.i.sroa.0.0167 = phi i8* [ %struct_field.unpack.i, %List_reserve_4498d20401fc2d1d8c2d5242e14c2cce043ad88d3d1f9b71dbafd1538a2898.exit.i.i ], [ %99, %OptionalEndIf.i.i.i.i.i.i ], [ %99, %OptionalNonNull.i.i.i.i.i.i.i150.i ], [ %99, %Then.i.i.i.i.i.i.i.i151.i ], [ %99, %Then1.i.i.i.i.i.i.i.i152.i ], [ %struct_field.unpack.i, %EndIf9.i.i.i.i.i.i ], [ %94, %EndIf.i.i.i.i.i145.i ], [ %struct_field.unpack.i, %Then.i.i.i.i142.i ], [ %118, %OptionalEndIf.i.i.i.i.i ]
  %120 = shl nuw i64 %struct_field.unpack17.i, 3
  %121 = getelementptr inbounds i8, i8* %list_alloca.i.i.i.sroa.0.0167, i64 %120
  %122 = bitcast i8* %121 to i64*
  store i64 %key, i64* %122, align 1
  br label %List_append_e4e1b5aaeffbfd96b54c5782ca36653a2a639b2274b2ed325ebcdb3dc9e0.exit.i

List_append_e4e1b5aaeffbfd96b54c5782ca36653a2a639b2274b2ed325ebcdb3dc9e0.exit.i: ; preds = %OptionalThen1.i.i.i.i, %List_reserve_4498d20401fc2d1d8c2d5242e14c2cce043ad88d3d1f9b71dbafd1538a2898.exit.i.i
  %list_alloca.i.i.i.sroa.6.0170 = phi i64 [ %list_alloca.i.i.i.sroa.6.0169, %OptionalThen1.i.i.i.i ], [ %struct_field.unpack19.i, %List_reserve_4498d20401fc2d1d8c2d5242e14c2cce043ad88d3d1f9b71dbafd1538a2898.exit.i.i ]
  %list_alloca.i.i.i.sroa.0.0168 = phi i8* [ %list_alloca.i.i.i.sroa.0.0167, %OptionalThen1.i.i.i.i ], [ null, %List_reserve_4498d20401fc2d1d8c2d5242e14c2cce043ad88d3d1f9b71dbafd1538a2898.exit.i.i ]
  %123 = add nuw i64 %struct_field.unpack17.i, 1
  %lt_uint.i.i.i62.i = icmp ult i64 %add_int_wrap.i13.i.i173, %struct_field1.unpack22.i
  br i1 %lt_uint.i.i.i62.i, label %then_block.i.i71.i, label %List_set_d5fd28a223f9da541a3bc433d8cc6ca57e322885a8f25c6b245221ef265025.exit.i

then_block.i.i71.i:                               ; preds = %List_append_e4e1b5aaeffbfd96b54c5782ca36653a2a639b2274b2ed325ebcdb3dc9e0.exit.i
  %.not.i.i.i.i.i.i.i.i70.i = icmp slt i64 %struct_field1.unpack24.i, 0
  %124 = select i1 %.not.i.i.i.i.i.i.i.i70.i, i64 %struct_field1.unpack22.i, i64 %struct_field1.unpack24.i
  %125 = icmp ne i64 %124, 0
  %126 = or i1 %.not.i.i.i.i.i.i.i.i70.i, %125
  br i1 %126, label %list.RocList.isUnique.exit.i.i.i.i.i73.i, label %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i

list.RocList.isUnique.exit.i.i.i.i.i73.i:         ; preds = %then_block.i.i71.i
  %127 = getelementptr inbounds i8, i8* %struct_field1.unpack.i, i64 -8
  %128 = bitcast i8* %127 to i64*
  %129 = load i64, i64* %128, align 8, !noalias !144
  %phi.cmp.i.i.i.i.i.i72.i = icmp eq i64 %129, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i.i.i72.i, label %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i, label %EndIf.i.i.i.i.i.i89.i

EndIf.i.i.i.i.i.i89.i:                            ; preds = %list.RocList.isUnique.exit.i.i.i.i.i73.i
  %130 = icmp ugt i64 %struct_field1.unpack22.i, 8
  %..i.i.i.i.i.i.i.i83.i = select i1 %130, i64 %struct_field1.unpack22.i, i64 8
  %131 = shl nuw i64 %..i.i.i.i.i.i.i.i83.i, 3
  %132 = add nuw i64 %131, 8
  %133 = tail call i8* @roc_alloc(i64 %132, i32 8) #11, !noalias !149
  %134 = icmp ne i8* %133, null
  tail call void @llvm.assume(i1 %134) #11
  %135 = getelementptr inbounds i8, i8* %133, i64 8
  %136 = bitcast i8* %133 to i64*
  store i64 -9223372036854775808, i64* %136, align 8, !noalias !149
  %137 = shl nuw i64 %struct_field1.unpack22.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %135, i8* nonnull align 1 %struct_field1.unpack.i, i64 %137, i1 false) #11, !noalias !144
  %138 = ptrtoint i8* %struct_field1.unpack.i to i64
  %139 = shl i64 %struct_field1.unpack24.i, 1
  %140 = select i1 %.not.i.i.i.i.i.i.i.i70.i, i64 %139, i64 %138
  %141 = icmp ne i64 %struct_field1.unpack24.i, 0
  %142 = icmp ne i64 %140, 0
  %or.cond.i.i15.i.i.i.i.i88.i = select i1 %141, i1 %142, i1 false
  br i1 %or.cond.i.i15.i.i.i.i.i88.i, label %OptionalNonNull.i.i17.i.i.i.i.i91.i, label %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i

OptionalNonNull.i.i17.i.i.i.i.i91.i:              ; preds = %EndIf.i.i.i.i.i.i89.i
  %143 = inttoptr i64 %140 to i8*
  %144 = getelementptr inbounds i8, i8* %143, i64 -8
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 8, !noalias !144
  %.not.i.i.i16.i.i.i.i.i90.i = icmp eq i64 %146, 0
  br i1 %.not.i.i.i16.i.i.i.i.i90.i, label %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i, label %Then.i.i.i18.i.i.i.i.i92.i

Then.i.i.i18.i.i.i.i.i92.i:                       ; preds = %OptionalNonNull.i.i17.i.i.i.i.i91.i
  %147 = add i64 %146, -1
  store i64 %147, i64* %145, align 8, !noalias !144
  %148 = icmp eq i64 %146, -9223372036854775808
  br i1 %148, label %Then1.i.i.i20.i.i.i.i.i93.i, label %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i

Then1.i.i.i20.i.i.i.i.i93.i:                      ; preds = %Then.i.i.i18.i.i.i.i.i92.i
  tail call void @roc_dealloc(i8* %144, i32 8) #11, !noalias !144
  br label %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i

List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i: ; preds = %EndIf.i.i.i.i.i.i89.i, %OptionalNonNull.i.i17.i.i.i.i.i91.i, %Then.i.i.i18.i.i.i.i.i92.i, %Then1.i.i.i20.i.i.i.i.i93.i, %then_block.i.i71.i, %list.RocList.isUnique.exit.i.i.i.i.i73.i
  %.sroa.1093.0 = phi i64 [ %struct_field1.unpack24.i, %list.RocList.isUnique.exit.i.i.i.i.i73.i ], [ %struct_field1.unpack24.i, %then_block.i.i71.i ], [ %..i.i.i.i.i.i.i.i83.i, %Then1.i.i.i20.i.i.i.i.i93.i ], [ %..i.i.i.i.i.i.i.i83.i, %Then.i.i.i18.i.i.i.i.i92.i ], [ %..i.i.i.i.i.i.i.i83.i, %OptionalNonNull.i.i17.i.i.i.i.i91.i ], [ %..i.i.i.i.i.i.i.i83.i, %EndIf.i.i.i.i.i.i89.i ]
  %.sroa.087.0 = phi i8* [ %struct_field1.unpack.i, %list.RocList.isUnique.exit.i.i.i.i.i73.i ], [ %struct_field1.unpack.i, %then_block.i.i71.i ], [ %135, %Then1.i.i.i20.i.i.i.i.i93.i ], [ %135, %Then.i.i.i18.i.i.i.i.i92.i ], [ %135, %OptionalNonNull.i.i17.i.i.i.i.i91.i ], [ %135, %EndIf.i.i.i.i.i.i89.i ]
  %149 = shl nuw i64 %add_int_wrap.i13.i.i173, 3
  %150 = getelementptr inbounds i8, i8* %.sroa.087.0, i64 %149
  %151 = bitcast i8* %150 to i64*
  store i64 %struct_field.unpack17.i, i64* %151, align 1
  br label %List_set_d5fd28a223f9da541a3bc433d8cc6ca57e322885a8f25c6b245221ef265025.exit.i

List_set_d5fd28a223f9da541a3bc433d8cc6ca57e322885a8f25c6b245221ef265025.exit.i: ; preds = %List_append_e4e1b5aaeffbfd96b54c5782ca36653a2a639b2274b2ed325ebcdb3dc9e0.exit.i, %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i
  %load_list.unpack.i.i.i99.i.pn = phi i8* [ %.sroa.087.0, %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i ], [ %struct_field1.unpack.i, %List_append_e4e1b5aaeffbfd96b54c5782ca36653a2a639b2274b2ed325ebcdb3dc9e0.exit.i ]
  %load_list.unpack9.i.i.i103.i.pn = phi i64 [ %.sroa.1093.0, %List_replaceUnsafe_b6d05e21a7ed5f5060278c3225f49ac16f73049f5286846c1fa4376d6ca4e8e.exit.i.i.i ], [ %struct_field1.unpack24.i, %List_append_e4e1b5aaeffbfd96b54c5782ca36653a2a639b2274b2ed325ebcdb3dc9e0.exit.i ]
  %lt_uint.i.i.i.i = icmp ult i64 %add_int_wrap.i13.i.i173, %struct_field2.unpack27.i
  br i1 %lt_uint.i.i.i.i, label %then_block.i.i.i, label %Dict_insertNotFoundHelper_bf1cdcacc8dd9385ad85e8797abbf788d336a1405490ec9e7ca0fbf044195a.exit

then_block.i.i.i:                                 ; preds = %List_set_d5fd28a223f9da541a3bc433d8cc6ca57e322885a8f25c6b245221ef265025.exit.i
  %152 = select i1 %.not.i.i.i122.i, i64 %struct_field2.unpack27.i, i64 %struct_field2.unpack29.i
  %153 = icmp ne i64 %152, 0
  %154 = or i1 %.not.i.i.i122.i, %153
  br i1 %154, label %list.RocList.isUnique.exit.i.i.i.i.i.i, label %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i

list.RocList.isUnique.exit.i.i.i.i.i.i:           ; preds = %then_block.i.i.i
  %155 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 -8
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8, !noalias !152
  %phi.cmp.i.i.i.i.i.i.i = icmp eq i64 %157, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i.i.i.i, label %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i, label %EndIf.i.i.i.i.i.i.i

EndIf.i.i.i.i.i.i.i:                              ; preds = %list.RocList.isUnique.exit.i.i.i.i.i.i
  %158 = icmp ugt i64 %struct_field2.unpack27.i, 64
  %..i.i.i.i.i.i.i.i.i = select i1 %158, i64 %struct_field2.unpack27.i, i64 64
  %159 = add nuw i64 %..i.i.i.i.i.i.i.i.i, 8
  %160 = tail call i8* @roc_alloc(i64 %159, i32 8) #11, !noalias !157
  %161 = icmp ne i8* %160, null
  tail call void @llvm.assume(i1 %161) #11
  %162 = getelementptr inbounds i8, i8* %160, i64 8
  %163 = bitcast i8* %160 to i64*
  store i64 -9223372036854775808, i64* %163, align 8, !noalias !157
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %162, i8* nonnull align 1 %struct_field2.unpack.i, i64 %struct_field2.unpack27.i, i1 false) #11, !noalias !152
  %164 = icmp ne i64 %struct_field2.unpack29.i, 0
  %165 = icmp ne i64 %64, 0
  %or.cond.i.i15.i.i.i.i.i.i = select i1 %164, i1 %165, i1 false
  br i1 %or.cond.i.i15.i.i.i.i.i.i, label %OptionalNonNull.i.i17.i.i.i.i.i.i, label %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i

OptionalNonNull.i.i17.i.i.i.i.i.i:                ; preds = %EndIf.i.i.i.i.i.i.i
  %166 = inttoptr i64 %64 to i8*
  %167 = getelementptr inbounds i8, i8* %166, i64 -8
  %168 = bitcast i8* %167 to i64*
  %169 = load i64, i64* %168, align 8, !noalias !152
  %.not.i.i.i16.i.i.i.i.i.i = icmp eq i64 %169, 0
  br i1 %.not.i.i.i16.i.i.i.i.i.i, label %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i, label %Then.i.i.i18.i.i.i.i.i.i

Then.i.i.i18.i.i.i.i.i.i:                         ; preds = %OptionalNonNull.i.i17.i.i.i.i.i.i
  %170 = add i64 %169, -1
  store i64 %170, i64* %168, align 8, !noalias !152
  %171 = icmp eq i64 %169, -9223372036854775808
  br i1 %171, label %Then1.i.i.i20.i.i.i.i.i.i, label %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i

Then1.i.i.i20.i.i.i.i.i.i:                        ; preds = %Then.i.i.i18.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %167, i32 1) #11, !noalias !152
  br label %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i

List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i: ; preds = %EndIf.i.i.i.i.i.i.i, %OptionalNonNull.i.i17.i.i.i.i.i.i, %Then.i.i.i18.i.i.i.i.i.i, %Then1.i.i.i20.i.i.i.i.i.i, %then_block.i.i.i, %list.RocList.isUnique.exit.i.i.i.i.i.i
  %.sroa.10.0 = phi i64 [ %struct_field2.unpack29.i, %list.RocList.isUnique.exit.i.i.i.i.i.i ], [ %struct_field2.unpack29.i, %then_block.i.i.i ], [ %..i.i.i.i.i.i.i.i.i, %Then1.i.i.i20.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i.i, %Then.i.i.i18.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i.i, %OptionalNonNull.i.i17.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i.i, %EndIf.i.i.i.i.i.i.i ]
  %.sroa.0.0 = phi i8* [ %struct_field2.unpack.i, %list.RocList.isUnique.exit.i.i.i.i.i.i ], [ %struct_field2.unpack.i, %then_block.i.i.i ], [ %162, %Then1.i.i.i20.i.i.i.i.i.i ], [ %162, %Then.i.i.i18.i.i.i.i.i.i ], [ %162, %OptionalNonNull.i.i17.i.i.i.i.i.i ], [ %162, %EndIf.i.i.i.i.i.i.i ]
  %172 = getelementptr inbounds i8, i8* %.sroa.0.0, i64 %add_int_wrap.i13.i.i173
  store i8 %inc_cast.i.i, i8* %172, align 1
  br label %Dict_insertNotFoundHelper_bf1cdcacc8dd9385ad85e8797abbf788d336a1405490ec9e7ca0fbf044195a.exit

Dict_insertNotFoundHelper_bf1cdcacc8dd9385ad85e8797abbf788d336a1405490ec9e7ca0fbf044195a.exit: ; preds = %List_set_d5fd28a223f9da541a3bc433d8cc6ca57e322885a8f25c6b245221ef265025.exit.i, %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i
  %load_list.unpack.i.i.i.i.pn = phi i8* [ %.sroa.0.0, %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i ], [ %struct_field2.unpack.i, %List_set_d5fd28a223f9da541a3bc433d8cc6ca57e322885a8f25c6b245221ef265025.exit.i ]
  %load_list.unpack9.i.i.i.i.pn = phi i64 [ %.sroa.10.0, %List_replaceUnsafe_5d0db15c4fbd9a66581f0a466e72f21df7fd5a2a1ab6daea68bdfa7938e141.exit.i.i.i ], [ %struct_field2.unpack29.i, %List_set_d5fd28a223f9da541a3bc433d8cc6ca57e322885a8f25c6b245221ef265025.exit.i ]
  %result_value27.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 0
  store i8* %list_alloca.i.i.i.sroa.0.0168, i8** %result_value27.sroa.0.0..sroa_idx, align 8
  %result_value27.sroa.2.0..sroa_idx44 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 1
  store i64 %123, i64* %result_value27.sroa.2.0..sroa_idx44, align 8
  %result_value27.sroa.3.0..sroa_idx45 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 2
  store i64 %list_alloca.i.i.i.sroa.6.0170, i64* %result_value27.sroa.3.0..sroa_idx45, align 8
  %result_value27.sroa.4.0..sroa_idx46 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 0
  store i8* %load_list.unpack.i.i.i99.i.pn, i8** %result_value27.sroa.4.0..sroa_idx46, align 8
  %result_value27.sroa.5.0..sroa_idx47 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack22.i, i64* %result_value27.sroa.5.0..sroa_idx47, align 8
  %result_value27.sroa.6.0..sroa_idx48 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 2
  store i64 %load_list.unpack9.i.i.i103.i.pn, i64* %result_value27.sroa.6.0..sroa_idx48, align 8
  %result_value27.sroa.7.0..sroa_idx49 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 0
  store i8* %load_list.unpack.i.i.i.i.pn, i8** %result_value27.sroa.7.0..sroa_idx49, align 8
  %result_value27.sroa.8.0..sroa_idx50 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack27.i, i64* %result_value27.sroa.8.0..sroa_idx50, align 8
  %result_value27.sroa.9.0..sroa_idx51 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 2
  store i64 %load_list.unpack9.i.i.i.i.pn, i64* %result_value27.sroa.9.0..sroa_idx51, align 8
  %result_value27.sroa.10.0..sroa_idx52 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 3
  store i64 %struct_field3.i, i64* %result_value27.sroa.10.0..sroa_idx52, align 8
  br label %common.ret

else_block.i.i.us.us.1:                           ; preds = %else_block.i.i.us.us
  %add_int_wrap.i13.i.i.us.us.2 = or i64 %int_shift_left.i.i.i.i.us255, 2
  %list_get_element.i.i.i.us.us.2 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.2
  %list_get_load_element.i.i.i.us.us.2 = load i8, i8* %list_get_element.i.i.i.us.us.2, align 1
  %lt_int.i.i.i157.us.us.2 = icmp slt i8 %list_get_load_element.i.i.i.us.us.2, 0
  br i1 %lt_int.i.i.i157.us.us.2, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.2

else_block.i.i.us.us.2:                           ; preds = %else_block.i.i.us.us.1
  %add_int_wrap.i13.i.i.us.us.3 = or i64 %int_shift_left.i.i.i.i.us255, 3
  %list_get_element.i.i.i.us.us.3 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.3
  %list_get_load_element.i.i.i.us.us.3 = load i8, i8* %list_get_element.i.i.i.us.us.3, align 1
  %lt_int.i.i.i157.us.us.3 = icmp slt i8 %list_get_load_element.i.i.i.us.us.3, 0
  br i1 %lt_int.i.i.i157.us.us.3, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.3

else_block.i.i.us.us.3:                           ; preds = %else_block.i.i.us.us.2
  %add_int_wrap.i13.i.i.us.us.4 = or i64 %int_shift_left.i.i.i.i.us255, 4
  %list_get_element.i.i.i.us.us.4 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.4
  %list_get_load_element.i.i.i.us.us.4 = load i8, i8* %list_get_element.i.i.i.us.us.4, align 1
  %lt_int.i.i.i157.us.us.4 = icmp slt i8 %list_get_load_element.i.i.i.us.us.4, 0
  br i1 %lt_int.i.i.i157.us.us.4, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.4

else_block.i.i.us.us.4:                           ; preds = %else_block.i.i.us.us.3
  %add_int_wrap.i13.i.i.us.us.5 = or i64 %int_shift_left.i.i.i.i.us255, 5
  %list_get_element.i.i.i.us.us.5 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.5
  %list_get_load_element.i.i.i.us.us.5 = load i8, i8* %list_get_element.i.i.i.us.us.5, align 1
  %lt_int.i.i.i157.us.us.5 = icmp slt i8 %list_get_load_element.i.i.i.us.us.5, 0
  br i1 %lt_int.i.i.i157.us.us.5, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.5

else_block.i.i.us.us.5:                           ; preds = %else_block.i.i.us.us.4
  %add_int_wrap.i13.i.i.us.us.6 = or i64 %int_shift_left.i.i.i.i.us255, 6
  %list_get_element.i.i.i.us.us.6 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.6
  %list_get_load_element.i.i.i.us.us.6 = load i8, i8* %list_get_element.i.i.i.us.us.6, align 1
  %lt_int.i.i.i157.us.us.6 = icmp slt i8 %list_get_load_element.i.i.i.us.us.6, 0
  br i1 %lt_int.i.i.i157.us.us.6, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.6

else_block.i.i.us.us.6:                           ; preds = %else_block.i.i.us.us.5
  %add_int_wrap.i13.i.i.us.us.7 = or i64 %int_shift_left.i.i.i.i.us255, 7
  %list_get_element.i.i.i.us.us.7 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.us.us.7
  %list_get_load_element.i.i.i.us.us.7 = load i8, i8* %list_get_element.i.i.i.us.us.7, align 1
  %lt_int.i.i.i157.us.us.7 = icmp slt i8 %list_get_load_element.i.i.i.us.us.7, 0
  br i1 %lt_int.i.i.i157.us.us.7, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us.7

else_block.i.i.us.us.7:                           ; preds = %else_block.i.i.us.us.6
  %add_int_wrap.i.i.i.i.us = add i64 %int_bitwise_and.i.i.i.i.pn.us254, %add_int_wrap.i5.i.i.i.pn.us253
  %add_int_wrap.i5.i.i.i.us = add i64 %add_int_wrap.i5.i.i.i.pn.us253, 1
  %int_bitwise_and.i.i.i.i.pn.us = and i64 %add_int_wrap.i.i.i.i.us, %call.i.i.i
  %int_shift_left.i.i.i.i.us = shl nuw i64 %int_bitwise_and.i.i.i.i.pn.us, 3
  %list_get_element.i.i.i.us.us = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %int_shift_left.i.i.i.i.us
  %list_get_load_element.i.i.i.us.us = load i8, i8* %list_get_element.i.i.i.us.us, align 1
  %lt_int.i.i.i157.us.us = icmp slt i8 %list_get_load_element.i.i.i.us.us, 0
  br i1 %lt_int.i.i.i157.us.us, label %"#Attr_#dec_11.exit.i", label %else_block.i.i.us.us

modification_list_block.i.i.i.i.1:                ; preds = %else_block.i.i
  %173 = add nsw i64 %68, 1
  store i64 %173, i64* %get_rc_ptr.i124.i, align 8
  %list_get_element.i.i.i152.1 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.1
  %list_get_load_element.i.i.i153.1 = load i8, i8* %list_get_element.i.i.i152.1, align 1
  %.not.i.i.i.i.i.i.i.1 = icmp eq i64 %173, 0
  %spec.store.select264 = select i1 %.not.i.i.i.i.i.i.i.1, i64 0, i64 %68
  store i64 %spec.store.select264, i64* %get_rc_ptr.i124.i, align 8
  %spec.select265 = select i1 %.not.i.i.i.i.i.i.i.1, i64 0, i64 %68
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1: ; preds = %modification_list_block.i.i.i.i.1, %modification_list_block.i.i.i.i.1.thread
  %list_get_load_element.i.i.i153.1223 = phi i8 [ %list_get_load_element.i.i.i153.1221, %modification_list_block.i.i.i.i.1.thread ], [ %list_get_load_element.i.i.i153.1, %modification_list_block.i.i.i.i.1 ]
  %174 = phi i64 [ 0, %modification_list_block.i.i.i.i.1.thread ], [ %spec.select265, %modification_list_block.i.i.i.i.1 ]
  %lt_int.i.i.i.1 = icmp slt i8 %list_get_load_element.i.i.i153.1223, 0
  br i1 %lt_int.i.i.i.1, label %modification_list_block.i138.i, label %else_block.i.i.1

else_block.i.i.1:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.1
  %add_int_wrap.i13.i.i.2 = or i64 %int_shift_left.i.i.i.i, 2
  %.not.i.i125.i.2 = icmp eq i64 %174, 0
  br i1 %.not.i.i125.i.2, label %modification_list_block.i.i.i.i.2.thread, label %modification_list_block.i.i.i.i.2

modification_list_block.i.i.i.i.2.thread:         ; preds = %else_block.i.i.1
  %list_get_element.i.i.i152.2224 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.2
  %list_get_load_element.i.i.i153.2225 = load i8, i8* %list_get_element.i.i.i152.2224, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2

modification_list_block.i.i.i.i.2:                ; preds = %else_block.i.i.1
  %175 = add nsw i64 %174, 1
  store i64 %175, i64* %get_rc_ptr.i124.i, align 8
  %list_get_element.i.i.i152.2 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.2
  %list_get_load_element.i.i.i153.2 = load i8, i8* %list_get_element.i.i.i152.2, align 1
  %.not.i.i.i.i.i.i.i.2 = icmp eq i64 %175, 0
  %spec.store.select266 = select i1 %.not.i.i.i.i.i.i.i.2, i64 0, i64 %174
  store i64 %spec.store.select266, i64* %get_rc_ptr.i124.i, align 8
  %spec.select267 = select i1 %.not.i.i.i.i.i.i.i.2, i64 0, i64 %174
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2: ; preds = %modification_list_block.i.i.i.i.2, %modification_list_block.i.i.i.i.2.thread
  %list_get_load_element.i.i.i153.2227 = phi i8 [ %list_get_load_element.i.i.i153.2225, %modification_list_block.i.i.i.i.2.thread ], [ %list_get_load_element.i.i.i153.2, %modification_list_block.i.i.i.i.2 ]
  %176 = phi i64 [ 0, %modification_list_block.i.i.i.i.2.thread ], [ %spec.select267, %modification_list_block.i.i.i.i.2 ]
  %lt_int.i.i.i.2 = icmp slt i8 %list_get_load_element.i.i.i153.2227, 0
  br i1 %lt_int.i.i.i.2, label %modification_list_block.i138.i, label %else_block.i.i.2

else_block.i.i.2:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.2
  %add_int_wrap.i13.i.i.3 = or i64 %int_shift_left.i.i.i.i, 3
  %.not.i.i125.i.3 = icmp eq i64 %176, 0
  br i1 %.not.i.i125.i.3, label %modification_list_block.i.i.i.i.3.thread, label %modification_list_block.i.i.i.i.3

modification_list_block.i.i.i.i.3.thread:         ; preds = %else_block.i.i.2
  %list_get_element.i.i.i152.3228 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.3
  %list_get_load_element.i.i.i153.3229 = load i8, i8* %list_get_element.i.i.i152.3228, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3

modification_list_block.i.i.i.i.3:                ; preds = %else_block.i.i.2
  %177 = add nsw i64 %176, 1
  store i64 %177, i64* %get_rc_ptr.i124.i, align 8
  %list_get_element.i.i.i152.3 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.3
  %list_get_load_element.i.i.i153.3 = load i8, i8* %list_get_element.i.i.i152.3, align 1
  %.not.i.i.i.i.i.i.i.3 = icmp eq i64 %177, 0
  %spec.store.select268 = select i1 %.not.i.i.i.i.i.i.i.3, i64 0, i64 %176
  store i64 %spec.store.select268, i64* %get_rc_ptr.i124.i, align 8
  %spec.select269 = select i1 %.not.i.i.i.i.i.i.i.3, i64 0, i64 %176
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3: ; preds = %modification_list_block.i.i.i.i.3, %modification_list_block.i.i.i.i.3.thread
  %list_get_load_element.i.i.i153.3231 = phi i8 [ %list_get_load_element.i.i.i153.3229, %modification_list_block.i.i.i.i.3.thread ], [ %list_get_load_element.i.i.i153.3, %modification_list_block.i.i.i.i.3 ]
  %178 = phi i64 [ 0, %modification_list_block.i.i.i.i.3.thread ], [ %spec.select269, %modification_list_block.i.i.i.i.3 ]
  %lt_int.i.i.i.3 = icmp slt i8 %list_get_load_element.i.i.i153.3231, 0
  br i1 %lt_int.i.i.i.3, label %modification_list_block.i138.i, label %else_block.i.i.3

else_block.i.i.3:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.3
  %add_int_wrap.i13.i.i.4 = or i64 %int_shift_left.i.i.i.i, 4
  %.not.i.i125.i.4 = icmp eq i64 %178, 0
  br i1 %.not.i.i125.i.4, label %modification_list_block.i.i.i.i.4.thread, label %modification_list_block.i.i.i.i.4

modification_list_block.i.i.i.i.4.thread:         ; preds = %else_block.i.i.3
  %list_get_element.i.i.i152.4232 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.4
  %list_get_load_element.i.i.i153.4233 = load i8, i8* %list_get_element.i.i.i152.4232, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4

modification_list_block.i.i.i.i.4:                ; preds = %else_block.i.i.3
  %179 = add nsw i64 %178, 1
  store i64 %179, i64* %get_rc_ptr.i124.i, align 8
  %list_get_element.i.i.i152.4 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.4
  %list_get_load_element.i.i.i153.4 = load i8, i8* %list_get_element.i.i.i152.4, align 1
  %.not.i.i.i.i.i.i.i.4 = icmp eq i64 %179, 0
  %spec.store.select270 = select i1 %.not.i.i.i.i.i.i.i.4, i64 0, i64 %178
  store i64 %spec.store.select270, i64* %get_rc_ptr.i124.i, align 8
  %spec.select271 = select i1 %.not.i.i.i.i.i.i.i.4, i64 0, i64 %178
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4: ; preds = %modification_list_block.i.i.i.i.4, %modification_list_block.i.i.i.i.4.thread
  %list_get_load_element.i.i.i153.4235 = phi i8 [ %list_get_load_element.i.i.i153.4233, %modification_list_block.i.i.i.i.4.thread ], [ %list_get_load_element.i.i.i153.4, %modification_list_block.i.i.i.i.4 ]
  %180 = phi i64 [ 0, %modification_list_block.i.i.i.i.4.thread ], [ %spec.select271, %modification_list_block.i.i.i.i.4 ]
  %lt_int.i.i.i.4 = icmp slt i8 %list_get_load_element.i.i.i153.4235, 0
  br i1 %lt_int.i.i.i.4, label %modification_list_block.i138.i, label %else_block.i.i.4

else_block.i.i.4:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.4
  %add_int_wrap.i13.i.i.5 = or i64 %int_shift_left.i.i.i.i, 5
  %.not.i.i125.i.5 = icmp eq i64 %180, 0
  br i1 %.not.i.i125.i.5, label %modification_list_block.i.i.i.i.5.thread, label %modification_list_block.i.i.i.i.5

modification_list_block.i.i.i.i.5.thread:         ; preds = %else_block.i.i.4
  %list_get_element.i.i.i152.5236 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.5
  %list_get_load_element.i.i.i153.5237 = load i8, i8* %list_get_element.i.i.i152.5236, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5

modification_list_block.i.i.i.i.5:                ; preds = %else_block.i.i.4
  %181 = add nsw i64 %180, 1
  store i64 %181, i64* %get_rc_ptr.i124.i, align 8
  %list_get_element.i.i.i152.5 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.5
  %list_get_load_element.i.i.i153.5 = load i8, i8* %list_get_element.i.i.i152.5, align 1
  %.not.i.i.i.i.i.i.i.5 = icmp eq i64 %181, 0
  %spec.store.select272 = select i1 %.not.i.i.i.i.i.i.i.5, i64 0, i64 %180
  store i64 %spec.store.select272, i64* %get_rc_ptr.i124.i, align 8
  %spec.select273 = select i1 %.not.i.i.i.i.i.i.i.5, i64 0, i64 %180
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5: ; preds = %modification_list_block.i.i.i.i.5, %modification_list_block.i.i.i.i.5.thread
  %list_get_load_element.i.i.i153.5239 = phi i8 [ %list_get_load_element.i.i.i153.5237, %modification_list_block.i.i.i.i.5.thread ], [ %list_get_load_element.i.i.i153.5, %modification_list_block.i.i.i.i.5 ]
  %182 = phi i64 [ 0, %modification_list_block.i.i.i.i.5.thread ], [ %spec.select273, %modification_list_block.i.i.i.i.5 ]
  %lt_int.i.i.i.5 = icmp slt i8 %list_get_load_element.i.i.i153.5239, 0
  br i1 %lt_int.i.i.i.5, label %modification_list_block.i138.i, label %else_block.i.i.5

else_block.i.i.5:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.5
  %add_int_wrap.i13.i.i.6 = or i64 %int_shift_left.i.i.i.i, 6
  %.not.i.i125.i.6 = icmp eq i64 %182, 0
  br i1 %.not.i.i125.i.6, label %modification_list_block.i.i.i.i.6.thread, label %modification_list_block.i.i.i.i.6

modification_list_block.i.i.i.i.6.thread:         ; preds = %else_block.i.i.5
  %list_get_element.i.i.i152.6240 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.6
  %list_get_load_element.i.i.i153.6241 = load i8, i8* %list_get_element.i.i.i152.6240, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6

modification_list_block.i.i.i.i.6:                ; preds = %else_block.i.i.5
  %183 = add nsw i64 %182, 1
  store i64 %183, i64* %get_rc_ptr.i124.i, align 8
  %list_get_element.i.i.i152.6 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.6
  %list_get_load_element.i.i.i153.6 = load i8, i8* %list_get_element.i.i.i152.6, align 1
  %.not.i.i.i.i.i.i.i.6 = icmp eq i64 %183, 0
  %spec.store.select274 = select i1 %.not.i.i.i.i.i.i.i.6, i64 0, i64 %182
  store i64 %spec.store.select274, i64* %get_rc_ptr.i124.i, align 8
  %spec.select275 = select i1 %.not.i.i.i.i.i.i.i.6, i64 0, i64 %182
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6: ; preds = %modification_list_block.i.i.i.i.6, %modification_list_block.i.i.i.i.6.thread
  %list_get_load_element.i.i.i153.6243 = phi i8 [ %list_get_load_element.i.i.i153.6241, %modification_list_block.i.i.i.i.6.thread ], [ %list_get_load_element.i.i.i153.6, %modification_list_block.i.i.i.i.6 ]
  %184 = phi i64 [ 0, %modification_list_block.i.i.i.i.6.thread ], [ %spec.select275, %modification_list_block.i.i.i.i.6 ]
  %lt_int.i.i.i.6 = icmp slt i8 %list_get_load_element.i.i.i153.6243, 0
  br i1 %lt_int.i.i.i.6, label %modification_list_block.i138.i, label %else_block.i.i.6

else_block.i.i.6:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.6
  %add_int_wrap.i13.i.i.7 = or i64 %int_shift_left.i.i.i.i, 7
  %.not.i.i125.i.7 = icmp eq i64 %184, 0
  br i1 %.not.i.i125.i.7, label %modification_list_block.i.i.i.i.7.thread, label %modification_list_block.i.i.i.i.7

modification_list_block.i.i.i.i.7.thread:         ; preds = %else_block.i.i.6
  %list_get_element.i.i.i152.7244 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.7
  %list_get_load_element.i.i.i153.7245 = load i8, i8* %list_get_element.i.i.i152.7244, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7

modification_list_block.i.i.i.i.7:                ; preds = %else_block.i.i.6
  %185 = add nsw i64 %184, 1
  store i64 %185, i64* %get_rc_ptr.i124.i, align 8
  %list_get_element.i.i.i152.7 = getelementptr inbounds i8, i8* %struct_field2.unpack.i, i64 %add_int_wrap.i13.i.i.7
  %list_get_load_element.i.i.i153.7 = load i8, i8* %list_get_element.i.i.i152.7, align 1
  %.not.i.i.i.i.i.i.i.7 = icmp eq i64 %185, 0
  %spec.store.select276 = select i1 %.not.i.i.i.i.i.i.i.7, i64 0, i64 %184
  store i64 %spec.store.select276, i64* %get_rc_ptr.i124.i, align 8
  %spec.select277 = select i1 %.not.i.i.i.i.i.i.i.7, i64 0, i64 %184
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7: ; preds = %modification_list_block.i.i.i.i.7, %modification_list_block.i.i.i.i.7.thread
  %list_get_load_element.i.i.i153.7247 = phi i8 [ %list_get_load_element.i.i.i153.7245, %modification_list_block.i.i.i.i.7.thread ], [ %list_get_load_element.i.i.i153.7, %modification_list_block.i.i.i.i.7 ]
  %186 = phi i64 [ 0, %modification_list_block.i.i.i.i.7.thread ], [ %spec.select277, %modification_list_block.i.i.i.i.7 ]
  %lt_int.i.i.i.7 = icmp slt i8 %list_get_load_element.i.i.i153.7247, 0
  br i1 %lt_int.i.i.i.7, label %modification_list_block.i138.i, label %else_block.i.i.7

else_block.i.i.7:                                 ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.i.7
  %add_int_wrap.i.i.i.i = add i64 %int_bitwise_and.i.i.i.i.pn, %add_int_wrap.i5.i.i.i.pn
  %add_int_wrap.i5.i.i.i = add i64 %add_int_wrap.i5.i.i.i.pn, 1
  br label %joinpointcont.outer.i.i
}

; Function Attrs: nounwind
define internal fastcc void @Result_mapErr_2746327e51fdcb1dc64558817d88aa8cbfee5e0d4a4b214c753ebba27f81dfa({ [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture readonly %result, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nocapture readonly %transform, { [0 x i64], [3 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i238 = alloca %str.RocStr, align 8
  %result_value2.i.i196 = alloca %str.RocStr, align 8
  %result_value.i5.i197 = alloca %str.RocStr, align 8
  %const_str_store1.i.i198 = alloca %str.RocStr, align 8
  %const_str_store.i.i199 = alloca %str.RocStr, align 8
  %result_value.i.i200 = alloca %str.RocStr, align 8
  %zig_helper_load_opaque.i.i201 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %result_value2.i.i = alloca %str.RocStr, align 8
  %result_value.i5.i = alloca %str.RocStr, align 8
  %const_str_store1.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i180 = alloca %str.RocStr, align 8
  %result_value.i.i181 = alloca %str.RocStr, align 8
  %zig_helper_load_opaque.i.i = alloca %str.RocStr, align 8
  %result_value2.i174 = alloca %str.RocStr, align 8
  %result_value.i175 = alloca %str.RocStr, align 8
  %const_str_store1.i = alloca %str.RocStr, align 8
  %const_str_store.i176 = alloca %str.RocStr, align 8
  %str_alloca.i6.i = alloca %str.RocStr, align 8
  %list_alloca.i270.i.i = alloca %list.RocList, align 8
  %list_alloca.i.i.i = alloca %list.RocList, align 8
  %result_value56.i.i = alloca %str.RocStr, align 8
  %result_value55.i.i = alloca %str.RocStr, align 8
  %result_value54.i.i = alloca %str.RocStr, align 8
  %const_str_store53.i.i = alloca %str.RocStr, align 8
  %const_str_store52.i.i = alloca %str.RocStr, align 8
  %result_value51.i.i = alloca %str.RocStr, align 8
  %const_str_store50.i.i = alloca %str.RocStr, align 8
  %result_value48.i.i = alloca %str.RocStr, align 8
  %struct_field47.i.i = alloca %str.RocStr, align 8
  %result_value39.i.i = alloca %str.RocStr, align 8
  %const_str_store38.i.i = alloca %str.RocStr, align 8
  %result_value37.i.i = alloca %str.RocStr, align 8
  %const_str_store36.i.i = alloca %str.RocStr, align 8
  %result_value31.i.i = alloca %str.RocStr, align 8
  %result_value30.i.i = alloca %str.RocStr, align 8
  %result_value29.i.i = alloca %str.RocStr, align 8
  %result_value28.i.i = alloca %str.RocStr, align 8
  %const_str_store27.i.i = alloca %str.RocStr, align 8
  %const_str_store26.i.i = alloca %str.RocStr, align 8
  %const_str_store25.i.i = alloca %str.RocStr, align 8
  %result_value24.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %result_value19.i.i = alloca %str.RocStr, align 8
  %result_value18.i.i = alloca %str.RocStr, align 8
  %const_str_store17.i.i = alloca %str.RocStr, align 8
  %const_str_store16.i.i = alloca %str.RocStr, align 8
  %load_element15.i.i = alloca %str.RocStr, align 8
  %result_value11.i.i = alloca %str.RocStr, align 8
  %result_value10.i.i = alloca %str.RocStr, align 8
  %const_str_store9.i.i = alloca %str.RocStr, align 8
  %const_str_store8.i.i = alloca %str.RocStr, align 8
  %load_element7.i.i = alloca %str.RocStr, align 8
  %result_value3.i.i = alloca %str.RocStr, align 8
  %result_value.i.i = alloca %str.RocStr, align 8
  %const_str_store2.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i = alloca %str.RocStr, align 8
  %load_element.i.i = alloca %str.RocStr, align 8
  %result_value2.i = alloca %str.RocStr, align 8
  %result_value1.i = alloca %str.RocStr, align 8
  %const_str_store.i = alloca %str.RocStr, align 8
  %result_value.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %load_element6.sroa.15 = alloca [23 x i8], align 1
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %"#Attr_#dec_4.exit.i"

common.ret:                                       ; preds = %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit, %"#Attr_#dec_4.exit"
  %tag_alloca9.sink330 = phi { [0 x i64], [3 x i64], i8, [7 x i8] }* [ %tag_alloca9, %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit ], [ %tag_alloca, %"#Attr_#dec_4.exit" ]
  %result_value3.i.sroa.0.0.copyload.sink = phi i8* [ %result_value3.i.sroa.0.0.copyload, %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit ], [ %load_element.sroa.0.0.copyload, %"#Attr_#dec_4.exit" ]
  %result_value3.i.sroa.4.0.copyload.sink = phi i64 [ %result_value3.i.sroa.4.0.copyload, %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit ], [ %load_element.sroa.2.0.copyload, %"#Attr_#dec_4.exit" ]
  %result_value3.i.sroa.5.0.copyload.sink = phi i64 [ %result_value3.i.sroa.5.0.copyload, %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit ], [ %load_element.sroa.3.0.copyload, %"#Attr_#dec_4.exit" ]
  %.sink = phi i8 [ 0, %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit ], [ 1, %"#Attr_#dec_4.exit" ]
  %data_buffer10 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330, i64 0, i32 1
  %.repack = bitcast [3 x i64]* %data_buffer10 to i8**
  store i8* %result_value3.i.sroa.0.0.copyload.sink, i8** %.repack, align 8
  %1 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330, i64 0, i32 1, i64 1
  store i64 %result_value3.i.sroa.4.0.copyload.sink, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330, i64 0, i32 1, i64 2
  store i64 %result_value3.i.sroa.5.0.copyload.sink, i64* %2, align 8
  %tag_id_ptr12 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr12, align 8
  %3 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %0 to i8*
  %4 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3, i8* noundef nonnull align 8 dereferenceable(32) %4, i64 32, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %5 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %transform to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8* noundef nonnull align 8 dereferenceable(24) %7, i64 24, i1 false) #11
  %load_str_to_stack.i.i.elt166 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack167 = load i64, i64* %load_str_to_stack.i.i.elt166, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack167, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_13.exit"

modify_rc.i.i:                                    ; preds = %then_block
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %8 = bitcast i8* %get_rc_ptr.i.i to i64*
  %9 = load i64, i64* %8, align 8
  %.not.i.i.i.i.i = icmp eq i64 %9, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_13.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %10 = add i64 %9, -1
  store i64 %10, i64* %8, align 8
  %11 = icmp eq i64 %9, -9223372036854775808
  br i1 %11, label %Then1.i.i.i.i.i, label %"#Attr_#dec_13.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_13.exit"

"#Attr_#dec_13.exit":                             ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %then_block
  %struct_field_access_record_1.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %transform, i64 0, i32 1
  %12 = bitcast %str.RocStr* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %12, i64 24, i1 false) #11
  %load_str_to_stack.i.elt171 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i.unpack172 = load i64, i64* %load_str_to_stack.i.elt171, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack172, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %"#Attr_#dec_13.exit"
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %13 = bitcast i8* %get_rc_ptr.i to i64*
  %14 = load i64, i64* %13, align 8
  %.not.i.i.i.i = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %15 = add i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_13.exit"
  %struct_field_access_record_2.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %transform, i64 0, i32 2
  %struct_field2.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_2.i, align 8
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %struct_field2.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  %load_element.sroa.0.0..sroa_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8**
  %load_element.sroa.0.0.copyload = load i8*, i8** %load_element.sroa.0.0..sroa_cast, align 8
  %load_element.sroa.2.0..sroa_idx32 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.sroa.2.0.copyload = load i64, i64* %load_element.sroa.2.0..sroa_idx32, align 8
  %load_element.sroa.3.0..sroa_idx33 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.sroa.3.0.copyload = load i64, i64* %load_element.sroa.3.0..sroa_idx33, align 8
  %tag_alloca = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

"#Attr_#dec_4.exit.i":                            ; preds = %entry
  %load_element6.sroa.0.0..sroa_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8**
  %load_element6.sroa.0.0.copyload = load i8*, i8** %load_element6.sroa.0.0..sroa_cast, align 8
  %load_element6.sroa.7.0..sroa_idx272 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element6.sroa.7.0.copyload = load i64, i64* %load_element6.sroa.7.0..sroa_idx272, align 8
  %load_element6.sroa.10.0..sroa_idx279 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element6.sroa.10.0.copyload = load i64, i64* %load_element6.sroa.10.0..sroa_idx279, align 8
  %load_element6.sroa.13.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element6.sroa.13.0..sroa_cast = bitcast i64* %load_element6.sroa.13.0..sroa_idx to i8*
  %load_element6.sroa.13.0.copyload = load i8, i8* %load_element6.sroa.13.0..sroa_cast, align 8
  %load_element6.sroa.15.0..sroa_raw_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8*
  %load_element6.sroa.15.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.15.0..sroa_raw_cast, i64 25
  %load_element6.sroa.15.0.sroa_idx = getelementptr inbounds [23 x i8], [23 x i8]* %load_element6.sroa.15, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(23) %load_element6.sroa.15.0.sroa_idx, i8* noundef nonnull align 1 dereferenceable(23) %load_element6.sroa.15.0..sroa_raw_idx, i64 23, i1 false)
  %load_element6.sroa.15286.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element6.sroa.15286.0..sroa_cast = bitcast i64* %load_element6.sroa.15286.0..sroa_idx to i8*
  %load_element6.sroa.15286.0.copyload = load i8, i8* %load_element6.sroa.15286.0..sroa_cast, align 8
  %17 = bitcast %str.RocStr* %result_value2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17)
  %18 = bitcast %str.RocStr* %result_value1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18)
  %19 = bitcast %str.RocStr* %const_str_store.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  %20 = bitcast %str.RocStr* %result_value.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  call fastcc void @Arg_formatHelp_5c516f89ea1e31b287b38913ed386287c31e3b5f58cdcf4bae54c31396b65d1({ %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %transform, %str.RocStr* nonnull %result_value.i) #11
  %const_str_store.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 0
  store i8* inttoptr (i64 2570 to i8*), i8** %const_str_store.repack.i, align 8
  %const_str_store.repack4.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 1
  store i64 0, i64* %const_str_store.repack4.i, align 8
  %const_str_store.repack5.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store.repack5.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value1.i, %str.RocStr* nonnull readonly %result_value.i, %str.RocStr* nocapture nonnull readonly %const_str_store.i) #11
  %result_value56.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value56.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value56.i.i.0.sroa_cast)
  %21 = bitcast %str.RocStr* %result_value55.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = bitcast %str.RocStr* %result_value54.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = bitcast %str.RocStr* %const_str_store53.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = bitcast %str.RocStr* %const_str_store52.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  %25 = bitcast %str.RocStr* %result_value51.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = bitcast %str.RocStr* %const_str_store50.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %27 = bitcast %str.RocStr* %result_value48.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = bitcast %str.RocStr* %struct_field47.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %result_value39.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value39.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value39.i.i.0.sroa_cast)
  %29 = bitcast %str.RocStr* %const_str_store38.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = bitcast %str.RocStr* %result_value37.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %31 = bitcast %str.RocStr* %const_str_store36.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %result_value31.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value31.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value31.i.i.0.sroa_cast)
  %32 = bitcast %str.RocStr* %result_value30.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  %33 = bitcast %str.RocStr* %result_value29.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = bitcast %str.RocStr* %result_value28.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = bitcast %str.RocStr* %const_str_store27.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = bitcast %str.RocStr* %const_str_store26.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = bitcast %str.RocStr* %const_str_store25.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = bitcast %str.RocStr* %result_value24.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = bitcast %str.RocStr* %struct_field.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %result_value19.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value19.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value19.i.i.0.sroa_cast)
  %40 = bitcast %str.RocStr* %result_value18.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  %41 = bitcast %str.RocStr* %const_str_store17.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %42 = bitcast %str.RocStr* %const_str_store16.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = bitcast %str.RocStr* %load_element15.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  %result_value11.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value11.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value11.i.i.0.sroa_cast)
  %44 = bitcast %str.RocStr* %result_value10.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  %45 = bitcast %str.RocStr* %const_str_store9.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %46 = bitcast %str.RocStr* %const_str_store8.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = bitcast %str.RocStr* %load_element7.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %result_value3.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value3.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value3.i.i.0.sroa_cast)
  %48 = bitcast %str.RocStr* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11
  %49 = bitcast %str.RocStr* %const_str_store2.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = bitcast %str.RocStr* %const_str_store.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = bitcast %str.RocStr* %load_element.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  switch i8 %load_element6.sroa.15286.0.copyload, label %default.i.i [
    i8 3, label %modify_rc.i148.i.i
    i8 1, label %modify_rc.i174.i.i
    i8 2, label %modify_rc.i200.i.i
    i8 5, label %branch5.i.i
    i8 4, label %branch4.i.i
  ]

default.i.i:                                      ; preds = %"#Attr_#dec_4.exit.i"
  %load_element43.sroa.4.i.i.sroa.4.0.load_element43.sroa.4.24..sroa_cast.i.i.sroa_raw_idx = getelementptr inbounds i8, i8* %28, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(23) %load_element43.sroa.4.i.i.sroa.4.0.load_element43.sroa.4.24..sroa_cast.i.i.sroa_raw_idx, i8* noundef nonnull align 1 dereferenceable(23) %load_element6.sroa.15.0.sroa_idx, i64 23, i1 false)
  store i8 %load_element6.sroa.13.0.copyload, i8* %28, align 8
  %52 = bitcast %str.RocStr* %result_value2.i174 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52)
  %53 = bitcast %str.RocStr* %result_value.i175 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53)
  %54 = bitcast %str.RocStr* %const_str_store1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54)
  %55 = bitcast %str.RocStr* %const_str_store.i176 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %const_str_store.repack.i177 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i176, i64 0, i32 0
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store.repack.i177, align 8
  %const_str_store.repack3.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i176, i64 0, i32 1
  store i64 0, i64* %const_str_store.repack3.i, align 8
  %const_str_store.repack4.i178 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i176, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store.repack4.i178, align 8
  %const_str_store1.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i, i64 0, i32 0
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store1.repack.i, align 8
  %const_str_store1.repack5.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i, i64 0, i32 1
  store i64 0, i64* %const_str_store1.repack5.i, align 8
  %const_str_store1.repack6.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store1.repack6.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i175, %str.RocStr* nonnull readonly %struct_field47.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store1.i) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value2.i174, %str.RocStr* nonnull readonly %const_str_store.i176, %str.RocStr* nocapture nonnull readonly %result_value.i175) #11
  %load_str_to_stack.i8.elt28.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i175, i64 0, i32 2
  %load_str_to_stack.i8.unpack29.i = load i64, i64* %load_str_to_stack.i8.elt28.i, align 8
  %is_big_str.i10.i = icmp sgt i64 %load_str_to_stack.i8.unpack29.i, 0
  br i1 %is_big_str.i10.i, label %modify_rc.i15.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit

modify_rc.i15.i:                                  ; preds = %default.i.i
  %call_builtin.i11.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i175) #11
  %get_rc_ptr.i13.i = getelementptr inbounds i8, i8* %call_builtin.i11.i, i64 -8
  %56 = bitcast i8* %get_rc_ptr.i13.i to i64*
  %57 = load i64, i64* %56, align 8
  %.not.i.i.i.i14.i = icmp eq i64 %57, 0
  br i1 %.not.i.i.i.i14.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit, label %Then.i.i.i.i16.i

Then.i.i.i.i16.i:                                 ; preds = %modify_rc.i15.i
  %58 = add i64 %57, -1
  store i64 %58, i64* %56, align 8
  %59 = icmp eq i64 %57, -9223372036854775808
  br i1 %59, label %Then1.i.i.i.i17.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit

Then1.i.i.i.i17.i:                                ; preds = %Then.i.i.i.i16.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i13.i, i32 8) #11
  br label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit

Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit: ; preds = %default.i.i, %modify_rc.i15.i, %Then.i.i.i.i16.i, %Then1.i.i.i.i17.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %27, i8* noundef nonnull align 8 dereferenceable(24) %52, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  %.not.i.i = icmp eq i8* %load_element6.sroa.0.0.copyload, null
  br i1 %.not.i.i, label %roc_builtins.list.map.exit.i, label %OptionalThen.i.i

OptionalThen.i.i:                                 ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit
  %60 = icmp ne i64 %load_element6.sroa.7.0.copyload, 0
  tail call void @llvm.assume(i1 %60) #11
  %61 = icmp ugt i64 %load_element6.sroa.7.0.copyload, 2
  %..i.i.i.i.i = select i1 %61, i64 %load_element6.sroa.7.0.copyload, i64 2
  %62 = mul nuw i64 %..i.i.i.i.i, 24
  %63 = add nuw i64 %62, 8
  %64 = tail call i8* @roc_alloc(i64 %63, i32 8) #11, !noalias !160
  %65 = icmp ne i8* %64, null
  tail call void @llvm.assume(i1 %65) #11
  %66 = getelementptr inbounds i8, i8* %64, i64 8
  %67 = bitcast i8* %64 to i64*
  store i64 -9223372036854775808, i64* %67, align 8, !noalias !160
  %result_value.i.0.sroa_cast.i = bitcast %str.RocStr* %result_value.i.i181 to i8*
  %68 = bitcast %str.RocStr* %zig_helper_load_opaque.i.i to i8*
  %69 = bitcast %str.RocStr* %result_value2.i.i to i8*
  %70 = bitcast %str.RocStr* %result_value.i5.i to i8*
  %71 = bitcast %str.RocStr* %const_str_store1.i.i to i8*
  %72 = bitcast %str.RocStr* %const_str_store.i.i180 to i8*
  %const_str_store.repack.i.i182 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i180, i64 0, i32 0
  %const_str_store.repack3.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i180, i64 0, i32 1
  %const_str_store.repack4.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i180, i64 0, i32 2
  %const_str_store1.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 0
  %const_str_store1.repack5.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 1
  %const_str_store1.repack6.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 2
  %load_str_to_stack.i8.elt28.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i5.i, i64 0, i32 2
  br label %WhileBody.i.i

WhileBody.i.i:                                    ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i, %OptionalThen.i.i
  %i.010.i.i = phi i64 [ %80, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i ], [ 0, %OptionalThen.i.i ]
  %73 = mul nuw i64 %i.010.i.i, 24
  %74 = getelementptr inbounds i8, i8* %load_element6.sroa.0.0.copyload, i64 %73
  %75 = getelementptr inbounds i8, i8* %66, i64 %73
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.0.sroa_cast.i)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %68, i8* noundef nonnull align 8 dereferenceable(24) %74, i64 24, i1 false) #11, !noalias !165
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store.repack.i.i182, align 8, !noalias !165
  store i64 0, i64* %const_str_store.repack3.i.i, align 8, !noalias !165
  store i64 -9151314442816847872, i64* %const_str_store.repack4.i.i, align 8, !noalias !165
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store1.repack.i.i, align 8, !noalias !165
  store i64 0, i64* %const_str_store1.repack5.i.i, align 8, !noalias !165
  store i64 -9151314442816847872, i64* %const_str_store1.repack6.i.i, align 8, !noalias !165
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i5.i, %str.RocStr* nonnull readonly %zig_helper_load_opaque.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store1.i.i) #11, !noalias !165
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value2.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i180, %str.RocStr* nocapture nonnull readonly %result_value.i5.i) #11, !noalias !165
  %load_str_to_stack.i8.unpack29.i.i = load i64, i64* %load_str_to_stack.i8.elt28.i.i, align 8, !noalias !165
  %is_big_str.i10.i.i = icmp sgt i64 %load_str_to_stack.i8.unpack29.i.i, 0
  br i1 %is_big_str.i10.i.i, label %modify_rc.i15.i.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i

modify_rc.i15.i.i:                                ; preds = %WhileBody.i.i
  %call_builtin.i11.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i5.i) #11, !noalias !165
  %get_rc_ptr.i13.i.i = getelementptr inbounds i8, i8* %call_builtin.i11.i.i, i64 -8
  %76 = bitcast i8* %get_rc_ptr.i13.i.i to i64*
  %77 = load i64, i64* %76, align 8, !noalias !165
  %.not.i.i.i.i14.i.i = icmp eq i64 %77, 0
  br i1 %.not.i.i.i.i14.i.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i, label %Then.i.i.i.i16.i.i

Then.i.i.i.i16.i.i:                               ; preds = %modify_rc.i15.i.i
  %78 = add i64 %77, -1
  store i64 %78, i64* %76, align 8, !noalias !165
  %79 = icmp eq i64 %77, -9223372036854775808
  br i1 %79, label %Then1.i.i.i.i17.i.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i

Then1.i.i.i.i17.i.i:                              ; preds = %Then.i.i.i.i16.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i13.i.i, i32 8) #11, !noalias !165
  br label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i

Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i: ; preds = %Then1.i.i.i.i17.i.i, %Then.i.i.i.i16.i.i, %modify_rc.i15.i.i, %WhileBody.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.0.sroa_cast.i, i8* noundef nonnull align 8 dereferenceable(24) %69, i64 24, i1 false) #11, !noalias !165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %75, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.0.sroa_cast.i, i64 24, i1 false) #11, !noalias !165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.0.sroa_cast.i)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  %80 = add nuw i64 %i.010.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %80, %load_element6.sroa.7.0.copyload
  br i1 %exitcond.not.i.i, label %roc_builtins.list.map.exit.i, label %WhileBody.i.i

roc_builtins.list.map.exit.i:                     ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit
  %list_alloca.sroa.0.0.i = phi i8* [ null, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit ], [ %66, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i ]
  %list_alloca.sroa.3.0.i = phi i64 [ 0, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit ], [ %load_element6.sroa.7.0.copyload, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i ]
  %list_alloca.sroa.5.0.i = phi i64 [ 0, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit ], [ %..i.i.i.i.i, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i ]
  %81 = ptrtoint i8* %load_element6.sroa.0.0.copyload to i64
  %82 = shl i64 %load_element6.sroa.10.0.copyload, 1
  %.not.i.i.i = icmp slt i64 %load_element6.sroa.10.0.copyload, 0
  %83 = select i1 %.not.i.i.i, i64 %82, i64 %81
  %.not.i19.i = icmp eq i64 %83, 0
  br i1 %.not.i19.i, label %"#Attr_#dec_4.exit.i.i", label %OptionalThen.i21.i

OptionalThen.i21.i:                               ; preds = %roc_builtins.list.map.exit.i
  %84 = inttoptr i64 %83 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 -8
  %86 = bitcast i8* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %.not.i.i20.i = icmp eq i64 %87, 0
  br i1 %.not.i.i20.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %OptionalThen.i21.i
  %88 = add i64 %87, -1
  store i64 %88, i64* %86, align 8
  %89 = icmp eq i64 %87, -9223372036854775808
  br i1 %89, label %Then1.i.i.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %85, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i, %Then.i.i.i, %OptionalThen.i21.i, %roc_builtins.list.map.exit.i
  %const_str_store50.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store50.i.i, i64 0, i32 0
  store i8* inttoptr (i64 8236 to i8*), i8** %const_str_store50.repack.i.i, align 8
  %const_str_store50.repack93.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store50.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store50.repack93.i.i, align 8
  %const_str_store50.repack94.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store50.i.i, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store50.repack94.i.i, align 8
  %90 = bitcast %list.RocList* %list_alloca.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  %list_alloca.repack.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i.i, i64 0, i32 0
  store i8* %list_alloca.sroa.0.0.i, i8** %list_alloca.repack.i.i.i, align 8
  %list_alloca.repack1.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i.i, i64 0, i32 1
  store i64 %list_alloca.sroa.3.0.i, i64* %list_alloca.repack1.i.i.i, align 8
  %list_alloca.repack3.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i.i, i64 0, i32 2
  store i64 %list_alloca.sroa.5.0.i, i64* %list_alloca.repack3.i.i.i, align 8
  call fastcc void @roc_builtins.str.joinWith(%str.RocStr* noalias nocapture nonnull %result_value51.i.i, %list.RocList* nocapture nonnull readonly %list_alloca.i.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store50.i.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  %91 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91)
  %"cap > 0.not.i" = icmp eq i64 %list_alloca.sroa.5.0.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %"#Attr_#dec_4.exit.i.i"
  %cast_basic_basic.i = bitcast i8* %list_alloca.sroa.0.0.i to %str.RocStr*
  %bounds_check.not.i = icmp eq i64 %list_alloca.sroa.3.0.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_4.exit.i190", %loop.preheader.i
  %next_index12.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_4.exit.i190" ]
  %next_index.i = add nuw i64 %next_index12.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %92 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %91, i8* noundef nonnull align 8 dereferenceable(24) %92, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i183 = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i183, label %modify_rc.i.i187, label %"#Attr_#dec_4.exit.i190"

modify_rc.i.i187:                                 ; preds = %loop.i
  %call_builtin.i.i184 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i185 = getelementptr inbounds i8, i8* %call_builtin.i.i184, i64 -8
  %93 = bitcast i8* %get_rc_ptr.i.i185 to i64*
  %94 = load i64, i64* %93, align 8
  %.not.i.i.i.i.i186 = icmp eq i64 %94, 0
  br i1 %.not.i.i.i.i.i186, label %"#Attr_#dec_4.exit.i190", label %Then.i.i.i.i.i188

Then.i.i.i.i.i188:                                ; preds = %modify_rc.i.i187
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = icmp eq i64 %94, -9223372036854775808
  br i1 %96, label %Then1.i.i.i.i.i189, label %"#Attr_#dec_4.exit.i190"

Then1.i.i.i.i.i189:                               ; preds = %Then.i.i.i.i.i188
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i185, i32 8) #11
  br label %"#Attr_#dec_4.exit.i190"

"#Attr_#dec_4.exit.i190":                         ; preds = %Then1.i.i.i.i.i189, %Then.i.i.i.i.i188, %modify_rc.i.i187, %loop.i
  %exitcond.not = icmp eq i64 %next_index.i, %list_alloca.sroa.3.0.i
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_4.exit.i190", %modification_list_block.i
  %97 = ptrtoint i8* %list_alloca.sroa.0.0.i to i64
  %98 = shl i64 %list_alloca.sroa.5.0.i, 1
  %.not.i.i.i191 = icmp slt i64 %list_alloca.sroa.5.0.i, 0
  %99 = select i1 %.not.i.i.i191, i64 %98, i64 %97
  %as_usize_ptr.i = inttoptr i64 %99 to i64*
  %get_rc_ptr.i192 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %100 = load i64, i64* %get_rc_ptr.i192, align 8
  %.not.i.i.i.i193 = icmp eq i64 %100, 0
  br i1 %.not.i.i.i.i193, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i194

Then.i.i.i.i194:                                  ; preds = %after_loop.i
  %101 = add i64 %100, -1
  store i64 %101, i64* %get_rc_ptr.i192, align 8
  %102 = icmp eq i64 %100, -9223372036854775808
  br i1 %102, label %Then1.i.i.i.i195, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i195:                                 ; preds = %Then.i.i.i.i194
  %103 = bitcast i64* %get_rc_ptr.i192 to i8*
  tail call void @roc_dealloc(i8* %103, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %"#Attr_#dec_4.exit.i.i", %after_loop.i, %Then.i.i.i.i194, %Then1.i.i.i.i195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91)
  %const_str_store52.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store52.i.i, i64 0, i32 0
  store i8* inttoptr (i64 543516756 to i8*), i8** %const_str_store52.repack.i.i, align 8
  %const_str_store52.repack95.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store52.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store52.repack95.i.i, align 8
  %const_str_store52.repack96.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store52.i.i, i64 0, i32 2
  store i64 -8935141660703064064, i64* %const_str_store52.repack96.i.i, align 8
  %const_str_store53.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store53.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([102 x i8], [102 x i8]* @_str_literal_8015680634864437174, i64 0, i64 8), i8** %const_str_store53.repack.i.i, align 8
  %const_str_store53.repack97.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store53.i.i, i64 0, i32 1
  store i64 94, i64* %const_str_store53.repack97.i.i, align 8
  %const_str_store53.repack98.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store53.i.i, i64 0, i32 2
  store i64 94, i64* %const_str_store53.repack98.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value54.i.i, %str.RocStr* nonnull readonly %const_str_store53.i.i, %str.RocStr* nocapture nonnull readonly %result_value51.i.i) #11
  %load_str_to_stack.i102.i.i.elt151 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value51.i.i, i64 0, i32 2
  %load_str_to_stack.i102.i.i.unpack152 = load i64, i64* %load_str_to_stack.i102.i.i.elt151, align 8
  %is_big_str.i104.i.i = icmp sgt i64 %load_str_to_stack.i102.i.i.unpack152, 0
  br i1 %is_big_str.i104.i.i, label %modify_rc.i109.i.i, label %"#Attr_#dec_4.exit113.i.i"

modify_rc.i109.i.i:                               ; preds = %"#Attr_#dec_17.exit"
  %call_builtin.i105.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value51.i.i) #11
  %get_rc_ptr.i107.i.i = getelementptr inbounds i8, i8* %call_builtin.i105.i.i, i64 -8
  %104 = bitcast i8* %get_rc_ptr.i107.i.i to i64*
  %105 = load i64, i64* %104, align 8
  %.not.i.i.i.i108.i.i = icmp eq i64 %105, 0
  br i1 %.not.i.i.i.i108.i.i, label %"#Attr_#dec_4.exit113.i.i", label %Then.i.i.i.i110.i.i

Then.i.i.i.i110.i.i:                              ; preds = %modify_rc.i109.i.i
  %106 = add i64 %105, -1
  store i64 %106, i64* %104, align 8
  %107 = icmp eq i64 %105, -9223372036854775808
  br i1 %107, label %Then1.i.i.i.i111.i.i, label %"#Attr_#dec_4.exit113.i.i"

Then1.i.i.i.i111.i.i:                             ; preds = %Then.i.i.i.i110.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i107.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit113.i.i"

"#Attr_#dec_4.exit113.i.i":                       ; preds = %modify_rc.i109.i.i, %Then.i.i.i.i110.i.i, %Then1.i.i.i.i111.i.i, %"#Attr_#dec_17.exit"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value55.i.i, %str.RocStr* nonnull readonly %result_value48.i.i, %str.RocStr* nocapture nonnull readonly %result_value54.i.i) #11
  %load_str_to_stack.i115.i.i.elt156 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value54.i.i, i64 0, i32 2
  %load_str_to_stack.i115.i.i.unpack157 = load i64, i64* %load_str_to_stack.i115.i.i.elt156, align 8
  %is_big_str.i117.i.i = icmp sgt i64 %load_str_to_stack.i115.i.i.unpack157, 0
  br i1 %is_big_str.i117.i.i, label %modify_rc.i122.i.i, label %"#Attr_#dec_4.exit126.i.i"

modify_rc.i122.i.i:                               ; preds = %"#Attr_#dec_4.exit113.i.i"
  %call_builtin.i118.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value54.i.i) #11
  %get_rc_ptr.i120.i.i = getelementptr inbounds i8, i8* %call_builtin.i118.i.i, i64 -8
  %108 = bitcast i8* %get_rc_ptr.i120.i.i to i64*
  %109 = load i64, i64* %108, align 8
  %.not.i.i.i.i121.i.i = icmp eq i64 %109, 0
  br i1 %.not.i.i.i.i121.i.i, label %"#Attr_#dec_4.exit126.i.i", label %Then.i.i.i.i123.i.i

Then.i.i.i.i123.i.i:                              ; preds = %modify_rc.i122.i.i
  %110 = add i64 %109, -1
  store i64 %110, i64* %108, align 8
  %111 = icmp eq i64 %109, -9223372036854775808
  br i1 %111, label %Then1.i.i.i.i124.i.i, label %"#Attr_#dec_4.exit126.i.i"

Then1.i.i.i.i124.i.i:                             ; preds = %Then.i.i.i.i123.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i120.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit126.i.i"

"#Attr_#dec_4.exit126.i.i":                       ; preds = %modify_rc.i122.i.i, %Then.i.i.i.i123.i.i, %Then1.i.i.i.i124.i.i, %"#Attr_#dec_4.exit113.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value56.i.i, %str.RocStr* nonnull readonly %const_str_store52.i.i, %str.RocStr* nocapture nonnull readonly %result_value55.i.i) #11
  %load_str_to_stack.i128.i.i.elt161 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value55.i.i, i64 0, i32 2
  %load_str_to_stack.i128.i.i.unpack162 = load i64, i64* %load_str_to_stack.i128.i.i.elt161, align 8
  %is_big_str.i130.i.i = icmp sgt i64 %load_str_to_stack.i128.i.i.unpack162, 0
  br i1 %is_big_str.i130.i.i, label %modify_rc.i135.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i135.i.i:                               ; preds = %"#Attr_#dec_4.exit126.i.i"
  %call_builtin.i131.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value55.i.i) #11
  %get_rc_ptr.i133.i.i = getelementptr inbounds i8, i8* %call_builtin.i131.i.i, i64 -8
  %112 = bitcast i8* %get_rc_ptr.i133.i.i to i64*
  %113 = load i64, i64* %112, align 8
  %.not.i.i.i.i134.i.i = icmp eq i64 %113, 0
  br i1 %.not.i.i.i.i134.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i, label %Then.i.i.i.i136.i.i

Then.i.i.i.i136.i.i:                              ; preds = %modify_rc.i135.i.i
  %114 = add i64 %113, -1
  store i64 %114, i64* %112, align 8
  %115 = icmp eq i64 %113, -9223372036854775808
  br i1 %115, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i148.i.i:                               ; preds = %"#Attr_#dec_4.exit.i"
  %load_element6.sroa.0.0..sroa_idx270 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i, i64 0, i32 0
  store i8* %load_element6.sroa.0.0.copyload, i8** %load_element6.sroa.0.0..sroa_idx270, align 8
  %load_element6.sroa.7.0..sroa_idx277 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i, i64 0, i32 1
  store i64 %load_element6.sroa.7.0.copyload, i64* %load_element6.sroa.7.0..sroa_idx277, align 8
  %load_element6.sroa.10.0..sroa_idx284 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i, i64 0, i32 2
  store i64 %load_element6.sroa.10.0.copyload, i64* %load_element6.sroa.10.0..sroa_idx284, align 8
  %const_str_store.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 0
  store i8* inttoptr (i64 7453301734226880596 to i8*), i8** %const_str_store.repack.i.i, align 8
  %const_str_store.repack84.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 1
  store i64 7308604895910519154, i64* %const_str_store.repack84.i.i, align 8
  %const_str_store.repack85.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 2
  store i64 -7926335344172064224, i64* %const_str_store.repack85.i.i, align 8
  %const_str_store2.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store2.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_str_literal_11724802636100534137, i64 0, i64 8), i8** %const_str_store2.repack.i.i, align 8
  %const_str_store2.repack86.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store2.i.i, i64 0, i32 1
  store i64 39, i64* %const_str_store2.repack86.i.i, align 8
  %const_str_store2.repack87.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store2.i.i, i64 0, i32 2
  store i64 39, i64* %const_str_store2.repack87.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i.i, %str.RocStr* nonnull readonly %load_element.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store2.i.i) #11
  %call_builtin.i144.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %const_str_store2.i.i) #11
  %get_rc_ptr.i146.i.i = getelementptr inbounds i8, i8* %call_builtin.i144.i.i, i64 -8
  %116 = bitcast i8* %get_rc_ptr.i146.i.i to i64*
  %117 = load i64, i64* %116, align 8
  %.not.i.i.i.i147.i.i = icmp eq i64 %117, 0
  br i1 %.not.i.i.i.i147.i.i, label %"#Attr_#dec_4.exit152.i.i", label %Then.i.i.i.i149.i.i

Then.i.i.i.i149.i.i:                              ; preds = %modify_rc.i148.i.i
  %118 = add i64 %117, -1
  store i64 %118, i64* %116, align 8
  %119 = icmp eq i64 %117, -9223372036854775808
  br i1 %119, label %Then1.i.i.i.i150.i.i, label %"#Attr_#dec_4.exit152.i.i"

Then1.i.i.i.i150.i.i:                             ; preds = %Then.i.i.i.i149.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i146.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit152.i.i"

"#Attr_#dec_4.exit152.i.i":                       ; preds = %modify_rc.i148.i.i, %Then.i.i.i.i149.i.i, %Then1.i.i.i.i150.i.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value3.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i, %str.RocStr* nocapture nonnull readonly %result_value.i.i) #11
  %load_str_to_stack.i154.i.i.elt141 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i.i, i64 0, i32 2
  %load_str_to_stack.i154.i.i.unpack142 = load i64, i64* %load_str_to_stack.i154.i.i.elt141, align 8
  %is_big_str.i156.i.i = icmp sgt i64 %load_str_to_stack.i154.i.i.unpack142, 0
  br i1 %is_big_str.i156.i.i, label %modify_rc.i161.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i161.i.i:                               ; preds = %"#Attr_#dec_4.exit152.i.i"
  %call_builtin.i157.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i.i) #11
  %get_rc_ptr.i159.i.i = getelementptr inbounds i8, i8* %call_builtin.i157.i.i, i64 -8
  %120 = bitcast i8* %get_rc_ptr.i159.i.i to i64*
  %121 = load i64, i64* %120, align 8
  %.not.i.i.i.i160.i.i = icmp eq i64 %121, 0
  br i1 %.not.i.i.i.i160.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i, label %Then.i.i.i.i162.i.i

Then.i.i.i.i162.i.i:                              ; preds = %modify_rc.i161.i.i
  %122 = add i64 %121, -1
  store i64 %122, i64* %120, align 8
  %123 = icmp eq i64 %121, -9223372036854775808
  br i1 %123, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i174.i.i:                               ; preds = %"#Attr_#dec_4.exit.i"
  %load_element6.sroa.0.0..sroa_idx268 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element7.i.i, i64 0, i32 0
  store i8* %load_element6.sroa.0.0.copyload, i8** %load_element6.sroa.0.0..sroa_idx268, align 8
  %load_element6.sroa.7.0..sroa_idx275 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element7.i.i, i64 0, i32 1
  store i64 %load_element6.sroa.7.0.copyload, i64* %load_element6.sroa.7.0..sroa_idx275, align 8
  %load_element6.sroa.10.0..sroa_idx282 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element7.i.i, i64 0, i32 2
  store i64 %load_element6.sroa.10.0.copyload, i64* %load_element6.sroa.10.0..sroa_idx282, align 8
  %const_str_store8.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i, i64 0, i32 0
  store i8* inttoptr (i64 8459856186519677012 to i8*), i8** %const_str_store8.repack.i.i, align 8
  %const_str_store8.repack80.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i, i64 0, i32 1
  store i64 105692508611949, i64* %const_str_store8.repack80.i.i, align 8
  %const_str_store8.repack81.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i, i64 0, i32 2
  store i64 -8214565720323784704, i64* %const_str_store8.repack81.i.i, align 8
  %const_str_store9.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store9.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_str_literal_1169590549421570608, i64 0, i64 8), i8** %const_str_store9.repack.i.i, align 8
  %const_str_store9.repack82.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store9.i.i, i64 0, i32 1
  store i64 35, i64* %const_str_store9.repack82.i.i, align 8
  %const_str_store9.repack83.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store9.i.i, i64 0, i32 2
  store i64 35, i64* %const_str_store9.repack83.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value10.i.i, %str.RocStr* nonnull readonly %load_element7.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store9.i.i) #11
  %call_builtin.i170.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %const_str_store9.i.i) #11
  %get_rc_ptr.i172.i.i = getelementptr inbounds i8, i8* %call_builtin.i170.i.i, i64 -8
  %124 = bitcast i8* %get_rc_ptr.i172.i.i to i64*
  %125 = load i64, i64* %124, align 8
  %.not.i.i.i.i173.i.i = icmp eq i64 %125, 0
  br i1 %.not.i.i.i.i173.i.i, label %"#Attr_#dec_4.exit178.i.i", label %Then.i.i.i.i175.i.i

Then.i.i.i.i175.i.i:                              ; preds = %modify_rc.i174.i.i
  %126 = add i64 %125, -1
  store i64 %126, i64* %124, align 8
  %127 = icmp eq i64 %125, -9223372036854775808
  br i1 %127, label %Then1.i.i.i.i176.i.i, label %"#Attr_#dec_4.exit178.i.i"

Then1.i.i.i.i176.i.i:                             ; preds = %Then.i.i.i.i175.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i172.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit178.i.i"

"#Attr_#dec_4.exit178.i.i":                       ; preds = %modify_rc.i174.i.i, %Then.i.i.i.i175.i.i, %Then1.i.i.i.i176.i.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value11.i.i, %str.RocStr* nonnull readonly %const_str_store8.i.i, %str.RocStr* nocapture nonnull readonly %result_value10.i.i) #11
  %load_str_to_stack.i180.i.i.elt131 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value10.i.i, i64 0, i32 2
  %load_str_to_stack.i180.i.i.unpack132 = load i64, i64* %load_str_to_stack.i180.i.i.elt131, align 8
  %is_big_str.i182.i.i = icmp sgt i64 %load_str_to_stack.i180.i.i.unpack132, 0
  br i1 %is_big_str.i182.i.i, label %modify_rc.i187.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i187.i.i:                               ; preds = %"#Attr_#dec_4.exit178.i.i"
  %call_builtin.i183.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value10.i.i) #11
  %get_rc_ptr.i185.i.i = getelementptr inbounds i8, i8* %call_builtin.i183.i.i, i64 -8
  %128 = bitcast i8* %get_rc_ptr.i185.i.i to i64*
  %129 = load i64, i64* %128, align 8
  %.not.i.i.i.i186.i.i = icmp eq i64 %129, 0
  br i1 %.not.i.i.i.i186.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i, label %Then.i.i.i.i188.i.i

Then.i.i.i.i188.i.i:                              ; preds = %modify_rc.i187.i.i
  %130 = add i64 %129, -1
  store i64 %130, i64* %128, align 8
  %131 = icmp eq i64 %129, -9223372036854775808
  br i1 %131, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i200.i.i:                               ; preds = %"#Attr_#dec_4.exit.i"
  %load_element6.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element15.i.i, i64 0, i32 0
  store i8* %load_element6.sroa.0.0.copyload, i8** %load_element6.sroa.0.0..sroa_idx, align 8
  %load_element6.sroa.7.0..sroa_idx273 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element15.i.i, i64 0, i32 1
  store i64 %load_element6.sroa.7.0.copyload, i64* %load_element6.sroa.7.0..sroa_idx273, align 8
  %load_element6.sroa.10.0..sroa_idx280 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element15.i.i, i64 0, i32 2
  store i64 %load_element6.sroa.10.0.copyload, i64* %load_element6.sroa.10.0..sroa_idx280, align 8
  %const_str_store16.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store16.i.i, i64 0, i32 0
  store i8* inttoptr (i64 7598822093868066900 to i8*), i8** %const_str_store16.repack.i.i, align 8
  %const_str_store16.repack76.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store16.i.i, i64 0, i32 1
  store i64 49672909516399, i64* %const_str_store16.repack76.i.i, align 8
  %const_str_store16.repack77.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store16.i.i, i64 0, i32 2
  store i64 -8214565720323784704, i64* %const_str_store16.repack77.i.i, align 8
  %const_str_store17.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store17.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_str_literal_1169590549421570608, i64 0, i64 8), i8** %const_str_store17.repack.i.i, align 8
  %const_str_store17.repack78.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store17.i.i, i64 0, i32 1
  store i64 35, i64* %const_str_store17.repack78.i.i, align 8
  %const_str_store17.repack79.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store17.i.i, i64 0, i32 2
  store i64 35, i64* %const_str_store17.repack79.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value18.i.i, %str.RocStr* nonnull readonly %load_element15.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store17.i.i) #11
  %call_builtin.i196.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %const_str_store17.i.i) #11
  %get_rc_ptr.i198.i.i = getelementptr inbounds i8, i8* %call_builtin.i196.i.i, i64 -8
  %132 = bitcast i8* %get_rc_ptr.i198.i.i to i64*
  %133 = load i64, i64* %132, align 8
  %.not.i.i.i.i199.i.i = icmp eq i64 %133, 0
  br i1 %.not.i.i.i.i199.i.i, label %"#Attr_#dec_4.exit204.i.i", label %Then.i.i.i.i201.i.i

Then.i.i.i.i201.i.i:                              ; preds = %modify_rc.i200.i.i
  %134 = add i64 %133, -1
  store i64 %134, i64* %132, align 8
  %135 = icmp eq i64 %133, -9223372036854775808
  br i1 %135, label %Then1.i.i.i.i202.i.i, label %"#Attr_#dec_4.exit204.i.i"

Then1.i.i.i.i202.i.i:                             ; preds = %Then.i.i.i.i201.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i198.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit204.i.i"

"#Attr_#dec_4.exit204.i.i":                       ; preds = %modify_rc.i200.i.i, %Then.i.i.i.i201.i.i, %Then1.i.i.i.i202.i.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value19.i.i, %str.RocStr* nonnull readonly %const_str_store16.i.i, %str.RocStr* nocapture nonnull readonly %result_value18.i.i) #11
  %load_str_to_stack.i206.i.i.elt121 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value18.i.i, i64 0, i32 2
  %load_str_to_stack.i206.i.i.unpack122 = load i64, i64* %load_str_to_stack.i206.i.i.elt121, align 8
  %is_big_str.i208.i.i = icmp sgt i64 %load_str_to_stack.i206.i.i.unpack122, 0
  br i1 %is_big_str.i208.i.i, label %modify_rc.i213.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i213.i.i:                               ; preds = %"#Attr_#dec_4.exit204.i.i"
  %call_builtin.i209.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value18.i.i) #11
  %get_rc_ptr.i211.i.i = getelementptr inbounds i8, i8* %call_builtin.i209.i.i, i64 -8
  %136 = bitcast i8* %get_rc_ptr.i211.i.i to i64*
  %137 = load i64, i64* %136, align 8
  %.not.i.i.i.i212.i.i = icmp eq i64 %137, 0
  br i1 %.not.i.i.i.i212.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i, label %Then.i.i.i.i214.i.i

Then.i.i.i.i214.i.i:                              ; preds = %modify_rc.i213.i.i
  %138 = add i64 %137, -1
  store i64 %138, i64* %136, align 8
  %139 = icmp eq i64 %137, -9223372036854775808
  br i1 %139, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

branch5.i.i:                                      ; preds = %"#Attr_#dec_4.exit.i"
  %struct_field.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 0
  store i8* %load_element6.sroa.0.0.copyload, i8** %struct_field.repack.i.i, align 8
  %struct_field.repack66.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 1
  store i64 %load_element6.sroa.7.0.copyload, i64* %struct_field.repack66.i.i, align 8
  %struct_field.repack68.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  store i64 %load_element6.sroa.10.0.copyload, i64* %struct_field.repack68.i.i, align 8
  switch i8 %load_element6.sroa.13.0.copyload, label %default.i.i.i [
    i8 0, label %branch0.i.i.i
    i8 2, label %branch2.i.i.i
  ]

default.i.i.i:                                    ; preds = %branch5.i.i
  %const_str_store2.sroa.0.0..sroa_idx.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 0
  store i8* inttoptr (i64 3202733779772010089 to i8*), i8** %const_str_store2.sroa.0.0..sroa_idx.i.i.i, align 8
  br label %"#Attr_#dec_4.exit230.i.i"

branch0.i.i.i:                                    ; preds = %branch5.i.i
  %const_str_store.sroa.0.0..sroa_idx.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 0
  store i8* inttoptr (i64 31069335677005666 to i8*), i8** %const_str_store.sroa.0.0..sroa_idx.i.i.i, align 8
  br label %"#Attr_#dec_4.exit230.i.i"

branch2.i.i.i:                                    ; preds = %branch5.i.i
  %const_str_store1.sroa.0.0..sroa_idx.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 0
  store i8* inttoptr (i64 113723913172083 to i8*), i8** %const_str_store1.sroa.0.0..sroa_idx.i.i.i, align 8
  br label %"#Attr_#dec_4.exit230.i.i"

"#Attr_#dec_4.exit230.i.i":                       ; preds = %default.i.i.i, %branch0.i.i.i, %branch2.i.i.i
  %.sink332 = phi i64 [ 2338609976898237984, %default.i.i.i ], [ 0, %branch0.i.i.i ], [ 0, %branch2.i.i.i ]
  %.sink331 = phi i64 [ -7637994581213615757, %default.i.i.i ], [ -8718968878589280256, %branch0.i.i.i ], [ -8791026472627208192, %branch2.i.i.i ]
  %const_str_store2.sroa.2.0..sroa_idx13.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 1
  store i64 %.sink332, i64* %const_str_store2.sroa.2.0..sroa_idx13.i.i.i, align 8
  %const_str_store2.sroa.3.0..sroa_idx14.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 2
  store i64 %.sink331, i64* %const_str_store2.sroa.3.0..sroa_idx14.i.i.i, align 8
  %const_str_store25.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store25.i.i, i64 0, i32 0
  store i8* inttoptr (i64 7598822093868066900 to i8*), i8** %const_str_store25.repack.i.i, align 8
  %const_str_store25.repack70.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store25.i.i, i64 0, i32 1
  store i64 49672909516399, i64* %const_str_store25.repack70.i.i, align 8
  %const_str_store25.repack71.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store25.i.i, i64 0, i32 2
  store i64 -8214565720323784704, i64* %const_str_store25.repack71.i.i, align 8
  %const_str_store26.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store26.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_str_literal_12458281521289889614, i64 0, i64 8), i8** %const_str_store26.repack.i.i, align 8
  %const_str_store26.repack72.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store26.i.i, i64 0, i32 1
  store i64 26, i64* %const_str_store26.repack72.i.i, align 8
  %const_str_store26.repack73.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store26.i.i, i64 0, i32 2
  store i64 26, i64* %const_str_store26.repack73.i.i, align 8
  %const_str_store27.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27.i.i, i64 0, i32 0
  store i8* inttoptr (i64 33 to i8*), i8** %const_str_store27.repack.i.i, align 8
  %const_str_store27.repack74.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store27.repack74.i.i, align 8
  %const_str_store27.repack75.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27.i.i, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store27.repack75.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value28.i.i, %str.RocStr* nonnull readonly %result_value24.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store27.i.i) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value29.i.i, %str.RocStr* nonnull readonly %const_str_store26.i.i, %str.RocStr* nocapture nonnull readonly %result_value28.i.i) #11
  %load_str_to_stack.i232.i.i.elt101 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value28.i.i, i64 0, i32 2
  %load_str_to_stack.i232.i.i.unpack102 = load i64, i64* %load_str_to_stack.i232.i.i.elt101, align 8
  %is_big_str.i234.i.i = icmp sgt i64 %load_str_to_stack.i232.i.i.unpack102, 0
  br i1 %is_big_str.i234.i.i, label %modify_rc.i239.i.i, label %"#Attr_#dec_4.exit243.i.i"

modify_rc.i239.i.i:                               ; preds = %"#Attr_#dec_4.exit230.i.i"
  %call_builtin.i235.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value28.i.i) #11
  %get_rc_ptr.i237.i.i = getelementptr inbounds i8, i8* %call_builtin.i235.i.i, i64 -8
  %140 = bitcast i8* %get_rc_ptr.i237.i.i to i64*
  %141 = load i64, i64* %140, align 8
  %.not.i.i.i.i238.i.i = icmp eq i64 %141, 0
  br i1 %.not.i.i.i.i238.i.i, label %"#Attr_#dec_4.exit243.i.i", label %Then.i.i.i.i240.i.i

Then.i.i.i.i240.i.i:                              ; preds = %modify_rc.i239.i.i
  %142 = add i64 %141, -1
  store i64 %142, i64* %140, align 8
  %143 = icmp eq i64 %141, -9223372036854775808
  br i1 %143, label %Then1.i.i.i.i241.i.i, label %"#Attr_#dec_4.exit243.i.i"

Then1.i.i.i.i241.i.i:                             ; preds = %Then.i.i.i.i240.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i237.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit243.i.i"

"#Attr_#dec_4.exit243.i.i":                       ; preds = %modify_rc.i239.i.i, %Then.i.i.i.i240.i.i, %Then1.i.i.i.i241.i.i, %"#Attr_#dec_4.exit230.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value30.i.i, %str.RocStr* nonnull readonly %struct_field.i.i, %str.RocStr* nocapture nonnull readonly %result_value29.i.i) #11
  %load_str_to_stack.i245.i.i.elt106 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value29.i.i, i64 0, i32 2
  %load_str_to_stack.i245.i.i.unpack107 = load i64, i64* %load_str_to_stack.i245.i.i.elt106, align 8
  %is_big_str.i247.i.i = icmp sgt i64 %load_str_to_stack.i245.i.i.unpack107, 0
  br i1 %is_big_str.i247.i.i, label %modify_rc.i252.i.i, label %"#Attr_#dec_4.exit256.i.i"

modify_rc.i252.i.i:                               ; preds = %"#Attr_#dec_4.exit243.i.i"
  %call_builtin.i248.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value29.i.i) #11
  %get_rc_ptr.i250.i.i = getelementptr inbounds i8, i8* %call_builtin.i248.i.i, i64 -8
  %144 = bitcast i8* %get_rc_ptr.i250.i.i to i64*
  %145 = load i64, i64* %144, align 8
  %.not.i.i.i.i251.i.i = icmp eq i64 %145, 0
  br i1 %.not.i.i.i.i251.i.i, label %"#Attr_#dec_4.exit256.i.i", label %Then.i.i.i.i253.i.i

Then.i.i.i.i253.i.i:                              ; preds = %modify_rc.i252.i.i
  %146 = add i64 %145, -1
  store i64 %146, i64* %144, align 8
  %147 = icmp eq i64 %145, -9223372036854775808
  br i1 %147, label %Then1.i.i.i.i254.i.i, label %"#Attr_#dec_4.exit256.i.i"

Then1.i.i.i.i254.i.i:                             ; preds = %Then.i.i.i.i253.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i250.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit256.i.i"

"#Attr_#dec_4.exit256.i.i":                       ; preds = %modify_rc.i252.i.i, %Then.i.i.i.i253.i.i, %Then1.i.i.i.i254.i.i, %"#Attr_#dec_4.exit243.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value31.i.i, %str.RocStr* nonnull readonly %const_str_store25.i.i, %str.RocStr* nocapture nonnull readonly %result_value30.i.i) #11
  %load_str_to_stack.i258.i.i.elt111 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value30.i.i, i64 0, i32 2
  %load_str_to_stack.i258.i.i.unpack112 = load i64, i64* %load_str_to_stack.i258.i.i.elt111, align 8
  %is_big_str.i260.i.i = icmp sgt i64 %load_str_to_stack.i258.i.i.unpack112, 0
  br i1 %is_big_str.i260.i.i, label %modify_rc.i265.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i265.i.i:                               ; preds = %"#Attr_#dec_4.exit256.i.i"
  %call_builtin.i261.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value30.i.i) #11
  %get_rc_ptr.i263.i.i = getelementptr inbounds i8, i8* %call_builtin.i261.i.i, i64 -8
  %148 = bitcast i8* %get_rc_ptr.i263.i.i to i64*
  %149 = load i64, i64* %148, align 8
  %.not.i.i.i.i264.i.i = icmp eq i64 %149, 0
  br i1 %.not.i.i.i.i264.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i, label %Then.i.i.i.i266.i.i

Then.i.i.i.i266.i.i:                              ; preds = %modify_rc.i265.i.i
  %150 = add i64 %149, -1
  store i64 %150, i64* %148, align 8
  %151 = icmp eq i64 %149, -9223372036854775808
  br i1 %151, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

branch4.i.i:                                      ; preds = %"#Attr_#dec_4.exit.i"
  %.not.i.i202 = icmp eq i8* %load_element6.sroa.0.0.copyload, null
  br i1 %.not.i.i202, label %roc_builtins.list.map.exit.i230, label %OptionalThen.i.i212

OptionalThen.i.i212:                              ; preds = %branch4.i.i
  %152 = icmp ne i64 %load_element6.sroa.7.0.copyload, 0
  tail call void @llvm.assume(i1 %152) #11
  %153 = icmp ugt i64 %load_element6.sroa.7.0.copyload, 2
  %..i.i.i.i.i203 = select i1 %153, i64 %load_element6.sroa.7.0.copyload, i64 2
  %154 = mul nuw i64 %..i.i.i.i.i203, 24
  %155 = add nuw i64 %154, 8
  %156 = tail call i8* @roc_alloc(i64 %155, i32 8) #11, !noalias !166
  %157 = icmp ne i8* %156, null
  tail call void @llvm.assume(i1 %157) #11
  %158 = getelementptr inbounds i8, i8* %156, i64 8
  %159 = bitcast i8* %156 to i64*
  store i64 -9223372036854775808, i64* %159, align 8, !noalias !166
  %result_value.i.0.sroa_cast.i204 = bitcast %str.RocStr* %result_value.i.i200 to i8*
  %160 = bitcast %str.RocStr* %zig_helper_load_opaque.i.i201 to i8*
  %161 = bitcast %str.RocStr* %result_value2.i.i196 to i8*
  %162 = bitcast %str.RocStr* %result_value.i5.i197 to i8*
  %163 = bitcast %str.RocStr* %const_str_store1.i.i198 to i8*
  %164 = bitcast %str.RocStr* %const_str_store.i.i199 to i8*
  %const_str_store.repack.i.i205 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i199, i64 0, i32 0
  %const_str_store.repack3.i.i206 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i199, i64 0, i32 1
  %const_str_store.repack4.i.i207 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i199, i64 0, i32 2
  %const_str_store1.repack.i.i208 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i198, i64 0, i32 0
  %const_str_store1.repack5.i.i209 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i198, i64 0, i32 1
  %const_str_store1.repack6.i.i210 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i198, i64 0, i32 2
  %load_str_to_stack.i8.elt28.i.i211 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i5.i197, i64 0, i32 2
  br label %WhileBody.i.i216

WhileBody.i.i216:                                 ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224, %OptionalThen.i.i212
  %i.010.i.i213 = phi i64 [ %172, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224 ], [ 0, %OptionalThen.i.i212 ]
  %165 = mul nuw i64 %i.010.i.i213, 24
  %166 = getelementptr inbounds i8, i8* %load_element6.sroa.0.0.copyload, i64 %165
  %167 = getelementptr inbounds i8, i8* %158, i64 %165
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.0.sroa_cast.i204)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %160, i8* noundef nonnull align 8 dereferenceable(24) %166, i64 24, i1 false) #11, !noalias !171
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #11
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store.repack.i.i205, align 8, !noalias !171
  store i64 0, i64* %const_str_store.repack3.i.i206, align 8, !noalias !171
  store i64 -9151314442816847872, i64* %const_str_store.repack4.i.i207, align 8, !noalias !171
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store1.repack.i.i208, align 8, !noalias !171
  store i64 0, i64* %const_str_store1.repack5.i.i209, align 8, !noalias !171
  store i64 -9151314442816847872, i64* %const_str_store1.repack6.i.i210, align 8, !noalias !171
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i5.i197, %str.RocStr* nonnull readonly %zig_helper_load_opaque.i.i201, %str.RocStr* nocapture nonnull readonly %const_str_store1.i.i198) #11, !noalias !171
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value2.i.i196, %str.RocStr* nonnull readonly %const_str_store.i.i199, %str.RocStr* nocapture nonnull readonly %result_value.i5.i197) #11, !noalias !171
  %load_str_to_stack.i8.unpack29.i.i214 = load i64, i64* %load_str_to_stack.i8.elt28.i.i211, align 8, !noalias !171
  %is_big_str.i10.i.i215 = icmp sgt i64 %load_str_to_stack.i8.unpack29.i.i214, 0
  br i1 %is_big_str.i10.i.i215, label %modify_rc.i15.i.i220, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224

modify_rc.i15.i.i220:                             ; preds = %WhileBody.i.i216
  %call_builtin.i11.i.i217 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i5.i197) #11, !noalias !171
  %get_rc_ptr.i13.i.i218 = getelementptr inbounds i8, i8* %call_builtin.i11.i.i217, i64 -8
  %168 = bitcast i8* %get_rc_ptr.i13.i.i218 to i64*
  %169 = load i64, i64* %168, align 8, !noalias !171
  %.not.i.i.i.i14.i.i219 = icmp eq i64 %169, 0
  br i1 %.not.i.i.i.i14.i.i219, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224, label %Then.i.i.i.i16.i.i221

Then.i.i.i.i16.i.i221:                            ; preds = %modify_rc.i15.i.i220
  %170 = add i64 %169, -1
  store i64 %170, i64* %168, align 8, !noalias !171
  %171 = icmp eq i64 %169, -9223372036854775808
  br i1 %171, label %Then1.i.i.i.i17.i.i222, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224

Then1.i.i.i.i17.i.i222:                           ; preds = %Then.i.i.i.i16.i.i221
  tail call void @roc_dealloc(i8* %get_rc_ptr.i13.i.i218, i32 8) #11, !noalias !171
  br label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224

Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224: ; preds = %Then1.i.i.i.i17.i.i222, %Then.i.i.i.i16.i.i221, %modify_rc.i15.i.i220, %WhileBody.i.i216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.0.sroa_cast.i204, i8* noundef nonnull align 8 dereferenceable(24) %161, i64 24, i1 false) #11, !noalias !171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %167, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.0.sroa_cast.i204, i64 24, i1 false) #11, !noalias !171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.0.sroa_cast.i204)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #11
  %172 = add nuw i64 %i.010.i.i213, 1
  %exitcond.not.i.i223 = icmp eq i64 %172, %load_element6.sroa.7.0.copyload
  br i1 %exitcond.not.i.i223, label %roc_builtins.list.map.exit.i230, label %WhileBody.i.i216

roc_builtins.list.map.exit.i230:                  ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224, %branch4.i.i
  %list_alloca.sroa.0.0.i225 = phi i8* [ null, %branch4.i.i ], [ %158, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224 ]
  %list_alloca.sroa.3.0.i226 = phi i64 [ 0, %branch4.i.i ], [ %load_element6.sroa.7.0.copyload, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224 ]
  %list_alloca.sroa.5.0.i227 = phi i64 [ 0, %branch4.i.i ], [ %..i.i.i.i.i203, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224 ]
  %173 = ptrtoint i8* %load_element6.sroa.0.0.copyload to i64
  %174 = shl i64 %load_element6.sroa.10.0.copyload, 1
  %.not.i.i.i228 = icmp slt i64 %load_element6.sroa.10.0.copyload, 0
  %175 = select i1 %.not.i.i.i228, i64 %174, i64 %173
  %.not.i19.i229 = icmp eq i64 %175, 0
  br i1 %.not.i19.i229, label %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit, label %OptionalThen.i21.i232

OptionalThen.i21.i232:                            ; preds = %roc_builtins.list.map.exit.i230
  %176 = inttoptr i64 %175 to i8*
  %177 = getelementptr inbounds i8, i8* %176, i64 -8
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %.not.i.i20.i231 = icmp eq i64 %179, 0
  br i1 %.not.i.i20.i231, label %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit, label %Then.i.i.i233

Then.i.i.i233:                                    ; preds = %OptionalThen.i21.i232
  %180 = add i64 %179, -1
  store i64 %180, i64* %178, align 8
  %181 = icmp eq i64 %179, -9223372036854775808
  br i1 %181, label %Then1.i.i.i234, label %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit

Then1.i.i.i234:                                   ; preds = %Then.i.i.i233
  tail call void @roc_dealloc(i8* %177, i32 8) #11
  br label %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit

List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit: ; preds = %roc_builtins.list.map.exit.i230, %OptionalThen.i21.i232, %Then.i.i.i233, %Then1.i.i.i234
  %const_str_store36.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store36.i.i, i64 0, i32 0
  store i8* inttoptr (i64 8236 to i8*), i8** %const_str_store36.repack.i.i, align 8
  %const_str_store36.repack62.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store36.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store36.repack62.i.i, align 8
  %const_str_store36.repack63.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store36.i.i, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store36.repack63.i.i, align 8
  %182 = bitcast %list.RocList* %list_alloca.i270.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #11
  %list_alloca.repack.i272.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i270.i.i, i64 0, i32 0
  store i8* %list_alloca.sroa.0.0.i225, i8** %list_alloca.repack.i272.i.i, align 8
  %list_alloca.repack1.i274.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i270.i.i, i64 0, i32 1
  store i64 %list_alloca.sroa.3.0.i226, i64* %list_alloca.repack1.i274.i.i, align 8
  %list_alloca.repack3.i276.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i270.i.i, i64 0, i32 2
  store i64 %list_alloca.sroa.5.0.i227, i64* %list_alloca.repack3.i276.i.i, align 8
  call fastcc void @roc_builtins.str.joinWith(%str.RocStr* noalias nocapture nonnull %result_value37.i.i, %list.RocList* nocapture nonnull readonly %list_alloca.i270.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store36.i.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #11
  %183 = bitcast %str.RocStr* %incrementing_element_loop_load.i238 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183)
  %"cap > 0.not.i239" = icmp eq i64 %list_alloca.sroa.5.0.i227, 0
  br i1 %"cap > 0.not.i239", label %"#Attr_#dec_4.exit289.i.i", label %modification_list_block.i242

modification_list_block.i242:                     ; preds = %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit
  %cast_basic_basic.i240 = bitcast i8* %list_alloca.sroa.0.0.i225 to %str.RocStr*
  %bounds_check.not.i241 = icmp eq i64 %list_alloca.sroa.3.0.i226, 0
  br i1 %bounds_check.not.i241, label %after_loop.i263, label %loop.preheader.i244

loop.preheader.i244:                              ; preds = %modification_list_block.i242
  %load_str_to_stack.i.elt9.i243 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i238, i64 0, i32 2
  br label %loop.i250

loop.i250:                                        ; preds = %"#Attr_#dec_4.exit.i258", %loop.preheader.i244
  %next_index12.i245 = phi i64 [ 0, %loop.preheader.i244 ], [ %next_index.i246, %"#Attr_#dec_4.exit.i258" ]
  %next_index.i246 = add nuw i64 %next_index12.i245, 1
  %load_index.i247 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i240, i64 %next_index12.i245
  %184 = bitcast %str.RocStr* %load_index.i247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %183, i8* noundef nonnull align 8 dereferenceable(24) %184, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i248 = load i64, i64* %load_str_to_stack.i.elt9.i243, align 8
  %is_big_str.i.i249 = icmp sgt i64 %load_str_to_stack.i.unpack10.i248, 0
  br i1 %is_big_str.i.i249, label %modify_rc.i.i254, label %"#Attr_#dec_4.exit.i258"

modify_rc.i.i254:                                 ; preds = %loop.i250
  %call_builtin.i.i251 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i238) #11
  %get_rc_ptr.i.i252 = getelementptr inbounds i8, i8* %call_builtin.i.i251, i64 -8
  %185 = bitcast i8* %get_rc_ptr.i.i252 to i64*
  %186 = load i64, i64* %185, align 8
  %.not.i.i.i.i.i253 = icmp eq i64 %186, 0
  br i1 %.not.i.i.i.i.i253, label %"#Attr_#dec_4.exit.i258", label %Then.i.i.i.i.i255

Then.i.i.i.i.i255:                                ; preds = %modify_rc.i.i254
  %187 = add i64 %186, -1
  store i64 %187, i64* %185, align 8
  %188 = icmp eq i64 %186, -9223372036854775808
  br i1 %188, label %Then1.i.i.i.i.i256, label %"#Attr_#dec_4.exit.i258"

Then1.i.i.i.i.i256:                               ; preds = %Then.i.i.i.i.i255
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i252, i32 8) #11
  br label %"#Attr_#dec_4.exit.i258"

"#Attr_#dec_4.exit.i258":                         ; preds = %Then1.i.i.i.i.i256, %Then.i.i.i.i.i255, %modify_rc.i.i254, %loop.i250
  %exitcond306.not = icmp eq i64 %next_index.i246, %list_alloca.sroa.3.0.i226
  br i1 %exitcond306.not, label %after_loop.i263, label %loop.i250

after_loop.i263:                                  ; preds = %"#Attr_#dec_4.exit.i258", %modification_list_block.i242
  %189 = ptrtoint i8* %list_alloca.sroa.0.0.i225 to i64
  %190 = shl i64 %list_alloca.sroa.5.0.i227, 1
  %.not.i.i.i259 = icmp slt i64 %list_alloca.sroa.5.0.i227, 0
  %191 = select i1 %.not.i.i.i259, i64 %190, i64 %189
  %as_usize_ptr.i260 = inttoptr i64 %191 to i64*
  %get_rc_ptr.i261 = getelementptr inbounds i64, i64* %as_usize_ptr.i260, i64 -1
  %192 = load i64, i64* %get_rc_ptr.i261, align 8
  %.not.i.i.i.i262 = icmp eq i64 %192, 0
  br i1 %.not.i.i.i.i262, label %"#Attr_#dec_4.exit289.i.i", label %Then.i.i.i.i264

Then.i.i.i.i264:                                  ; preds = %after_loop.i263
  %193 = add i64 %192, -1
  store i64 %193, i64* %get_rc_ptr.i261, align 8
  %194 = icmp eq i64 %192, -9223372036854775808
  br i1 %194, label %Then1.i.i.i.i265, label %"#Attr_#dec_4.exit289.i.i"

Then1.i.i.i.i265:                                 ; preds = %Then.i.i.i.i264
  %195 = bitcast i64* %get_rc_ptr.i261 to i8*
  tail call void @roc_dealloc(i8* %195, i32 8) #11
  br label %"#Attr_#dec_4.exit289.i.i"

"#Attr_#dec_4.exit289.i.i":                       ; preds = %Then1.i.i.i.i265, %Then.i.i.i.i264, %after_loop.i263, %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183)
  %const_str_store38.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store38.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @_str_literal_9774341834311273816, i64 0, i64 8), i8** %const_str_store38.repack.i.i, align 8
  %const_str_store38.repack64.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store38.i.i, i64 0, i32 1
  store i64 74, i64* %const_str_store38.repack64.i.i, align 8
  %const_str_store38.repack65.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store38.i.i, i64 0, i32 2
  store i64 74, i64* %const_str_store38.repack65.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value39.i.i, %str.RocStr* nonnull readonly %const_str_store38.i.i, %str.RocStr* nocapture nonnull readonly %result_value37.i.i) #11
  %load_str_to_stack.i291.i.i.elt86 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value37.i.i, i64 0, i32 2
  %load_str_to_stack.i291.i.i.unpack87 = load i64, i64* %load_str_to_stack.i291.i.i.elt86, align 8
  %is_big_str.i293.i.i = icmp sgt i64 %load_str_to_stack.i291.i.i.unpack87, 0
  br i1 %is_big_str.i293.i.i, label %modify_rc.i298.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

modify_rc.i298.i.i:                               ; preds = %"#Attr_#dec_4.exit289.i.i"
  %call_builtin.i294.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value37.i.i) #11
  %get_rc_ptr.i296.i.i = getelementptr inbounds i8, i8* %call_builtin.i294.i.i, i64 -8
  %196 = bitcast i8* %get_rc_ptr.i296.i.i to i64*
  %197 = load i64, i64* %196, align 8
  %.not.i.i.i.i297.i.i = icmp eq i64 %197, 0
  br i1 %.not.i.i.i.i297.i.i, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i, label %Then.i.i.i.i299.i.i

Then.i.i.i.i299.i.i:                              ; preds = %modify_rc.i298.i.i
  %198 = add i64 %197, -1
  store i64 %198, i64* %196, align 8
  %199 = icmp eq i64 %197, -9223372036854775808
  br i1 %199, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split, label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split: ; preds = %Then.i.i.i.i299.i.i, %Then.i.i.i.i266.i.i, %Then.i.i.i.i214.i.i, %Then.i.i.i.i188.i.i, %Then.i.i.i.i162.i.i, %Then.i.i.i.i136.i.i
  %get_rc_ptr.i296.i.i.sink = phi i8* [ %get_rc_ptr.i133.i.i, %Then.i.i.i.i136.i.i ], [ %get_rc_ptr.i159.i.i, %Then.i.i.i.i162.i.i ], [ %get_rc_ptr.i185.i.i, %Then.i.i.i.i188.i.i ], [ %get_rc_ptr.i211.i.i, %Then.i.i.i.i214.i.i ], [ %get_rc_ptr.i263.i.i, %Then.i.i.i.i266.i.i ], [ %get_rc_ptr.i296.i.i, %Then.i.i.i.i299.i.i ]
  %result_value39.i.i.0.sroa_cast.sink.ph = phi i8* [ %result_value56.i.i.0.sroa_cast, %Then.i.i.i.i136.i.i ], [ %result_value3.i.i.0.sroa_cast, %Then.i.i.i.i162.i.i ], [ %result_value11.i.i.0.sroa_cast, %Then.i.i.i.i188.i.i ], [ %result_value19.i.i.0.sroa_cast, %Then.i.i.i.i214.i.i ], [ %result_value31.i.i.0.sroa_cast, %Then.i.i.i.i266.i.i ], [ %result_value39.i.i.0.sroa_cast, %Then.i.i.i.i299.i.i ]
  tail call void @roc_dealloc(i8* %get_rc_ptr.i296.i.i.sink, i32 8) #11
  br label %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i

Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i: ; preds = %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split, %"#Attr_#dec_4.exit289.i.i", %Then.i.i.i.i299.i.i, %modify_rc.i298.i.i, %"#Attr_#dec_4.exit256.i.i", %Then.i.i.i.i266.i.i, %modify_rc.i265.i.i, %"#Attr_#dec_4.exit204.i.i", %Then.i.i.i.i214.i.i, %modify_rc.i213.i.i, %"#Attr_#dec_4.exit178.i.i", %Then.i.i.i.i188.i.i, %modify_rc.i187.i.i, %"#Attr_#dec_4.exit152.i.i", %Then.i.i.i.i162.i.i, %modify_rc.i161.i.i, %"#Attr_#dec_4.exit126.i.i", %Then.i.i.i.i136.i.i, %modify_rc.i135.i.i
  %result_value39.i.i.0.sroa_cast.sink = phi i8* [ %result_value56.i.i.0.sroa_cast, %modify_rc.i135.i.i ], [ %result_value56.i.i.0.sroa_cast, %Then.i.i.i.i136.i.i ], [ %result_value56.i.i.0.sroa_cast, %"#Attr_#dec_4.exit126.i.i" ], [ %result_value3.i.i.0.sroa_cast, %modify_rc.i161.i.i ], [ %result_value3.i.i.0.sroa_cast, %Then.i.i.i.i162.i.i ], [ %result_value3.i.i.0.sroa_cast, %"#Attr_#dec_4.exit152.i.i" ], [ %result_value11.i.i.0.sroa_cast, %modify_rc.i187.i.i ], [ %result_value11.i.i.0.sroa_cast, %Then.i.i.i.i188.i.i ], [ %result_value11.i.i.0.sroa_cast, %"#Attr_#dec_4.exit178.i.i" ], [ %result_value19.i.i.0.sroa_cast, %modify_rc.i213.i.i ], [ %result_value19.i.i.0.sroa_cast, %Then.i.i.i.i214.i.i ], [ %result_value19.i.i.0.sroa_cast, %"#Attr_#dec_4.exit204.i.i" ], [ %result_value31.i.i.0.sroa_cast, %modify_rc.i265.i.i ], [ %result_value31.i.i.0.sroa_cast, %Then.i.i.i.i266.i.i ], [ %result_value31.i.i.0.sroa_cast, %"#Attr_#dec_4.exit256.i.i" ], [ %result_value39.i.i.0.sroa_cast, %modify_rc.i298.i.i ], [ %result_value39.i.i.0.sroa_cast, %Then.i.i.i.i299.i.i ], [ %result_value39.i.i.0.sroa_cast, %"#Attr_#dec_4.exit289.i.i" ], [ %result_value39.i.i.0.sroa_cast.sink.ph, %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i.sink.split ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %17, i8* noundef nonnull align 8 dereferenceable(24) %result_value39.i.i.0.sroa_cast.sink, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value56.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value39.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value31.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value19.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value11.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value3.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  %200 = bitcast %str.RocStr* %str_alloca.i6.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %str_alloca.i6.i, %str.RocStr* nonnull readonly %result_value1.i, %str.RocStr* nocapture nonnull readonly %result_value2.i) #11
  %result_value3.i.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i6.i, i64 0, i32 0
  %result_value3.i.sroa.0.0.copyload = load i8*, i8** %result_value3.i.sroa.0.0..sroa_idx, align 8
  %result_value3.i.sroa.4.0..sroa_idx290 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i6.i, i64 0, i32 1
  %result_value3.i.sroa.4.0.copyload = load i64, i64* %result_value3.i.sroa.4.0..sroa_idx290, align 8
  %result_value3.i.sroa.5.0..sroa_idx292 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i6.i, i64 0, i32 2
  %result_value3.i.sroa.5.0.copyload = load i64, i64* %result_value3.i.sroa.5.0..sroa_idx292, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #11
  %load_str_to_stack.i7.i.elt91 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value2.i, i64 0, i32 2
  %load_str_to_stack.i7.i.unpack92 = load i64, i64* %load_str_to_stack.i7.i.elt91, align 8
  %is_big_str.i9.i = icmp sgt i64 %load_str_to_stack.i7.i.unpack92, 0
  br i1 %is_big_str.i9.i, label %modify_rc.i14.i, label %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit

modify_rc.i14.i:                                  ; preds = %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i
  %call_builtin.i10.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value2.i) #11
  %get_rc_ptr.i12.i = getelementptr inbounds i8, i8* %call_builtin.i10.i, i64 -8
  %201 = bitcast i8* %get_rc_ptr.i12.i to i64*
  %202 = load i64, i64* %201, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %202, 0
  br i1 %.not.i.i.i.i13.i, label %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit, label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modify_rc.i14.i
  %203 = add i64 %202, -1
  store i64 %203, i64* %201, align 8
  %204 = icmp eq i64 %202, -9223372036854775808
  br i1 %204, label %Then1.i.i.i.i16.i, label %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i12.i, i32 8) #11
  br label %Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit

Arg_448_bb90d4efe72fd189d2d7c56bbdaaf59ef8dc928663985fcca52d327e8e1a8d7.exit: ; preds = %modify_rc.i14.i, %Then.i.i.i.i15.i, %Then1.i.i.i.i16.i, %Arg_formatError_3ec1c4e1e022eeed739e3c054b9599d795c259a3382d8f97f0de574df3d1aa.exit.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  %tag_alloca9 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Result_mapErr_bd7ee0b61d48f635ca49c34d781c67a50ded34ea29b86dec499286b58b2d4a({ [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture readonly %result, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nocapture readonly %transform, { [0 x i64], [3 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i238 = alloca %str.RocStr, align 8
  %result_value2.i.i196 = alloca %str.RocStr, align 8
  %result_value.i5.i197 = alloca %str.RocStr, align 8
  %const_str_store1.i.i198 = alloca %str.RocStr, align 8
  %const_str_store.i.i199 = alloca %str.RocStr, align 8
  %result_value.i.i200 = alloca %str.RocStr, align 8
  %zig_helper_load_opaque.i.i201 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %result_value2.i.i = alloca %str.RocStr, align 8
  %result_value.i5.i = alloca %str.RocStr, align 8
  %const_str_store1.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i180 = alloca %str.RocStr, align 8
  %result_value.i.i181 = alloca %str.RocStr, align 8
  %zig_helper_load_opaque.i.i = alloca %str.RocStr, align 8
  %result_value2.i174 = alloca %str.RocStr, align 8
  %result_value.i175 = alloca %str.RocStr, align 8
  %const_str_store1.i = alloca %str.RocStr, align 8
  %const_str_store.i176 = alloca %str.RocStr, align 8
  %str_alloca.i6.i = alloca %str.RocStr, align 8
  %list_alloca.i270.i.i = alloca %list.RocList, align 8
  %list_alloca.i.i.i = alloca %list.RocList, align 8
  %result_value56.i.i = alloca %str.RocStr, align 8
  %result_value55.i.i = alloca %str.RocStr, align 8
  %result_value54.i.i = alloca %str.RocStr, align 8
  %const_str_store53.i.i = alloca %str.RocStr, align 8
  %const_str_store52.i.i = alloca %str.RocStr, align 8
  %result_value51.i.i = alloca %str.RocStr, align 8
  %const_str_store50.i.i = alloca %str.RocStr, align 8
  %result_value48.i.i = alloca %str.RocStr, align 8
  %struct_field47.i.i = alloca %str.RocStr, align 8
  %result_value39.i.i = alloca %str.RocStr, align 8
  %const_str_store38.i.i = alloca %str.RocStr, align 8
  %result_value37.i.i = alloca %str.RocStr, align 8
  %const_str_store36.i.i = alloca %str.RocStr, align 8
  %result_value31.i.i = alloca %str.RocStr, align 8
  %result_value30.i.i = alloca %str.RocStr, align 8
  %result_value29.i.i = alloca %str.RocStr, align 8
  %result_value28.i.i = alloca %str.RocStr, align 8
  %const_str_store27.i.i = alloca %str.RocStr, align 8
  %const_str_store26.i.i = alloca %str.RocStr, align 8
  %const_str_store25.i.i = alloca %str.RocStr, align 8
  %result_value24.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %result_value19.i.i = alloca %str.RocStr, align 8
  %result_value18.i.i = alloca %str.RocStr, align 8
  %const_str_store17.i.i = alloca %str.RocStr, align 8
  %const_str_store16.i.i = alloca %str.RocStr, align 8
  %load_element15.i.i = alloca %str.RocStr, align 8
  %result_value11.i.i = alloca %str.RocStr, align 8
  %result_value10.i.i = alloca %str.RocStr, align 8
  %const_str_store9.i.i = alloca %str.RocStr, align 8
  %const_str_store8.i.i = alloca %str.RocStr, align 8
  %load_element7.i.i = alloca %str.RocStr, align 8
  %result_value3.i.i = alloca %str.RocStr, align 8
  %result_value.i.i = alloca %str.RocStr, align 8
  %const_str_store2.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i = alloca %str.RocStr, align 8
  %load_element.i.i = alloca %str.RocStr, align 8
  %result_value2.i = alloca %str.RocStr, align 8
  %result_value1.i = alloca %str.RocStr, align 8
  %const_str_store.i = alloca %str.RocStr, align 8
  %result_value.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %load_element6.sroa.15 = alloca [23 x i8], align 1
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %"#Attr_#dec_4.exit.i"

common.ret:                                       ; preds = %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit, %"#Attr_#dec_4.exit"
  %tag_alloca9.sink330 = phi { [0 x i64], [3 x i64], i8, [7 x i8] }* [ %tag_alloca9, %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit ], [ %tag_alloca, %"#Attr_#dec_4.exit" ]
  %result_value3.i.sroa.0.0.copyload.sink = phi i8* [ %result_value3.i.sroa.0.0.copyload, %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit ], [ %load_element.sroa.0.0.copyload, %"#Attr_#dec_4.exit" ]
  %result_value3.i.sroa.4.0.copyload.sink = phi i64 [ %result_value3.i.sroa.4.0.copyload, %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit ], [ %load_element.sroa.2.0.copyload, %"#Attr_#dec_4.exit" ]
  %result_value3.i.sroa.5.0.copyload.sink = phi i64 [ %result_value3.i.sroa.5.0.copyload, %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit ], [ %load_element.sroa.3.0.copyload, %"#Attr_#dec_4.exit" ]
  %.sink = phi i8 [ 0, %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit ], [ 1, %"#Attr_#dec_4.exit" ]
  %data_buffer10 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330, i64 0, i32 1
  %.repack = bitcast [3 x i64]* %data_buffer10 to i8**
  store i8* %result_value3.i.sroa.0.0.copyload.sink, i8** %.repack, align 8
  %1 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330, i64 0, i32 1, i64 1
  store i64 %result_value3.i.sroa.4.0.copyload.sink, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330, i64 0, i32 1, i64 2
  store i64 %result_value3.i.sroa.5.0.copyload.sink, i64* %2, align 8
  %tag_id_ptr12 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr12, align 8
  %3 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %0 to i8*
  %4 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3, i8* noundef nonnull align 8 dereferenceable(32) %4, i64 32, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %5 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %transform to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8* noundef nonnull align 8 dereferenceable(24) %7, i64 24, i1 false) #11
  %load_str_to_stack.i.i.elt166 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack167 = load i64, i64* %load_str_to_stack.i.i.elt166, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack167, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_13.exit"

modify_rc.i.i:                                    ; preds = %then_block
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %8 = bitcast i8* %get_rc_ptr.i.i to i64*
  %9 = load i64, i64* %8, align 8
  %.not.i.i.i.i.i = icmp eq i64 %9, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_13.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %10 = add i64 %9, -1
  store i64 %10, i64* %8, align 8
  %11 = icmp eq i64 %9, -9223372036854775808
  br i1 %11, label %Then1.i.i.i.i.i, label %"#Attr_#dec_13.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_13.exit"

"#Attr_#dec_13.exit":                             ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %then_block
  %struct_field_access_record_1.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %transform, i64 0, i32 1
  %12 = bitcast %str.RocStr* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %12, i64 24, i1 false) #11
  %load_str_to_stack.i.elt171 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i.unpack172 = load i64, i64* %load_str_to_stack.i.elt171, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack172, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %"#Attr_#dec_13.exit"
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %13 = bitcast i8* %get_rc_ptr.i to i64*
  %14 = load i64, i64* %13, align 8
  %.not.i.i.i.i = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %15 = add i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_13.exit"
  %struct_field_access_record_2.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %transform, i64 0, i32 2
  %struct_field2.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_2.i, align 8
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %struct_field2.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  %load_element.sroa.0.0..sroa_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8**
  %load_element.sroa.0.0.copyload = load i8*, i8** %load_element.sroa.0.0..sroa_cast, align 8
  %load_element.sroa.2.0..sroa_idx32 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.sroa.2.0.copyload = load i64, i64* %load_element.sroa.2.0..sroa_idx32, align 8
  %load_element.sroa.3.0..sroa_idx33 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.sroa.3.0.copyload = load i64, i64* %load_element.sroa.3.0..sroa_idx33, align 8
  %tag_alloca = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

"#Attr_#dec_4.exit.i":                            ; preds = %entry
  %load_element6.sroa.0.0..sroa_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8**
  %load_element6.sroa.0.0.copyload = load i8*, i8** %load_element6.sroa.0.0..sroa_cast, align 8
  %load_element6.sroa.7.0..sroa_idx272 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element6.sroa.7.0.copyload = load i64, i64* %load_element6.sroa.7.0..sroa_idx272, align 8
  %load_element6.sroa.10.0..sroa_idx279 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element6.sroa.10.0.copyload = load i64, i64* %load_element6.sroa.10.0..sroa_idx279, align 8
  %load_element6.sroa.13.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element6.sroa.13.0..sroa_cast = bitcast i64* %load_element6.sroa.13.0..sroa_idx to i8*
  %load_element6.sroa.13.0.copyload = load i8, i8* %load_element6.sroa.13.0..sroa_cast, align 8
  %load_element6.sroa.15.0..sroa_raw_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8*
  %load_element6.sroa.15.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.15.0..sroa_raw_cast, i64 25
  %load_element6.sroa.15.0.sroa_idx = getelementptr inbounds [23 x i8], [23 x i8]* %load_element6.sroa.15, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(23) %load_element6.sroa.15.0.sroa_idx, i8* noundef nonnull align 1 dereferenceable(23) %load_element6.sroa.15.0..sroa_raw_idx, i64 23, i1 false)
  %load_element6.sroa.15286.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element6.sroa.15286.0..sroa_cast = bitcast i64* %load_element6.sroa.15286.0..sroa_idx to i8*
  %load_element6.sroa.15286.0.copyload = load i8, i8* %load_element6.sroa.15286.0..sroa_cast, align 8
  %17 = bitcast %str.RocStr* %result_value2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17)
  %18 = bitcast %str.RocStr* %result_value1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18)
  %19 = bitcast %str.RocStr* %const_str_store.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  %20 = bitcast %str.RocStr* %result_value.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  call fastcc void @Arg_formatHelp_5c516f89ea1e31b287b38913ed386287c31e3b5f58cdcf4bae54c31396b65d1({ %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %transform, %str.RocStr* nonnull %result_value.i) #11
  %const_str_store.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 0
  store i8* inttoptr (i64 2570 to i8*), i8** %const_str_store.repack.i, align 8
  %const_str_store.repack4.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 1
  store i64 0, i64* %const_str_store.repack4.i, align 8
  %const_str_store.repack5.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store.repack5.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value1.i, %str.RocStr* nonnull readonly %result_value.i, %str.RocStr* nocapture nonnull readonly %const_str_store.i) #11
  %result_value56.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value56.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value56.i.i.0.sroa_cast)
  %21 = bitcast %str.RocStr* %result_value55.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = bitcast %str.RocStr* %result_value54.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = bitcast %str.RocStr* %const_str_store53.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = bitcast %str.RocStr* %const_str_store52.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  %25 = bitcast %str.RocStr* %result_value51.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = bitcast %str.RocStr* %const_str_store50.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %27 = bitcast %str.RocStr* %result_value48.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = bitcast %str.RocStr* %struct_field47.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %result_value39.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value39.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value39.i.i.0.sroa_cast)
  %29 = bitcast %str.RocStr* %const_str_store38.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = bitcast %str.RocStr* %result_value37.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %31 = bitcast %str.RocStr* %const_str_store36.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %result_value31.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value31.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value31.i.i.0.sroa_cast)
  %32 = bitcast %str.RocStr* %result_value30.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  %33 = bitcast %str.RocStr* %result_value29.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = bitcast %str.RocStr* %result_value28.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = bitcast %str.RocStr* %const_str_store27.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = bitcast %str.RocStr* %const_str_store26.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = bitcast %str.RocStr* %const_str_store25.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = bitcast %str.RocStr* %result_value24.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = bitcast %str.RocStr* %struct_field.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %result_value19.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value19.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value19.i.i.0.sroa_cast)
  %40 = bitcast %str.RocStr* %result_value18.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  %41 = bitcast %str.RocStr* %const_str_store17.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %42 = bitcast %str.RocStr* %const_str_store16.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = bitcast %str.RocStr* %load_element15.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  %result_value11.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value11.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value11.i.i.0.sroa_cast)
  %44 = bitcast %str.RocStr* %result_value10.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  %45 = bitcast %str.RocStr* %const_str_store9.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %46 = bitcast %str.RocStr* %const_str_store8.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = bitcast %str.RocStr* %load_element7.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %result_value3.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value3.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value3.i.i.0.sroa_cast)
  %48 = bitcast %str.RocStr* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11
  %49 = bitcast %str.RocStr* %const_str_store2.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = bitcast %str.RocStr* %const_str_store.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = bitcast %str.RocStr* %load_element.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  switch i8 %load_element6.sroa.15286.0.copyload, label %default.i.i [
    i8 3, label %modify_rc.i148.i.i
    i8 1, label %modify_rc.i174.i.i
    i8 2, label %modify_rc.i200.i.i
    i8 5, label %branch5.i.i
    i8 4, label %branch4.i.i
  ]

default.i.i:                                      ; preds = %"#Attr_#dec_4.exit.i"
  %load_element43.sroa.4.i.i.sroa.4.0.load_element43.sroa.4.24..sroa_cast.i.i.sroa_raw_idx = getelementptr inbounds i8, i8* %28, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(23) %load_element43.sroa.4.i.i.sroa.4.0.load_element43.sroa.4.24..sroa_cast.i.i.sroa_raw_idx, i8* noundef nonnull align 1 dereferenceable(23) %load_element6.sroa.15.0.sroa_idx, i64 23, i1 false)
  store i8 %load_element6.sroa.13.0.copyload, i8* %28, align 8
  %52 = bitcast %str.RocStr* %result_value2.i174 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52)
  %53 = bitcast %str.RocStr* %result_value.i175 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53)
  %54 = bitcast %str.RocStr* %const_str_store1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54)
  %55 = bitcast %str.RocStr* %const_str_store.i176 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %const_str_store.repack.i177 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i176, i64 0, i32 0
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store.repack.i177, align 8
  %const_str_store.repack3.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i176, i64 0, i32 1
  store i64 0, i64* %const_str_store.repack3.i, align 8
  %const_str_store.repack4.i178 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i176, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store.repack4.i178, align 8
  %const_str_store1.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i, i64 0, i32 0
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store1.repack.i, align 8
  %const_str_store1.repack5.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i, i64 0, i32 1
  store i64 0, i64* %const_str_store1.repack5.i, align 8
  %const_str_store1.repack6.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store1.repack6.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i175, %str.RocStr* nonnull readonly %struct_field47.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store1.i) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value2.i174, %str.RocStr* nonnull readonly %const_str_store.i176, %str.RocStr* nocapture nonnull readonly %result_value.i175) #11
  %load_str_to_stack.i8.elt28.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i175, i64 0, i32 2
  %load_str_to_stack.i8.unpack29.i = load i64, i64* %load_str_to_stack.i8.elt28.i, align 8
  %is_big_str.i10.i = icmp sgt i64 %load_str_to_stack.i8.unpack29.i, 0
  br i1 %is_big_str.i10.i, label %modify_rc.i15.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit

modify_rc.i15.i:                                  ; preds = %default.i.i
  %call_builtin.i11.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i175) #11
  %get_rc_ptr.i13.i = getelementptr inbounds i8, i8* %call_builtin.i11.i, i64 -8
  %56 = bitcast i8* %get_rc_ptr.i13.i to i64*
  %57 = load i64, i64* %56, align 8
  %.not.i.i.i.i14.i = icmp eq i64 %57, 0
  br i1 %.not.i.i.i.i14.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit, label %Then.i.i.i.i16.i

Then.i.i.i.i16.i:                                 ; preds = %modify_rc.i15.i
  %58 = add i64 %57, -1
  store i64 %58, i64* %56, align 8
  %59 = icmp eq i64 %57, -9223372036854775808
  br i1 %59, label %Then1.i.i.i.i17.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit

Then1.i.i.i.i17.i:                                ; preds = %Then.i.i.i.i16.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i13.i, i32 8) #11
  br label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit

Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit: ; preds = %default.i.i, %modify_rc.i15.i, %Then.i.i.i.i16.i, %Then1.i.i.i.i17.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %27, i8* noundef nonnull align 8 dereferenceable(24) %52, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  %.not.i.i = icmp eq i8* %load_element6.sroa.0.0.copyload, null
  br i1 %.not.i.i, label %roc_builtins.list.map.exit.i, label %OptionalThen.i.i

OptionalThen.i.i:                                 ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit
  %60 = icmp ne i64 %load_element6.sroa.7.0.copyload, 0
  tail call void @llvm.assume(i1 %60) #11
  %61 = icmp ugt i64 %load_element6.sroa.7.0.copyload, 2
  %..i.i.i.i.i = select i1 %61, i64 %load_element6.sroa.7.0.copyload, i64 2
  %62 = mul nuw i64 %..i.i.i.i.i, 24
  %63 = add nuw i64 %62, 8
  %64 = tail call i8* @roc_alloc(i64 %63, i32 8) #11, !noalias !172
  %65 = icmp ne i8* %64, null
  tail call void @llvm.assume(i1 %65) #11
  %66 = getelementptr inbounds i8, i8* %64, i64 8
  %67 = bitcast i8* %64 to i64*
  store i64 -9223372036854775808, i64* %67, align 8, !noalias !172
  %result_value.i.0.sroa_cast.i = bitcast %str.RocStr* %result_value.i.i181 to i8*
  %68 = bitcast %str.RocStr* %zig_helper_load_opaque.i.i to i8*
  %69 = bitcast %str.RocStr* %result_value2.i.i to i8*
  %70 = bitcast %str.RocStr* %result_value.i5.i to i8*
  %71 = bitcast %str.RocStr* %const_str_store1.i.i to i8*
  %72 = bitcast %str.RocStr* %const_str_store.i.i180 to i8*
  %const_str_store.repack.i.i182 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i180, i64 0, i32 0
  %const_str_store.repack3.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i180, i64 0, i32 1
  %const_str_store.repack4.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i180, i64 0, i32 2
  %const_str_store1.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 0
  %const_str_store1.repack5.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 1
  %const_str_store1.repack6.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 2
  %load_str_to_stack.i8.elt28.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i5.i, i64 0, i32 2
  br label %WhileBody.i.i

WhileBody.i.i:                                    ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i, %OptionalThen.i.i
  %i.010.i.i = phi i64 [ %80, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i ], [ 0, %OptionalThen.i.i ]
  %73 = mul nuw i64 %i.010.i.i, 24
  %74 = getelementptr inbounds i8, i8* %load_element6.sroa.0.0.copyload, i64 %73
  %75 = getelementptr inbounds i8, i8* %66, i64 %73
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.0.sroa_cast.i)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %68, i8* noundef nonnull align 8 dereferenceable(24) %74, i64 24, i1 false) #11, !noalias !177
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store.repack.i.i182, align 8, !noalias !177
  store i64 0, i64* %const_str_store.repack3.i.i, align 8, !noalias !177
  store i64 -9151314442816847872, i64* %const_str_store.repack4.i.i, align 8, !noalias !177
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store1.repack.i.i, align 8, !noalias !177
  store i64 0, i64* %const_str_store1.repack5.i.i, align 8, !noalias !177
  store i64 -9151314442816847872, i64* %const_str_store1.repack6.i.i, align 8, !noalias !177
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i5.i, %str.RocStr* nonnull readonly %zig_helper_load_opaque.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store1.i.i) #11, !noalias !177
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value2.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i180, %str.RocStr* nocapture nonnull readonly %result_value.i5.i) #11, !noalias !177
  %load_str_to_stack.i8.unpack29.i.i = load i64, i64* %load_str_to_stack.i8.elt28.i.i, align 8, !noalias !177
  %is_big_str.i10.i.i = icmp sgt i64 %load_str_to_stack.i8.unpack29.i.i, 0
  br i1 %is_big_str.i10.i.i, label %modify_rc.i15.i.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i

modify_rc.i15.i.i:                                ; preds = %WhileBody.i.i
  %call_builtin.i11.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i5.i) #11, !noalias !177
  %get_rc_ptr.i13.i.i = getelementptr inbounds i8, i8* %call_builtin.i11.i.i, i64 -8
  %76 = bitcast i8* %get_rc_ptr.i13.i.i to i64*
  %77 = load i64, i64* %76, align 8, !noalias !177
  %.not.i.i.i.i14.i.i = icmp eq i64 %77, 0
  br i1 %.not.i.i.i.i14.i.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i, label %Then.i.i.i.i16.i.i

Then.i.i.i.i16.i.i:                               ; preds = %modify_rc.i15.i.i
  %78 = add i64 %77, -1
  store i64 %78, i64* %76, align 8, !noalias !177
  %79 = icmp eq i64 %77, -9223372036854775808
  br i1 %79, label %Then1.i.i.i.i17.i.i, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i

Then1.i.i.i.i17.i.i:                              ; preds = %Then.i.i.i.i16.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i13.i.i, i32 8) #11, !noalias !177
  br label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i

Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i: ; preds = %Then1.i.i.i.i17.i.i, %Then.i.i.i.i16.i.i, %modify_rc.i15.i.i, %WhileBody.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.0.sroa_cast.i, i8* noundef nonnull align 8 dereferenceable(24) %69, i64 24, i1 false) #11, !noalias !177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %75, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.0.sroa_cast.i, i64 24, i1 false) #11, !noalias !177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.0.sroa_cast.i)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  %80 = add nuw i64 %i.010.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %80, %load_element6.sroa.7.0.copyload
  br i1 %exitcond.not.i.i, label %roc_builtins.list.map.exit.i, label %WhileBody.i.i

roc_builtins.list.map.exit.i:                     ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit
  %list_alloca.sroa.0.0.i = phi i8* [ null, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit ], [ %66, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i ]
  %list_alloca.sroa.3.0.i = phi i64 [ 0, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit ], [ %load_element6.sroa.7.0.copyload, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i ]
  %list_alloca.sroa.5.0.i = phi i64 [ 0, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit ], [ %..i.i.i.i.i, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i ]
  %81 = ptrtoint i8* %load_element6.sroa.0.0.copyload to i64
  %82 = shl i64 %load_element6.sroa.10.0.copyload, 1
  %.not.i.i.i = icmp slt i64 %load_element6.sroa.10.0.copyload, 0
  %83 = select i1 %.not.i.i.i, i64 %82, i64 %81
  %.not.i19.i = icmp eq i64 %83, 0
  br i1 %.not.i19.i, label %"#Attr_#dec_4.exit.i.i", label %OptionalThen.i21.i

OptionalThen.i21.i:                               ; preds = %roc_builtins.list.map.exit.i
  %84 = inttoptr i64 %83 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 -8
  %86 = bitcast i8* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %.not.i.i20.i = icmp eq i64 %87, 0
  br i1 %.not.i.i20.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %OptionalThen.i21.i
  %88 = add i64 %87, -1
  store i64 %88, i64* %86, align 8
  %89 = icmp eq i64 %87, -9223372036854775808
  br i1 %89, label %Then1.i.i.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %85, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i, %Then.i.i.i, %OptionalThen.i21.i, %roc_builtins.list.map.exit.i
  %const_str_store50.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store50.i.i, i64 0, i32 0
  store i8* inttoptr (i64 8236 to i8*), i8** %const_str_store50.repack.i.i, align 8
  %const_str_store50.repack93.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store50.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store50.repack93.i.i, align 8
  %const_str_store50.repack94.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store50.i.i, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store50.repack94.i.i, align 8
  %90 = bitcast %list.RocList* %list_alloca.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  %list_alloca.repack.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i.i, i64 0, i32 0
  store i8* %list_alloca.sroa.0.0.i, i8** %list_alloca.repack.i.i.i, align 8
  %list_alloca.repack1.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i.i, i64 0, i32 1
  store i64 %list_alloca.sroa.3.0.i, i64* %list_alloca.repack1.i.i.i, align 8
  %list_alloca.repack3.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i.i, i64 0, i32 2
  store i64 %list_alloca.sroa.5.0.i, i64* %list_alloca.repack3.i.i.i, align 8
  call fastcc void @roc_builtins.str.joinWith(%str.RocStr* noalias nocapture nonnull %result_value51.i.i, %list.RocList* nocapture nonnull readonly %list_alloca.i.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store50.i.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  %91 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91)
  %"cap > 0.not.i" = icmp eq i64 %list_alloca.sroa.5.0.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %"#Attr_#dec_4.exit.i.i"
  %cast_basic_basic.i = bitcast i8* %list_alloca.sroa.0.0.i to %str.RocStr*
  %bounds_check.not.i = icmp eq i64 %list_alloca.sroa.3.0.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_4.exit.i190", %loop.preheader.i
  %next_index12.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_4.exit.i190" ]
  %next_index.i = add nuw i64 %next_index12.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %92 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %91, i8* noundef nonnull align 8 dereferenceable(24) %92, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i183 = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i183, label %modify_rc.i.i187, label %"#Attr_#dec_4.exit.i190"

modify_rc.i.i187:                                 ; preds = %loop.i
  %call_builtin.i.i184 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i185 = getelementptr inbounds i8, i8* %call_builtin.i.i184, i64 -8
  %93 = bitcast i8* %get_rc_ptr.i.i185 to i64*
  %94 = load i64, i64* %93, align 8
  %.not.i.i.i.i.i186 = icmp eq i64 %94, 0
  br i1 %.not.i.i.i.i.i186, label %"#Attr_#dec_4.exit.i190", label %Then.i.i.i.i.i188

Then.i.i.i.i.i188:                                ; preds = %modify_rc.i.i187
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = icmp eq i64 %94, -9223372036854775808
  br i1 %96, label %Then1.i.i.i.i.i189, label %"#Attr_#dec_4.exit.i190"

Then1.i.i.i.i.i189:                               ; preds = %Then.i.i.i.i.i188
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i185, i32 8) #11
  br label %"#Attr_#dec_4.exit.i190"

"#Attr_#dec_4.exit.i190":                         ; preds = %Then1.i.i.i.i.i189, %Then.i.i.i.i.i188, %modify_rc.i.i187, %loop.i
  %exitcond.not = icmp eq i64 %next_index.i, %list_alloca.sroa.3.0.i
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_4.exit.i190", %modification_list_block.i
  %97 = ptrtoint i8* %list_alloca.sroa.0.0.i to i64
  %98 = shl i64 %list_alloca.sroa.5.0.i, 1
  %.not.i.i.i191 = icmp slt i64 %list_alloca.sroa.5.0.i, 0
  %99 = select i1 %.not.i.i.i191, i64 %98, i64 %97
  %as_usize_ptr.i = inttoptr i64 %99 to i64*
  %get_rc_ptr.i192 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %100 = load i64, i64* %get_rc_ptr.i192, align 8
  %.not.i.i.i.i193 = icmp eq i64 %100, 0
  br i1 %.not.i.i.i.i193, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i194

Then.i.i.i.i194:                                  ; preds = %after_loop.i
  %101 = add i64 %100, -1
  store i64 %101, i64* %get_rc_ptr.i192, align 8
  %102 = icmp eq i64 %100, -9223372036854775808
  br i1 %102, label %Then1.i.i.i.i195, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i195:                                 ; preds = %Then.i.i.i.i194
  %103 = bitcast i64* %get_rc_ptr.i192 to i8*
  tail call void @roc_dealloc(i8* %103, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %"#Attr_#dec_4.exit.i.i", %after_loop.i, %Then.i.i.i.i194, %Then1.i.i.i.i195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91)
  %const_str_store52.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store52.i.i, i64 0, i32 0
  store i8* inttoptr (i64 543516756 to i8*), i8** %const_str_store52.repack.i.i, align 8
  %const_str_store52.repack95.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store52.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store52.repack95.i.i, align 8
  %const_str_store52.repack96.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store52.i.i, i64 0, i32 2
  store i64 -8935141660703064064, i64* %const_str_store52.repack96.i.i, align 8
  %const_str_store53.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store53.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([102 x i8], [102 x i8]* @_str_literal_8015680634864437174, i64 0, i64 8), i8** %const_str_store53.repack.i.i, align 8
  %const_str_store53.repack97.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store53.i.i, i64 0, i32 1
  store i64 94, i64* %const_str_store53.repack97.i.i, align 8
  %const_str_store53.repack98.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store53.i.i, i64 0, i32 2
  store i64 94, i64* %const_str_store53.repack98.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value54.i.i, %str.RocStr* nonnull readonly %const_str_store53.i.i, %str.RocStr* nocapture nonnull readonly %result_value51.i.i) #11
  %load_str_to_stack.i102.i.i.elt151 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value51.i.i, i64 0, i32 2
  %load_str_to_stack.i102.i.i.unpack152 = load i64, i64* %load_str_to_stack.i102.i.i.elt151, align 8
  %is_big_str.i104.i.i = icmp sgt i64 %load_str_to_stack.i102.i.i.unpack152, 0
  br i1 %is_big_str.i104.i.i, label %modify_rc.i109.i.i, label %"#Attr_#dec_4.exit113.i.i"

modify_rc.i109.i.i:                               ; preds = %"#Attr_#dec_17.exit"
  %call_builtin.i105.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value51.i.i) #11
  %get_rc_ptr.i107.i.i = getelementptr inbounds i8, i8* %call_builtin.i105.i.i, i64 -8
  %104 = bitcast i8* %get_rc_ptr.i107.i.i to i64*
  %105 = load i64, i64* %104, align 8
  %.not.i.i.i.i108.i.i = icmp eq i64 %105, 0
  br i1 %.not.i.i.i.i108.i.i, label %"#Attr_#dec_4.exit113.i.i", label %Then.i.i.i.i110.i.i

Then.i.i.i.i110.i.i:                              ; preds = %modify_rc.i109.i.i
  %106 = add i64 %105, -1
  store i64 %106, i64* %104, align 8
  %107 = icmp eq i64 %105, -9223372036854775808
  br i1 %107, label %Then1.i.i.i.i111.i.i, label %"#Attr_#dec_4.exit113.i.i"

Then1.i.i.i.i111.i.i:                             ; preds = %Then.i.i.i.i110.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i107.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit113.i.i"

"#Attr_#dec_4.exit113.i.i":                       ; preds = %modify_rc.i109.i.i, %Then.i.i.i.i110.i.i, %Then1.i.i.i.i111.i.i, %"#Attr_#dec_17.exit"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value55.i.i, %str.RocStr* nonnull readonly %result_value48.i.i, %str.RocStr* nocapture nonnull readonly %result_value54.i.i) #11
  %load_str_to_stack.i115.i.i.elt156 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value54.i.i, i64 0, i32 2
  %load_str_to_stack.i115.i.i.unpack157 = load i64, i64* %load_str_to_stack.i115.i.i.elt156, align 8
  %is_big_str.i117.i.i = icmp sgt i64 %load_str_to_stack.i115.i.i.unpack157, 0
  br i1 %is_big_str.i117.i.i, label %modify_rc.i122.i.i, label %"#Attr_#dec_4.exit126.i.i"

modify_rc.i122.i.i:                               ; preds = %"#Attr_#dec_4.exit113.i.i"
  %call_builtin.i118.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value54.i.i) #11
  %get_rc_ptr.i120.i.i = getelementptr inbounds i8, i8* %call_builtin.i118.i.i, i64 -8
  %108 = bitcast i8* %get_rc_ptr.i120.i.i to i64*
  %109 = load i64, i64* %108, align 8
  %.not.i.i.i.i121.i.i = icmp eq i64 %109, 0
  br i1 %.not.i.i.i.i121.i.i, label %"#Attr_#dec_4.exit126.i.i", label %Then.i.i.i.i123.i.i

Then.i.i.i.i123.i.i:                              ; preds = %modify_rc.i122.i.i
  %110 = add i64 %109, -1
  store i64 %110, i64* %108, align 8
  %111 = icmp eq i64 %109, -9223372036854775808
  br i1 %111, label %Then1.i.i.i.i124.i.i, label %"#Attr_#dec_4.exit126.i.i"

Then1.i.i.i.i124.i.i:                             ; preds = %Then.i.i.i.i123.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i120.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit126.i.i"

"#Attr_#dec_4.exit126.i.i":                       ; preds = %modify_rc.i122.i.i, %Then.i.i.i.i123.i.i, %Then1.i.i.i.i124.i.i, %"#Attr_#dec_4.exit113.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value56.i.i, %str.RocStr* nonnull readonly %const_str_store52.i.i, %str.RocStr* nocapture nonnull readonly %result_value55.i.i) #11
  %load_str_to_stack.i128.i.i.elt161 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value55.i.i, i64 0, i32 2
  %load_str_to_stack.i128.i.i.unpack162 = load i64, i64* %load_str_to_stack.i128.i.i.elt161, align 8
  %is_big_str.i130.i.i = icmp sgt i64 %load_str_to_stack.i128.i.i.unpack162, 0
  br i1 %is_big_str.i130.i.i, label %modify_rc.i135.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i135.i.i:                               ; preds = %"#Attr_#dec_4.exit126.i.i"
  %call_builtin.i131.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value55.i.i) #11
  %get_rc_ptr.i133.i.i = getelementptr inbounds i8, i8* %call_builtin.i131.i.i, i64 -8
  %112 = bitcast i8* %get_rc_ptr.i133.i.i to i64*
  %113 = load i64, i64* %112, align 8
  %.not.i.i.i.i134.i.i = icmp eq i64 %113, 0
  br i1 %.not.i.i.i.i134.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i, label %Then.i.i.i.i136.i.i

Then.i.i.i.i136.i.i:                              ; preds = %modify_rc.i135.i.i
  %114 = add i64 %113, -1
  store i64 %114, i64* %112, align 8
  %115 = icmp eq i64 %113, -9223372036854775808
  br i1 %115, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i148.i.i:                               ; preds = %"#Attr_#dec_4.exit.i"
  %load_element6.sroa.0.0..sroa_idx270 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i, i64 0, i32 0
  store i8* %load_element6.sroa.0.0.copyload, i8** %load_element6.sroa.0.0..sroa_idx270, align 8
  %load_element6.sroa.7.0..sroa_idx277 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i, i64 0, i32 1
  store i64 %load_element6.sroa.7.0.copyload, i64* %load_element6.sroa.7.0..sroa_idx277, align 8
  %load_element6.sroa.10.0..sroa_idx284 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i, i64 0, i32 2
  store i64 %load_element6.sroa.10.0.copyload, i64* %load_element6.sroa.10.0..sroa_idx284, align 8
  %const_str_store.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 0
  store i8* inttoptr (i64 7453301734226880596 to i8*), i8** %const_str_store.repack.i.i, align 8
  %const_str_store.repack84.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 1
  store i64 7308604895910519154, i64* %const_str_store.repack84.i.i, align 8
  %const_str_store.repack85.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 2
  store i64 -7926335344172064224, i64* %const_str_store.repack85.i.i, align 8
  %const_str_store2.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store2.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_str_literal_11724802636100534137, i64 0, i64 8), i8** %const_str_store2.repack.i.i, align 8
  %const_str_store2.repack86.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store2.i.i, i64 0, i32 1
  store i64 39, i64* %const_str_store2.repack86.i.i, align 8
  %const_str_store2.repack87.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store2.i.i, i64 0, i32 2
  store i64 39, i64* %const_str_store2.repack87.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i.i, %str.RocStr* nonnull readonly %load_element.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store2.i.i) #11
  %call_builtin.i144.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %const_str_store2.i.i) #11
  %get_rc_ptr.i146.i.i = getelementptr inbounds i8, i8* %call_builtin.i144.i.i, i64 -8
  %116 = bitcast i8* %get_rc_ptr.i146.i.i to i64*
  %117 = load i64, i64* %116, align 8
  %.not.i.i.i.i147.i.i = icmp eq i64 %117, 0
  br i1 %.not.i.i.i.i147.i.i, label %"#Attr_#dec_4.exit152.i.i", label %Then.i.i.i.i149.i.i

Then.i.i.i.i149.i.i:                              ; preds = %modify_rc.i148.i.i
  %118 = add i64 %117, -1
  store i64 %118, i64* %116, align 8
  %119 = icmp eq i64 %117, -9223372036854775808
  br i1 %119, label %Then1.i.i.i.i150.i.i, label %"#Attr_#dec_4.exit152.i.i"

Then1.i.i.i.i150.i.i:                             ; preds = %Then.i.i.i.i149.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i146.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit152.i.i"

"#Attr_#dec_4.exit152.i.i":                       ; preds = %modify_rc.i148.i.i, %Then.i.i.i.i149.i.i, %Then1.i.i.i.i150.i.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value3.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i, %str.RocStr* nocapture nonnull readonly %result_value.i.i) #11
  %load_str_to_stack.i154.i.i.elt141 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i.i, i64 0, i32 2
  %load_str_to_stack.i154.i.i.unpack142 = load i64, i64* %load_str_to_stack.i154.i.i.elt141, align 8
  %is_big_str.i156.i.i = icmp sgt i64 %load_str_to_stack.i154.i.i.unpack142, 0
  br i1 %is_big_str.i156.i.i, label %modify_rc.i161.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i161.i.i:                               ; preds = %"#Attr_#dec_4.exit152.i.i"
  %call_builtin.i157.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i.i) #11
  %get_rc_ptr.i159.i.i = getelementptr inbounds i8, i8* %call_builtin.i157.i.i, i64 -8
  %120 = bitcast i8* %get_rc_ptr.i159.i.i to i64*
  %121 = load i64, i64* %120, align 8
  %.not.i.i.i.i160.i.i = icmp eq i64 %121, 0
  br i1 %.not.i.i.i.i160.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i, label %Then.i.i.i.i162.i.i

Then.i.i.i.i162.i.i:                              ; preds = %modify_rc.i161.i.i
  %122 = add i64 %121, -1
  store i64 %122, i64* %120, align 8
  %123 = icmp eq i64 %121, -9223372036854775808
  br i1 %123, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i174.i.i:                               ; preds = %"#Attr_#dec_4.exit.i"
  %load_element6.sroa.0.0..sroa_idx268 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element7.i.i, i64 0, i32 0
  store i8* %load_element6.sroa.0.0.copyload, i8** %load_element6.sroa.0.0..sroa_idx268, align 8
  %load_element6.sroa.7.0..sroa_idx275 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element7.i.i, i64 0, i32 1
  store i64 %load_element6.sroa.7.0.copyload, i64* %load_element6.sroa.7.0..sroa_idx275, align 8
  %load_element6.sroa.10.0..sroa_idx282 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element7.i.i, i64 0, i32 2
  store i64 %load_element6.sroa.10.0.copyload, i64* %load_element6.sroa.10.0..sroa_idx282, align 8
  %const_str_store8.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i, i64 0, i32 0
  store i8* inttoptr (i64 8459856186519677012 to i8*), i8** %const_str_store8.repack.i.i, align 8
  %const_str_store8.repack80.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i, i64 0, i32 1
  store i64 105692508611949, i64* %const_str_store8.repack80.i.i, align 8
  %const_str_store8.repack81.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i, i64 0, i32 2
  store i64 -8214565720323784704, i64* %const_str_store8.repack81.i.i, align 8
  %const_str_store9.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store9.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_str_literal_1169590549421570608, i64 0, i64 8), i8** %const_str_store9.repack.i.i, align 8
  %const_str_store9.repack82.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store9.i.i, i64 0, i32 1
  store i64 35, i64* %const_str_store9.repack82.i.i, align 8
  %const_str_store9.repack83.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store9.i.i, i64 0, i32 2
  store i64 35, i64* %const_str_store9.repack83.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value10.i.i, %str.RocStr* nonnull readonly %load_element7.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store9.i.i) #11
  %call_builtin.i170.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %const_str_store9.i.i) #11
  %get_rc_ptr.i172.i.i = getelementptr inbounds i8, i8* %call_builtin.i170.i.i, i64 -8
  %124 = bitcast i8* %get_rc_ptr.i172.i.i to i64*
  %125 = load i64, i64* %124, align 8
  %.not.i.i.i.i173.i.i = icmp eq i64 %125, 0
  br i1 %.not.i.i.i.i173.i.i, label %"#Attr_#dec_4.exit178.i.i", label %Then.i.i.i.i175.i.i

Then.i.i.i.i175.i.i:                              ; preds = %modify_rc.i174.i.i
  %126 = add i64 %125, -1
  store i64 %126, i64* %124, align 8
  %127 = icmp eq i64 %125, -9223372036854775808
  br i1 %127, label %Then1.i.i.i.i176.i.i, label %"#Attr_#dec_4.exit178.i.i"

Then1.i.i.i.i176.i.i:                             ; preds = %Then.i.i.i.i175.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i172.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit178.i.i"

"#Attr_#dec_4.exit178.i.i":                       ; preds = %modify_rc.i174.i.i, %Then.i.i.i.i175.i.i, %Then1.i.i.i.i176.i.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value11.i.i, %str.RocStr* nonnull readonly %const_str_store8.i.i, %str.RocStr* nocapture nonnull readonly %result_value10.i.i) #11
  %load_str_to_stack.i180.i.i.elt131 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value10.i.i, i64 0, i32 2
  %load_str_to_stack.i180.i.i.unpack132 = load i64, i64* %load_str_to_stack.i180.i.i.elt131, align 8
  %is_big_str.i182.i.i = icmp sgt i64 %load_str_to_stack.i180.i.i.unpack132, 0
  br i1 %is_big_str.i182.i.i, label %modify_rc.i187.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i187.i.i:                               ; preds = %"#Attr_#dec_4.exit178.i.i"
  %call_builtin.i183.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value10.i.i) #11
  %get_rc_ptr.i185.i.i = getelementptr inbounds i8, i8* %call_builtin.i183.i.i, i64 -8
  %128 = bitcast i8* %get_rc_ptr.i185.i.i to i64*
  %129 = load i64, i64* %128, align 8
  %.not.i.i.i.i186.i.i = icmp eq i64 %129, 0
  br i1 %.not.i.i.i.i186.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i, label %Then.i.i.i.i188.i.i

Then.i.i.i.i188.i.i:                              ; preds = %modify_rc.i187.i.i
  %130 = add i64 %129, -1
  store i64 %130, i64* %128, align 8
  %131 = icmp eq i64 %129, -9223372036854775808
  br i1 %131, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i200.i.i:                               ; preds = %"#Attr_#dec_4.exit.i"
  %load_element6.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element15.i.i, i64 0, i32 0
  store i8* %load_element6.sroa.0.0.copyload, i8** %load_element6.sroa.0.0..sroa_idx, align 8
  %load_element6.sroa.7.0..sroa_idx273 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element15.i.i, i64 0, i32 1
  store i64 %load_element6.sroa.7.0.copyload, i64* %load_element6.sroa.7.0..sroa_idx273, align 8
  %load_element6.sroa.10.0..sroa_idx280 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element15.i.i, i64 0, i32 2
  store i64 %load_element6.sroa.10.0.copyload, i64* %load_element6.sroa.10.0..sroa_idx280, align 8
  %const_str_store16.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store16.i.i, i64 0, i32 0
  store i8* inttoptr (i64 7598822093868066900 to i8*), i8** %const_str_store16.repack.i.i, align 8
  %const_str_store16.repack76.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store16.i.i, i64 0, i32 1
  store i64 49672909516399, i64* %const_str_store16.repack76.i.i, align 8
  %const_str_store16.repack77.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store16.i.i, i64 0, i32 2
  store i64 -8214565720323784704, i64* %const_str_store16.repack77.i.i, align 8
  %const_str_store17.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store17.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_str_literal_1169590549421570608, i64 0, i64 8), i8** %const_str_store17.repack.i.i, align 8
  %const_str_store17.repack78.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store17.i.i, i64 0, i32 1
  store i64 35, i64* %const_str_store17.repack78.i.i, align 8
  %const_str_store17.repack79.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store17.i.i, i64 0, i32 2
  store i64 35, i64* %const_str_store17.repack79.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value18.i.i, %str.RocStr* nonnull readonly %load_element15.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store17.i.i) #11
  %call_builtin.i196.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %const_str_store17.i.i) #11
  %get_rc_ptr.i198.i.i = getelementptr inbounds i8, i8* %call_builtin.i196.i.i, i64 -8
  %132 = bitcast i8* %get_rc_ptr.i198.i.i to i64*
  %133 = load i64, i64* %132, align 8
  %.not.i.i.i.i199.i.i = icmp eq i64 %133, 0
  br i1 %.not.i.i.i.i199.i.i, label %"#Attr_#dec_4.exit204.i.i", label %Then.i.i.i.i201.i.i

Then.i.i.i.i201.i.i:                              ; preds = %modify_rc.i200.i.i
  %134 = add i64 %133, -1
  store i64 %134, i64* %132, align 8
  %135 = icmp eq i64 %133, -9223372036854775808
  br i1 %135, label %Then1.i.i.i.i202.i.i, label %"#Attr_#dec_4.exit204.i.i"

Then1.i.i.i.i202.i.i:                             ; preds = %Then.i.i.i.i201.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i198.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit204.i.i"

"#Attr_#dec_4.exit204.i.i":                       ; preds = %modify_rc.i200.i.i, %Then.i.i.i.i201.i.i, %Then1.i.i.i.i202.i.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value19.i.i, %str.RocStr* nonnull readonly %const_str_store16.i.i, %str.RocStr* nocapture nonnull readonly %result_value18.i.i) #11
  %load_str_to_stack.i206.i.i.elt121 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value18.i.i, i64 0, i32 2
  %load_str_to_stack.i206.i.i.unpack122 = load i64, i64* %load_str_to_stack.i206.i.i.elt121, align 8
  %is_big_str.i208.i.i = icmp sgt i64 %load_str_to_stack.i206.i.i.unpack122, 0
  br i1 %is_big_str.i208.i.i, label %modify_rc.i213.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i213.i.i:                               ; preds = %"#Attr_#dec_4.exit204.i.i"
  %call_builtin.i209.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value18.i.i) #11
  %get_rc_ptr.i211.i.i = getelementptr inbounds i8, i8* %call_builtin.i209.i.i, i64 -8
  %136 = bitcast i8* %get_rc_ptr.i211.i.i to i64*
  %137 = load i64, i64* %136, align 8
  %.not.i.i.i.i212.i.i = icmp eq i64 %137, 0
  br i1 %.not.i.i.i.i212.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i, label %Then.i.i.i.i214.i.i

Then.i.i.i.i214.i.i:                              ; preds = %modify_rc.i213.i.i
  %138 = add i64 %137, -1
  store i64 %138, i64* %136, align 8
  %139 = icmp eq i64 %137, -9223372036854775808
  br i1 %139, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

branch5.i.i:                                      ; preds = %"#Attr_#dec_4.exit.i"
  %struct_field.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 0
  store i8* %load_element6.sroa.0.0.copyload, i8** %struct_field.repack.i.i, align 8
  %struct_field.repack66.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 1
  store i64 %load_element6.sroa.7.0.copyload, i64* %struct_field.repack66.i.i, align 8
  %struct_field.repack68.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  store i64 %load_element6.sroa.10.0.copyload, i64* %struct_field.repack68.i.i, align 8
  switch i8 %load_element6.sroa.13.0.copyload, label %default.i.i.i [
    i8 0, label %branch0.i.i.i
    i8 2, label %branch2.i.i.i
  ]

default.i.i.i:                                    ; preds = %branch5.i.i
  %const_str_store2.sroa.0.0..sroa_idx.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 0
  store i8* inttoptr (i64 3202733779772010089 to i8*), i8** %const_str_store2.sroa.0.0..sroa_idx.i.i.i, align 8
  br label %"#Attr_#dec_4.exit230.i.i"

branch0.i.i.i:                                    ; preds = %branch5.i.i
  %const_str_store.sroa.0.0..sroa_idx.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 0
  store i8* inttoptr (i64 31069335677005666 to i8*), i8** %const_str_store.sroa.0.0..sroa_idx.i.i.i, align 8
  br label %"#Attr_#dec_4.exit230.i.i"

branch2.i.i.i:                                    ; preds = %branch5.i.i
  %const_str_store1.sroa.0.0..sroa_idx.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 0
  store i8* inttoptr (i64 113723913172083 to i8*), i8** %const_str_store1.sroa.0.0..sroa_idx.i.i.i, align 8
  br label %"#Attr_#dec_4.exit230.i.i"

"#Attr_#dec_4.exit230.i.i":                       ; preds = %default.i.i.i, %branch0.i.i.i, %branch2.i.i.i
  %.sink332 = phi i64 [ 2338609976898237984, %default.i.i.i ], [ 0, %branch0.i.i.i ], [ 0, %branch2.i.i.i ]
  %.sink331 = phi i64 [ -7637994581213615757, %default.i.i.i ], [ -8718968878589280256, %branch0.i.i.i ], [ -8791026472627208192, %branch2.i.i.i ]
  %const_str_store2.sroa.2.0..sroa_idx13.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 1
  store i64 %.sink332, i64* %const_str_store2.sroa.2.0..sroa_idx13.i.i.i, align 8
  %const_str_store2.sroa.3.0..sroa_idx14.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value24.i.i, i64 0, i32 2
  store i64 %.sink331, i64* %const_str_store2.sroa.3.0..sroa_idx14.i.i.i, align 8
  %const_str_store25.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store25.i.i, i64 0, i32 0
  store i8* inttoptr (i64 7598822093868066900 to i8*), i8** %const_str_store25.repack.i.i, align 8
  %const_str_store25.repack70.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store25.i.i, i64 0, i32 1
  store i64 49672909516399, i64* %const_str_store25.repack70.i.i, align 8
  %const_str_store25.repack71.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store25.i.i, i64 0, i32 2
  store i64 -8214565720323784704, i64* %const_str_store25.repack71.i.i, align 8
  %const_str_store26.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store26.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_str_literal_12458281521289889614, i64 0, i64 8), i8** %const_str_store26.repack.i.i, align 8
  %const_str_store26.repack72.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store26.i.i, i64 0, i32 1
  store i64 26, i64* %const_str_store26.repack72.i.i, align 8
  %const_str_store26.repack73.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store26.i.i, i64 0, i32 2
  store i64 26, i64* %const_str_store26.repack73.i.i, align 8
  %const_str_store27.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27.i.i, i64 0, i32 0
  store i8* inttoptr (i64 33 to i8*), i8** %const_str_store27.repack.i.i, align 8
  %const_str_store27.repack74.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store27.repack74.i.i, align 8
  %const_str_store27.repack75.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27.i.i, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store27.repack75.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value28.i.i, %str.RocStr* nonnull readonly %result_value24.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store27.i.i) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value29.i.i, %str.RocStr* nonnull readonly %const_str_store26.i.i, %str.RocStr* nocapture nonnull readonly %result_value28.i.i) #11
  %load_str_to_stack.i232.i.i.elt101 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value28.i.i, i64 0, i32 2
  %load_str_to_stack.i232.i.i.unpack102 = load i64, i64* %load_str_to_stack.i232.i.i.elt101, align 8
  %is_big_str.i234.i.i = icmp sgt i64 %load_str_to_stack.i232.i.i.unpack102, 0
  br i1 %is_big_str.i234.i.i, label %modify_rc.i239.i.i, label %"#Attr_#dec_4.exit243.i.i"

modify_rc.i239.i.i:                               ; preds = %"#Attr_#dec_4.exit230.i.i"
  %call_builtin.i235.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value28.i.i) #11
  %get_rc_ptr.i237.i.i = getelementptr inbounds i8, i8* %call_builtin.i235.i.i, i64 -8
  %140 = bitcast i8* %get_rc_ptr.i237.i.i to i64*
  %141 = load i64, i64* %140, align 8
  %.not.i.i.i.i238.i.i = icmp eq i64 %141, 0
  br i1 %.not.i.i.i.i238.i.i, label %"#Attr_#dec_4.exit243.i.i", label %Then.i.i.i.i240.i.i

Then.i.i.i.i240.i.i:                              ; preds = %modify_rc.i239.i.i
  %142 = add i64 %141, -1
  store i64 %142, i64* %140, align 8
  %143 = icmp eq i64 %141, -9223372036854775808
  br i1 %143, label %Then1.i.i.i.i241.i.i, label %"#Attr_#dec_4.exit243.i.i"

Then1.i.i.i.i241.i.i:                             ; preds = %Then.i.i.i.i240.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i237.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit243.i.i"

"#Attr_#dec_4.exit243.i.i":                       ; preds = %modify_rc.i239.i.i, %Then.i.i.i.i240.i.i, %Then1.i.i.i.i241.i.i, %"#Attr_#dec_4.exit230.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value30.i.i, %str.RocStr* nonnull readonly %struct_field.i.i, %str.RocStr* nocapture nonnull readonly %result_value29.i.i) #11
  %load_str_to_stack.i245.i.i.elt106 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value29.i.i, i64 0, i32 2
  %load_str_to_stack.i245.i.i.unpack107 = load i64, i64* %load_str_to_stack.i245.i.i.elt106, align 8
  %is_big_str.i247.i.i = icmp sgt i64 %load_str_to_stack.i245.i.i.unpack107, 0
  br i1 %is_big_str.i247.i.i, label %modify_rc.i252.i.i, label %"#Attr_#dec_4.exit256.i.i"

modify_rc.i252.i.i:                               ; preds = %"#Attr_#dec_4.exit243.i.i"
  %call_builtin.i248.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value29.i.i) #11
  %get_rc_ptr.i250.i.i = getelementptr inbounds i8, i8* %call_builtin.i248.i.i, i64 -8
  %144 = bitcast i8* %get_rc_ptr.i250.i.i to i64*
  %145 = load i64, i64* %144, align 8
  %.not.i.i.i.i251.i.i = icmp eq i64 %145, 0
  br i1 %.not.i.i.i.i251.i.i, label %"#Attr_#dec_4.exit256.i.i", label %Then.i.i.i.i253.i.i

Then.i.i.i.i253.i.i:                              ; preds = %modify_rc.i252.i.i
  %146 = add i64 %145, -1
  store i64 %146, i64* %144, align 8
  %147 = icmp eq i64 %145, -9223372036854775808
  br i1 %147, label %Then1.i.i.i.i254.i.i, label %"#Attr_#dec_4.exit256.i.i"

Then1.i.i.i.i254.i.i:                             ; preds = %Then.i.i.i.i253.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i250.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit256.i.i"

"#Attr_#dec_4.exit256.i.i":                       ; preds = %modify_rc.i252.i.i, %Then.i.i.i.i253.i.i, %Then1.i.i.i.i254.i.i, %"#Attr_#dec_4.exit243.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value31.i.i, %str.RocStr* nonnull readonly %const_str_store25.i.i, %str.RocStr* nocapture nonnull readonly %result_value30.i.i) #11
  %load_str_to_stack.i258.i.i.elt111 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value30.i.i, i64 0, i32 2
  %load_str_to_stack.i258.i.i.unpack112 = load i64, i64* %load_str_to_stack.i258.i.i.elt111, align 8
  %is_big_str.i260.i.i = icmp sgt i64 %load_str_to_stack.i258.i.i.unpack112, 0
  br i1 %is_big_str.i260.i.i, label %modify_rc.i265.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i265.i.i:                               ; preds = %"#Attr_#dec_4.exit256.i.i"
  %call_builtin.i261.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value30.i.i) #11
  %get_rc_ptr.i263.i.i = getelementptr inbounds i8, i8* %call_builtin.i261.i.i, i64 -8
  %148 = bitcast i8* %get_rc_ptr.i263.i.i to i64*
  %149 = load i64, i64* %148, align 8
  %.not.i.i.i.i264.i.i = icmp eq i64 %149, 0
  br i1 %.not.i.i.i.i264.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i, label %Then.i.i.i.i266.i.i

Then.i.i.i.i266.i.i:                              ; preds = %modify_rc.i265.i.i
  %150 = add i64 %149, -1
  store i64 %150, i64* %148, align 8
  %151 = icmp eq i64 %149, -9223372036854775808
  br i1 %151, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

branch4.i.i:                                      ; preds = %"#Attr_#dec_4.exit.i"
  %.not.i.i202 = icmp eq i8* %load_element6.sroa.0.0.copyload, null
  br i1 %.not.i.i202, label %roc_builtins.list.map.exit.i230, label %OptionalThen.i.i212

OptionalThen.i.i212:                              ; preds = %branch4.i.i
  %152 = icmp ne i64 %load_element6.sroa.7.0.copyload, 0
  tail call void @llvm.assume(i1 %152) #11
  %153 = icmp ugt i64 %load_element6.sroa.7.0.copyload, 2
  %..i.i.i.i.i203 = select i1 %153, i64 %load_element6.sroa.7.0.copyload, i64 2
  %154 = mul nuw i64 %..i.i.i.i.i203, 24
  %155 = add nuw i64 %154, 8
  %156 = tail call i8* @roc_alloc(i64 %155, i32 8) #11, !noalias !178
  %157 = icmp ne i8* %156, null
  tail call void @llvm.assume(i1 %157) #11
  %158 = getelementptr inbounds i8, i8* %156, i64 8
  %159 = bitcast i8* %156 to i64*
  store i64 -9223372036854775808, i64* %159, align 8, !noalias !178
  %result_value.i.0.sroa_cast.i204 = bitcast %str.RocStr* %result_value.i.i200 to i8*
  %160 = bitcast %str.RocStr* %zig_helper_load_opaque.i.i201 to i8*
  %161 = bitcast %str.RocStr* %result_value2.i.i196 to i8*
  %162 = bitcast %str.RocStr* %result_value.i5.i197 to i8*
  %163 = bitcast %str.RocStr* %const_str_store1.i.i198 to i8*
  %164 = bitcast %str.RocStr* %const_str_store.i.i199 to i8*
  %const_str_store.repack.i.i205 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i199, i64 0, i32 0
  %const_str_store.repack3.i.i206 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i199, i64 0, i32 1
  %const_str_store.repack4.i.i207 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i199, i64 0, i32 2
  %const_str_store1.repack.i.i208 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i198, i64 0, i32 0
  %const_str_store1.repack5.i.i209 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i198, i64 0, i32 1
  %const_str_store1.repack6.i.i210 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i198, i64 0, i32 2
  %load_str_to_stack.i8.elt28.i.i211 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i5.i197, i64 0, i32 2
  br label %WhileBody.i.i216

WhileBody.i.i216:                                 ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224, %OptionalThen.i.i212
  %i.010.i.i213 = phi i64 [ %172, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224 ], [ 0, %OptionalThen.i.i212 ]
  %165 = mul nuw i64 %i.010.i.i213, 24
  %166 = getelementptr inbounds i8, i8* %load_element6.sroa.0.0.copyload, i64 %165
  %167 = getelementptr inbounds i8, i8* %158, i64 %165
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.0.sroa_cast.i204)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %160, i8* noundef nonnull align 8 dereferenceable(24) %166, i64 24, i1 false) #11, !noalias !183
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #11
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store.repack.i.i205, align 8, !noalias !183
  store i64 0, i64* %const_str_store.repack3.i.i206, align 8, !noalias !183
  store i64 -9151314442816847872, i64* %const_str_store.repack4.i.i207, align 8, !noalias !183
  store i8* inttoptr (i64 34 to i8*), i8** %const_str_store1.repack.i.i208, align 8, !noalias !183
  store i64 0, i64* %const_str_store1.repack5.i.i209, align 8, !noalias !183
  store i64 -9151314442816847872, i64* %const_str_store1.repack6.i.i210, align 8, !noalias !183
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i5.i197, %str.RocStr* nonnull readonly %zig_helper_load_opaque.i.i201, %str.RocStr* nocapture nonnull readonly %const_str_store1.i.i198) #11, !noalias !183
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value2.i.i196, %str.RocStr* nonnull readonly %const_str_store.i.i199, %str.RocStr* nocapture nonnull readonly %result_value.i5.i197) #11, !noalias !183
  %load_str_to_stack.i8.unpack29.i.i214 = load i64, i64* %load_str_to_stack.i8.elt28.i.i211, align 8, !noalias !183
  %is_big_str.i10.i.i215 = icmp sgt i64 %load_str_to_stack.i8.unpack29.i.i214, 0
  br i1 %is_big_str.i10.i.i215, label %modify_rc.i15.i.i220, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224

modify_rc.i15.i.i220:                             ; preds = %WhileBody.i.i216
  %call_builtin.i11.i.i217 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i5.i197) #11, !noalias !183
  %get_rc_ptr.i13.i.i218 = getelementptr inbounds i8, i8* %call_builtin.i11.i.i217, i64 -8
  %168 = bitcast i8* %get_rc_ptr.i13.i.i218 to i64*
  %169 = load i64, i64* %168, align 8, !noalias !183
  %.not.i.i.i.i14.i.i219 = icmp eq i64 %169, 0
  br i1 %.not.i.i.i.i14.i.i219, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224, label %Then.i.i.i.i16.i.i221

Then.i.i.i.i16.i.i221:                            ; preds = %modify_rc.i15.i.i220
  %170 = add i64 %169, -1
  store i64 %170, i64* %168, align 8, !noalias !183
  %171 = icmp eq i64 %169, -9223372036854775808
  br i1 %171, label %Then1.i.i.i.i17.i.i222, label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224

Then1.i.i.i.i17.i.i222:                           ; preds = %Then.i.i.i.i16.i.i221
  tail call void @roc_dealloc(i8* %get_rc_ptr.i13.i.i218, i32 8) #11, !noalias !183
  br label %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224

Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224: ; preds = %Then1.i.i.i.i17.i.i222, %Then.i.i.i.i16.i.i221, %modify_rc.i15.i.i220, %WhileBody.i.i216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.0.sroa_cast.i204, i8* noundef nonnull align 8 dereferenceable(24) %161, i64 24, i1 false) #11, !noalias !183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %167, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.0.sroa_cast.i204, i64 24, i1 false) #11, !noalias !183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.0.sroa_cast.i204)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #11
  %172 = add nuw i64 %i.010.i.i213, 1
  %exitcond.not.i.i223 = icmp eq i64 %172, %load_element6.sroa.7.0.copyload
  br i1 %exitcond.not.i.i223, label %roc_builtins.list.map.exit.i230, label %WhileBody.i.i216

roc_builtins.list.map.exit.i230:                  ; preds = %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224, %branch4.i.i
  %list_alloca.sroa.0.0.i225 = phi i8* [ null, %branch4.i.i ], [ %158, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224 ]
  %list_alloca.sroa.3.0.i226 = phi i64 [ 0, %branch4.i.i ], [ %load_element6.sroa.7.0.copyload, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224 ]
  %list_alloca.sroa.5.0.i227 = phi i64 [ 0, %branch4.i.i ], [ %..i.i.i.i.i203, %Arg_quote_3788a0837987929b11c486119376824a23e975f87ff71d75fd89264372827d.exit.i224 ]
  %173 = ptrtoint i8* %load_element6.sroa.0.0.copyload to i64
  %174 = shl i64 %load_element6.sroa.10.0.copyload, 1
  %.not.i.i.i228 = icmp slt i64 %load_element6.sroa.10.0.copyload, 0
  %175 = select i1 %.not.i.i.i228, i64 %174, i64 %173
  %.not.i19.i229 = icmp eq i64 %175, 0
  br i1 %.not.i19.i229, label %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit, label %OptionalThen.i21.i232

OptionalThen.i21.i232:                            ; preds = %roc_builtins.list.map.exit.i230
  %176 = inttoptr i64 %175 to i8*
  %177 = getelementptr inbounds i8, i8* %176, i64 -8
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %.not.i.i20.i231 = icmp eq i64 %179, 0
  br i1 %.not.i.i20.i231, label %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit, label %Then.i.i.i233

Then.i.i.i233:                                    ; preds = %OptionalThen.i21.i232
  %180 = add i64 %179, -1
  store i64 %180, i64* %178, align 8
  %181 = icmp eq i64 %179, -9223372036854775808
  br i1 %181, label %Then1.i.i.i234, label %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit

Then1.i.i.i234:                                   ; preds = %Then.i.i.i233
  tail call void @roc_dealloc(i8* %177, i32 8) #11
  br label %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit

List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit: ; preds = %roc_builtins.list.map.exit.i230, %OptionalThen.i21.i232, %Then.i.i.i233, %Then1.i.i.i234
  %const_str_store36.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store36.i.i, i64 0, i32 0
  store i8* inttoptr (i64 8236 to i8*), i8** %const_str_store36.repack.i.i, align 8
  %const_str_store36.repack62.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store36.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store36.repack62.i.i, align 8
  %const_str_store36.repack63.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store36.i.i, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store36.repack63.i.i, align 8
  %182 = bitcast %list.RocList* %list_alloca.i270.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #11
  %list_alloca.repack.i272.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i270.i.i, i64 0, i32 0
  store i8* %list_alloca.sroa.0.0.i225, i8** %list_alloca.repack.i272.i.i, align 8
  %list_alloca.repack1.i274.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i270.i.i, i64 0, i32 1
  store i64 %list_alloca.sroa.3.0.i226, i64* %list_alloca.repack1.i274.i.i, align 8
  %list_alloca.repack3.i276.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i270.i.i, i64 0, i32 2
  store i64 %list_alloca.sroa.5.0.i227, i64* %list_alloca.repack3.i276.i.i, align 8
  call fastcc void @roc_builtins.str.joinWith(%str.RocStr* noalias nocapture nonnull %result_value37.i.i, %list.RocList* nocapture nonnull readonly %list_alloca.i270.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store36.i.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #11
  %183 = bitcast %str.RocStr* %incrementing_element_loop_load.i238 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183)
  %"cap > 0.not.i239" = icmp eq i64 %list_alloca.sroa.5.0.i227, 0
  br i1 %"cap > 0.not.i239", label %"#Attr_#dec_4.exit289.i.i", label %modification_list_block.i242

modification_list_block.i242:                     ; preds = %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit
  %cast_basic_basic.i240 = bitcast i8* %list_alloca.sroa.0.0.i225 to %str.RocStr*
  %bounds_check.not.i241 = icmp eq i64 %list_alloca.sroa.3.0.i226, 0
  br i1 %bounds_check.not.i241, label %after_loop.i263, label %loop.preheader.i244

loop.preheader.i244:                              ; preds = %modification_list_block.i242
  %load_str_to_stack.i.elt9.i243 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i238, i64 0, i32 2
  br label %loop.i250

loop.i250:                                        ; preds = %"#Attr_#dec_4.exit.i258", %loop.preheader.i244
  %next_index12.i245 = phi i64 [ 0, %loop.preheader.i244 ], [ %next_index.i246, %"#Attr_#dec_4.exit.i258" ]
  %next_index.i246 = add nuw i64 %next_index12.i245, 1
  %load_index.i247 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i240, i64 %next_index12.i245
  %184 = bitcast %str.RocStr* %load_index.i247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %183, i8* noundef nonnull align 8 dereferenceable(24) %184, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i248 = load i64, i64* %load_str_to_stack.i.elt9.i243, align 8
  %is_big_str.i.i249 = icmp sgt i64 %load_str_to_stack.i.unpack10.i248, 0
  br i1 %is_big_str.i.i249, label %modify_rc.i.i254, label %"#Attr_#dec_4.exit.i258"

modify_rc.i.i254:                                 ; preds = %loop.i250
  %call_builtin.i.i251 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i238) #11
  %get_rc_ptr.i.i252 = getelementptr inbounds i8, i8* %call_builtin.i.i251, i64 -8
  %185 = bitcast i8* %get_rc_ptr.i.i252 to i64*
  %186 = load i64, i64* %185, align 8
  %.not.i.i.i.i.i253 = icmp eq i64 %186, 0
  br i1 %.not.i.i.i.i.i253, label %"#Attr_#dec_4.exit.i258", label %Then.i.i.i.i.i255

Then.i.i.i.i.i255:                                ; preds = %modify_rc.i.i254
  %187 = add i64 %186, -1
  store i64 %187, i64* %185, align 8
  %188 = icmp eq i64 %186, -9223372036854775808
  br i1 %188, label %Then1.i.i.i.i.i256, label %"#Attr_#dec_4.exit.i258"

Then1.i.i.i.i.i256:                               ; preds = %Then.i.i.i.i.i255
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i252, i32 8) #11
  br label %"#Attr_#dec_4.exit.i258"

"#Attr_#dec_4.exit.i258":                         ; preds = %Then1.i.i.i.i.i256, %Then.i.i.i.i.i255, %modify_rc.i.i254, %loop.i250
  %exitcond306.not = icmp eq i64 %next_index.i246, %list_alloca.sroa.3.0.i226
  br i1 %exitcond306.not, label %after_loop.i263, label %loop.i250

after_loop.i263:                                  ; preds = %"#Attr_#dec_4.exit.i258", %modification_list_block.i242
  %189 = ptrtoint i8* %list_alloca.sroa.0.0.i225 to i64
  %190 = shl i64 %list_alloca.sroa.5.0.i227, 1
  %.not.i.i.i259 = icmp slt i64 %list_alloca.sroa.5.0.i227, 0
  %191 = select i1 %.not.i.i.i259, i64 %190, i64 %189
  %as_usize_ptr.i260 = inttoptr i64 %191 to i64*
  %get_rc_ptr.i261 = getelementptr inbounds i64, i64* %as_usize_ptr.i260, i64 -1
  %192 = load i64, i64* %get_rc_ptr.i261, align 8
  %.not.i.i.i.i262 = icmp eq i64 %192, 0
  br i1 %.not.i.i.i.i262, label %"#Attr_#dec_4.exit289.i.i", label %Then.i.i.i.i264

Then.i.i.i.i264:                                  ; preds = %after_loop.i263
  %193 = add i64 %192, -1
  store i64 %193, i64* %get_rc_ptr.i261, align 8
  %194 = icmp eq i64 %192, -9223372036854775808
  br i1 %194, label %Then1.i.i.i.i265, label %"#Attr_#dec_4.exit289.i.i"

Then1.i.i.i.i265:                                 ; preds = %Then.i.i.i.i264
  %195 = bitcast i64* %get_rc_ptr.i261 to i8*
  tail call void @roc_dealloc(i8* %195, i32 8) #11
  br label %"#Attr_#dec_4.exit289.i.i"

"#Attr_#dec_4.exit289.i.i":                       ; preds = %Then1.i.i.i.i265, %Then.i.i.i.i264, %after_loop.i263, %List_map_88877524968c43b563c3ced7c0fbc886dad6aff67509d232084665934463a9d.exit
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183)
  %const_str_store38.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store38.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @_str_literal_9774341834311273816, i64 0, i64 8), i8** %const_str_store38.repack.i.i, align 8
  %const_str_store38.repack64.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store38.i.i, i64 0, i32 1
  store i64 74, i64* %const_str_store38.repack64.i.i, align 8
  %const_str_store38.repack65.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store38.i.i, i64 0, i32 2
  store i64 74, i64* %const_str_store38.repack65.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value39.i.i, %str.RocStr* nonnull readonly %const_str_store38.i.i, %str.RocStr* nocapture nonnull readonly %result_value37.i.i) #11
  %load_str_to_stack.i291.i.i.elt86 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value37.i.i, i64 0, i32 2
  %load_str_to_stack.i291.i.i.unpack87 = load i64, i64* %load_str_to_stack.i291.i.i.elt86, align 8
  %is_big_str.i293.i.i = icmp sgt i64 %load_str_to_stack.i291.i.i.unpack87, 0
  br i1 %is_big_str.i293.i.i, label %modify_rc.i298.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

modify_rc.i298.i.i:                               ; preds = %"#Attr_#dec_4.exit289.i.i"
  %call_builtin.i294.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value37.i.i) #11
  %get_rc_ptr.i296.i.i = getelementptr inbounds i8, i8* %call_builtin.i294.i.i, i64 -8
  %196 = bitcast i8* %get_rc_ptr.i296.i.i to i64*
  %197 = load i64, i64* %196, align 8
  %.not.i.i.i.i297.i.i = icmp eq i64 %197, 0
  br i1 %.not.i.i.i.i297.i.i, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i, label %Then.i.i.i.i299.i.i

Then.i.i.i.i299.i.i:                              ; preds = %modify_rc.i298.i.i
  %198 = add i64 %197, -1
  store i64 %198, i64* %196, align 8
  %199 = icmp eq i64 %197, -9223372036854775808
  br i1 %199, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split, label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split: ; preds = %Then.i.i.i.i299.i.i, %Then.i.i.i.i266.i.i, %Then.i.i.i.i214.i.i, %Then.i.i.i.i188.i.i, %Then.i.i.i.i162.i.i, %Then.i.i.i.i136.i.i
  %get_rc_ptr.i296.i.i.sink = phi i8* [ %get_rc_ptr.i133.i.i, %Then.i.i.i.i136.i.i ], [ %get_rc_ptr.i159.i.i, %Then.i.i.i.i162.i.i ], [ %get_rc_ptr.i185.i.i, %Then.i.i.i.i188.i.i ], [ %get_rc_ptr.i211.i.i, %Then.i.i.i.i214.i.i ], [ %get_rc_ptr.i263.i.i, %Then.i.i.i.i266.i.i ], [ %get_rc_ptr.i296.i.i, %Then.i.i.i.i299.i.i ]
  %result_value39.i.i.0.sroa_cast.sink.ph = phi i8* [ %result_value56.i.i.0.sroa_cast, %Then.i.i.i.i136.i.i ], [ %result_value3.i.i.0.sroa_cast, %Then.i.i.i.i162.i.i ], [ %result_value11.i.i.0.sroa_cast, %Then.i.i.i.i188.i.i ], [ %result_value19.i.i.0.sroa_cast, %Then.i.i.i.i214.i.i ], [ %result_value31.i.i.0.sroa_cast, %Then.i.i.i.i266.i.i ], [ %result_value39.i.i.0.sroa_cast, %Then.i.i.i.i299.i.i ]
  tail call void @roc_dealloc(i8* %get_rc_ptr.i296.i.i.sink, i32 8) #11
  br label %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i

Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i: ; preds = %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split, %"#Attr_#dec_4.exit289.i.i", %Then.i.i.i.i299.i.i, %modify_rc.i298.i.i, %"#Attr_#dec_4.exit256.i.i", %Then.i.i.i.i266.i.i, %modify_rc.i265.i.i, %"#Attr_#dec_4.exit204.i.i", %Then.i.i.i.i214.i.i, %modify_rc.i213.i.i, %"#Attr_#dec_4.exit178.i.i", %Then.i.i.i.i188.i.i, %modify_rc.i187.i.i, %"#Attr_#dec_4.exit152.i.i", %Then.i.i.i.i162.i.i, %modify_rc.i161.i.i, %"#Attr_#dec_4.exit126.i.i", %Then.i.i.i.i136.i.i, %modify_rc.i135.i.i
  %result_value39.i.i.0.sroa_cast.sink = phi i8* [ %result_value56.i.i.0.sroa_cast, %modify_rc.i135.i.i ], [ %result_value56.i.i.0.sroa_cast, %Then.i.i.i.i136.i.i ], [ %result_value56.i.i.0.sroa_cast, %"#Attr_#dec_4.exit126.i.i" ], [ %result_value3.i.i.0.sroa_cast, %modify_rc.i161.i.i ], [ %result_value3.i.i.0.sroa_cast, %Then.i.i.i.i162.i.i ], [ %result_value3.i.i.0.sroa_cast, %"#Attr_#dec_4.exit152.i.i" ], [ %result_value11.i.i.0.sroa_cast, %modify_rc.i187.i.i ], [ %result_value11.i.i.0.sroa_cast, %Then.i.i.i.i188.i.i ], [ %result_value11.i.i.0.sroa_cast, %"#Attr_#dec_4.exit178.i.i" ], [ %result_value19.i.i.0.sroa_cast, %modify_rc.i213.i.i ], [ %result_value19.i.i.0.sroa_cast, %Then.i.i.i.i214.i.i ], [ %result_value19.i.i.0.sroa_cast, %"#Attr_#dec_4.exit204.i.i" ], [ %result_value31.i.i.0.sroa_cast, %modify_rc.i265.i.i ], [ %result_value31.i.i.0.sroa_cast, %Then.i.i.i.i266.i.i ], [ %result_value31.i.i.0.sroa_cast, %"#Attr_#dec_4.exit256.i.i" ], [ %result_value39.i.i.0.sroa_cast, %modify_rc.i298.i.i ], [ %result_value39.i.i.0.sroa_cast, %Then.i.i.i.i299.i.i ], [ %result_value39.i.i.0.sroa_cast, %"#Attr_#dec_4.exit289.i.i" ], [ %result_value39.i.i.0.sroa_cast.sink.ph, %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i.sink.split ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %17, i8* noundef nonnull align 8 dereferenceable(24) %result_value39.i.i.0.sroa_cast.sink, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value56.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value39.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value31.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value19.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value11.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value3.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  %200 = bitcast %str.RocStr* %str_alloca.i6.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %str_alloca.i6.i, %str.RocStr* nonnull readonly %result_value1.i, %str.RocStr* nocapture nonnull readonly %result_value2.i) #11
  %result_value3.i.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i6.i, i64 0, i32 0
  %result_value3.i.sroa.0.0.copyload = load i8*, i8** %result_value3.i.sroa.0.0..sroa_idx, align 8
  %result_value3.i.sroa.4.0..sroa_idx290 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i6.i, i64 0, i32 1
  %result_value3.i.sroa.4.0.copyload = load i64, i64* %result_value3.i.sroa.4.0..sroa_idx290, align 8
  %result_value3.i.sroa.5.0..sroa_idx292 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i6.i, i64 0, i32 2
  %result_value3.i.sroa.5.0.copyload = load i64, i64* %result_value3.i.sroa.5.0..sroa_idx292, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #11
  %load_str_to_stack.i7.i.elt91 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value2.i, i64 0, i32 2
  %load_str_to_stack.i7.i.unpack92 = load i64, i64* %load_str_to_stack.i7.i.elt91, align 8
  %is_big_str.i9.i = icmp sgt i64 %load_str_to_stack.i7.i.unpack92, 0
  br i1 %is_big_str.i9.i, label %modify_rc.i14.i, label %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit

modify_rc.i14.i:                                  ; preds = %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i
  %call_builtin.i10.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value2.i) #11
  %get_rc_ptr.i12.i = getelementptr inbounds i8, i8* %call_builtin.i10.i, i64 -8
  %201 = bitcast i8* %get_rc_ptr.i12.i to i64*
  %202 = load i64, i64* %201, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %202, 0
  br i1 %.not.i.i.i.i13.i, label %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit, label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modify_rc.i14.i
  %203 = add i64 %202, -1
  store i64 %203, i64* %201, align 8
  %204 = icmp eq i64 %202, -9223372036854775808
  br i1 %204, label %Then1.i.i.i.i16.i, label %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i12.i, i32 8) #11
  br label %Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit

Arg_448_3d1fdfde9c1ca4d3ec90c1bfcd573cca5e880c9b01ad24ab5d31bc4daae72fc.exit: ; preds = %modify_rc.i14.i, %Then.i.i.i.i15.i, %Then1.i.i.i.i16.i, %Arg_formatError_7bbcb7b275064b16bbb19257ba292ca859c5a4baf22bb33ecf68fb2ee42827.exit.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  %tag_alloca9 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @"#UserApp_patchJump_a8395ed6274ac80f31cda02a1978e69ee977a6ea011ce8eedb84a7acc8eac"(i64 %targetLocation, i8 %op.0.2.val, { [0 x i64], [1 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %const_str_store = alloca %str.RocStr, align 8
  %eq_u8 = icmp eq i8 %op.0.2.val, 4
  br i1 %eq_u8, label %then_block, label %else_block

then_block:                                       ; preds = %entry
  %tag_alloca = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %1 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 0
  store i64 %targetLocation, i64* %1, align 8
  %tag_id_ptr1 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 4, i8* %tag_id_ptr1, align 8
  %2 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %0 to i8*
  %3 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %2, i8* noundef nonnull align 8 dereferenceable(16) %3, i64 16, i1 false)
  ret void

else_block:                                       ; preds = %entry
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* inttoptr (i64 7162256618223267401 to i8*), i8** %const_str_store.repack, align 8
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 8079581346926305396, i64* %const_str_store.repack2, align 8
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 -7782220154344868767, i64* %const_str_store.repack3, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 1)
  unreachable
}

; Function Attrs: nounwind
define internal fastcc void @List_iterHelp_475c77e73ff7e6e34e2c21a314b0e09e66b9a3856a1d0c5c34643d926(%list.RocList %"9", { [0 x i64], [8 x i64], i8, [7 x i8] }* nocapture readonly %"10", { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* nocapture readonly %"11", i64 %"13", { [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field.i.i145 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i71 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i40 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %struct_field.i188 = alloca %str.RocStr, align 8
  %struct_field.i177 = alloca %str.RocStr, align 8
  %struct_field.i165 = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %load_element = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %get_opaque_data_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1
  %1 = bitcast { [0 x i64], [8 x i64], i8, [7 x i8] }* %load_element to i8*
  %2 = bitcast [9 x i64]* %get_opaque_data_ptr to i8*
  %read_list_ptr.i = extractvalue %list.RocList %"9", 0
  %cast_basic_basic.i = bitcast i8* %read_list_ptr.i to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %3 = bitcast %str.RocStr* %struct_field.i to i8*
  %struct_field.i.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 0
  %struct_field.i.repack6 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 1
  %struct_field.i.repack8 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %4 = bitcast %str.RocStr* %struct_field.i165 to i8*
  %5 = bitcast { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11" to i8*
  %load_str_to_stack.i.i166.elt17 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i165, i64 0, i32 2
  %struct_field1.i.sroa.0.0..sroa_idx = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 0, i32 0
  %struct_field1.i.sroa.4.0..sroa_idx186 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 0, i32 1
  %struct_field1.i.sroa.5.0..sroa_idx188 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 0, i32 2
  %struct_field1.i.sroa.6.0..sroa_idx190 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 0, i32 0
  %struct_field1.i.sroa.7194.0..sroa_idx195 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 0, i32 2
  %struct_field1.i.sroa.8.0..sroa_idx197 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 1, i32 0
  %struct_field1.i.sroa.9201.0..sroa_idx202 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 1, i32 2
  %struct_field1.i.sroa.10.0..sroa_idx204 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 2, i32 0
  %struct_field1.i.sroa.11208.0..sroa_idx209 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 2, i32 2
  %6 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i40 to i8*
  %load_str_to_stack.i.elt7.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i40, i64 0, i32 2
  %lt_uint.i284.not = icmp eq i64 %"13", 0
  br i1 %lt_uint.i284.not, label %else_block, label %then_block

then_block:                                       ; preds = %entry, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit
  %joinpointarg3286 = phi i64 [ %98, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ], [ 0, %entry ]
  %joinpointarg1285 = phi { [0 x i64], [8 x i64], i8, [7 x i8] }* [ %load_element, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ], [ %"10", %entry ]
  %list_get_load_element.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %joinpointarg3286, i32 0, i32 0
  %list_get_load_element.unpack.unpack.i = load i8*, i8** %list_get_load_element.unpack.elt.i, align 8
  %7 = insertvalue %str.RocStr undef, i8* %list_get_load_element.unpack.unpack.i, 0
  %list_get_load_element.unpack.elt4.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %joinpointarg3286, i32 0, i32 1
  %list_get_load_element.unpack.unpack5.i = load i64, i64* %list_get_load_element.unpack.elt4.i, align 8
  %8 = insertvalue %str.RocStr %7, i64 %list_get_load_element.unpack.unpack5.i, 1
  %list_get_load_element.unpack.elt6.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %joinpointarg3286, i32 0, i32 2
  %list_get_load_element.unpack.unpack7.i = load i64, i64* %list_get_load_element.unpack.elt6.i, align 8
  %list_get_load_element.unpack8.i = insertvalue %str.RocStr %8, i64 %list_get_load_element.unpack.unpack7.i, 2
  %9 = insertvalue { %str.RocStr, { [0 x i64], [12 x i64] }* } undef, %str.RocStr %list_get_load_element.unpack8.i, 0
  %list_get_load_element.elt1.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %joinpointarg3286, i32 1
  %list_get_load_element.unpack2.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %list_get_load_element.elt1.i, align 8
  %list_get_load_element3.i = insertvalue { %str.RocStr, { [0 x i64], [12 x i64] }* } %9, { [0 x i64], [12 x i64] }* %list_get_load_element.unpack2.i, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  store i8* %list_get_load_element.unpack.unpack.i, i8** %struct_field.i.repack, align 8
  store i64 %list_get_load_element.unpack.unpack5.i, i64* %struct_field.i.repack6, align 8
  store i64 %list_get_load_element.unpack.unpack7.i, i64* %struct_field.i.repack8, align 8
  %is_big_str.i.i = icmp sgt i64 %list_get_load_element.unpack.unpack7.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#inc_4.exit.i"

modify_rc.i.i:                                    ; preds = %then_block
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %10 = bitcast i8* %get_rc_ptr.i.i to i64*
  %11 = load i64, i64* %10, align 8
  %.not.i.i.i = icmp eq i64 %11, 0
  br i1 %.not.i.i.i, label %"#Attr_#inc_4.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modify_rc.i.i
  %12 = add nsw i64 %11, 1
  store i64 %12, i64* %10, align 8
  br label %"#Attr_#inc_4.exit.i"

"#Attr_#inc_4.exit.i":                            ; preds = %Then.i.i.i, %modify_rc.i.i, %then_block
  %to_int1.i.i = ptrtoint { [0 x i64], [12 x i64] }* %list_get_load_element.unpack2.i to i64
  %masked.i.i = and i64 %to_int1.i.i, 7
  %cast_to_i8_ptr.i.i = bitcast { [0 x i64], [12 x i64] }* %list_get_load_element.unpack2.i to i8*
  %get_rc_ptr.i2.i.idx = sub nuw nsw i64 -8, %masked.i.i
  %get_rc_ptr.i2.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i, i64 %get_rc_ptr.i2.i.idx
  %13 = bitcast i8* %get_rc_ptr.i2.i to i64*
  %14 = load i64, i64* %13, align 8
  %.not.i.i3.i = icmp eq i64 %14, 0
  br i1 %.not.i.i3.i, label %"#Attr_#inc_14.exit", label %Then.i.i4.i

Then.i.i4.i:                                      ; preds = %"#Attr_#inc_4.exit.i"
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %"#Attr_#inc_14.exit"

"#Attr_#inc_14.exit":                             ; preds = %"#Attr_#inc_4.exit.i", %Then.i.i4.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false) #11
  %load_str_to_stack.i.i166.unpack18 = load i64, i64* %load_str_to_stack.i.i166.elt17, align 8
  %is_big_str.i.i168 = icmp sgt i64 %load_str_to_stack.i.i166.unpack18, 0
  br i1 %is_big_str.i.i168, label %modify_rc.i.i173, label %"#Attr_#inc_15.exit"

modify_rc.i.i173:                                 ; preds = %"#Attr_#inc_14.exit"
  %call_builtin.i.i169 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i165) #11
  %get_rc_ptr.i.i171 = getelementptr inbounds i8, i8* %call_builtin.i.i169, i64 -8
  %16 = bitcast i8* %get_rc_ptr.i.i171 to i64*
  %17 = load i64, i64* %16, align 8
  %.not.i.i.i172 = icmp eq i64 %17, 0
  br i1 %.not.i.i.i172, label %"#Attr_#inc_15.exit", label %Then.i.i.i174

Then.i.i.i174:                                    ; preds = %modify_rc.i.i173
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8
  br label %"#Attr_#inc_15.exit"

"#Attr_#inc_15.exit":                             ; preds = %"#Attr_#inc_14.exit", %modify_rc.i.i173, %Then.i.i.i174
  %struct_field1.i.sroa.0.0.copyload = load i8*, i8** %struct_field1.i.sroa.0.0..sroa_idx, align 8
  %struct_field1.i.sroa.4.0.copyload = load i64, i64* %struct_field1.i.sroa.4.0..sroa_idx186, align 8
  %struct_field1.i.sroa.5.0.copyload = load i64, i64* %struct_field1.i.sroa.5.0..sroa_idx188, align 8
  %struct_field1.i.sroa.6.0.copyload = load i8*, i8** %struct_field1.i.sroa.6.0..sroa_idx190, align 8
  %struct_field1.i.sroa.7194.0.copyload = load i64, i64* %struct_field1.i.sroa.7194.0..sroa_idx195, align 8
  %struct_field1.i.sroa.8.0.copyload = load i8*, i8** %struct_field1.i.sroa.8.0..sroa_idx197, align 8
  %struct_field1.i.sroa.9201.0.copyload = load i64, i64* %struct_field1.i.sroa.9201.0..sroa_idx202, align 8
  %struct_field1.i.sroa.10.0.copyload = load i8*, i8** %struct_field1.i.sroa.10.0..sroa_idx204, align 8
  %struct_field1.i.sroa.11208.0.copyload = load i64, i64* %struct_field1.i.sroa.11208.0..sroa_idx209, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %"cap > 0.not.i.i43" = icmp eq i64 %struct_field1.i.sroa.5.0.copyload, 0
  br i1 %"cap > 0.not.i.i43", label %"#Attr_#inc_17.exit.i", label %modification_list_block.i.i46

modification_list_block.i.i46:                    ; preds = %"#Attr_#inc_15.exit"
  %cast_basic_basic.i.i44 = bitcast i8* %struct_field1.i.sroa.0.0.copyload to %str.RocStr*
  %bounds_check.not.i.i45 = icmp eq i64 %struct_field1.i.sroa.4.0.copyload, 0
  br i1 %bounds_check.not.i.i45, label %after_loop.i.i58, label %loop.i.i51

loop.i.i51:                                       ; preds = %modification_list_block.i.i46, %"#Attr_#inc_4.exit.i.i"
  %next_index10.i.i = phi i64 [ %next_index.i.i48, %"#Attr_#inc_4.exit.i.i" ], [ 0, %modification_list_block.i.i46 ]
  %next_index.i.i48 = add nuw i64 %next_index10.i.i, 1
  %load_index.i.i49 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i44, i64 %next_index10.i.i
  %19 = bitcast %str.RocStr* %load_index.i.i49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8* noundef nonnull align 8 dereferenceable(24) %19, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i = load i64, i64* %load_str_to_stack.i.elt7.i.i, align 8
  %is_big_str.i.i.i50 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i, 0
  br i1 %is_big_str.i.i.i50, label %modify_rc.i.i.i53, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i53:                                ; preds = %loop.i.i51
  %call_builtin.i.i.i52 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i40) #11
  %get_rc_ptr.i.i33.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i52, i64 -8
  %20 = bitcast i8* %get_rc_ptr.i.i33.i to i64*
  %21 = load i64, i64* %20, align 8
  %.not.i.i2.i.i = icmp eq i64 %21, 0
  br i1 %.not.i.i2.i.i, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i34.i

Then.i.i.i34.i:                                   ; preds = %modify_rc.i.i.i53
  %22 = add nsw i64 %21, 1
  store i64 %22, i64* %20, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i34.i, %modify_rc.i.i.i53, %loop.i.i51
  %exitcond.not.i54 = icmp eq i64 %next_index.i.i48, %struct_field1.i.sroa.4.0.copyload
  br i1 %exitcond.not.i54, label %after_loop.i.i58, label %loop.i.i51

after_loop.i.i58:                                 ; preds = %"#Attr_#inc_4.exit.i.i", %modification_list_block.i.i46
  %23 = ptrtoint i8* %struct_field1.i.sroa.0.0.copyload to i64
  %24 = shl i64 %struct_field1.i.sroa.5.0.copyload, 1
  %.not.i.i.i35.i = icmp slt i64 %struct_field1.i.sroa.5.0.copyload, 0
  %25 = select i1 %.not.i.i.i35.i, i64 %24, i64 %23
  %as_usize_ptr.i.i55 = inttoptr i64 %25 to i64*
  %get_rc_ptr.i.i56 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i55, i64 -1
  %26 = load i64, i64* %get_rc_ptr.i.i56, align 8
  %.not.i.i.i57 = icmp eq i64 %26, 0
  br i1 %.not.i.i.i57, label %"#Attr_#inc_17.exit.i", label %Then.i.i.i59

Then.i.i.i59:                                     ; preds = %after_loop.i.i58
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* %get_rc_ptr.i.i56, align 8
  br label %"#Attr_#inc_17.exit.i"

"#Attr_#inc_17.exit.i":                           ; preds = %Then.i.i.i59, %after_loop.i.i58, %"#Attr_#inc_15.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  %"cap > 0.i.i.not.i62" = icmp eq i64 %struct_field1.i.sroa.7194.0.copyload, 0
  br i1 %"cap > 0.i.i.not.i62", label %"#Attr_#inc_9.exit.i.i", label %modification_list_block.i.i.i69

modification_list_block.i.i.i69:                  ; preds = %"#Attr_#inc_17.exit.i"
  %28 = ptrtoint i8* %struct_field1.i.sroa.6.0.copyload to i64
  %29 = shl i64 %struct_field1.i.sroa.7194.0.copyload, 1
  %.not.i.i.i.i.i65 = icmp slt i64 %struct_field1.i.sroa.7194.0.copyload, 0
  %30 = select i1 %.not.i.i.i.i.i65, i64 %29, i64 %28
  %as_usize_ptr.i.i.i66 = inttoptr i64 %30 to i64*
  %get_rc_ptr.i.i.i67 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i66, i64 -1
  %31 = load i64, i64* %get_rc_ptr.i.i.i67, align 8
  %.not.i.i.i.i68 = icmp eq i64 %31, 0
  br i1 %.not.i.i.i.i68, label %"#Attr_#inc_9.exit.i.i", label %Then.i.i.i.i70

Then.i.i.i.i70:                                   ; preds = %modification_list_block.i.i.i69
  %32 = add nsw i64 %31, 1
  store i64 %32, i64* %get_rc_ptr.i.i.i67, align 8
  br label %"#Attr_#inc_9.exit.i.i"

"#Attr_#inc_9.exit.i.i":                          ; preds = %Then.i.i.i.i70, %modification_list_block.i.i.i69, %"#Attr_#inc_17.exit.i"
  %"cap > 0.i18.i.not.i" = icmp eq i64 %struct_field1.i.sroa.9201.0.copyload, 0
  br i1 %"cap > 0.i18.i.not.i", label %"#Attr_#inc_10.exit.i.i", label %modification_list_block.i27.i.i

modification_list_block.i27.i.i:                  ; preds = %"#Attr_#inc_9.exit.i.i"
  %33 = ptrtoint i8* %struct_field1.i.sroa.8.0.copyload to i64
  %34 = shl i64 %struct_field1.i.sroa.9201.0.copyload, 1
  %.not.i.i.i23.i.i = icmp slt i64 %struct_field1.i.sroa.9201.0.copyload, 0
  %35 = select i1 %.not.i.i.i23.i.i, i64 %34, i64 %33
  %as_usize_ptr.i24.i.i = inttoptr i64 %35 to i64*
  %get_rc_ptr.i25.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i, i64 -1
  %36 = load i64, i64* %get_rc_ptr.i25.i.i, align 8
  %.not.i.i26.i.i = icmp eq i64 %36, 0
  br i1 %.not.i.i26.i.i, label %"#Attr_#inc_10.exit.i.i", label %Then.i.i28.i.i

Then.i.i28.i.i:                                   ; preds = %modification_list_block.i27.i.i
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* %get_rc_ptr.i25.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i"

"#Attr_#inc_10.exit.i.i":                         ; preds = %Then.i.i28.i.i, %modification_list_block.i27.i.i, %"#Attr_#inc_9.exit.i.i"
  %"cap > 0.i5.i.not.i" = icmp eq i64 %struct_field1.i.sroa.11208.0.copyload, 0
  br i1 %"cap > 0.i5.i.not.i", label %"#Attr_#inc_16.exit", label %modification_list_block.i14.i.i

modification_list_block.i14.i.i:                  ; preds = %"#Attr_#inc_10.exit.i.i"
  %38 = ptrtoint i8* %struct_field1.i.sroa.10.0.copyload to i64
  %39 = shl i64 %struct_field1.i.sroa.11208.0.copyload, 1
  %.not.i.i.i10.i.i = icmp slt i64 %struct_field1.i.sroa.11208.0.copyload, 0
  %40 = select i1 %.not.i.i.i10.i.i, i64 %39, i64 %38
  %as_usize_ptr.i11.i.i = inttoptr i64 %40 to i64*
  %get_rc_ptr.i12.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i, i64 -1
  %41 = load i64, i64* %get_rc_ptr.i12.i.i, align 8
  %.not.i.i13.i.i = icmp eq i64 %41, 0
  br i1 %.not.i.i13.i.i, label %"#Attr_#inc_16.exit", label %Then.i.i15.i.i

Then.i.i15.i.i:                                   ; preds = %modification_list_block.i14.i.i
  %42 = add nsw i64 %41, 1
  store i64 %42, i64* %get_rc_ptr.i12.i.i, align 8
  br label %"#Attr_#inc_16.exit"

"#Attr_#inc_16.exit":                             ; preds = %"#Attr_#inc_10.exit.i.i", %modification_list_block.i14.i.i, %Then.i.i15.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  call fastcc void @Arg_365_6c94439abdaea430396893132b7081a321bebeec28b791482b74cab7e6c1ab({ [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1285, { %str.RocStr, { [0 x i64], [12 x i64] }* } %list_get_load_element3.i, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", { [0 x i64], [9 x i64], i8, [7 x i8] }* nonnull %result_value)
  %load_tag_id = load i8, i8* %tag_id_ptr, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit, label %else_block8

common.ret:                                       ; preds = %"#Attr_#dec_19.exit", %"#Attr_#dec_19.exit184"
  %tag_alloca.sink293 = phi { [0 x i64], [9 x i64], i8, [7 x i8] }* [ %tag_alloca, %"#Attr_#dec_19.exit" ], [ %tag_alloca19, %"#Attr_#dec_19.exit184" ]
  %struct_alloca.sink = phi { { [0 x i64], [8 x i64], i8, [7 x i8] } }* [ %struct_alloca, %"#Attr_#dec_19.exit" ], [ %struct_alloca18, %"#Attr_#dec_19.exit184" ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_19.exit" ], [ 1, %"#Attr_#dec_19.exit184" ]
  %data_buffer = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca.sink293, i64 0, i32 1
  %43 = bitcast [9 x i64]* %data_buffer to i8*
  %44 = bitcast { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %43, i8* noundef nonnull align 8 dereferenceable(72) %44, i64 72, i1 false)
  %tag_id_ptr15 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca.sink293, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr15, align 8
  %45 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %0 to i8*
  %46 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca.sink293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %45, i8* noundef nonnull align 8 dereferenceable(80) %46, i64 80, i1 false)
  ret void

else_block:                                       ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit, %entry
  %joinpointarg1.lcssa = phi { [0 x i64], [8 x i64], i8, [7 x i8] }* [ %"10", %entry ], [ %load_element, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %47 = bitcast %str.RocStr* %struct_field.i188 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %47, i8* noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false) #11
  %load_str_to_stack.i.i190.elt3 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i188, i64 0, i32 2
  %load_str_to_stack.i.i190.unpack4 = load i64, i64* %load_str_to_stack.i.i190.elt3, align 8
  %is_big_str.i.i192 = icmp sgt i64 %load_str_to_stack.i.i190.unpack4, 0
  br i1 %is_big_str.i.i192, label %modify_rc.i.i197, label %"#Attr_#dec_15.exit202"

modify_rc.i.i197:                                 ; preds = %else_block
  %call_builtin.i.i193 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i188) #11
  %get_rc_ptr.i.i195 = getelementptr inbounds i8, i8* %call_builtin.i.i193, i64 -8
  %48 = bitcast i8* %get_rc_ptr.i.i195 to i64*
  %49 = load i64, i64* %48, align 8
  %.not.i.i.i.i.i196 = icmp eq i64 %49, 0
  br i1 %.not.i.i.i.i.i196, label %"#Attr_#dec_15.exit202", label %Then.i.i.i.i.i198

Then.i.i.i.i.i198:                                ; preds = %modify_rc.i.i197
  %50 = add i64 %49, -1
  store i64 %50, i64* %48, align 8
  %51 = icmp eq i64 %49, -9223372036854775808
  br i1 %51, label %Then1.i.i.i.i.i199, label %"#Attr_#dec_15.exit202"

Then1.i.i.i.i.i199:                               ; preds = %Then.i.i.i.i.i198
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i195, i32 8) #11
  br label %"#Attr_#dec_15.exit202"

"#Attr_#dec_15.exit202":                          ; preds = %modify_rc.i.i197, %Then.i.i.i.i.i198, %Then1.i.i.i.i.i199, %else_block
  %struct_field1.i187.sroa.0.0.copyload = load i8*, i8** %struct_field1.i.sroa.0.0..sroa_idx, align 8
  %struct_field1.i187.sroa.4.0.copyload = load i64, i64* %struct_field1.i.sroa.4.0..sroa_idx186, align 8
  %struct_field1.i187.sroa.5.0.copyload = load i64, i64* %struct_field1.i.sroa.5.0..sroa_idx188, align 8
  %struct_field1.i187.sroa.6.0.copyload = load i8*, i8** %struct_field1.i.sroa.6.0..sroa_idx190, align 8
  %struct_field1.i187.sroa.7250.0.copyload = load i64, i64* %struct_field1.i.sroa.7194.0..sroa_idx195, align 8
  %struct_field1.i187.sroa.8.0.copyload = load i8*, i8** %struct_field1.i.sroa.8.0..sroa_idx197, align 8
  %struct_field1.i187.sroa.9257.0.copyload = load i64, i64* %struct_field1.i.sroa.9201.0..sroa_idx202, align 8
  %struct_field1.i187.sroa.10.0.copyload = load i8*, i8** %struct_field1.i.sroa.10.0..sroa_idx204, align 8
  %struct_field1.i187.sroa.11264.0.copyload = load i64, i64* %struct_field1.i.sroa.11208.0..sroa_idx209, align 8
  %52 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  %"cap > 0.not.i.i78" = icmp eq i64 %struct_field1.i187.sroa.5.0.copyload, 0
  br i1 %"cap > 0.not.i.i78", label %"#Attr_#dec_17.exit.i116", label %modification_list_block.i52.i81

modification_list_block.i52.i81:                  ; preds = %"#Attr_#dec_15.exit202"
  %cast_basic_basic.i.i79 = bitcast i8* %struct_field1.i187.sroa.0.0.copyload to %str.RocStr*
  %bounds_check.not.i.i80 = icmp eq i64 %struct_field1.i187.sroa.4.0.copyload, 0
  br i1 %bounds_check.not.i.i80, label %after_loop.i.i102, label %loop.preheader.i.i83

loop.preheader.i.i83:                             ; preds = %modification_list_block.i52.i81
  %load_str_to_stack.i.elt9.i.i82 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i71, i64 0, i32 2
  br label %loop.i.i89

loop.i.i89:                                       ; preds = %"#Attr_#dec_4.exit.i.i97", %loop.preheader.i.i83
  %next_index12.i.i84 = phi i64 [ 0, %loop.preheader.i.i83 ], [ %next_index.i.i85, %"#Attr_#dec_4.exit.i.i97" ]
  %next_index.i.i85 = add nuw i64 %next_index12.i.i84, 1
  %load_index.i.i86 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i79, i64 %next_index12.i.i84
  %53 = bitcast %str.RocStr* %load_index.i.i86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %52, i8* noundef nonnull align 8 dereferenceable(24) %53, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i87 = load i64, i64* %load_str_to_stack.i.elt9.i.i82, align 8
  %is_big_str.i.i.i88 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i87, 0
  br i1 %is_big_str.i.i.i88, label %modify_rc.i.i.i93, label %"#Attr_#dec_4.exit.i.i97"

modify_rc.i.i.i93:                                ; preds = %loop.i.i89
  %call_builtin.i.i.i90 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i71) #11
  %get_rc_ptr.i.i53.i91 = getelementptr inbounds i8, i8* %call_builtin.i.i.i90, i64 -8
  %54 = bitcast i8* %get_rc_ptr.i.i53.i91 to i64*
  %55 = load i64, i64* %54, align 8
  %.not.i.i.i.i.i54.i92 = icmp eq i64 %55, 0
  br i1 %.not.i.i.i.i.i54.i92, label %"#Attr_#dec_4.exit.i.i97", label %Then.i.i.i.i.i55.i94

Then.i.i.i.i.i55.i94:                             ; preds = %modify_rc.i.i.i93
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %55, -9223372036854775808
  br i1 %57, label %Then1.i.i.i.i.i56.i95, label %"#Attr_#dec_4.exit.i.i97"

Then1.i.i.i.i.i56.i95:                            ; preds = %Then.i.i.i.i.i55.i94
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i91, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i97"

"#Attr_#dec_4.exit.i.i97":                        ; preds = %Then1.i.i.i.i.i56.i95, %Then.i.i.i.i.i55.i94, %modify_rc.i.i.i93, %loop.i.i89
  %exitcond.not.i96 = icmp eq i64 %next_index.i.i85, %struct_field1.i187.sroa.4.0.copyload
  br i1 %exitcond.not.i96, label %after_loop.i.i102, label %loop.i.i89

after_loop.i.i102:                                ; preds = %"#Attr_#dec_4.exit.i.i97", %modification_list_block.i52.i81
  %58 = ptrtoint i8* %struct_field1.i187.sroa.0.0.copyload to i64
  %59 = shl i64 %struct_field1.i187.sroa.5.0.copyload, 1
  %.not.i.i.i57.i98 = icmp slt i64 %struct_field1.i187.sroa.5.0.copyload, 0
  %60 = select i1 %.not.i.i.i57.i98, i64 %59, i64 %58
  %as_usize_ptr.i58.i99 = inttoptr i64 %60 to i64*
  %get_rc_ptr.i59.i100 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i99, i64 -1
  %61 = load i64, i64* %get_rc_ptr.i59.i100, align 8
  %.not.i.i.i.i60.i101 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i60.i101, label %"#Attr_#dec_17.exit.i116", label %Then.i.i.i.i61.i103

Then.i.i.i.i61.i103:                              ; preds = %after_loop.i.i102
  %62 = add i64 %61, -1
  store i64 %62, i64* %get_rc_ptr.i59.i100, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i62.i104, label %"#Attr_#dec_17.exit.i116"

Then1.i.i.i.i62.i104:                             ; preds = %Then.i.i.i.i61.i103
  %64 = bitcast i64* %get_rc_ptr.i59.i100 to i8*
  tail call void @roc_dealloc(i8* %64, i32 8) #11
  br label %"#Attr_#dec_17.exit.i116"

"#Attr_#dec_17.exit.i116":                        ; preds = %Then1.i.i.i.i62.i104, %Then.i.i.i.i61.i103, %after_loop.i.i102, %"#Attr_#dec_15.exit202"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #11
  %"cap > 0.i.i.not.i115" = icmp eq i64 %struct_field1.i187.sroa.7250.0.copyload, 0
  br i1 %"cap > 0.i.i.not.i115", label %"#Attr_#dec_18.exit.i127", label %modification_list_block.i.i.i123

modification_list_block.i.i.i123:                 ; preds = %"#Attr_#dec_17.exit.i116"
  %65 = ptrtoint i8* %struct_field1.i187.sroa.6.0.copyload to i64
  %66 = shl i64 %struct_field1.i187.sroa.7250.0.copyload, 1
  %.not.i.i.i.i.i119 = icmp slt i64 %struct_field1.i187.sroa.7250.0.copyload, 0
  %67 = select i1 %.not.i.i.i.i.i119, i64 %66, i64 %65
  %as_usize_ptr.i.i.i120 = inttoptr i64 %67 to i64*
  %get_rc_ptr.i.i.i121 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i120, i64 -1
  %68 = load i64, i64* %get_rc_ptr.i.i.i121, align 8
  %.not.i.i.i.i.i.i122 = icmp eq i64 %68, 0
  br i1 %.not.i.i.i.i.i.i122, label %"#Attr_#dec_18.exit.i127", label %Then.i.i.i.i.i.i124

Then.i.i.i.i.i.i124:                              ; preds = %modification_list_block.i.i.i123
  %69 = add i64 %68, -1
  store i64 %69, i64* %get_rc_ptr.i.i.i121, align 8
  %70 = icmp eq i64 %68, -9223372036854775808
  br i1 %70, label %Then1.i.i.i.i.i.i125, label %"#Attr_#dec_18.exit.i127"

Then1.i.i.i.i.i.i125:                             ; preds = %Then.i.i.i.i.i.i124
  %71 = bitcast i64* %get_rc_ptr.i.i.i121 to i8*
  tail call void @roc_dealloc(i8* %71, i32 8) #11
  br label %"#Attr_#dec_18.exit.i127"

"#Attr_#dec_18.exit.i127":                        ; preds = %Then1.i.i.i.i.i.i125, %Then.i.i.i.i.i.i124, %modification_list_block.i.i.i123, %"#Attr_#dec_17.exit.i116"
  %"cap > 0.i5.not.i126" = icmp eq i64 %struct_field1.i187.sroa.9257.0.copyload, 0
  br i1 %"cap > 0.i5.not.i126", label %"#Attr_#dec_10.exit.i136", label %modification_list_block.i14.i132

modification_list_block.i14.i132:                 ; preds = %"#Attr_#dec_18.exit.i127"
  %72 = ptrtoint i8* %struct_field1.i187.sroa.8.0.copyload to i64
  %73 = shl i64 %struct_field1.i187.sroa.9257.0.copyload, 1
  %.not.i.i.i10.i128 = icmp slt i64 %struct_field1.i187.sroa.9257.0.copyload, 0
  %74 = select i1 %.not.i.i.i10.i128, i64 %73, i64 %72
  %as_usize_ptr.i11.i129 = inttoptr i64 %74 to i64*
  %get_rc_ptr.i12.i130 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i129, i64 -1
  %75 = load i64, i64* %get_rc_ptr.i12.i130, align 8
  %.not.i.i.i.i13.i131 = icmp eq i64 %75, 0
  br i1 %.not.i.i.i.i13.i131, label %"#Attr_#dec_10.exit.i136", label %Then.i.i.i.i15.i133

Then.i.i.i.i15.i133:                              ; preds = %modification_list_block.i14.i132
  %76 = add i64 %75, -1
  store i64 %76, i64* %get_rc_ptr.i12.i130, align 8
  %77 = icmp eq i64 %75, -9223372036854775808
  br i1 %77, label %Then1.i.i.i.i16.i134, label %"#Attr_#dec_10.exit.i136"

Then1.i.i.i.i16.i134:                             ; preds = %Then.i.i.i.i15.i133
  %78 = bitcast i64* %get_rc_ptr.i12.i130 to i8*
  tail call void @roc_dealloc(i8* %78, i32 8) #11
  br label %"#Attr_#dec_10.exit.i136"

"#Attr_#dec_10.exit.i136":                        ; preds = %Then1.i.i.i.i16.i134, %Then.i.i.i.i15.i133, %modification_list_block.i14.i132, %"#Attr_#dec_18.exit.i127"
  %"cap > 0.i.not.i135" = icmp eq i64 %struct_field1.i187.sroa.11264.0.copyload, 0
  br i1 %"cap > 0.i.not.i135", label %"#Attr_#dec_16.exit144", label %modification_list_block.i.i141

modification_list_block.i.i141:                   ; preds = %"#Attr_#dec_10.exit.i136"
  %79 = ptrtoint i8* %struct_field1.i187.sroa.10.0.copyload to i64
  %80 = shl i64 %struct_field1.i187.sroa.11264.0.copyload, 1
  %.not.i.i.i.i137 = icmp slt i64 %struct_field1.i187.sroa.11264.0.copyload, 0
  %81 = select i1 %.not.i.i.i.i137, i64 %80, i64 %79
  %as_usize_ptr.i.i138 = inttoptr i64 %81 to i64*
  %get_rc_ptr.i.i139 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i138, i64 -1
  %82 = load i64, i64* %get_rc_ptr.i.i139, align 8
  %.not.i.i.i.i2.i140 = icmp eq i64 %82, 0
  br i1 %.not.i.i.i.i2.i140, label %"#Attr_#dec_16.exit144", label %Then.i.i.i.i.i142

Then.i.i.i.i.i142:                                ; preds = %modification_list_block.i.i141
  %83 = add i64 %82, -1
  store i64 %83, i64* %get_rc_ptr.i.i139, align 8
  %84 = icmp eq i64 %82, -9223372036854775808
  br i1 %84, label %Then1.i.i.i.i.i143, label %"#Attr_#dec_16.exit144"

Then1.i.i.i.i.i143:                               ; preds = %Then.i.i.i.i.i142
  %85 = bitcast i64* %get_rc_ptr.i.i139 to i8*
  tail call void @roc_dealloc(i8* %85, i32 8) #11
  br label %"#Attr_#dec_16.exit144"

"#Attr_#dec_16.exit144":                          ; preds = %"#Attr_#dec_10.exit.i136", %modification_list_block.i.i141, %Then.i.i.i.i.i142, %Then1.i.i.i.i.i143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47)
  %list_capacity_or_ref_ptr.i146 = extractvalue %list.RocList %"9", 2
  %"cap > 0.not.i147" = icmp eq i64 %list_capacity_or_ref_ptr.i146, 0
  br i1 %"cap > 0.not.i147", label %"#Attr_#dec_19.exit184", label %modification_list_block.i152

modification_list_block.i152:                     ; preds = %"#Attr_#dec_16.exit144"
  %list_len.i150 = extractvalue %list.RocList %"9", 1
  %bounds_check.not.i151 = icmp eq i64 %list_len.i150, 0
  br i1 %bounds_check.not.i151, label %after_loop.i181, label %loop.preheader.i156

loop.preheader.i156:                              ; preds = %modification_list_block.i152
  %86 = bitcast %str.RocStr* %struct_field.i.i145 to i8*
  %struct_field.i.repack.i153 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i145, i64 0, i32 0
  %struct_field.i.repack15.i154 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i145, i64 0, i32 1
  %struct_field.i.repack17.i155 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i145, i64 0, i32 2
  br label %loop.i168

loop.i168:                                        ; preds = %"#Attr_#dec_14.exit.i176", %loop.preheader.i156
  %index.i157 = phi i64 [ 0, %loop.preheader.i156 ], [ %next_index.i158, %"#Attr_#dec_14.exit.i176" ]
  %next_index.i158 = add nuw i64 %index.i157, 1
  %incrementing_element_loop_load.unpack.elt.i159 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i157, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i160 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i159, align 8
  %incrementing_element_loop_load.unpack.elt10.i161 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i157, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11.i162 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i161, align 8
  %incrementing_element_loop_load.unpack.elt12.i163 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i157, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13.i164 = load i64, i64* %incrementing_element_loop_load.unpack.elt12.i163, align 8
  %incrementing_element_loop_load.elt7.i165 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i157, i32 1
  %incrementing_element_loop_load.unpack8.i166 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt7.i165, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i160, i8** %struct_field.i.repack.i153, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i162, i64* %struct_field.i.repack15.i154, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13.i164, i64* %struct_field.i.repack17.i155, align 8
  %is_big_str.i.i.i167 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13.i164, 0
  br i1 %is_big_str.i.i.i167, label %modify_rc.i.i.i172, label %"#Attr_#dec_14.exit.i176"

modify_rc.i.i.i172:                               ; preds = %loop.i168
  %call_builtin.i.i.i169 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i145) #11
  %get_rc_ptr.i.i.i170 = getelementptr inbounds i8, i8* %call_builtin.i.i.i169, i64 -8
  %87 = bitcast i8* %get_rc_ptr.i.i.i170 to i64*
  %88 = load i64, i64* %87, align 8
  %.not.i.i.i.i.i.i171 = icmp eq i64 %88, 0
  br i1 %.not.i.i.i.i.i.i171, label %"#Attr_#dec_14.exit.i176", label %Then.i.i.i.i.i.i173

Then.i.i.i.i.i.i173:                              ; preds = %modify_rc.i.i.i172
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = icmp eq i64 %88, -9223372036854775808
  br i1 %90, label %Then1.i.i.i.i.i.i174, label %"#Attr_#dec_14.exit.i176"

Then1.i.i.i.i.i.i174:                             ; preds = %Then.i.i.i.i.i.i173
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i170, i32 8) #11
  br label %"#Attr_#dec_14.exit.i176"

"#Attr_#dec_14.exit.i176":                        ; preds = %Then1.i.i.i.i.i.i174, %Then.i.i.i.i.i.i173, %modify_rc.i.i.i172, %loop.i168
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack8.i166) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %exitcond.not = icmp eq i64 %next_index.i158, %list_len.i150
  br i1 %exitcond.not, label %after_loop.i181, label %loop.i168

after_loop.i181:                                  ; preds = %"#Attr_#dec_14.exit.i176", %modification_list_block.i152
  %91 = ptrtoint i8* %read_list_ptr.i to i64
  %92 = shl i64 %list_capacity_or_ref_ptr.i146, 1
  %.not.i.i.i177 = icmp slt i64 %list_capacity_or_ref_ptr.i146, 0
  %93 = select i1 %.not.i.i.i177, i64 %92, i64 %91
  %as_usize_ptr.i178 = inttoptr i64 %93 to i64*
  %get_rc_ptr.i179 = getelementptr inbounds i64, i64* %as_usize_ptr.i178, i64 -1
  %94 = load i64, i64* %get_rc_ptr.i179, align 8
  %.not.i.i.i.i180 = icmp eq i64 %94, 0
  br i1 %.not.i.i.i.i180, label %"#Attr_#dec_19.exit184", label %Then.i.i.i.i182

Then.i.i.i.i182:                                  ; preds = %after_loop.i181
  %95 = add i64 %94, -1
  store i64 %95, i64* %get_rc_ptr.i179, align 8
  %96 = icmp eq i64 %94, -9223372036854775808
  br i1 %96, label %Then1.i.i.i.i183, label %"#Attr_#dec_19.exit184"

Then1.i.i.i.i183:                                 ; preds = %Then.i.i.i.i182
  %97 = bitcast i64* %get_rc_ptr.i179 to i8*
  tail call void @roc_dealloc(i8* %97, i32 8) #11
  br label %"#Attr_#dec_19.exit184"

"#Attr_#dec_19.exit184":                          ; preds = %"#Attr_#dec_16.exit144", %after_loop.i181, %Then.i.i.i.i182, %Then1.i.i.i.i183
  %load_tag_to_put_in_struct16.unpack24.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct16.unpack24.unpack = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt, align 8
  %load_tag_to_put_in_struct16.unpack24.elt30 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct16.unpack24.unpack31 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt30, align 8
  %load_tag_to_put_in_struct16.unpack24.elt32 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct16.unpack24.unpack33 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt32, align 8
  %load_tag_to_put_in_struct16.unpack24.elt34 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct16.unpack24.unpack35 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt34, align 8
  %load_tag_to_put_in_struct16.unpack24.elt36 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct16.unpack24.unpack37 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt36, align 8
  %load_tag_to_put_in_struct16.unpack24.elt38 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct16.unpack24.unpack39 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt38, align 8
  %load_tag_to_put_in_struct16.unpack24.elt40 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 6
  %load_tag_to_put_in_struct16.unpack24.unpack41 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt40, align 8
  %load_tag_to_put_in_struct16.unpack24.elt42 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 7
  %load_tag_to_put_in_struct16.unpack24.unpack43 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt42, align 8
  %load_tag_to_put_in_struct16.elt25 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 2
  %load_tag_to_put_in_struct16.unpack26 = load i8, i8* %load_tag_to_put_in_struct16.elt25, align 8
  %load_tag_to_put_in_struct16.unpack28.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct16.unpack28.unpack = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt, align 1
  %load_tag_to_put_in_struct16.unpack28.elt45 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct16.unpack28.unpack46 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt45, align 1
  %load_tag_to_put_in_struct16.unpack28.elt47 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct16.unpack28.unpack48 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt47, align 1
  %load_tag_to_put_in_struct16.unpack28.elt49 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct16.unpack28.unpack50 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt49, align 1
  %load_tag_to_put_in_struct16.unpack28.elt51 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct16.unpack28.unpack52 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt51, align 1
  %load_tag_to_put_in_struct16.unpack28.elt53 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct16.unpack28.unpack54 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt53, align 1
  %load_tag_to_put_in_struct16.unpack28.elt55 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct16.unpack28.unpack56 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt55, align 1
  %struct_alloca18 = alloca { { [0 x i64], [8 x i64], i8, [7 x i8] } }, align 8
  %.repack58.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack, i64* %.repack58.repack, align 8
  %.repack58.repack64 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack31, i64* %.repack58.repack64, align 8
  %.repack58.repack66 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack33, i64* %.repack58.repack66, align 8
  %.repack58.repack68 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack35, i64* %.repack58.repack68, align 8
  %.repack58.repack70 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack37, i64* %.repack58.repack70, align 8
  %.repack58.repack72 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack39, i64* %.repack58.repack72, align 8
  %.repack58.repack74 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 6
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack41, i64* %.repack58.repack74, align 8
  %.repack58.repack76 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 7
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack43, i64* %.repack58.repack76, align 8
  %.repack60 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 2
  store i8 %load_tag_to_put_in_struct16.unpack26, i8* %.repack60, align 8
  %.repack62.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack, i8* %.repack62.repack, align 1
  %.repack62.repack78 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack46, i8* %.repack62.repack78, align 2
  %.repack62.repack80 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack48, i8* %.repack62.repack80, align 1
  %.repack62.repack82 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack50, i8* %.repack62.repack82, align 4
  %.repack62.repack84 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack52, i8* %.repack62.repack84, align 1
  %.repack62.repack86 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack54, i8* %.repack62.repack86, align 2
  %.repack62.repack88 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack56, i8* %.repack62.repack88, align 1
  %tag_alloca19 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit: ; preds = %"#Attr_#inc_16.exit"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %1, i8* noundef nonnull align 8 dereferenceable(72) %2, i64 72, i1 false)
  %98 = add nuw i64 %joinpointarg3286, 1
  %exitcond288.not = icmp eq i64 %98, %"13"
  br i1 %exitcond288.not, label %else_block, label %then_block

else_block8:                                      ; preds = %"#Attr_#inc_16.exit"
  %99 = bitcast %str.RocStr* %struct_field.i177 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %99, i8* noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false) #11
  %load_str_to_stack.i.i179.elt22 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i177, i64 0, i32 2
  %load_str_to_stack.i.i179.unpack23 = load i64, i64* %load_str_to_stack.i.i179.elt22, align 8
  %is_big_str.i.i181 = icmp sgt i64 %load_str_to_stack.i.i179.unpack23, 0
  br i1 %is_big_str.i.i181, label %modify_rc.i.i185, label %"#Attr_#dec_15.exit"

modify_rc.i.i185:                                 ; preds = %else_block8
  %call_builtin.i.i182 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i177) #11
  %get_rc_ptr.i.i184 = getelementptr inbounds i8, i8* %call_builtin.i.i182, i64 -8
  %100 = bitcast i8* %get_rc_ptr.i.i184 to i64*
  %101 = load i64, i64* %100, align 8
  %.not.i.i.i.i.i = icmp eq i64 %101, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_15.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i185
  %102 = add i64 %101, -1
  store i64 %102, i64* %100, align 8
  %103 = icmp eq i64 %101, -9223372036854775808
  br i1 %103, label %Then1.i.i.i.i.i, label %"#Attr_#dec_15.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i184, i32 8) #11
  br label %"#Attr_#dec_15.exit"

"#Attr_#dec_15.exit":                             ; preds = %modify_rc.i.i185, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %else_block8
  %struct_field1.i176.sroa.0.0.copyload = load i8*, i8** %struct_field1.i.sroa.0.0..sroa_idx, align 8
  %struct_field1.i176.sroa.4.0.copyload = load i64, i64* %struct_field1.i.sroa.4.0..sroa_idx186, align 8
  %struct_field1.i176.sroa.5.0.copyload = load i64, i64* %struct_field1.i.sroa.5.0..sroa_idx188, align 8
  %struct_field1.i176.sroa.6.0.copyload = load i8*, i8** %struct_field1.i.sroa.6.0..sroa_idx190, align 8
  %struct_field1.i176.sroa.7222.0.copyload = load i64, i64* %struct_field1.i.sroa.7194.0..sroa_idx195, align 8
  %struct_field1.i176.sroa.8.0.copyload = load i8*, i8** %struct_field1.i.sroa.8.0..sroa_idx197, align 8
  %struct_field1.i176.sroa.9229.0.copyload = load i64, i64* %struct_field1.i.sroa.9201.0..sroa_idx202, align 8
  %struct_field1.i176.sroa.10.0.copyload = load i8*, i8** %struct_field1.i.sroa.10.0..sroa_idx204, align 8
  %struct_field1.i176.sroa.11236.0.copyload = load i64, i64* %struct_field1.i.sroa.11208.0..sroa_idx209, align 8
  %104 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field1.i176.sroa.5.0.copyload, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %"#Attr_#dec_15.exit"
  %cast_basic_basic.i.i = bitcast i8* %struct_field1.i176.sroa.0.0.copyload to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field1.i176.sroa.4.0.copyload, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %105 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %104, i8* noundef nonnull align 8 dereferenceable(24) %105, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i28 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i28, label %modify_rc.i.i.i30, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i30:                                ; preds = %loop.i.i
  %call_builtin.i.i.i29 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i29, i64 -8
  %106 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %107 = load i64, i64* %106, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %107, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i30
  %108 = add i64 %107, -1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %107, -9223372036854775808
  br i1 %109, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i30, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field1.i176.sroa.4.0.copyload
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %110 = ptrtoint i8* %struct_field1.i176.sroa.0.0.copyload to i64
  %111 = shl i64 %struct_field1.i176.sroa.5.0.copyload, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field1.i176.sroa.5.0.copyload, 0
  %112 = select i1 %.not.i.i.i57.i, i64 %111, i64 %110
  %as_usize_ptr.i58.i = inttoptr i64 %112 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %113 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %113, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %114 = add i64 %113, -1
  store i64 %114, i64* %get_rc_ptr.i59.i, align 8
  %115 = icmp eq i64 %113, -9223372036854775808
  br i1 %115, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %116 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %116, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %"#Attr_#dec_15.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #11
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.i176.sroa.7222.0.copyload, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %117 = ptrtoint i8* %struct_field1.i176.sroa.6.0.copyload to i64
  %118 = shl i64 %struct_field1.i176.sroa.7222.0.copyload, 1
  %.not.i.i.i.i.i31 = icmp slt i64 %struct_field1.i176.sroa.7222.0.copyload, 0
  %119 = select i1 %.not.i.i.i.i.i31, i64 %118, i64 %117
  %as_usize_ptr.i.i.i = inttoptr i64 %119 to i64*
  %get_rc_ptr.i.i.i32 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %120 = load i64, i64* %get_rc_ptr.i.i.i32, align 8
  %.not.i.i.i.i.i.i33 = icmp eq i64 %120, 0
  br i1 %.not.i.i.i.i.i.i33, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i34

Then.i.i.i.i.i.i34:                               ; preds = %modification_list_block.i.i.i
  %121 = add i64 %120, -1
  store i64 %121, i64* %get_rc_ptr.i.i.i32, align 8
  %122 = icmp eq i64 %120, -9223372036854775808
  br i1 %122, label %Then1.i.i.i.i.i.i35, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i35:                              ; preds = %Then.i.i.i.i.i.i34
  %123 = bitcast i64* %get_rc_ptr.i.i.i32 to i8*
  tail call void @roc_dealloc(i8* %123, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i35, %Then.i.i.i.i.i.i34, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.i176.sroa.9229.0.copyload, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %124 = ptrtoint i8* %struct_field1.i176.sroa.8.0.copyload to i64
  %125 = shl i64 %struct_field1.i176.sroa.9229.0.copyload, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.i176.sroa.9229.0.copyload, 0
  %126 = select i1 %.not.i.i.i10.i, i64 %125, i64 %124
  %as_usize_ptr.i11.i = inttoptr i64 %126 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %127 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %127, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %128 = add i64 %127, -1
  store i64 %128, i64* %get_rc_ptr.i12.i, align 8
  %129 = icmp eq i64 %127, -9223372036854775808
  br i1 %129, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %130 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %130, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.i176.sroa.11236.0.copyload, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %131 = ptrtoint i8* %struct_field1.i176.sroa.10.0.copyload to i64
  %132 = shl i64 %struct_field1.i176.sroa.11236.0.copyload, 1
  %.not.i.i.i.i36 = icmp slt i64 %struct_field1.i176.sroa.11236.0.copyload, 0
  %133 = select i1 %.not.i.i.i.i36, i64 %132, i64 %131
  %as_usize_ptr.i.i = inttoptr i64 %133 to i64*
  %get_rc_ptr.i.i37 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %134 = load i64, i64* %get_rc_ptr.i.i37, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %134, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i38

Then.i.i.i.i.i38:                                 ; preds = %modification_list_block.i.i
  %135 = add i64 %134, -1
  store i64 %135, i64* %get_rc_ptr.i.i37, align 8
  %136 = icmp eq i64 %134, -9223372036854775808
  br i1 %136, label %Then1.i.i.i.i.i39, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i39:                                ; preds = %Then.i.i.i.i.i38
  %137 = bitcast i64* %get_rc_ptr.i.i37 to i8*
  tail call void @roc_dealloc(i8* %137, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i38, %Then1.i.i.i.i.i39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99)
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %"9", 2
  %"cap > 0.not.i" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_19.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %"#Attr_#dec_16.exit"
  %list_len.i = extractvalue %list.RocList %"9", 1
  %bounds_check.not.i = icmp eq i64 %list_len.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %138 = bitcast %str.RocStr* %struct_field.i.i to i8*
  %struct_field.i.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 0
  %struct_field.i.repack15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 1
  %struct_field.i.repack17.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_14.exit.i", %loop.preheader.i
  %index.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_14.exit.i" ]
  %next_index.i = add nuw i64 %index.i, 1
  %incrementing_element_loop_load.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i, align 8
  %incrementing_element_loop_load.unpack.elt10.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11.i = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i, align 8
  %incrementing_element_loop_load.unpack.elt12.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13.i = load i64, i64* %incrementing_element_loop_load.unpack.elt12.i, align 8
  %incrementing_element_loop_load.elt7.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 1
  %incrementing_element_loop_load.unpack8.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt7.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i, i8** %struct_field.i.repack.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i, i64* %struct_field.i.repack15.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13.i, i64* %struct_field.i.repack17.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_14.exit.i"

modify_rc.i.i.i:                                  ; preds = %loop.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %139 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %140 = load i64, i64* %139, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %140, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_14.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %141 = add i64 %140, -1
  store i64 %141, i64* %139, align 8
  %142 = icmp eq i64 %140, -9223372036854775808
  br i1 %142, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_14.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %"#Attr_#dec_14.exit.i"

"#Attr_#dec_14.exit.i":                           ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modify_rc.i.i.i, %loop.i
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack8.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #11
  %exitcond287.not = icmp eq i64 %next_index.i, %list_len.i
  br i1 %exitcond287.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_14.exit.i", %modification_list_block.i
  %143 = ptrtoint i8* %read_list_ptr.i to i64
  %144 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i27 = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %145 = select i1 %.not.i.i.i27, i64 %144, i64 %143
  %as_usize_ptr.i = inttoptr i64 %145 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %146 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %146, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_19.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %after_loop.i
  %147 = add i64 %146, -1
  store i64 %147, i64* %get_rc_ptr.i, align 8
  %148 = icmp eq i64 %146, -9223372036854775808
  br i1 %148, label %Then1.i.i.i.i, label %"#Attr_#dec_19.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %149 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %149, i32 8) #11
  br label %"#Attr_#dec_19.exit"

"#Attr_#dec_19.exit":                             ; preds = %"#Attr_#dec_16.exit", %after_loop.i, %Then.i.i.i.i, %Then1.i.i.i.i
  %load_element14.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 0, i64 0
  %load_element14.sroa.0.0.copyload = load i64, i64* %load_element14.sroa.0.0..sroa_idx, align 8
  %load_element14.sroa.2.0..sroa_idx158 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 1
  %load_element14.sroa.2.0.copyload = load i64, i64* %load_element14.sroa.2.0..sroa_idx158, align 8
  %load_element14.sroa.3.0..sroa_idx159 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 2
  %load_element14.sroa.3.0.copyload = load i64, i64* %load_element14.sroa.3.0..sroa_idx159, align 8
  %load_element14.sroa.4.0..sroa_idx160 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 3
  %load_element14.sroa.4.0.copyload = load i64, i64* %load_element14.sroa.4.0..sroa_idx160, align 8
  %load_element14.sroa.5.0..sroa_idx161 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 4
  %load_element14.sroa.5.0.copyload = load i64, i64* %load_element14.sroa.5.0..sroa_idx161, align 8
  %load_element14.sroa.6.0..sroa_idx162 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 5
  %load_element14.sroa.6.0.copyload = load i64, i64* %load_element14.sroa.6.0..sroa_idx162, align 8
  %load_element14.sroa.7.0..sroa_idx163 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 6
  %load_element14.sroa.7.0.copyload = load i64, i64* %load_element14.sroa.7.0..sroa_idx163, align 8
  %load_element14.sroa.8.0..sroa_idx164 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 7
  %load_element14.sroa.8.0.copyload = load i64, i64* %load_element14.sroa.8.0..sroa_idx164, align 8
  %load_element14.sroa.9.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 8
  %load_element14.sroa.9.0..sroa_cast = bitcast i64* %load_element14.sroa.9.0..sroa_idx to i8*
  %load_element14.sroa.9.0.copyload = load i8, i8* %load_element14.sroa.9.0..sroa_cast, align 8
  %load_element14.sroa.10.0..sroa_raw_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value to i8*
  %load_element14.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 65
  %load_element14.sroa.10.0.copyload = load i8, i8* %load_element14.sroa.10.0..sroa_raw_idx, align 1
  %load_element14.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 66
  %load_element14.sroa.11.0.copyload = load i8, i8* %load_element14.sroa.11.0..sroa_raw_idx, align 2
  %load_element14.sroa.12.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 67
  %load_element14.sroa.12.0.copyload = load i8, i8* %load_element14.sroa.12.0..sroa_raw_idx, align 1
  %load_element14.sroa.13.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 68
  %load_element14.sroa.13.0.copyload = load i8, i8* %load_element14.sroa.13.0..sroa_raw_idx, align 4
  %load_element14.sroa.14.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 69
  %load_element14.sroa.14.0.copyload = load i8, i8* %load_element14.sroa.14.0..sroa_raw_idx, align 1
  %load_element14.sroa.15.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 70
  %load_element14.sroa.15.0.copyload = load i8, i8* %load_element14.sroa.15.0..sroa_raw_idx, align 2
  %load_element14.sroa.16.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 71
  %load_element14.sroa.16.0.copyload = load i8, i8* %load_element14.sroa.16.0..sroa_raw_idx, align 1
  %struct_alloca = alloca { { [0 x i64], [8 x i64], i8, [7 x i8] } }, align 8
  %.repack125.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %load_element14.sroa.0.0.copyload, i64* %.repack125.repack, align 8
  %.repack125.repack131 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %load_element14.sroa.2.0.copyload, i64* %.repack125.repack131, align 8
  %.repack125.repack133 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %load_element14.sroa.3.0.copyload, i64* %.repack125.repack133, align 8
  %.repack125.repack135 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 3
  store i64 %load_element14.sroa.4.0.copyload, i64* %.repack125.repack135, align 8
  %.repack125.repack137 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 4
  store i64 %load_element14.sroa.5.0.copyload, i64* %.repack125.repack137, align 8
  %.repack125.repack139 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 5
  store i64 %load_element14.sroa.6.0.copyload, i64* %.repack125.repack139, align 8
  %.repack125.repack141 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 6
  store i64 %load_element14.sroa.7.0.copyload, i64* %.repack125.repack141, align 8
  %.repack125.repack143 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 7
  store i64 %load_element14.sroa.8.0.copyload, i64* %.repack125.repack143, align 8
  %.repack127 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 %load_element14.sroa.9.0.copyload, i8* %.repack127, align 8
  %.repack129.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 0
  store i8 %load_element14.sroa.10.0.copyload, i8* %.repack129.repack, align 1
  %.repack129.repack145 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 1
  store i8 %load_element14.sroa.11.0.copyload, i8* %.repack129.repack145, align 2
  %.repack129.repack147 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 2
  store i8 %load_element14.sroa.12.0.copyload, i8* %.repack129.repack147, align 1
  %.repack129.repack149 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 3
  store i8 %load_element14.sroa.13.0.copyload, i8* %.repack129.repack149, align 4
  %.repack129.repack151 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 4
  store i8 %load_element14.sroa.14.0.copyload, i8* %.repack129.repack151, align 1
  %.repack129.repack153 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 5
  store i8 %load_element14.sroa.15.0.copyload, i8* %.repack129.repack153, align 2
  %.repack129.repack155 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 6
  store i8 %load_element14.sroa.16.0.copyload, i8* %.repack129.repack155, align 1
  %tag_alloca = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @List_iterHelp_b0bea8510982dc41afa71df5c1304ce6de87ac527e5dcd9b88c4cbf7e42f(%list.RocList %"9", { [0 x i64], [8 x i64], i8, [7 x i8] }* nocapture readonly %"10", { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* nocapture readonly %"11", i64 %"13", { [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field.i.i145 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i71 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i40 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %struct_field.i188 = alloca %str.RocStr, align 8
  %struct_field.i177 = alloca %str.RocStr, align 8
  %struct_field.i165 = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %load_element = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %get_opaque_data_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1
  %1 = bitcast { [0 x i64], [8 x i64], i8, [7 x i8] }* %load_element to i8*
  %2 = bitcast [9 x i64]* %get_opaque_data_ptr to i8*
  %read_list_ptr.i = extractvalue %list.RocList %"9", 0
  %cast_basic_basic.i = bitcast i8* %read_list_ptr.i to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %3 = bitcast %str.RocStr* %struct_field.i to i8*
  %struct_field.i.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 0
  %struct_field.i.repack6 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 1
  %struct_field.i.repack8 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %4 = bitcast %str.RocStr* %struct_field.i165 to i8*
  %5 = bitcast { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11" to i8*
  %load_str_to_stack.i.i166.elt17 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i165, i64 0, i32 2
  %struct_field1.i.sroa.0.0..sroa_idx = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 0, i32 0
  %struct_field1.i.sroa.4.0..sroa_idx186 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 0, i32 1
  %struct_field1.i.sroa.5.0..sroa_idx188 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 0, i32 2
  %struct_field1.i.sroa.6.0..sroa_idx190 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 0, i32 0
  %struct_field1.i.sroa.7194.0..sroa_idx195 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 0, i32 2
  %struct_field1.i.sroa.8.0..sroa_idx197 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 1, i32 0
  %struct_field1.i.sroa.9201.0..sroa_idx202 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 1, i32 2
  %struct_field1.i.sroa.10.0..sroa_idx204 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 2, i32 0
  %struct_field1.i.sroa.11208.0..sroa_idx209 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", i64 0, i32 1, i32 1, i32 2, i32 2
  %6 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i40 to i8*
  %load_str_to_stack.i.elt7.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i40, i64 0, i32 2
  %lt_uint.i284.not = icmp eq i64 %"13", 0
  br i1 %lt_uint.i284.not, label %else_block, label %then_block

then_block:                                       ; preds = %entry, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit
  %joinpointarg3286 = phi i64 [ %98, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ], [ 0, %entry ]
  %joinpointarg1285 = phi { [0 x i64], [8 x i64], i8, [7 x i8] }* [ %load_element, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ], [ %"10", %entry ]
  %list_get_load_element.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %joinpointarg3286, i32 0, i32 0
  %list_get_load_element.unpack.unpack.i = load i8*, i8** %list_get_load_element.unpack.elt.i, align 8
  %7 = insertvalue %str.RocStr undef, i8* %list_get_load_element.unpack.unpack.i, 0
  %list_get_load_element.unpack.elt4.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %joinpointarg3286, i32 0, i32 1
  %list_get_load_element.unpack.unpack5.i = load i64, i64* %list_get_load_element.unpack.elt4.i, align 8
  %8 = insertvalue %str.RocStr %7, i64 %list_get_load_element.unpack.unpack5.i, 1
  %list_get_load_element.unpack.elt6.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %joinpointarg3286, i32 0, i32 2
  %list_get_load_element.unpack.unpack7.i = load i64, i64* %list_get_load_element.unpack.elt6.i, align 8
  %list_get_load_element.unpack8.i = insertvalue %str.RocStr %8, i64 %list_get_load_element.unpack.unpack7.i, 2
  %9 = insertvalue { %str.RocStr, { [0 x i64], [12 x i64] }* } undef, %str.RocStr %list_get_load_element.unpack8.i, 0
  %list_get_load_element.elt1.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %joinpointarg3286, i32 1
  %list_get_load_element.unpack2.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %list_get_load_element.elt1.i, align 8
  %list_get_load_element3.i = insertvalue { %str.RocStr, { [0 x i64], [12 x i64] }* } %9, { [0 x i64], [12 x i64] }* %list_get_load_element.unpack2.i, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  store i8* %list_get_load_element.unpack.unpack.i, i8** %struct_field.i.repack, align 8
  store i64 %list_get_load_element.unpack.unpack5.i, i64* %struct_field.i.repack6, align 8
  store i64 %list_get_load_element.unpack.unpack7.i, i64* %struct_field.i.repack8, align 8
  %is_big_str.i.i = icmp sgt i64 %list_get_load_element.unpack.unpack7.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#inc_4.exit.i"

modify_rc.i.i:                                    ; preds = %then_block
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %10 = bitcast i8* %get_rc_ptr.i.i to i64*
  %11 = load i64, i64* %10, align 8
  %.not.i.i.i = icmp eq i64 %11, 0
  br i1 %.not.i.i.i, label %"#Attr_#inc_4.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modify_rc.i.i
  %12 = add nsw i64 %11, 1
  store i64 %12, i64* %10, align 8
  br label %"#Attr_#inc_4.exit.i"

"#Attr_#inc_4.exit.i":                            ; preds = %Then.i.i.i, %modify_rc.i.i, %then_block
  %to_int1.i.i = ptrtoint { [0 x i64], [12 x i64] }* %list_get_load_element.unpack2.i to i64
  %masked.i.i = and i64 %to_int1.i.i, 7
  %cast_to_i8_ptr.i.i = bitcast { [0 x i64], [12 x i64] }* %list_get_load_element.unpack2.i to i8*
  %get_rc_ptr.i2.i.idx = sub nuw nsw i64 -8, %masked.i.i
  %get_rc_ptr.i2.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i, i64 %get_rc_ptr.i2.i.idx
  %13 = bitcast i8* %get_rc_ptr.i2.i to i64*
  %14 = load i64, i64* %13, align 8
  %.not.i.i3.i = icmp eq i64 %14, 0
  br i1 %.not.i.i3.i, label %"#Attr_#inc_14.exit", label %Then.i.i4.i

Then.i.i4.i:                                      ; preds = %"#Attr_#inc_4.exit.i"
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %"#Attr_#inc_14.exit"

"#Attr_#inc_14.exit":                             ; preds = %"#Attr_#inc_4.exit.i", %Then.i.i4.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false) #11
  %load_str_to_stack.i.i166.unpack18 = load i64, i64* %load_str_to_stack.i.i166.elt17, align 8
  %is_big_str.i.i168 = icmp sgt i64 %load_str_to_stack.i.i166.unpack18, 0
  br i1 %is_big_str.i.i168, label %modify_rc.i.i173, label %"#Attr_#inc_15.exit"

modify_rc.i.i173:                                 ; preds = %"#Attr_#inc_14.exit"
  %call_builtin.i.i169 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i165) #11
  %get_rc_ptr.i.i171 = getelementptr inbounds i8, i8* %call_builtin.i.i169, i64 -8
  %16 = bitcast i8* %get_rc_ptr.i.i171 to i64*
  %17 = load i64, i64* %16, align 8
  %.not.i.i.i172 = icmp eq i64 %17, 0
  br i1 %.not.i.i.i172, label %"#Attr_#inc_15.exit", label %Then.i.i.i174

Then.i.i.i174:                                    ; preds = %modify_rc.i.i173
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8
  br label %"#Attr_#inc_15.exit"

"#Attr_#inc_15.exit":                             ; preds = %"#Attr_#inc_14.exit", %modify_rc.i.i173, %Then.i.i.i174
  %struct_field1.i.sroa.0.0.copyload = load i8*, i8** %struct_field1.i.sroa.0.0..sroa_idx, align 8
  %struct_field1.i.sroa.4.0.copyload = load i64, i64* %struct_field1.i.sroa.4.0..sroa_idx186, align 8
  %struct_field1.i.sroa.5.0.copyload = load i64, i64* %struct_field1.i.sroa.5.0..sroa_idx188, align 8
  %struct_field1.i.sroa.6.0.copyload = load i8*, i8** %struct_field1.i.sroa.6.0..sroa_idx190, align 8
  %struct_field1.i.sroa.7194.0.copyload = load i64, i64* %struct_field1.i.sroa.7194.0..sroa_idx195, align 8
  %struct_field1.i.sroa.8.0.copyload = load i8*, i8** %struct_field1.i.sroa.8.0..sroa_idx197, align 8
  %struct_field1.i.sroa.9201.0.copyload = load i64, i64* %struct_field1.i.sroa.9201.0..sroa_idx202, align 8
  %struct_field1.i.sroa.10.0.copyload = load i8*, i8** %struct_field1.i.sroa.10.0..sroa_idx204, align 8
  %struct_field1.i.sroa.11208.0.copyload = load i64, i64* %struct_field1.i.sroa.11208.0..sroa_idx209, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %"cap > 0.not.i.i43" = icmp eq i64 %struct_field1.i.sroa.5.0.copyload, 0
  br i1 %"cap > 0.not.i.i43", label %"#Attr_#inc_17.exit.i", label %modification_list_block.i.i46

modification_list_block.i.i46:                    ; preds = %"#Attr_#inc_15.exit"
  %cast_basic_basic.i.i44 = bitcast i8* %struct_field1.i.sroa.0.0.copyload to %str.RocStr*
  %bounds_check.not.i.i45 = icmp eq i64 %struct_field1.i.sroa.4.0.copyload, 0
  br i1 %bounds_check.not.i.i45, label %after_loop.i.i58, label %loop.i.i51

loop.i.i51:                                       ; preds = %modification_list_block.i.i46, %"#Attr_#inc_4.exit.i.i"
  %next_index10.i.i = phi i64 [ %next_index.i.i48, %"#Attr_#inc_4.exit.i.i" ], [ 0, %modification_list_block.i.i46 ]
  %next_index.i.i48 = add nuw i64 %next_index10.i.i, 1
  %load_index.i.i49 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i44, i64 %next_index10.i.i
  %19 = bitcast %str.RocStr* %load_index.i.i49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8* noundef nonnull align 8 dereferenceable(24) %19, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i = load i64, i64* %load_str_to_stack.i.elt7.i.i, align 8
  %is_big_str.i.i.i50 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i, 0
  br i1 %is_big_str.i.i.i50, label %modify_rc.i.i.i53, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i53:                                ; preds = %loop.i.i51
  %call_builtin.i.i.i52 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i40) #11
  %get_rc_ptr.i.i33.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i52, i64 -8
  %20 = bitcast i8* %get_rc_ptr.i.i33.i to i64*
  %21 = load i64, i64* %20, align 8
  %.not.i.i2.i.i = icmp eq i64 %21, 0
  br i1 %.not.i.i2.i.i, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i34.i

Then.i.i.i34.i:                                   ; preds = %modify_rc.i.i.i53
  %22 = add nsw i64 %21, 1
  store i64 %22, i64* %20, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i34.i, %modify_rc.i.i.i53, %loop.i.i51
  %exitcond.not.i54 = icmp eq i64 %next_index.i.i48, %struct_field1.i.sroa.4.0.copyload
  br i1 %exitcond.not.i54, label %after_loop.i.i58, label %loop.i.i51

after_loop.i.i58:                                 ; preds = %"#Attr_#inc_4.exit.i.i", %modification_list_block.i.i46
  %23 = ptrtoint i8* %struct_field1.i.sroa.0.0.copyload to i64
  %24 = shl i64 %struct_field1.i.sroa.5.0.copyload, 1
  %.not.i.i.i35.i = icmp slt i64 %struct_field1.i.sroa.5.0.copyload, 0
  %25 = select i1 %.not.i.i.i35.i, i64 %24, i64 %23
  %as_usize_ptr.i.i55 = inttoptr i64 %25 to i64*
  %get_rc_ptr.i.i56 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i55, i64 -1
  %26 = load i64, i64* %get_rc_ptr.i.i56, align 8
  %.not.i.i.i57 = icmp eq i64 %26, 0
  br i1 %.not.i.i.i57, label %"#Attr_#inc_17.exit.i", label %Then.i.i.i59

Then.i.i.i59:                                     ; preds = %after_loop.i.i58
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* %get_rc_ptr.i.i56, align 8
  br label %"#Attr_#inc_17.exit.i"

"#Attr_#inc_17.exit.i":                           ; preds = %Then.i.i.i59, %after_loop.i.i58, %"#Attr_#inc_15.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  %"cap > 0.i.i.not.i62" = icmp eq i64 %struct_field1.i.sroa.7194.0.copyload, 0
  br i1 %"cap > 0.i.i.not.i62", label %"#Attr_#inc_9.exit.i.i", label %modification_list_block.i.i.i69

modification_list_block.i.i.i69:                  ; preds = %"#Attr_#inc_17.exit.i"
  %28 = ptrtoint i8* %struct_field1.i.sroa.6.0.copyload to i64
  %29 = shl i64 %struct_field1.i.sroa.7194.0.copyload, 1
  %.not.i.i.i.i.i65 = icmp slt i64 %struct_field1.i.sroa.7194.0.copyload, 0
  %30 = select i1 %.not.i.i.i.i.i65, i64 %29, i64 %28
  %as_usize_ptr.i.i.i66 = inttoptr i64 %30 to i64*
  %get_rc_ptr.i.i.i67 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i66, i64 -1
  %31 = load i64, i64* %get_rc_ptr.i.i.i67, align 8
  %.not.i.i.i.i68 = icmp eq i64 %31, 0
  br i1 %.not.i.i.i.i68, label %"#Attr_#inc_9.exit.i.i", label %Then.i.i.i.i70

Then.i.i.i.i70:                                   ; preds = %modification_list_block.i.i.i69
  %32 = add nsw i64 %31, 1
  store i64 %32, i64* %get_rc_ptr.i.i.i67, align 8
  br label %"#Attr_#inc_9.exit.i.i"

"#Attr_#inc_9.exit.i.i":                          ; preds = %Then.i.i.i.i70, %modification_list_block.i.i.i69, %"#Attr_#inc_17.exit.i"
  %"cap > 0.i18.i.not.i" = icmp eq i64 %struct_field1.i.sroa.9201.0.copyload, 0
  br i1 %"cap > 0.i18.i.not.i", label %"#Attr_#inc_10.exit.i.i", label %modification_list_block.i27.i.i

modification_list_block.i27.i.i:                  ; preds = %"#Attr_#inc_9.exit.i.i"
  %33 = ptrtoint i8* %struct_field1.i.sroa.8.0.copyload to i64
  %34 = shl i64 %struct_field1.i.sroa.9201.0.copyload, 1
  %.not.i.i.i23.i.i = icmp slt i64 %struct_field1.i.sroa.9201.0.copyload, 0
  %35 = select i1 %.not.i.i.i23.i.i, i64 %34, i64 %33
  %as_usize_ptr.i24.i.i = inttoptr i64 %35 to i64*
  %get_rc_ptr.i25.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i, i64 -1
  %36 = load i64, i64* %get_rc_ptr.i25.i.i, align 8
  %.not.i.i26.i.i = icmp eq i64 %36, 0
  br i1 %.not.i.i26.i.i, label %"#Attr_#inc_10.exit.i.i", label %Then.i.i28.i.i

Then.i.i28.i.i:                                   ; preds = %modification_list_block.i27.i.i
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* %get_rc_ptr.i25.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i"

"#Attr_#inc_10.exit.i.i":                         ; preds = %Then.i.i28.i.i, %modification_list_block.i27.i.i, %"#Attr_#inc_9.exit.i.i"
  %"cap > 0.i5.i.not.i" = icmp eq i64 %struct_field1.i.sroa.11208.0.copyload, 0
  br i1 %"cap > 0.i5.i.not.i", label %"#Attr_#inc_16.exit", label %modification_list_block.i14.i.i

modification_list_block.i14.i.i:                  ; preds = %"#Attr_#inc_10.exit.i.i"
  %38 = ptrtoint i8* %struct_field1.i.sroa.10.0.copyload to i64
  %39 = shl i64 %struct_field1.i.sroa.11208.0.copyload, 1
  %.not.i.i.i10.i.i = icmp slt i64 %struct_field1.i.sroa.11208.0.copyload, 0
  %40 = select i1 %.not.i.i.i10.i.i, i64 %39, i64 %38
  %as_usize_ptr.i11.i.i = inttoptr i64 %40 to i64*
  %get_rc_ptr.i12.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i, i64 -1
  %41 = load i64, i64* %get_rc_ptr.i12.i.i, align 8
  %.not.i.i13.i.i = icmp eq i64 %41, 0
  br i1 %.not.i.i13.i.i, label %"#Attr_#inc_16.exit", label %Then.i.i15.i.i

Then.i.i15.i.i:                                   ; preds = %modification_list_block.i14.i.i
  %42 = add nsw i64 %41, 1
  store i64 %42, i64* %get_rc_ptr.i12.i.i, align 8
  br label %"#Attr_#inc_16.exit"

"#Attr_#inc_16.exit":                             ; preds = %"#Attr_#inc_10.exit.i.i", %modification_list_block.i14.i.i, %Then.i.i15.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  call fastcc void @Arg_365_4bbf4393e0e015a5e3bdae1945b63cf04b4ae282c0e74329c9ee6ff02ce9db8b({ [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1285, { %str.RocStr, { [0 x i64], [12 x i64] }* } %list_get_load_element3.i, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"11", { [0 x i64], [9 x i64], i8, [7 x i8] }* nonnull %result_value)
  %load_tag_id = load i8, i8* %tag_id_ptr, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit, label %else_block8

common.ret:                                       ; preds = %"#Attr_#dec_19.exit", %"#Attr_#dec_19.exit184"
  %tag_alloca.sink293 = phi { [0 x i64], [9 x i64], i8, [7 x i8] }* [ %tag_alloca, %"#Attr_#dec_19.exit" ], [ %tag_alloca19, %"#Attr_#dec_19.exit184" ]
  %struct_alloca.sink = phi { { [0 x i64], [8 x i64], i8, [7 x i8] } }* [ %struct_alloca, %"#Attr_#dec_19.exit" ], [ %struct_alloca18, %"#Attr_#dec_19.exit184" ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_19.exit" ], [ 1, %"#Attr_#dec_19.exit184" ]
  %data_buffer = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca.sink293, i64 0, i32 1
  %43 = bitcast [9 x i64]* %data_buffer to i8*
  %44 = bitcast { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %43, i8* noundef nonnull align 8 dereferenceable(72) %44, i64 72, i1 false)
  %tag_id_ptr15 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca.sink293, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr15, align 8
  %45 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %0 to i8*
  %46 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca.sink293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %45, i8* noundef nonnull align 8 dereferenceable(80) %46, i64 80, i1 false)
  ret void

else_block:                                       ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit, %entry
  %joinpointarg1.lcssa = phi { [0 x i64], [8 x i64], i8, [7 x i8] }* [ %"10", %entry ], [ %load_element, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %47 = bitcast %str.RocStr* %struct_field.i188 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %47, i8* noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false) #11
  %load_str_to_stack.i.i190.elt3 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i188, i64 0, i32 2
  %load_str_to_stack.i.i190.unpack4 = load i64, i64* %load_str_to_stack.i.i190.elt3, align 8
  %is_big_str.i.i192 = icmp sgt i64 %load_str_to_stack.i.i190.unpack4, 0
  br i1 %is_big_str.i.i192, label %modify_rc.i.i197, label %"#Attr_#dec_15.exit202"

modify_rc.i.i197:                                 ; preds = %else_block
  %call_builtin.i.i193 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i188) #11
  %get_rc_ptr.i.i195 = getelementptr inbounds i8, i8* %call_builtin.i.i193, i64 -8
  %48 = bitcast i8* %get_rc_ptr.i.i195 to i64*
  %49 = load i64, i64* %48, align 8
  %.not.i.i.i.i.i196 = icmp eq i64 %49, 0
  br i1 %.not.i.i.i.i.i196, label %"#Attr_#dec_15.exit202", label %Then.i.i.i.i.i198

Then.i.i.i.i.i198:                                ; preds = %modify_rc.i.i197
  %50 = add i64 %49, -1
  store i64 %50, i64* %48, align 8
  %51 = icmp eq i64 %49, -9223372036854775808
  br i1 %51, label %Then1.i.i.i.i.i199, label %"#Attr_#dec_15.exit202"

Then1.i.i.i.i.i199:                               ; preds = %Then.i.i.i.i.i198
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i195, i32 8) #11
  br label %"#Attr_#dec_15.exit202"

"#Attr_#dec_15.exit202":                          ; preds = %modify_rc.i.i197, %Then.i.i.i.i.i198, %Then1.i.i.i.i.i199, %else_block
  %struct_field1.i187.sroa.0.0.copyload = load i8*, i8** %struct_field1.i.sroa.0.0..sroa_idx, align 8
  %struct_field1.i187.sroa.4.0.copyload = load i64, i64* %struct_field1.i.sroa.4.0..sroa_idx186, align 8
  %struct_field1.i187.sroa.5.0.copyload = load i64, i64* %struct_field1.i.sroa.5.0..sroa_idx188, align 8
  %struct_field1.i187.sroa.6.0.copyload = load i8*, i8** %struct_field1.i.sroa.6.0..sroa_idx190, align 8
  %struct_field1.i187.sroa.7250.0.copyload = load i64, i64* %struct_field1.i.sroa.7194.0..sroa_idx195, align 8
  %struct_field1.i187.sroa.8.0.copyload = load i8*, i8** %struct_field1.i.sroa.8.0..sroa_idx197, align 8
  %struct_field1.i187.sroa.9257.0.copyload = load i64, i64* %struct_field1.i.sroa.9201.0..sroa_idx202, align 8
  %struct_field1.i187.sroa.10.0.copyload = load i8*, i8** %struct_field1.i.sroa.10.0..sroa_idx204, align 8
  %struct_field1.i187.sroa.11264.0.copyload = load i64, i64* %struct_field1.i.sroa.11208.0..sroa_idx209, align 8
  %52 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  %"cap > 0.not.i.i78" = icmp eq i64 %struct_field1.i187.sroa.5.0.copyload, 0
  br i1 %"cap > 0.not.i.i78", label %"#Attr_#dec_17.exit.i116", label %modification_list_block.i52.i81

modification_list_block.i52.i81:                  ; preds = %"#Attr_#dec_15.exit202"
  %cast_basic_basic.i.i79 = bitcast i8* %struct_field1.i187.sroa.0.0.copyload to %str.RocStr*
  %bounds_check.not.i.i80 = icmp eq i64 %struct_field1.i187.sroa.4.0.copyload, 0
  br i1 %bounds_check.not.i.i80, label %after_loop.i.i102, label %loop.preheader.i.i83

loop.preheader.i.i83:                             ; preds = %modification_list_block.i52.i81
  %load_str_to_stack.i.elt9.i.i82 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i71, i64 0, i32 2
  br label %loop.i.i89

loop.i.i89:                                       ; preds = %"#Attr_#dec_4.exit.i.i97", %loop.preheader.i.i83
  %next_index12.i.i84 = phi i64 [ 0, %loop.preheader.i.i83 ], [ %next_index.i.i85, %"#Attr_#dec_4.exit.i.i97" ]
  %next_index.i.i85 = add nuw i64 %next_index12.i.i84, 1
  %load_index.i.i86 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i79, i64 %next_index12.i.i84
  %53 = bitcast %str.RocStr* %load_index.i.i86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %52, i8* noundef nonnull align 8 dereferenceable(24) %53, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i87 = load i64, i64* %load_str_to_stack.i.elt9.i.i82, align 8
  %is_big_str.i.i.i88 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i87, 0
  br i1 %is_big_str.i.i.i88, label %modify_rc.i.i.i93, label %"#Attr_#dec_4.exit.i.i97"

modify_rc.i.i.i93:                                ; preds = %loop.i.i89
  %call_builtin.i.i.i90 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i71) #11
  %get_rc_ptr.i.i53.i91 = getelementptr inbounds i8, i8* %call_builtin.i.i.i90, i64 -8
  %54 = bitcast i8* %get_rc_ptr.i.i53.i91 to i64*
  %55 = load i64, i64* %54, align 8
  %.not.i.i.i.i.i54.i92 = icmp eq i64 %55, 0
  br i1 %.not.i.i.i.i.i54.i92, label %"#Attr_#dec_4.exit.i.i97", label %Then.i.i.i.i.i55.i94

Then.i.i.i.i.i55.i94:                             ; preds = %modify_rc.i.i.i93
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %55, -9223372036854775808
  br i1 %57, label %Then1.i.i.i.i.i56.i95, label %"#Attr_#dec_4.exit.i.i97"

Then1.i.i.i.i.i56.i95:                            ; preds = %Then.i.i.i.i.i55.i94
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i91, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i97"

"#Attr_#dec_4.exit.i.i97":                        ; preds = %Then1.i.i.i.i.i56.i95, %Then.i.i.i.i.i55.i94, %modify_rc.i.i.i93, %loop.i.i89
  %exitcond.not.i96 = icmp eq i64 %next_index.i.i85, %struct_field1.i187.sroa.4.0.copyload
  br i1 %exitcond.not.i96, label %after_loop.i.i102, label %loop.i.i89

after_loop.i.i102:                                ; preds = %"#Attr_#dec_4.exit.i.i97", %modification_list_block.i52.i81
  %58 = ptrtoint i8* %struct_field1.i187.sroa.0.0.copyload to i64
  %59 = shl i64 %struct_field1.i187.sroa.5.0.copyload, 1
  %.not.i.i.i57.i98 = icmp slt i64 %struct_field1.i187.sroa.5.0.copyload, 0
  %60 = select i1 %.not.i.i.i57.i98, i64 %59, i64 %58
  %as_usize_ptr.i58.i99 = inttoptr i64 %60 to i64*
  %get_rc_ptr.i59.i100 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i99, i64 -1
  %61 = load i64, i64* %get_rc_ptr.i59.i100, align 8
  %.not.i.i.i.i60.i101 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i60.i101, label %"#Attr_#dec_17.exit.i116", label %Then.i.i.i.i61.i103

Then.i.i.i.i61.i103:                              ; preds = %after_loop.i.i102
  %62 = add i64 %61, -1
  store i64 %62, i64* %get_rc_ptr.i59.i100, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i62.i104, label %"#Attr_#dec_17.exit.i116"

Then1.i.i.i.i62.i104:                             ; preds = %Then.i.i.i.i61.i103
  %64 = bitcast i64* %get_rc_ptr.i59.i100 to i8*
  tail call void @roc_dealloc(i8* %64, i32 8) #11
  br label %"#Attr_#dec_17.exit.i116"

"#Attr_#dec_17.exit.i116":                        ; preds = %Then1.i.i.i.i62.i104, %Then.i.i.i.i61.i103, %after_loop.i.i102, %"#Attr_#dec_15.exit202"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #11
  %"cap > 0.i.i.not.i115" = icmp eq i64 %struct_field1.i187.sroa.7250.0.copyload, 0
  br i1 %"cap > 0.i.i.not.i115", label %"#Attr_#dec_18.exit.i127", label %modification_list_block.i.i.i123

modification_list_block.i.i.i123:                 ; preds = %"#Attr_#dec_17.exit.i116"
  %65 = ptrtoint i8* %struct_field1.i187.sroa.6.0.copyload to i64
  %66 = shl i64 %struct_field1.i187.sroa.7250.0.copyload, 1
  %.not.i.i.i.i.i119 = icmp slt i64 %struct_field1.i187.sroa.7250.0.copyload, 0
  %67 = select i1 %.not.i.i.i.i.i119, i64 %66, i64 %65
  %as_usize_ptr.i.i.i120 = inttoptr i64 %67 to i64*
  %get_rc_ptr.i.i.i121 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i120, i64 -1
  %68 = load i64, i64* %get_rc_ptr.i.i.i121, align 8
  %.not.i.i.i.i.i.i122 = icmp eq i64 %68, 0
  br i1 %.not.i.i.i.i.i.i122, label %"#Attr_#dec_18.exit.i127", label %Then.i.i.i.i.i.i124

Then.i.i.i.i.i.i124:                              ; preds = %modification_list_block.i.i.i123
  %69 = add i64 %68, -1
  store i64 %69, i64* %get_rc_ptr.i.i.i121, align 8
  %70 = icmp eq i64 %68, -9223372036854775808
  br i1 %70, label %Then1.i.i.i.i.i.i125, label %"#Attr_#dec_18.exit.i127"

Then1.i.i.i.i.i.i125:                             ; preds = %Then.i.i.i.i.i.i124
  %71 = bitcast i64* %get_rc_ptr.i.i.i121 to i8*
  tail call void @roc_dealloc(i8* %71, i32 8) #11
  br label %"#Attr_#dec_18.exit.i127"

"#Attr_#dec_18.exit.i127":                        ; preds = %Then1.i.i.i.i.i.i125, %Then.i.i.i.i.i.i124, %modification_list_block.i.i.i123, %"#Attr_#dec_17.exit.i116"
  %"cap > 0.i5.not.i126" = icmp eq i64 %struct_field1.i187.sroa.9257.0.copyload, 0
  br i1 %"cap > 0.i5.not.i126", label %"#Attr_#dec_10.exit.i136", label %modification_list_block.i14.i132

modification_list_block.i14.i132:                 ; preds = %"#Attr_#dec_18.exit.i127"
  %72 = ptrtoint i8* %struct_field1.i187.sroa.8.0.copyload to i64
  %73 = shl i64 %struct_field1.i187.sroa.9257.0.copyload, 1
  %.not.i.i.i10.i128 = icmp slt i64 %struct_field1.i187.sroa.9257.0.copyload, 0
  %74 = select i1 %.not.i.i.i10.i128, i64 %73, i64 %72
  %as_usize_ptr.i11.i129 = inttoptr i64 %74 to i64*
  %get_rc_ptr.i12.i130 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i129, i64 -1
  %75 = load i64, i64* %get_rc_ptr.i12.i130, align 8
  %.not.i.i.i.i13.i131 = icmp eq i64 %75, 0
  br i1 %.not.i.i.i.i13.i131, label %"#Attr_#dec_10.exit.i136", label %Then.i.i.i.i15.i133

Then.i.i.i.i15.i133:                              ; preds = %modification_list_block.i14.i132
  %76 = add i64 %75, -1
  store i64 %76, i64* %get_rc_ptr.i12.i130, align 8
  %77 = icmp eq i64 %75, -9223372036854775808
  br i1 %77, label %Then1.i.i.i.i16.i134, label %"#Attr_#dec_10.exit.i136"

Then1.i.i.i.i16.i134:                             ; preds = %Then.i.i.i.i15.i133
  %78 = bitcast i64* %get_rc_ptr.i12.i130 to i8*
  tail call void @roc_dealloc(i8* %78, i32 8) #11
  br label %"#Attr_#dec_10.exit.i136"

"#Attr_#dec_10.exit.i136":                        ; preds = %Then1.i.i.i.i16.i134, %Then.i.i.i.i15.i133, %modification_list_block.i14.i132, %"#Attr_#dec_18.exit.i127"
  %"cap > 0.i.not.i135" = icmp eq i64 %struct_field1.i187.sroa.11264.0.copyload, 0
  br i1 %"cap > 0.i.not.i135", label %"#Attr_#dec_16.exit144", label %modification_list_block.i.i141

modification_list_block.i.i141:                   ; preds = %"#Attr_#dec_10.exit.i136"
  %79 = ptrtoint i8* %struct_field1.i187.sroa.10.0.copyload to i64
  %80 = shl i64 %struct_field1.i187.sroa.11264.0.copyload, 1
  %.not.i.i.i.i137 = icmp slt i64 %struct_field1.i187.sroa.11264.0.copyload, 0
  %81 = select i1 %.not.i.i.i.i137, i64 %80, i64 %79
  %as_usize_ptr.i.i138 = inttoptr i64 %81 to i64*
  %get_rc_ptr.i.i139 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i138, i64 -1
  %82 = load i64, i64* %get_rc_ptr.i.i139, align 8
  %.not.i.i.i.i2.i140 = icmp eq i64 %82, 0
  br i1 %.not.i.i.i.i2.i140, label %"#Attr_#dec_16.exit144", label %Then.i.i.i.i.i142

Then.i.i.i.i.i142:                                ; preds = %modification_list_block.i.i141
  %83 = add i64 %82, -1
  store i64 %83, i64* %get_rc_ptr.i.i139, align 8
  %84 = icmp eq i64 %82, -9223372036854775808
  br i1 %84, label %Then1.i.i.i.i.i143, label %"#Attr_#dec_16.exit144"

Then1.i.i.i.i.i143:                               ; preds = %Then.i.i.i.i.i142
  %85 = bitcast i64* %get_rc_ptr.i.i139 to i8*
  tail call void @roc_dealloc(i8* %85, i32 8) #11
  br label %"#Attr_#dec_16.exit144"

"#Attr_#dec_16.exit144":                          ; preds = %"#Attr_#dec_10.exit.i136", %modification_list_block.i.i141, %Then.i.i.i.i.i142, %Then1.i.i.i.i.i143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47)
  %list_capacity_or_ref_ptr.i146 = extractvalue %list.RocList %"9", 2
  %"cap > 0.not.i147" = icmp eq i64 %list_capacity_or_ref_ptr.i146, 0
  br i1 %"cap > 0.not.i147", label %"#Attr_#dec_19.exit184", label %modification_list_block.i152

modification_list_block.i152:                     ; preds = %"#Attr_#dec_16.exit144"
  %list_len.i150 = extractvalue %list.RocList %"9", 1
  %bounds_check.not.i151 = icmp eq i64 %list_len.i150, 0
  br i1 %bounds_check.not.i151, label %after_loop.i181, label %loop.preheader.i156

loop.preheader.i156:                              ; preds = %modification_list_block.i152
  %86 = bitcast %str.RocStr* %struct_field.i.i145 to i8*
  %struct_field.i.repack.i153 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i145, i64 0, i32 0
  %struct_field.i.repack15.i154 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i145, i64 0, i32 1
  %struct_field.i.repack17.i155 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i145, i64 0, i32 2
  br label %loop.i168

loop.i168:                                        ; preds = %"#Attr_#dec_14.exit.i176", %loop.preheader.i156
  %index.i157 = phi i64 [ 0, %loop.preheader.i156 ], [ %next_index.i158, %"#Attr_#dec_14.exit.i176" ]
  %next_index.i158 = add nuw i64 %index.i157, 1
  %incrementing_element_loop_load.unpack.elt.i159 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i157, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i160 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i159, align 8
  %incrementing_element_loop_load.unpack.elt10.i161 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i157, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11.i162 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i161, align 8
  %incrementing_element_loop_load.unpack.elt12.i163 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i157, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13.i164 = load i64, i64* %incrementing_element_loop_load.unpack.elt12.i163, align 8
  %incrementing_element_loop_load.elt7.i165 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i157, i32 1
  %incrementing_element_loop_load.unpack8.i166 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt7.i165, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i160, i8** %struct_field.i.repack.i153, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i162, i64* %struct_field.i.repack15.i154, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13.i164, i64* %struct_field.i.repack17.i155, align 8
  %is_big_str.i.i.i167 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13.i164, 0
  br i1 %is_big_str.i.i.i167, label %modify_rc.i.i.i172, label %"#Attr_#dec_14.exit.i176"

modify_rc.i.i.i172:                               ; preds = %loop.i168
  %call_builtin.i.i.i169 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i145) #11
  %get_rc_ptr.i.i.i170 = getelementptr inbounds i8, i8* %call_builtin.i.i.i169, i64 -8
  %87 = bitcast i8* %get_rc_ptr.i.i.i170 to i64*
  %88 = load i64, i64* %87, align 8
  %.not.i.i.i.i.i.i171 = icmp eq i64 %88, 0
  br i1 %.not.i.i.i.i.i.i171, label %"#Attr_#dec_14.exit.i176", label %Then.i.i.i.i.i.i173

Then.i.i.i.i.i.i173:                              ; preds = %modify_rc.i.i.i172
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = icmp eq i64 %88, -9223372036854775808
  br i1 %90, label %Then1.i.i.i.i.i.i174, label %"#Attr_#dec_14.exit.i176"

Then1.i.i.i.i.i.i174:                             ; preds = %Then.i.i.i.i.i.i173
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i170, i32 8) #11
  br label %"#Attr_#dec_14.exit.i176"

"#Attr_#dec_14.exit.i176":                        ; preds = %Then1.i.i.i.i.i.i174, %Then.i.i.i.i.i.i173, %modify_rc.i.i.i172, %loop.i168
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack8.i166) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %exitcond.not = icmp eq i64 %next_index.i158, %list_len.i150
  br i1 %exitcond.not, label %after_loop.i181, label %loop.i168

after_loop.i181:                                  ; preds = %"#Attr_#dec_14.exit.i176", %modification_list_block.i152
  %91 = ptrtoint i8* %read_list_ptr.i to i64
  %92 = shl i64 %list_capacity_or_ref_ptr.i146, 1
  %.not.i.i.i177 = icmp slt i64 %list_capacity_or_ref_ptr.i146, 0
  %93 = select i1 %.not.i.i.i177, i64 %92, i64 %91
  %as_usize_ptr.i178 = inttoptr i64 %93 to i64*
  %get_rc_ptr.i179 = getelementptr inbounds i64, i64* %as_usize_ptr.i178, i64 -1
  %94 = load i64, i64* %get_rc_ptr.i179, align 8
  %.not.i.i.i.i180 = icmp eq i64 %94, 0
  br i1 %.not.i.i.i.i180, label %"#Attr_#dec_19.exit184", label %Then.i.i.i.i182

Then.i.i.i.i182:                                  ; preds = %after_loop.i181
  %95 = add i64 %94, -1
  store i64 %95, i64* %get_rc_ptr.i179, align 8
  %96 = icmp eq i64 %94, -9223372036854775808
  br i1 %96, label %Then1.i.i.i.i183, label %"#Attr_#dec_19.exit184"

Then1.i.i.i.i183:                                 ; preds = %Then.i.i.i.i182
  %97 = bitcast i64* %get_rc_ptr.i179 to i8*
  tail call void @roc_dealloc(i8* %97, i32 8) #11
  br label %"#Attr_#dec_19.exit184"

"#Attr_#dec_19.exit184":                          ; preds = %"#Attr_#dec_16.exit144", %after_loop.i181, %Then.i.i.i.i182, %Then1.i.i.i.i183
  %load_tag_to_put_in_struct16.unpack24.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct16.unpack24.unpack = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt, align 8
  %load_tag_to_put_in_struct16.unpack24.elt30 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct16.unpack24.unpack31 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt30, align 8
  %load_tag_to_put_in_struct16.unpack24.elt32 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct16.unpack24.unpack33 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt32, align 8
  %load_tag_to_put_in_struct16.unpack24.elt34 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct16.unpack24.unpack35 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt34, align 8
  %load_tag_to_put_in_struct16.unpack24.elt36 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct16.unpack24.unpack37 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt36, align 8
  %load_tag_to_put_in_struct16.unpack24.elt38 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct16.unpack24.unpack39 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt38, align 8
  %load_tag_to_put_in_struct16.unpack24.elt40 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 6
  %load_tag_to_put_in_struct16.unpack24.unpack41 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt40, align 8
  %load_tag_to_put_in_struct16.unpack24.elt42 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 1, i64 7
  %load_tag_to_put_in_struct16.unpack24.unpack43 = load i64, i64* %load_tag_to_put_in_struct16.unpack24.elt42, align 8
  %load_tag_to_put_in_struct16.elt25 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 2
  %load_tag_to_put_in_struct16.unpack26 = load i8, i8* %load_tag_to_put_in_struct16.elt25, align 8
  %load_tag_to_put_in_struct16.unpack28.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct16.unpack28.unpack = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt, align 1
  %load_tag_to_put_in_struct16.unpack28.elt45 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct16.unpack28.unpack46 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt45, align 1
  %load_tag_to_put_in_struct16.unpack28.elt47 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct16.unpack28.unpack48 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt47, align 1
  %load_tag_to_put_in_struct16.unpack28.elt49 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct16.unpack28.unpack50 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt49, align 1
  %load_tag_to_put_in_struct16.unpack28.elt51 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct16.unpack28.unpack52 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt51, align 1
  %load_tag_to_put_in_struct16.unpack28.elt53 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct16.unpack28.unpack54 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt53, align 1
  %load_tag_to_put_in_struct16.unpack28.elt55 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %joinpointarg1.lcssa, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct16.unpack28.unpack56 = load i8, i8* %load_tag_to_put_in_struct16.unpack28.elt55, align 1
  %struct_alloca18 = alloca { { [0 x i64], [8 x i64], i8, [7 x i8] } }, align 8
  %.repack58.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack, i64* %.repack58.repack, align 8
  %.repack58.repack64 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack31, i64* %.repack58.repack64, align 8
  %.repack58.repack66 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack33, i64* %.repack58.repack66, align 8
  %.repack58.repack68 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack35, i64* %.repack58.repack68, align 8
  %.repack58.repack70 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack37, i64* %.repack58.repack70, align 8
  %.repack58.repack72 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack39, i64* %.repack58.repack72, align 8
  %.repack58.repack74 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 6
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack41, i64* %.repack58.repack74, align 8
  %.repack58.repack76 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 1, i64 7
  store i64 %load_tag_to_put_in_struct16.unpack24.unpack43, i64* %.repack58.repack76, align 8
  %.repack60 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 2
  store i8 %load_tag_to_put_in_struct16.unpack26, i8* %.repack60, align 8
  %.repack62.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack, i8* %.repack62.repack, align 1
  %.repack62.repack78 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack46, i8* %.repack62.repack78, align 2
  %.repack62.repack80 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack48, i8* %.repack62.repack80, align 1
  %.repack62.repack82 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack50, i8* %.repack62.repack82, align 4
  %.repack62.repack84 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack52, i8* %.repack62.repack84, align 1
  %.repack62.repack86 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack54, i8* %.repack62.repack86, align 2
  %.repack62.repack88 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca18, i64 0, i32 0, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct16.unpack28.unpack56, i8* %.repack62.repack88, align 1
  %tag_alloca19 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit: ; preds = %"#Attr_#inc_16.exit"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %1, i8* noundef nonnull align 8 dereferenceable(72) %2, i64 72, i1 false)
  %98 = add nuw i64 %joinpointarg3286, 1
  %exitcond288.not = icmp eq i64 %98, %"13"
  br i1 %exitcond288.not, label %else_block, label %then_block

else_block8:                                      ; preds = %"#Attr_#inc_16.exit"
  %99 = bitcast %str.RocStr* %struct_field.i177 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %99, i8* noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false) #11
  %load_str_to_stack.i.i179.elt22 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i177, i64 0, i32 2
  %load_str_to_stack.i.i179.unpack23 = load i64, i64* %load_str_to_stack.i.i179.elt22, align 8
  %is_big_str.i.i181 = icmp sgt i64 %load_str_to_stack.i.i179.unpack23, 0
  br i1 %is_big_str.i.i181, label %modify_rc.i.i185, label %"#Attr_#dec_15.exit"

modify_rc.i.i185:                                 ; preds = %else_block8
  %call_builtin.i.i182 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i177) #11
  %get_rc_ptr.i.i184 = getelementptr inbounds i8, i8* %call_builtin.i.i182, i64 -8
  %100 = bitcast i8* %get_rc_ptr.i.i184 to i64*
  %101 = load i64, i64* %100, align 8
  %.not.i.i.i.i.i = icmp eq i64 %101, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_15.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i185
  %102 = add i64 %101, -1
  store i64 %102, i64* %100, align 8
  %103 = icmp eq i64 %101, -9223372036854775808
  br i1 %103, label %Then1.i.i.i.i.i, label %"#Attr_#dec_15.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i184, i32 8) #11
  br label %"#Attr_#dec_15.exit"

"#Attr_#dec_15.exit":                             ; preds = %modify_rc.i.i185, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %else_block8
  %struct_field1.i176.sroa.0.0.copyload = load i8*, i8** %struct_field1.i.sroa.0.0..sroa_idx, align 8
  %struct_field1.i176.sroa.4.0.copyload = load i64, i64* %struct_field1.i.sroa.4.0..sroa_idx186, align 8
  %struct_field1.i176.sroa.5.0.copyload = load i64, i64* %struct_field1.i.sroa.5.0..sroa_idx188, align 8
  %struct_field1.i176.sroa.6.0.copyload = load i8*, i8** %struct_field1.i.sroa.6.0..sroa_idx190, align 8
  %struct_field1.i176.sroa.7222.0.copyload = load i64, i64* %struct_field1.i.sroa.7194.0..sroa_idx195, align 8
  %struct_field1.i176.sroa.8.0.copyload = load i8*, i8** %struct_field1.i.sroa.8.0..sroa_idx197, align 8
  %struct_field1.i176.sroa.9229.0.copyload = load i64, i64* %struct_field1.i.sroa.9201.0..sroa_idx202, align 8
  %struct_field1.i176.sroa.10.0.copyload = load i8*, i8** %struct_field1.i.sroa.10.0..sroa_idx204, align 8
  %struct_field1.i176.sroa.11236.0.copyload = load i64, i64* %struct_field1.i.sroa.11208.0..sroa_idx209, align 8
  %104 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field1.i176.sroa.5.0.copyload, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %"#Attr_#dec_15.exit"
  %cast_basic_basic.i.i = bitcast i8* %struct_field1.i176.sroa.0.0.copyload to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field1.i176.sroa.4.0.copyload, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %105 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %104, i8* noundef nonnull align 8 dereferenceable(24) %105, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i28 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i28, label %modify_rc.i.i.i30, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i30:                                ; preds = %loop.i.i
  %call_builtin.i.i.i29 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i29, i64 -8
  %106 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %107 = load i64, i64* %106, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %107, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i30
  %108 = add i64 %107, -1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %107, -9223372036854775808
  br i1 %109, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i30, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field1.i176.sroa.4.0.copyload
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %110 = ptrtoint i8* %struct_field1.i176.sroa.0.0.copyload to i64
  %111 = shl i64 %struct_field1.i176.sroa.5.0.copyload, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field1.i176.sroa.5.0.copyload, 0
  %112 = select i1 %.not.i.i.i57.i, i64 %111, i64 %110
  %as_usize_ptr.i58.i = inttoptr i64 %112 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %113 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %113, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %114 = add i64 %113, -1
  store i64 %114, i64* %get_rc_ptr.i59.i, align 8
  %115 = icmp eq i64 %113, -9223372036854775808
  br i1 %115, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %116 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %116, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %"#Attr_#dec_15.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #11
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.i176.sroa.7222.0.copyload, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %117 = ptrtoint i8* %struct_field1.i176.sroa.6.0.copyload to i64
  %118 = shl i64 %struct_field1.i176.sroa.7222.0.copyload, 1
  %.not.i.i.i.i.i31 = icmp slt i64 %struct_field1.i176.sroa.7222.0.copyload, 0
  %119 = select i1 %.not.i.i.i.i.i31, i64 %118, i64 %117
  %as_usize_ptr.i.i.i = inttoptr i64 %119 to i64*
  %get_rc_ptr.i.i.i32 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %120 = load i64, i64* %get_rc_ptr.i.i.i32, align 8
  %.not.i.i.i.i.i.i33 = icmp eq i64 %120, 0
  br i1 %.not.i.i.i.i.i.i33, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i34

Then.i.i.i.i.i.i34:                               ; preds = %modification_list_block.i.i.i
  %121 = add i64 %120, -1
  store i64 %121, i64* %get_rc_ptr.i.i.i32, align 8
  %122 = icmp eq i64 %120, -9223372036854775808
  br i1 %122, label %Then1.i.i.i.i.i.i35, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i35:                              ; preds = %Then.i.i.i.i.i.i34
  %123 = bitcast i64* %get_rc_ptr.i.i.i32 to i8*
  tail call void @roc_dealloc(i8* %123, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i35, %Then.i.i.i.i.i.i34, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.i176.sroa.9229.0.copyload, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %124 = ptrtoint i8* %struct_field1.i176.sroa.8.0.copyload to i64
  %125 = shl i64 %struct_field1.i176.sroa.9229.0.copyload, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.i176.sroa.9229.0.copyload, 0
  %126 = select i1 %.not.i.i.i10.i, i64 %125, i64 %124
  %as_usize_ptr.i11.i = inttoptr i64 %126 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %127 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %127, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %128 = add i64 %127, -1
  store i64 %128, i64* %get_rc_ptr.i12.i, align 8
  %129 = icmp eq i64 %127, -9223372036854775808
  br i1 %129, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %130 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %130, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.i176.sroa.11236.0.copyload, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %131 = ptrtoint i8* %struct_field1.i176.sroa.10.0.copyload to i64
  %132 = shl i64 %struct_field1.i176.sroa.11236.0.copyload, 1
  %.not.i.i.i.i36 = icmp slt i64 %struct_field1.i176.sroa.11236.0.copyload, 0
  %133 = select i1 %.not.i.i.i.i36, i64 %132, i64 %131
  %as_usize_ptr.i.i = inttoptr i64 %133 to i64*
  %get_rc_ptr.i.i37 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %134 = load i64, i64* %get_rc_ptr.i.i37, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %134, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i38

Then.i.i.i.i.i38:                                 ; preds = %modification_list_block.i.i
  %135 = add i64 %134, -1
  store i64 %135, i64* %get_rc_ptr.i.i37, align 8
  %136 = icmp eq i64 %134, -9223372036854775808
  br i1 %136, label %Then1.i.i.i.i.i39, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i39:                                ; preds = %Then.i.i.i.i.i38
  %137 = bitcast i64* %get_rc_ptr.i.i37 to i8*
  tail call void @roc_dealloc(i8* %137, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i38, %Then1.i.i.i.i.i39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99)
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %"9", 2
  %"cap > 0.not.i" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_19.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %"#Attr_#dec_16.exit"
  %list_len.i = extractvalue %list.RocList %"9", 1
  %bounds_check.not.i = icmp eq i64 %list_len.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %138 = bitcast %str.RocStr* %struct_field.i.i to i8*
  %struct_field.i.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 0
  %struct_field.i.repack15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 1
  %struct_field.i.repack17.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_14.exit.i", %loop.preheader.i
  %index.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_14.exit.i" ]
  %next_index.i = add nuw i64 %index.i, 1
  %incrementing_element_loop_load.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i, align 8
  %incrementing_element_loop_load.unpack.elt10.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11.i = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i, align 8
  %incrementing_element_loop_load.unpack.elt12.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13.i = load i64, i64* %incrementing_element_loop_load.unpack.elt12.i, align 8
  %incrementing_element_loop_load.elt7.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 1
  %incrementing_element_loop_load.unpack8.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt7.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i, i8** %struct_field.i.repack.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i, i64* %struct_field.i.repack15.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13.i, i64* %struct_field.i.repack17.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_14.exit.i"

modify_rc.i.i.i:                                  ; preds = %loop.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %139 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %140 = load i64, i64* %139, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %140, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_14.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %141 = add i64 %140, -1
  store i64 %141, i64* %139, align 8
  %142 = icmp eq i64 %140, -9223372036854775808
  br i1 %142, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_14.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %"#Attr_#dec_14.exit.i"

"#Attr_#dec_14.exit.i":                           ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modify_rc.i.i.i, %loop.i
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack8.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #11
  %exitcond287.not = icmp eq i64 %next_index.i, %list_len.i
  br i1 %exitcond287.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_14.exit.i", %modification_list_block.i
  %143 = ptrtoint i8* %read_list_ptr.i to i64
  %144 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i27 = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %145 = select i1 %.not.i.i.i27, i64 %144, i64 %143
  %as_usize_ptr.i = inttoptr i64 %145 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %146 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %146, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_19.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %after_loop.i
  %147 = add i64 %146, -1
  store i64 %147, i64* %get_rc_ptr.i, align 8
  %148 = icmp eq i64 %146, -9223372036854775808
  br i1 %148, label %Then1.i.i.i.i, label %"#Attr_#dec_19.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %149 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %149, i32 8) #11
  br label %"#Attr_#dec_19.exit"

"#Attr_#dec_19.exit":                             ; preds = %"#Attr_#dec_16.exit", %after_loop.i, %Then.i.i.i.i, %Then1.i.i.i.i
  %load_element14.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 0, i64 0
  %load_element14.sroa.0.0.copyload = load i64, i64* %load_element14.sroa.0.0..sroa_idx, align 8
  %load_element14.sroa.2.0..sroa_idx158 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 1
  %load_element14.sroa.2.0.copyload = load i64, i64* %load_element14.sroa.2.0..sroa_idx158, align 8
  %load_element14.sroa.3.0..sroa_idx159 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 2
  %load_element14.sroa.3.0.copyload = load i64, i64* %load_element14.sroa.3.0..sroa_idx159, align 8
  %load_element14.sroa.4.0..sroa_idx160 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 3
  %load_element14.sroa.4.0.copyload = load i64, i64* %load_element14.sroa.4.0..sroa_idx160, align 8
  %load_element14.sroa.5.0..sroa_idx161 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 4
  %load_element14.sroa.5.0.copyload = load i64, i64* %load_element14.sroa.5.0..sroa_idx161, align 8
  %load_element14.sroa.6.0..sroa_idx162 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 5
  %load_element14.sroa.6.0.copyload = load i64, i64* %load_element14.sroa.6.0..sroa_idx162, align 8
  %load_element14.sroa.7.0..sroa_idx163 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 6
  %load_element14.sroa.7.0.copyload = load i64, i64* %load_element14.sroa.7.0..sroa_idx163, align 8
  %load_element14.sroa.8.0..sroa_idx164 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 7
  %load_element14.sroa.8.0.copyload = load i64, i64* %load_element14.sroa.8.0..sroa_idx164, align 8
  %load_element14.sroa.9.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 8
  %load_element14.sroa.9.0..sroa_cast = bitcast i64* %load_element14.sroa.9.0..sroa_idx to i8*
  %load_element14.sroa.9.0.copyload = load i8, i8* %load_element14.sroa.9.0..sroa_cast, align 8
  %load_element14.sroa.10.0..sroa_raw_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value to i8*
  %load_element14.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 65
  %load_element14.sroa.10.0.copyload = load i8, i8* %load_element14.sroa.10.0..sroa_raw_idx, align 1
  %load_element14.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 66
  %load_element14.sroa.11.0.copyload = load i8, i8* %load_element14.sroa.11.0..sroa_raw_idx, align 2
  %load_element14.sroa.12.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 67
  %load_element14.sroa.12.0.copyload = load i8, i8* %load_element14.sroa.12.0..sroa_raw_idx, align 1
  %load_element14.sroa.13.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 68
  %load_element14.sroa.13.0.copyload = load i8, i8* %load_element14.sroa.13.0..sroa_raw_idx, align 4
  %load_element14.sroa.14.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 69
  %load_element14.sroa.14.0.copyload = load i8, i8* %load_element14.sroa.14.0..sroa_raw_idx, align 1
  %load_element14.sroa.15.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 70
  %load_element14.sroa.15.0.copyload = load i8, i8* %load_element14.sroa.15.0..sroa_raw_idx, align 2
  %load_element14.sroa.16.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element14.sroa.10.0..sroa_raw_cast, i64 71
  %load_element14.sroa.16.0.copyload = load i8, i8* %load_element14.sroa.16.0..sroa_raw_idx, align 1
  %struct_alloca = alloca { { [0 x i64], [8 x i64], i8, [7 x i8] } }, align 8
  %.repack125.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %load_element14.sroa.0.0.copyload, i64* %.repack125.repack, align 8
  %.repack125.repack131 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %load_element14.sroa.2.0.copyload, i64* %.repack125.repack131, align 8
  %.repack125.repack133 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %load_element14.sroa.3.0.copyload, i64* %.repack125.repack133, align 8
  %.repack125.repack135 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 3
  store i64 %load_element14.sroa.4.0.copyload, i64* %.repack125.repack135, align 8
  %.repack125.repack137 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 4
  store i64 %load_element14.sroa.5.0.copyload, i64* %.repack125.repack137, align 8
  %.repack125.repack139 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 5
  store i64 %load_element14.sroa.6.0.copyload, i64* %.repack125.repack139, align 8
  %.repack125.repack141 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 6
  store i64 %load_element14.sroa.7.0.copyload, i64* %.repack125.repack141, align 8
  %.repack125.repack143 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 7
  store i64 %load_element14.sroa.8.0.copyload, i64* %.repack125.repack143, align 8
  %.repack127 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 %load_element14.sroa.9.0.copyload, i8* %.repack127, align 8
  %.repack129.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 0
  store i8 %load_element14.sroa.10.0.copyload, i8* %.repack129.repack, align 1
  %.repack129.repack145 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 1
  store i8 %load_element14.sroa.11.0.copyload, i8* %.repack129.repack145, align 2
  %.repack129.repack147 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 2
  store i8 %load_element14.sroa.12.0.copyload, i8* %.repack129.repack147, align 1
  %.repack129.repack149 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 3
  store i8 %load_element14.sroa.13.0.copyload, i8* %.repack129.repack149, align 4
  %.repack129.repack151 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 4
  store i8 %load_element14.sroa.14.0.copyload, i8* %.repack129.repack151, align 1
  %.repack129.repack153 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 5
  store i8 %load_element14.sroa.15.0.copyload, i8* %.repack129.repack153, align 2
  %.repack129.repack155 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 6
  store i8 %load_element14.sroa.16.0.copyload, i8* %.repack129.repack155, align 1
  %tag_alloca = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc nonnull { [0 x i64], [3 x i64] }* @Arg_toHelpHelper_b4a1ce1cc6482a6eb4e497188770c2a53ecfdb6ca89a71ba81bb9e1b77f5d151({ [0 x i64], [12 x i64] }* %"14") unnamed_addr #11 {
entry:
  %struct_field.i.i86 = alloca %str.RocStr, align 8
  %struct_field2.i361 = alloca %str.RocStr, align 8
  %struct_field1.i362 = alloca %str.RocStr, align 8
  %struct_field.i363 = alloca %str.RocStr, align 8
  %struct_field1.i343 = alloca %str.RocStr, align 8
  %struct_field.i344 = alloca %str.RocStr, align 8
  %element_to_pass_as_opaque.i.i304 = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  %struct_field2.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %element_to_pass_as_opaque.i.i266.sroa.5 = alloca [7 x i8], align 1
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %element_to_pass_as_opaque.i.i = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  %load_at_index_ptr_old172 = alloca %str.RocStr, align 8
  %load_at_index_ptr_old52 = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %load_at_index_ptr_old20.sroa.0 = alloca [10 x i64], align 8
  %load_at_index_ptr_old20.sroa.8 = alloca [7 x i8], align 1
  %load_at_index_ptr_old20.sroa.0.0.sroa_cast = bitcast [10 x i64]* %load_at_index_ptr_old20.sroa.0 to i8*
  %load_at_index_ptr_old20.sroa.8.0.sroa_idx = getelementptr inbounds [7 x i8], [7 x i8]* %load_at_index_ptr_old20.sroa.8, i64 0, i64 0
  %0 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  %1 = bitcast %str.RocStr* %struct_field.i.i to i8*
  %load_str_to_stack.i.i.i.elt42 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  %load_at_index_ptr_old20.sroa.0.24.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old20.sroa.0, i64 0, i64 3
  %load_at_index_ptr_old20.sroa.0.24.sroa_cast = bitcast i64* %load_at_index_ptr_old20.sroa.0.24.sroa_idx to i8*
  %load_str_to_stack.i2.i.i.elt47 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %2 = bitcast %str.RocStr* %struct_field2.i361 to i8*
  %3 = bitcast %str.RocStr* %struct_field1.i362 to i8*
  %4 = bitcast %str.RocStr* %struct_field.i363 to i8*
  %load_str_to_stack.i.i365.elt52 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i363, i64 0, i32 2
  %load_str_to_stack.i3.i375.elt57 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i362, i64 0, i32 2
  %load_at_index_ptr_old20.sroa.0.48.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old20.sroa.0, i64 0, i64 6
  %load_at_index_ptr_old20.sroa.0.48.sroa_cast = bitcast i64* %load_at_index_ptr_old20.sroa.0.48.sroa_idx to i8*
  %load_str_to_stack.i13.i386.elt62 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i361, i64 0, i32 2
  %element_to_pass_as_opaque.i.i266.sroa.5.0.sroa_idx178 = getelementptr inbounds [7 x i8], [7 x i8]* %element_to_pass_as_opaque.i.i266.sroa.5, i64 0, i64 0
  br label %joinpointcont

joinpointcont:                                    ; preds = %List_append_e56b21f4af1d4d1ebc75a4213027d7fc7fdbb958e9fbe1847a4d571f837a1.exit, %entry
  %joinpointarg = phi { [0 x i64], [12 x i64] }* [ %"14", %entry ], [ %load_at_index_ptr_old220, %List_append_e56b21f4af1d4d1ebc75a4213027d7fc7fdbb958e9fbe1847a4d571f837a1.exit ]
  %joinpointarg1 = phi %list.RocList [ zeroinitializer, %entry ], [ %load_list10.i14.i, %List_append_e56b21f4af1d4d1ebc75a4213027d7fc7fdbb958e9fbe1847a4d571f837a1.exit ]
  %to_int = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %5 = trunc i64 %to_int to i3
  switch i3 %5, label %default [
    i3 -4, label %branch4
    i3 0, label %branch0
    i3 -3, label %branch5
    i3 1, label %branch1
    i3 3, label %branch3
  ]

default:                                          ; preds = %joinpointcont
  %to_int.le265 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked143 = and i64 %to_int.le265, 7
  %index144 = sub nsw i64 0, %masked143
  %cast_to_i8_ptr145 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr146 = getelementptr inbounds i8, i8* %cast_to_i8_ptr145, i64 %index144
  %load_at_index_ptr_old150.sroa.0.0.new_ptr146.sroa_cast = bitcast i8* %new_ptr146 to i8**
  %load_at_index_ptr_old150.sroa.0.0.copyload = load i8*, i8** %load_at_index_ptr_old150.sroa.0.0.new_ptr146.sroa_cast, align 8
  %load_at_index_ptr_old150.sroa.3.0.new_ptr146.sroa_idx = getelementptr inbounds i8, i8* %new_ptr146, i64 8
  %load_at_index_ptr_old150.sroa.3.0.new_ptr146.sroa_cast = bitcast i8* %load_at_index_ptr_old150.sroa.3.0.new_ptr146.sroa_idx to i64*
  %load_at_index_ptr_old150.sroa.3.0.copyload = load i64, i64* %load_at_index_ptr_old150.sroa.3.0.new_ptr146.sroa_cast, align 8
  %load_at_index_ptr_old150.sroa.4.0.new_ptr146.sroa_idx = getelementptr inbounds i8, i8* %new_ptr146, i64 16
  %load_at_index_ptr_old150.sroa.4.0.new_ptr146.sroa_cast = bitcast i8* %load_at_index_ptr_old150.sroa.4.0.new_ptr146.sroa_idx to i64*
  %load_at_index_ptr_old150.sroa.4.0.copyload = load i64, i64* %load_at_index_ptr_old150.sroa.4.0.new_ptr146.sroa_cast, align 8
  %load_at_index_ptr_old150.sroa.5.0.new_ptr146.sroa_idx = getelementptr inbounds i8, i8* %new_ptr146, i64 24
  %load_at_index_ptr_old150.sroa.5.0.new_ptr146.sroa_cast = bitcast i8* %load_at_index_ptr_old150.sroa.5.0.new_ptr146.sroa_idx to i8**
  %load_at_index_ptr_old150.sroa.5.0.copyload = load i8*, i8** %load_at_index_ptr_old150.sroa.5.0.new_ptr146.sroa_cast, align 8
  %load_at_index_ptr_old150.sroa.7.0.new_ptr146.sroa_idx = getelementptr inbounds i8, i8* %new_ptr146, i64 32
  %load_at_index_ptr_old150.sroa.7.0.new_ptr146.sroa_cast = bitcast i8* %load_at_index_ptr_old150.sroa.7.0.new_ptr146.sroa_idx to i64*
  %load_at_index_ptr_old150.sroa.7.0.copyload = load i64, i64* %load_at_index_ptr_old150.sroa.7.0.new_ptr146.sroa_cast, align 8
  %load_at_index_ptr_old150.sroa.8.0.new_ptr146.sroa_idx = getelementptr inbounds i8, i8* %new_ptr146, i64 40
  %load_at_index_ptr_old150.sroa.8.0.new_ptr146.sroa_cast = bitcast i8* %load_at_index_ptr_old150.sroa.8.0.new_ptr146.sroa_idx to i64*
  %load_at_index_ptr_old150.sroa.8.0.copyload = load i64, i64* %load_at_index_ptr_old150.sroa.8.0.new_ptr146.sroa_cast, align 8
  %get_rc_ptr158.idx = sub nuw nsw i64 -8, %masked143
  %get_rc_ptr158 = getelementptr inbounds i8, i8* %cast_to_i8_ptr145, i64 %get_rc_ptr158.idx
  %6 = bitcast i8* %get_rc_ptr158 to i64*
  %get_refcount159 = load i64, i64* %6, align 8
  %is_one160 = icmp eq i64 %get_refcount159, -9223372036854775808
  br i1 %is_one160, label %then_block162, label %then187

common.ret:                                       ; preds = %List_append_6281bfaf93c1d0dad9837fadac8bc1d7b1c31152af44757fe4fdf481f3a82e.exit, %List_map_1fe6f3e2a4f56e3ef1c6f0b923362a18479f52254644e1ec57f598d5f12bf8e.exit, %List_append_437db3d252af3ff92ab2a7c2c7a3b53bf3c8aa05f6c581792e8f8e3e6a3db8f.exit, %branch0, %branch4
  %common.ret.op.in = phi i8* [ %call_builtin, %branch4 ], [ %call_builtin2, %branch0 ], [ %call_builtin86, %List_append_437db3d252af3ff92ab2a7c2c7a3b53bf3c8aa05f6c581792e8f8e3e6a3db8f.exit ], [ %indexed_pointer140, %List_map_1fe6f3e2a4f56e3ef1c6f0b923362a18479f52254644e1ec57f598d5f12bf8e.exit ], [ %call_builtin200, %List_append_6281bfaf93c1d0dad9837fadac8bc1d7b1c31152af44757fe4fdf481f3a82e.exit ]
  %common.ret.op = bitcast i8* %common.ret.op.in to { [0 x i64], [3 x i64] }*
  ret { [0 x i64], [3 x i64] }* %common.ret.op

branch4:                                          ; preds = %joinpointcont
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %joinpointarg)
  %call_builtin = tail call fastcc i8* @roc_builtins.utils.allocate_with_refcount(i64 24)
  %field_struct_gep.repack = bitcast i8* %call_builtin to i8**
  %joinpointarg1.elt225 = extractvalue %list.RocList %joinpointarg1, 0
  store i8* %joinpointarg1.elt225, i8** %field_struct_gep.repack, align 8
  %field_struct_gep.repack226 = getelementptr inbounds i8, i8* %call_builtin, i64 8
  %7 = bitcast i8* %field_struct_gep.repack226 to i64*
  %joinpointarg1.elt227 = extractvalue %list.RocList %joinpointarg1, 1
  store i64 %joinpointarg1.elt227, i64* %7, align 8
  %field_struct_gep.repack228 = getelementptr inbounds i8, i8* %call_builtin, i64 16
  %8 = bitcast i8* %field_struct_gep.repack228 to i64*
  %joinpointarg1.elt229 = extractvalue %list.RocList %joinpointarg1, 2
  store i64 %joinpointarg1.elt229, i64* %8, align 8
  br label %common.ret

branch0:                                          ; preds = %joinpointcont
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %joinpointarg)
  %call_builtin2 = tail call fastcc i8* @roc_builtins.utils.allocate_with_refcount(i64 24)
  %field_struct_gep5.repack = bitcast i8* %call_builtin2 to i8**
  %joinpointarg1.elt = extractvalue %list.RocList %joinpointarg1, 0
  store i8* %joinpointarg1.elt, i8** %field_struct_gep5.repack, align 8
  %field_struct_gep5.repack221 = getelementptr inbounds i8, i8* %call_builtin2, i64 8
  %9 = bitcast i8* %field_struct_gep5.repack221 to i64*
  %joinpointarg1.elt222 = extractvalue %list.RocList %joinpointarg1, 1
  store i64 %joinpointarg1.elt222, i64* %9, align 8
  %field_struct_gep5.repack223 = getelementptr inbounds i8, i8* %call_builtin2, i64 16
  %10 = bitcast i8* %field_struct_gep5.repack223 to i64*
  %joinpointarg1.elt224 = extractvalue %list.RocList %joinpointarg1, 2
  store i64 %joinpointarg1.elt224, i64* %10, align 8
  br label %common.ret

branch5:                                          ; preds = %joinpointcont
  %masked = and i64 %to_int, 7
  %index = sub nsw i64 0, %masked
  %cast_to_i8_ptr10 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr10, i64 %index
  %11 = bitcast i8* %new_ptr to { [0 x i64], [12 x i64] }**
  %load_at_index_ptr_old220 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %11, align 8
  %at_index_struct_gep_data19.idx = sub nuw nsw i64 8, %masked
  %at_index_struct_gep_data19 = getelementptr inbounds i8, i8* %cast_to_i8_ptr10, i64 %at_index_struct_gep_data19.idx
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %load_at_index_ptr_old20.sroa.0.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %at_index_struct_gep_data19, i64 80, i1 false)
  %load_at_index_ptr_old20.sroa.7.0.at_index_struct_gep_data19.sroa_raw_idx = getelementptr inbounds i8, i8* %at_index_struct_gep_data19, i64 80
  %load_at_index_ptr_old20.sroa.7.0.copyload = load i8, i8* %load_at_index_ptr_old20.sroa.7.0.at_index_struct_gep_data19.sroa_raw_idx, align 8
  %load_at_index_ptr_old20.sroa.8.0.at_index_struct_gep_data19.sroa_raw_idx = getelementptr inbounds i8, i8* %at_index_struct_gep_data19, i64 81
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(7) %load_at_index_ptr_old20.sroa.8.0.sroa_idx, i8* noundef nonnull align 1 dereferenceable(7) %load_at_index_ptr_old20.sroa.8.0.at_index_struct_gep_data19.sroa_raw_idx, i64 7, i1 false)
  %get_rc_ptr.idx = sub nuw nsw i64 -8, %masked
  %get_rc_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr10, i64 %get_rc_ptr.idx
  %12 = bitcast i8* %get_rc_ptr to i64*
  %get_refcount = load i64, i64* %12, align 8
  %is_one = icmp eq i64 %get_refcount, -9223372036854775808
  br i1 %is_one, label %then_block, label %then

branch1:                                          ; preds = %joinpointcont
  %to_int.le263 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked45 = and i64 %to_int.le263, 7
  %index46 = sub nsw i64 0, %masked45
  %cast_to_i8_ptr47 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr48 = getelementptr inbounds i8, i8* %cast_to_i8_ptr47, i64 %index46
  %13 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %13, i8* noundef nonnull align 8 dereferenceable(80) %new_ptr48, i64 80, i1 false)
  %get_rc_ptr60.idx = sub nuw nsw i64 -8, %masked45
  %get_rc_ptr60 = getelementptr inbounds i8, i8* %cast_to_i8_ptr47, i64 %get_rc_ptr60.idx
  %14 = bitcast i8* %get_rc_ptr60 to i64*
  %get_refcount61 = load i64, i64* %14, align 8
  %is_one62 = icmp eq i64 %get_refcount61, -9223372036854775808
  br i1 %is_one62, label %then_block64, label %then80

branch3:                                          ; preds = %joinpointcont
  %to_int.le = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  tail call fastcc void @"#Attr_#dec_20"(%list.RocList %joinpointarg1)
  %masked94 = and i64 %to_int.le, 7
  %index95 = sub nsw i64 0, %masked94
  %cast_to_i8_ptr96 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr97 = getelementptr inbounds i8, i8* %cast_to_i8_ptr96, i64 %index95
  %load_at_index_ptr_old101.elt = bitcast i8* %new_ptr97 to i8**
  %load_at_index_ptr_old101.unpack = load i8*, i8** %load_at_index_ptr_old101.elt, align 8
  %load_at_index_ptr_old101.elt207 = getelementptr inbounds i8, i8* %new_ptr97, i64 8
  %15 = bitcast i8* %load_at_index_ptr_old101.elt207 to i64*
  %load_at_index_ptr_old101.unpack208 = load i64, i64* %15, align 8
  %load_at_index_ptr_old101.elt209 = getelementptr inbounds i8, i8* %new_ptr97, i64 16
  %16 = bitcast i8* %load_at_index_ptr_old101.elt209 to i64*
  %load_at_index_ptr_old101.unpack210 = load i64, i64* %16, align 8
  %get_rc_ptr109.idx = sub nuw nsw i64 -8, %masked94
  %get_rc_ptr109 = getelementptr inbounds i8, i8* %cast_to_i8_ptr96, i64 %get_rc_ptr109.idx
  %17 = bitcast i8* %get_rc_ptr109 to i64*
  %get_refcount110 = load i64, i64* %17, align 8
  %is_one111 = icmp eq i64 %get_refcount110, -9223372036854775808
  br i1 %is_one111, label %then_block113, label %then129

then_block:                                       ; preds = %branch5
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %12)
  br label %joinpointcont21

then:                                             ; preds = %branch5
  %to_int1.i = ptrtoint { [0 x i64], [12 x i64] }* %load_at_index_ptr_old220 to i64
  %masked.i = and i64 %to_int1.i, 7
  %cast_to_i8_ptr.i = bitcast { [0 x i64], [12 x i64] }* %load_at_index_ptr_old220 to i8*
  %get_rc_ptr.i.idx = sub nuw nsw i64 -8, %masked.i
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i, i64 %get_rc_ptr.i.idx
  %18 = bitcast i8* %get_rc_ptr.i to i64*
  %19 = load i64, i64* %18, align 8
  %.not.i.i = icmp eq i64 %19, 0
  br i1 %.not.i.i, label %"#Attr_#inc_2.exit", label %Then.i.i

Then.i.i:                                         ; preds = %then
  %20 = add nsw i64 %19, 1
  store i64 %20, i64* %18, align 8
  br label %"#Attr_#inc_2.exit"

"#Attr_#inc_2.exit":                              ; preds = %then, %Then.i.i
  switch i8 %load_at_index_ptr_old20.sroa.7.0.copyload, label %"#Attr_#inc_8.exit" [
    i8 0, label %tag_id_modify.i
    i8 1, label %tag_id_modify1.i
  ]

tag_id_modify.i:                                  ; preds = %"#Attr_#inc_2.exit"
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old20.sroa.0.0.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i.i365.unpack53 = load i64, i64* %load_str_to_stack.i.i365.elt52, align 8
  %is_big_str.i.i367 = icmp sgt i64 %load_str_to_stack.i.i365.unpack53, 0
  br i1 %is_big_str.i.i367, label %modify_rc.i.i372, label %"#Attr_#inc_4.exit.i378"

modify_rc.i.i372:                                 ; preds = %tag_id_modify.i
  %call_builtin.i.i368 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i363) #11
  %get_rc_ptr.i.i370 = getelementptr inbounds i8, i8* %call_builtin.i.i368, i64 -8
  %21 = bitcast i8* %get_rc_ptr.i.i370 to i64*
  %22 = load i64, i64* %21, align 8
  %.not.i.i.i371 = icmp eq i64 %22, 0
  br i1 %.not.i.i.i371, label %"#Attr_#inc_4.exit.i378", label %Then.i.i.i373

Then.i.i.i373:                                    ; preds = %modify_rc.i.i372
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8
  br label %"#Attr_#inc_4.exit.i378"

"#Attr_#inc_4.exit.i378":                         ; preds = %Then.i.i.i373, %modify_rc.i.i372, %tag_id_modify.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old20.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i3.i375.unpack58 = load i64, i64* %load_str_to_stack.i3.i375.elt57, align 8
  %is_big_str.i5.i377 = icmp sgt i64 %load_str_to_stack.i3.i375.unpack58, 0
  br i1 %is_big_str.i5.i377, label %modify_rc.i10.i383, label %"#Attr_#inc_4.exit12.i389"

modify_rc.i10.i383:                               ; preds = %"#Attr_#inc_4.exit.i378"
  %call_builtin.i6.i379 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i362) #11
  %get_rc_ptr.i8.i381 = getelementptr inbounds i8, i8* %call_builtin.i6.i379, i64 -8
  %24 = bitcast i8* %get_rc_ptr.i8.i381 to i64*
  %25 = load i64, i64* %24, align 8
  %.not.i.i9.i382 = icmp eq i64 %25, 0
  br i1 %.not.i.i9.i382, label %"#Attr_#inc_4.exit12.i389", label %Then.i.i11.i384

Then.i.i11.i384:                                  ; preds = %modify_rc.i10.i383
  %26 = add nsw i64 %25, 1
  store i64 %26, i64* %24, align 8
  br label %"#Attr_#inc_4.exit12.i389"

"#Attr_#inc_4.exit12.i389":                       ; preds = %Then.i.i11.i384, %modify_rc.i10.i383, %"#Attr_#inc_4.exit.i378"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %2, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old20.sroa.0.48.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i13.i386.unpack63 = load i64, i64* %load_str_to_stack.i13.i386.elt62, align 8
  %is_big_str.i15.i388 = icmp sgt i64 %load_str_to_stack.i13.i386.unpack63, 0
  br i1 %is_big_str.i15.i388, label %modify_rc.i20.i394, label %"#Attr_#inc_3.exit396"

modify_rc.i20.i394:                               ; preds = %"#Attr_#inc_4.exit12.i389"
  %call_builtin.i16.i390 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i361) #11
  %get_rc_ptr.i18.i392 = getelementptr inbounds i8, i8* %call_builtin.i16.i390, i64 -8
  %27 = bitcast i8* %get_rc_ptr.i18.i392 to i64*
  %28 = load i64, i64* %27, align 8
  %.not.i.i19.i393 = icmp eq i64 %28, 0
  br i1 %.not.i.i19.i393, label %"#Attr_#inc_3.exit396", label %Then.i.i21.i395

Then.i.i21.i395:                                  ; preds = %modify_rc.i20.i394
  %29 = add nsw i64 %28, 1
  store i64 %29, i64* %27, align 8
  br label %"#Attr_#inc_3.exit396"

"#Attr_#inc_3.exit396":                           ; preds = %"#Attr_#inc_4.exit12.i389", %modify_rc.i20.i394, %Then.i.i21.i395
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  br label %"#Attr_#inc_8.exit"

tag_id_modify1.i:                                 ; preds = %"#Attr_#inc_2.exit"
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old20.sroa.0.0.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i.i.i.unpack43 = load i64, i64* %load_str_to_stack.i.i.i.elt42, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack43, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %tag_id_modify1.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %30 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %31 = load i64, i64* %30, align 8
  %.not.i.i.i.i = icmp eq i64 %31, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i.i.i
  %32 = add nsw i64 %31, 1
  store i64 %32, i64* %30, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i.i, %modify_rc.i.i.i, %tag_id_modify1.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %0, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old20.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i2.i.i.unpack48 = load i64, i64* %load_str_to_stack.i2.i.i.elt47, align 8
  %is_big_str.i4.i.i = icmp sgt i64 %load_str_to_stack.i2.i.i.unpack48, 0
  br i1 %is_big_str.i4.i.i, label %modify_rc.i9.i.i, label %"#Attr_#inc_5.exit.i"

modify_rc.i9.i.i:                                 ; preds = %"#Attr_#inc_4.exit.i.i"
  %call_builtin.i5.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i7.i.i = getelementptr inbounds i8, i8* %call_builtin.i5.i.i, i64 -8
  %33 = bitcast i8* %get_rc_ptr.i7.i.i to i64*
  %34 = load i64, i64* %33, align 8
  %.not.i.i8.i.i = icmp eq i64 %34, 0
  br i1 %.not.i.i8.i.i, label %"#Attr_#inc_5.exit.i", label %Then.i.i10.i.i

Then.i.i10.i.i:                                   ; preds = %modify_rc.i9.i.i
  %35 = add nsw i64 %34, 1
  store i64 %35, i64* %33, align 8
  br label %"#Attr_#inc_5.exit.i"

"#Attr_#inc_5.exit.i":                            ; preds = %Then.i.i10.i.i, %modify_rc.i9.i.i, %"#Attr_#inc_4.exit.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  br label %"#Attr_#inc_8.exit"

"#Attr_#inc_8.exit":                              ; preds = %"#Attr_#inc_2.exit", %"#Attr_#inc_3.exit396", %"#Attr_#inc_5.exit.i"
  %36 = load i64, i64* %12, align 8
  %.not.i.i.i265 = icmp eq i64 %36, 0
  br i1 %.not.i.i.i265, label %joinpointcont21, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %"#Attr_#inc_8.exit"
  %37 = add i64 %36, -1
  store i64 %37, i64* %12, align 8
  %38 = icmp eq i64 %36, -9223372036854775808
  br i1 %38, label %Then1.i.i.i, label %joinpointcont21

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  br label %joinpointcont21

joinpointcont21:                                  ; preds = %Then1.i.i.i, %Then.i.i.i, %"#Attr_#inc_8.exit", %then_block
  %"#arg1.elt.i.i270" = extractvalue %list.RocList %joinpointarg1, 0
  %"#arg1.elt3.i.i272" = extractvalue %list.RocList %joinpointarg1, 1
  %"#arg1.elt5.i.i274" = extractvalue %list.RocList %joinpointarg1, 2
  %.not.i.i.i.i275 = icmp slt i64 %"#arg1.elt5.i.i274", 0
  %39 = select i1 %.not.i.i.i.i275, i64 %"#arg1.elt3.i.i272", i64 %"#arg1.elt5.i.i274"
  %40 = add nuw i64 %"#arg1.elt3.i.i272", 1
  %.not.i.i.i276.not = icmp ugt i64 %39, %"#arg1.elt3.i.i272"
  br i1 %.not.i.i.i276.not, label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i, label %Else.i.i.i

Else.i.i.i:                                       ; preds = %joinpointcont21
  %.not.i1.i.i.i = icmp eq i8* %"#arg1.elt.i.i270", null
  br i1 %.not.i1.i.i.i, label %EndIf.i27.i.i.i.i, label %OptionalThen.i.i.i.i

OptionalThen.i.i.i.i:                             ; preds = %Else.i.i.i
  %41 = icmp ne i64 %39, 0
  %42 = or i1 %.not.i.i.i.i275, %41
  br i1 %42, label %list.RocList.isUnique.exit.i.i.i.i, label %Then.i.i.i.i278

list.RocList.isUnique.exit.i.i.i.i:               ; preds = %OptionalThen.i.i.i.i
  %43 = getelementptr inbounds i8, i8* %"#arg1.elt.i.i270", i64 -8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !184
  %phi.cmp.i.i.i.i.i = icmp eq i64 %45, -9223372036854775808
  %46 = xor i1 %.not.i.i.i.i275, true
  %or.cond.i.i.i.i = select i1 %phi.cmp.i.i.i.i.i, i1 %46, i1 false
  br i1 %or.cond.i.i.i.i, label %Then.i.i.i.i278, label %OptionalEndIf.i.i.i.i.i

Then.i.i.i.i278:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i, %OptionalThen.i.i.i.i
  %.not21.i.i.i.i.not = icmp ugt i64 %"#arg1.elt5.i.i274", %"#arg1.elt3.i.i272"
  br i1 %.not21.i.i.i.i.not, label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i, label %Else.i.i.i.i

Else.i.i.i.i:                                     ; preds = %Then.i.i.i.i278
  %47 = icmp eq i64 %"#arg1.elt5.i.i274", 0
  br i1 %47, label %EndIf9.i.i.i.i.i, label %Else1.i.i.i.i.i

Else1.i.i.i.i.i:                                  ; preds = %Else.i.i.i.i
  %48 = icmp ult i64 %"#arg1.elt5.i.i274", 46
  br i1 %48, label %Then4.i.i.i.i.i, label %Else2.i.i.i.i.i

Else2.i.i.i.i.i:                                  ; preds = %Else1.i.i.i.i.i
  %49 = icmp ugt i64 %"#arg1.elt5.i.i274", 1489
  br i1 %49, label %Then5.i.i.i.i.i, label %Else6.i.i.i.i.i

Then4.i.i.i.i.i:                                  ; preds = %Else1.i.i.i.i.i
  %50 = shl nuw nsw i64 %"#arg1.elt5.i.i274", 1
  br label %EndIf9.i.i.i.i.i

Then5.i.i.i.i.i:                                  ; preds = %Else2.i.i.i.i.i
  %51 = shl nuw i64 %"#arg1.elt5.i.i274", 1
  br label %EndIf9.i.i.i.i.i

Else6.i.i.i.i.i:                                  ; preds = %Else2.i.i.i.i.i
  %52 = mul nuw nsw i64 %"#arg1.elt5.i.i274", 3
  %53 = add nuw nsw i64 %52, 1
  %54 = lshr i64 %53, 1
  br label %EndIf9.i.i.i.i.i

EndIf9.i.i.i.i.i:                                 ; preds = %Else6.i.i.i.i.i, %Then5.i.i.i.i.i, %Then4.i.i.i.i.i, %Else.i.i.i.i
  %new_capacity.0.i.i.i.i.i = phi i64 [ %50, %Then4.i.i.i.i.i ], [ %51, %Then5.i.i.i.i.i ], [ %54, %Else6.i.i.i.i.i ], [ 0, %Else.i.i.i.i ]
  %55 = icmp ugt i64 %new_capacity.0.i.i.i.i.i, %40
  %..i.i.i.i.i.i = select i1 %55, i64 %new_capacity.0.i.i.i.i.i, i64 %40
  %56 = mul nuw i64 %"#arg1.elt5.i.i274", 88
  %57 = mul nuw i64 %..i.i.i.i.i.i, 88
  %.not.i.i.i.i.i = icmp ult i64 %56, %57
  br i1 %.not.i.i.i.i.i, label %EndIf.i.i.i.i.i, label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i

EndIf.i.i.i.i.i:                                  ; preds = %EndIf9.i.i.i.i.i
  %58 = add nuw i64 %57, 8
  %59 = add nuw i64 %56, 8
  %60 = getelementptr inbounds i8, i8* %"#arg1.elt.i.i270", i64 -8
  %61 = tail call i8* @roc_realloc(i8* %60, i64 %58, i64 %59, i32 8) #11, !noalias !184
  %62 = getelementptr inbounds i8, i8* %61, i64 8
  br label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i

OptionalEndIf.i.i.i.i.i:                          ; preds = %list.RocList.isUnique.exit.i.i.i.i
  %63 = mul nuw i64 %40, 88
  %64 = add nuw i64 %63, 8
  %65 = tail call i8* @roc_alloc(i64 %64, i32 8) #11, !noalias !189
  %66 = icmp ne i8* %65, null
  tail call void @llvm.assume(i1 %66) #11
  %67 = getelementptr inbounds i8, i8* %65, i64 8
  %68 = bitcast i8* %65 to i64*
  store i64 -9223372036854775808, i64* %68, align 8, !noalias !189
  %69 = mul nuw i64 %"#arg1.elt3.i.i272", 88
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %67, i8* nonnull align 1 %"#arg1.elt.i.i270", i64 %69, i1 false) #11, !noalias !194
  %70 = getelementptr inbounds i8, i8* %67, i64 %69
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(88) %70, i8 0, i64 88, i1 false) #11, !noalias !194
  %phi.cast.i.i.i.i.i = ptrtoint i8* %"#arg1.elt.i.i270" to i64
  %71 = shl i64 %"#arg1.elt5.i.i274", 1
  %72 = select i1 %.not.i.i.i.i275, i64 %71, i64 %phi.cast.i.i.i.i.i
  %73 = icmp ne i64 %"#arg1.elt5.i.i274", 0
  %74 = icmp ne i64 %72, 0
  %or.cond.i.i.i.i.i.i.i = select i1 %73, i1 %74, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i, label %OptionalNonNull.i.i.i.i.i.i.i, label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i

OptionalNonNull.i.i.i.i.i.i.i:                    ; preds = %OptionalEndIf.i.i.i.i.i
  %75 = inttoptr i64 %72 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 -8
  %77 = bitcast i8* %76 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !194
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %78, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %OptionalNonNull.i.i.i.i.i.i.i
  %79 = add i64 %78, -1
  store i64 %79, i64* %77, align 8, !noalias !194
  %80 = icmp eq i64 %78, -9223372036854775808
  br i1 %80, label %Then1.i.i.i.i.i.i.i.i, label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %76, i32 8) #11, !noalias !194
  br label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i

EndIf.i27.i.i.i.i:                                ; preds = %Else.i.i.i
  %81 = mul nuw i64 %40, 88
  %82 = add nuw i64 %81, 8
  %83 = tail call i8* @roc_alloc(i64 %82, i32 8) #11, !noalias !195
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #11
  %85 = getelementptr inbounds i8, i8* %83, i64 8
  %86 = bitcast i8* %83 to i64*
  store i64 -9223372036854775808, i64* %86, align 8, !noalias !195
  br label %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i

List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i: ; preds = %EndIf.i27.i.i.i.i, %Then.i.i.i.i278, %EndIf.i.i.i.i.i, %EndIf9.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i, %OptionalEndIf.i.i.i.i.i, %joinpointcont21
  %list_alloca.i.i268.sroa.0.0 = phi i8* [ %"#arg1.elt.i.i270", %joinpointcont21 ], [ %85, %EndIf.i27.i.i.i.i ], [ %"#arg1.elt.i.i270", %Then.i.i.i.i278 ], [ %62, %EndIf.i.i.i.i.i ], [ %"#arg1.elt.i.i270", %EndIf9.i.i.i.i.i ], [ %67, %Then1.i.i.i.i.i.i.i.i ], [ %67, %Then.i.i.i.i.i.i.i.i ], [ %67, %OptionalNonNull.i.i.i.i.i.i.i ], [ %67, %OptionalEndIf.i.i.i.i.i ]
  %list_alloca.i.i268.sroa.6.0 = phi i64 [ %"#arg1.elt5.i.i274", %joinpointcont21 ], [ %40, %EndIf.i27.i.i.i.i ], [ %"#arg1.elt5.i.i274", %Then.i.i.i.i278 ], [ %..i.i.i.i.i.i, %EndIf.i.i.i.i.i ], [ %..i.i.i.i.i.i, %EndIf9.i.i.i.i.i ], [ %40, %Then1.i.i.i.i.i.i.i.i ], [ %40, %Then.i.i.i.i.i.i.i.i ], [ %40, %OptionalNonNull.i.i.i.i.i.i.i ], [ %40, %OptionalEndIf.i.i.i.i.i ]
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %element_to_pass_as_opaque.i.i266.sroa.5.0.sroa_idx178)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(7) %element_to_pass_as_opaque.i.i266.sroa.5.0.sroa_idx178, i8* noundef nonnull align 1 dereferenceable(7) %load_at_index_ptr_old20.sroa.8.0.sroa_idx, i64 7, i1 false)
  %.not.i.i7.i = icmp eq i8* %list_alloca.i.i268.sroa.0.0, null
  br i1 %.not.i.i7.i, label %List_append_e56b21f4af1d4d1ebc75a4213027d7fc7fdbb958e9fbe1847a4d571f837a1.exit, label %OptionalThen1.i.i.i292

OptionalThen1.i.i.i292:                           ; preds = %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i
  %87 = mul nuw i64 %"#arg1.elt3.i.i272", 88
  %88 = getelementptr inbounds i8, i8* %list_alloca.i.i268.sroa.0.0, i64 %87
  call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(80) %88, i8* noundef nonnull align 8 dereferenceable(80) %load_at_index_ptr_old20.sroa.0.0.sroa_cast, i64 80, i1 false)
  %element_to_pass_as_opaque.i.i266.sroa.4.0..sroa_raw_idx = getelementptr inbounds i8, i8* %88, i64 80
  store i8 %load_at_index_ptr_old20.sroa.7.0.copyload, i8* %element_to_pass_as_opaque.i.i266.sroa.4.0..sroa_raw_idx, align 1, !noalias !198
  %element_to_pass_as_opaque.i.i266.sroa.5.0..sroa_raw_idx = getelementptr inbounds i8, i8* %88, i64 81
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(7) %element_to_pass_as_opaque.i.i266.sroa.5.0..sroa_raw_idx, i8* noundef nonnull align 1 dereferenceable(7) %element_to_pass_as_opaque.i.i266.sroa.5.0.sroa_idx178, i64 7, i1 false), !noalias !198
  br label %List_append_e56b21f4af1d4d1ebc75a4213027d7fc7fdbb958e9fbe1847a4d571f837a1.exit

List_append_e56b21f4af1d4d1ebc75a4213027d7fc7fdbb958e9fbe1847a4d571f837a1.exit: ; preds = %List_reserve_7bb9da30837a8defc5b1da5f3fb75f4045271ce9c3f7e523bc681bb5189088ff.exit.i, %OptionalThen1.i.i.i292
  %89 = insertvalue %list.RocList undef, i8* %list_alloca.i.i268.sroa.0.0, 0
  %90 = insertvalue %list.RocList %89, i64 %40, 1
  %load_list10.i14.i = insertvalue %list.RocList %90, i64 %list_alloca.i.i268.sroa.6.0, 2
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %element_to_pass_as_opaque.i.i266.sroa.5.0.sroa_idx178)
  br label %joinpointcont

then_block64:                                     ; preds = %branch1
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %14)
  br label %joinpointcont53

then80:                                           ; preds = %branch1
  %91 = bitcast %str.RocStr* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91)
  %92 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92)
  %93 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %93, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr48, i64 24, i1 false)
  %load_str_to_stack.i.i.elt27 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack28 = load i64, i64* %load_str_to_stack.i.i.elt27, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack28, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#inc_4.exit.i"

modify_rc.i.i:                                    ; preds = %then80
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %94 = bitcast i8* %get_rc_ptr.i.i to i64*
  %95 = load i64, i64* %94, align 8
  %.not.i.i.i296 = icmp eq i64 %95, 0
  br i1 %.not.i.i.i296, label %"#Attr_#inc_4.exit.i", label %Then.i.i.i297

Then.i.i.i297:                                    ; preds = %modify_rc.i.i
  %96 = add nsw i64 %95, 1
  store i64 %96, i64* %94, align 8
  br label %"#Attr_#inc_4.exit.i"

"#Attr_#inc_4.exit.i":                            ; preds = %Then.i.i.i297, %modify_rc.i.i, %then80
  %struct_field_access_record_1.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old52, i64 0, i32 1
  %97 = bitcast %str.RocStr* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %92, i8* noundef nonnull align 8 dereferenceable(24) %97, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.elt32 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i3.i.unpack33 = load i64, i64* %load_str_to_stack.i3.i.elt32, align 8
  %is_big_str.i5.i = icmp sgt i64 %load_str_to_stack.i3.i.unpack33, 0
  br i1 %is_big_str.i5.i, label %modify_rc.i10.i, label %"#Attr_#inc_4.exit12.i"

modify_rc.i10.i:                                  ; preds = %"#Attr_#inc_4.exit.i"
  %call_builtin.i6.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i8.i = getelementptr inbounds i8, i8* %call_builtin.i6.i, i64 -8
  %98 = bitcast i8* %get_rc_ptr.i8.i to i64*
  %99 = load i64, i64* %98, align 8
  %.not.i.i9.i = icmp eq i64 %99, 0
  br i1 %.not.i.i9.i, label %"#Attr_#inc_4.exit12.i", label %Then.i.i11.i

Then.i.i11.i:                                     ; preds = %modify_rc.i10.i
  %100 = add nsw i64 %99, 1
  store i64 %100, i64* %98, align 8
  br label %"#Attr_#inc_4.exit12.i"

"#Attr_#inc_4.exit12.i":                          ; preds = %Then.i.i11.i, %modify_rc.i10.i, %"#Attr_#inc_4.exit.i"
  %struct_field_access_record_2.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old52, i64 0, i32 2
  %101 = bitcast %str.RocStr* %struct_field_access_record_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %91, i8* noundef nonnull align 8 dereferenceable(24) %101, i64 24, i1 false) #11
  %load_str_to_stack.i13.i.elt37 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i, i64 0, i32 2
  %load_str_to_stack.i13.i.unpack38 = load i64, i64* %load_str_to_stack.i13.i.elt37, align 8
  %is_big_str.i15.i = icmp sgt i64 %load_str_to_stack.i13.i.unpack38, 0
  br i1 %is_big_str.i15.i, label %modify_rc.i20.i, label %"#Attr_#inc_3.exit"

modify_rc.i20.i:                                  ; preds = %"#Attr_#inc_4.exit12.i"
  %call_builtin.i16.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i) #11
  %get_rc_ptr.i18.i = getelementptr inbounds i8, i8* %call_builtin.i16.i, i64 -8
  %102 = bitcast i8* %get_rc_ptr.i18.i to i64*
  %103 = load i64, i64* %102, align 8
  %.not.i.i19.i = icmp eq i64 %103, 0
  br i1 %.not.i.i19.i, label %"#Attr_#inc_3.exit", label %Then.i.i21.i

Then.i.i21.i:                                     ; preds = %modify_rc.i20.i
  %104 = add nsw i64 %103, 1
  store i64 %104, i64* %102, align 8
  br label %"#Attr_#inc_3.exit"

"#Attr_#inc_3.exit":                              ; preds = %"#Attr_#inc_4.exit12.i", %modify_rc.i20.i, %Then.i.i21.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93)
  %105 = load i64, i64* %14, align 8
  %.not.i.i.i298 = icmp eq i64 %105, 0
  br i1 %.not.i.i.i298, label %joinpointcont53, label %Then.i.i.i299

Then.i.i.i299:                                    ; preds = %"#Attr_#inc_3.exit"
  %106 = add i64 %105, -1
  store i64 %106, i64* %14, align 8
  %107 = icmp eq i64 %105, -9223372036854775808
  br i1 %107, label %Then1.i.i.i300, label %joinpointcont53

Then1.i.i.i300:                                   ; preds = %Then.i.i.i299
  tail call void @roc_dealloc(i8* %get_rc_ptr60, i32 8) #11
  br label %joinpointcont53

joinpointcont53:                                  ; preds = %Then1.i.i.i300, %Then.i.i.i299, %"#Attr_#inc_3.exit", %then_block64
  %tag_alloca = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %108 = bitcast [10 x i64]* %data_buffer to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %108, i8* noundef nonnull align 8 dereferenceable(80) %13, i64 80, i1 false)
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr, align 8
  %"#arg1.elt.i" = extractvalue %list.RocList %joinpointarg1, 0
  %"#arg1.elt3.i" = extractvalue %list.RocList %joinpointarg1, 1
  %"#arg1.elt5.i" = extractvalue %list.RocList %joinpointarg1, 2
  %.not.i.i.i80 = icmp slt i64 %"#arg1.elt5.i", 0
  %109 = select i1 %.not.i.i.i80, i64 %"#arg1.elt3.i", i64 %"#arg1.elt5.i"
  %110 = add nuw i64 %"#arg1.elt3.i", 1
  %.not.i.not.i = icmp ugt i64 %109, %"#arg1.elt3.i"
  br i1 %.not.i.not.i, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit, label %Else.i.i

Else.i.i:                                         ; preds = %joinpointcont53
  %.not.i1.i.i = icmp eq i8* %"#arg1.elt.i", null
  br i1 %.not.i1.i.i, label %EndIf.i27.i.i.i, label %OptionalThen.i.i.i

OptionalThen.i.i.i:                               ; preds = %Else.i.i
  %111 = icmp ne i64 %109, 0
  %112 = or i1 %.not.i.i.i80, %111
  br i1 %112, label %list.RocList.isUnique.exit.i.i.i, label %Then.i.i.i81

list.RocList.isUnique.exit.i.i.i:                 ; preds = %OptionalThen.i.i.i
  %113 = getelementptr inbounds i8, i8* %"#arg1.elt.i", i64 -8
  %114 = bitcast i8* %113 to i64*
  %115 = load i64, i64* %114, align 8, !noalias !201
  %phi.cmp.i.i.i.i = icmp eq i64 %115, -9223372036854775808
  %116 = xor i1 %.not.i.i.i80, true
  %or.cond.i.i.i = select i1 %phi.cmp.i.i.i.i, i1 %116, i1 false
  br i1 %or.cond.i.i.i, label %Then.i.i.i81, label %OptionalEndIf.i.i.i.i

Then.i.i.i81:                                     ; preds = %list.RocList.isUnique.exit.i.i.i, %OptionalThen.i.i.i
  %.not21.i.i.not.i = icmp ugt i64 %"#arg1.elt5.i", %"#arg1.elt3.i"
  br i1 %.not21.i.i.not.i, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread, label %Else.i.i.i82

Else.i.i.i82:                                     ; preds = %Then.i.i.i81
  %117 = icmp eq i64 %"#arg1.elt5.i", 0
  br i1 %117, label %EndIf9.i.i.i.i, label %Else1.i.i.i.i

Else1.i.i.i.i:                                    ; preds = %Else.i.i.i82
  %118 = icmp ult i64 %"#arg1.elt5.i", 46
  br i1 %118, label %Then4.i.i.i.i, label %Else2.i.i.i.i

Else2.i.i.i.i:                                    ; preds = %Else1.i.i.i.i
  %119 = icmp ugt i64 %"#arg1.elt5.i", 1489
  br i1 %119, label %Then5.i.i.i.i, label %Else6.i.i.i.i

Then4.i.i.i.i:                                    ; preds = %Else1.i.i.i.i
  %120 = shl nuw nsw i64 %"#arg1.elt5.i", 1
  br label %EndIf9.i.i.i.i

Then5.i.i.i.i:                                    ; preds = %Else2.i.i.i.i
  %121 = shl nuw i64 %"#arg1.elt5.i", 1
  br label %EndIf9.i.i.i.i

Else6.i.i.i.i:                                    ; preds = %Else2.i.i.i.i
  %122 = mul nuw nsw i64 %"#arg1.elt5.i", 3
  %123 = add nuw nsw i64 %122, 1
  %124 = lshr i64 %123, 1
  br label %EndIf9.i.i.i.i

EndIf9.i.i.i.i:                                   ; preds = %Else6.i.i.i.i, %Then5.i.i.i.i, %Then4.i.i.i.i, %Else.i.i.i82
  %new_capacity.0.i.i.i.i = phi i64 [ %120, %Then4.i.i.i.i ], [ %121, %Then5.i.i.i.i ], [ %124, %Else6.i.i.i.i ], [ 0, %Else.i.i.i82 ]
  %125 = icmp ugt i64 %new_capacity.0.i.i.i.i, %110
  %..i.i.i.i.i83 = select i1 %125, i64 %new_capacity.0.i.i.i.i, i64 %110
  %126 = mul nuw i64 %"#arg1.elt5.i", 88
  %127 = mul nuw i64 %..i.i.i.i.i83, 88
  %.not.i.i.i.i84 = icmp ult i64 %126, %127
  br i1 %.not.i.i.i.i84, label %EndIf.i.i.i.i, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread

EndIf.i.i.i.i:                                    ; preds = %EndIf9.i.i.i.i
  %128 = add nuw i64 %127, 8
  %129 = add nuw i64 %126, 8
  %130 = getelementptr inbounds i8, i8* %"#arg1.elt.i", i64 -8
  %131 = tail call i8* @roc_realloc(i8* %130, i64 %128, i64 %129, i32 8) #11, !noalias !201
  %132 = getelementptr inbounds i8, i8* %131, i64 8
  br label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread

OptionalEndIf.i.i.i.i:                            ; preds = %list.RocList.isUnique.exit.i.i.i
  %133 = mul nuw i64 %110, 88
  %134 = add nuw i64 %133, 8
  %135 = tail call i8* @roc_alloc(i64 %134, i32 8) #11, !noalias !206
  %136 = icmp ne i8* %135, null
  tail call void @llvm.assume(i1 %136) #11
  %137 = getelementptr inbounds i8, i8* %135, i64 8
  %138 = bitcast i8* %135 to i64*
  store i64 -9223372036854775808, i64* %138, align 8, !noalias !206
  %139 = mul nuw i64 %"#arg1.elt3.i", 88
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %137, i8* nonnull align 1 %"#arg1.elt.i", i64 %139, i1 false) #11, !noalias !211
  %140 = getelementptr inbounds i8, i8* %137, i64 %139
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(88) %140, i8 0, i64 88, i1 false) #11, !noalias !211
  %phi.cast.i.i.i.i = ptrtoint i8* %"#arg1.elt.i" to i64
  %141 = shl i64 %"#arg1.elt5.i", 1
  %142 = select i1 %.not.i.i.i80, i64 %141, i64 %phi.cast.i.i.i.i
  %143 = icmp ne i64 %"#arg1.elt5.i", 0
  %144 = icmp ne i64 %142, 0
  %or.cond.i.i.i.i.i.i = select i1 %143, i1 %144, i1 false
  br i1 %or.cond.i.i.i.i.i.i, label %OptionalNonNull.i.i.i.i.i.i, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread

OptionalNonNull.i.i.i.i.i.i:                      ; preds = %OptionalEndIf.i.i.i.i
  %145 = inttoptr i64 %142 to i8*
  %146 = getelementptr inbounds i8, i8* %145, i64 -8
  %147 = bitcast i8* %146 to i64*
  %148 = load i64, i64* %147, align 8, !noalias !211
  %.not.i.i.i.i.i.i.i85 = icmp eq i64 %148, 0
  br i1 %.not.i.i.i.i.i.i.i85, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread, label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %OptionalNonNull.i.i.i.i.i.i
  %149 = add i64 %148, -1
  store i64 %149, i64* %147, align 8, !noalias !211
  %150 = icmp eq i64 %148, -9223372036854775808
  br i1 %150, label %Then1.i.i.i.i.i.i.i, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread

Then1.i.i.i.i.i.i.i:                              ; preds = %Then.i.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %146, i32 8) #11, !noalias !211
  br label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread

EndIf.i27.i.i.i:                                  ; preds = %Else.i.i
  %151 = mul nuw i64 %110, 88
  %152 = add nuw i64 %151, 8
  %153 = tail call i8* @roc_alloc(i64 %152, i32 8) #11, !noalias !212
  %154 = icmp ne i8* %153, null
  tail call void @llvm.assume(i1 %154) #11
  %155 = getelementptr inbounds i8, i8* %153, i64 8
  %156 = bitcast i8* %153 to i64*
  store i64 -9223372036854775808, i64* %156, align 8, !noalias !212
  br label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread

List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread: ; preds = %EndIf.i27.i.i.i, %Then.i.i.i81, %EndIf.i.i.i.i, %EndIf9.i.i.i.i, %Then1.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i, %OptionalEndIf.i.i.i.i
  %list_alloca.sroa.4.0.i.ph = phi i64 [ %110, %OptionalEndIf.i.i.i.i ], [ %110, %OptionalNonNull.i.i.i.i.i.i ], [ %110, %Then.i.i.i.i.i.i.i ], [ %110, %Then1.i.i.i.i.i.i.i ], [ %..i.i.i.i.i83, %EndIf9.i.i.i.i ], [ %..i.i.i.i.i83, %EndIf.i.i.i.i ], [ %"#arg1.elt5.i", %Then.i.i.i81 ], [ %110, %EndIf.i27.i.i.i ]
  %list_alloca.sroa.0.0.i.ph = phi i8* [ %137, %OptionalEndIf.i.i.i.i ], [ %137, %OptionalNonNull.i.i.i.i.i.i ], [ %137, %Then.i.i.i.i.i.i.i ], [ %137, %Then1.i.i.i.i.i.i.i ], [ %"#arg1.elt.i", %EndIf9.i.i.i.i ], [ %132, %EndIf.i.i.i.i ], [ %"#arg1.elt.i", %Then.i.i.i81 ], [ %155, %EndIf.i27.i.i.i ]
  %element_to_pass_as_opaque.i.i304.0.sroa_cast232 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i304 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %element_to_pass_as_opaque.i.i304.0.sroa_cast232)
  %157 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %element_to_pass_as_opaque.i.i304.0.sroa_cast232, i8* noundef nonnull align 8 dereferenceable(88) %157, i64 88, i1 false) #11
  br label %OptionalThen1.i.i.i319

List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit: ; preds = %joinpointcont53
  %element_to_pass_as_opaque.i.i304.0.sroa_cast = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i304 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %element_to_pass_as_opaque.i.i304.0.sroa_cast)
  %158 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %element_to_pass_as_opaque.i.i304.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(88) %158, i64 88, i1 false) #11
  %.not.i.i.i318 = icmp eq i8* %"#arg1.elt.i", null
  br i1 %.not.i.i.i318, label %List_append_437db3d252af3ff92ab2a7c2c7a3b53bf3c8aa05f6c581792e8f8e3e6a3db8f.exit, label %OptionalThen1.i.i.i319

OptionalThen1.i.i.i319:                           ; preds = %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread, %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit
  %list_alloca.sroa.0.0.i236 = phi i8* [ %list_alloca.sroa.0.0.i.ph, %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread ], [ %"#arg1.elt.i", %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit ]
  %list_alloca.sroa.4.0.i234 = phi i64 [ %list_alloca.sroa.4.0.i.ph, %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit.thread ], [ %"#arg1.elt5.i", %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit ]
  %element_to_pass_as_opaque.i.i304.0.sroa_cast238 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i304 to i8*
  %159 = mul nuw i64 %"#arg1.elt3.i", 88
  %160 = getelementptr inbounds i8, i8* %list_alloca.sroa.0.0.i236, i64 %159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(88) %160, i8* noundef nonnull align 8 dereferenceable(88) %element_to_pass_as_opaque.i.i304.0.sroa_cast238, i64 88, i1 false) #11, !noalias !215
  br label %List_append_437db3d252af3ff92ab2a7c2c7a3b53bf3c8aa05f6c581792e8f8e3e6a3db8f.exit

List_append_437db3d252af3ff92ab2a7c2c7a3b53bf3c8aa05f6c581792e8f8e3e6a3db8f.exit: ; preds = %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit, %OptionalThen1.i.i.i319
  %list_alloca.sroa.0.0.i237 = phi i8* [ null, %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit ], [ %list_alloca.sroa.0.0.i236, %OptionalThen1.i.i.i319 ]
  %list_alloca.sroa.4.0.i235 = phi i64 [ %"#arg1.elt5.i", %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit ], [ %list_alloca.sroa.4.0.i234, %OptionalThen1.i.i.i319 ]
  %element_to_pass_as_opaque.i.i304.0.sroa_cast239 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i304 to i8*
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %element_to_pass_as_opaque.i.i304.0.sroa_cast239)
  %call_builtin86 = tail call fastcc i8* @roc_builtins.utils.allocate_with_refcount(i64 24)
  %field_struct_gep89.repack = bitcast i8* %call_builtin86 to i8**
  store i8* %list_alloca.sroa.0.0.i237, i8** %field_struct_gep89.repack, align 8
  %field_struct_gep89.repack216 = getelementptr inbounds i8, i8* %call_builtin86, i64 8
  %161 = bitcast i8* %field_struct_gep89.repack216 to i64*
  store i64 %110, i64* %161, align 8
  %field_struct_gep89.repack218 = getelementptr inbounds i8, i8* %call_builtin86, i64 16
  %162 = bitcast i8* %field_struct_gep89.repack218 to i64*
  store i64 %list_alloca.sroa.4.0.i235, i64* %162, align 8
  br label %common.ret

then_block113:                                    ; preds = %branch3
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %17)
  br label %joinpointcont102

then129:                                          ; preds = %branch3
  %"cap > 0.not.i" = icmp eq i64 %load_at_index_ptr_old101.unpack210, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#inc_19.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %then129
  %cast_basic_basic.i = bitcast i8* %load_at_index_ptr_old101.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i = icmp eq i64 %load_at_index_ptr_old101.unpack208, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %163 = bitcast %str.RocStr* %struct_field.i.i86 to i8*
  %struct_field.i.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i86, i64 0, i32 0
  %struct_field.i.repack13.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i86, i64 0, i32 1
  %struct_field.i.repack15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i86, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#inc_14.exit.i", %loop.preheader.i
  %index.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#inc_14.exit.i" ]
  %next_index.i = add nuw i64 %index.i, 1
  %incrementing_element_loop_load.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i, align 8
  %incrementing_element_loop_load.unpack.elt8.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i, align 8
  %incrementing_element_loop_load.unpack.elt10.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i, align 8
  %incrementing_element_loop_load.elt5.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 1
  %incrementing_element_loop_load.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i, i8** %struct_field.i.repack.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i, i64* %struct_field.i.repack13.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i, i64* %struct_field.i.repack15.i, align 8
  %is_big_str.i.i.i87 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i, 0
  br i1 %is_big_str.i.i.i87, label %modify_rc.i.i.i91, label %"#Attr_#inc_4.exit.i.i93"

modify_rc.i.i.i91:                                ; preds = %loop.i
  %call_builtin.i.i.i88 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i86) #11
  %get_rc_ptr.i.i.i89 = getelementptr inbounds i8, i8* %call_builtin.i.i.i88, i64 -8
  %164 = bitcast i8* %get_rc_ptr.i.i.i89 to i64*
  %165 = load i64, i64* %164, align 8
  %.not.i.i.i.i90 = icmp eq i64 %165, 0
  br i1 %.not.i.i.i.i90, label %"#Attr_#inc_4.exit.i.i93", label %Then.i.i.i.i92

Then.i.i.i.i92:                                   ; preds = %modify_rc.i.i.i91
  %166 = add nsw i64 %165, 1
  store i64 %166, i64* %164, align 8
  br label %"#Attr_#inc_4.exit.i.i93"

"#Attr_#inc_4.exit.i.i93":                        ; preds = %Then.i.i.i.i92, %modify_rc.i.i.i91, %loop.i
  %to_int1.i.i.i = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i64
  %masked.i.i.i = and i64 %to_int1.i.i.i, 7
  %cast_to_i8_ptr.i.i.i = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i8*
  %get_rc_ptr.i2.i.idx.i = sub nuw nsw i64 -8, %masked.i.i.i
  %get_rc_ptr.i2.i.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i, i64 %get_rc_ptr.i2.i.idx.i
  %167 = bitcast i8* %get_rc_ptr.i2.i.i to i64*
  %168 = load i64, i64* %167, align 8
  %.not.i.i3.i.i = icmp eq i64 %168, 0
  br i1 %.not.i.i3.i.i, label %"#Attr_#inc_14.exit.i", label %Then.i.i4.i.i

Then.i.i4.i.i:                                    ; preds = %"#Attr_#inc_4.exit.i.i93"
  %169 = add nsw i64 %168, 1
  store i64 %169, i64* %167, align 8
  br label %"#Attr_#inc_14.exit.i"

"#Attr_#inc_14.exit.i":                           ; preds = %Then.i.i4.i.i, %"#Attr_#inc_4.exit.i.i93"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #11
  %exitcond.not = icmp eq i64 %next_index.i, %load_at_index_ptr_old101.unpack208
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#inc_14.exit.i", %modification_list_block.i
  %170 = ptrtoint i8* %load_at_index_ptr_old101.unpack to i64
  %171 = shl i64 %load_at_index_ptr_old101.unpack210, 1
  %.not.i.i.i94 = icmp slt i64 %load_at_index_ptr_old101.unpack210, 0
  %172 = select i1 %.not.i.i.i94, i64 %171, i64 %170
  %as_usize_ptr.i = inttoptr i64 %172 to i64*
  %get_rc_ptr.i95 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %173 = load i64, i64* %get_rc_ptr.i95, align 8
  %.not.i.i96 = icmp eq i64 %173, 0
  br i1 %.not.i.i96, label %"#Attr_#inc_19.exitthread-pre-split", label %Then.i.i97

Then.i.i97:                                       ; preds = %after_loop.i
  %174 = add nsw i64 %173, 1
  store i64 %174, i64* %get_rc_ptr.i95, align 8
  br label %"#Attr_#inc_19.exitthread-pre-split"

"#Attr_#inc_19.exitthread-pre-split":             ; preds = %Then.i.i97, %after_loop.i
  %.pr = load i64, i64* %17, align 8
  br label %"#Attr_#inc_19.exit"

"#Attr_#inc_19.exit":                             ; preds = %"#Attr_#inc_19.exitthread-pre-split", %then129
  %175 = phi i64 [ %.pr, %"#Attr_#inc_19.exitthread-pre-split" ], [ %get_refcount110, %then129 ]
  %.not.i.i.i330 = icmp eq i64 %175, 0
  br i1 %.not.i.i.i330, label %joinpointcont102, label %Then.i.i.i331

Then.i.i.i331:                                    ; preds = %"#Attr_#inc_19.exit"
  %176 = add i64 %175, -1
  store i64 %176, i64* %17, align 8
  %177 = icmp eq i64 %175, -9223372036854775808
  br i1 %177, label %Then1.i.i.i332, label %joinpointcont102

Then1.i.i.i332:                                   ; preds = %Then.i.i.i331
  tail call void @roc_dealloc(i8* %get_rc_ptr109, i32 8) #11
  br label %joinpointcont102

joinpointcont102:                                 ; preds = %Then1.i.i.i332, %Then.i.i.i331, %"#Attr_#inc_19.exit", %then_block113
  %.not.i.i357 = icmp eq i8* %load_at_index_ptr_old101.unpack, null
  br i1 %.not.i.i357, label %roc_builtins.list.map.exit.i, label %OptionalThen.i.i

OptionalThen.i.i:                                 ; preds = %joinpointcont102
  %178 = icmp ne i64 %load_at_index_ptr_old101.unpack208, 0
  tail call void @llvm.assume(i1 %178)
  %179 = icmp ugt i64 %load_at_index_ptr_old101.unpack208, 2
  %..i.i.i.i.i = select i1 %179, i64 %load_at_index_ptr_old101.unpack208, i64 2
  %180 = shl nuw i64 %..i.i.i.i.i, 5
  %181 = or i64 %180, 8
  %182 = tail call i8* @roc_alloc(i64 %181, i32 8) #11, !noalias !218
  %183 = icmp ne i8* %182, null
  tail call void @llvm.assume(i1 %183) #11
  %184 = getelementptr inbounds i8, i8* %182, i64 8
  %185 = bitcast i8* %182 to i64*
  store i64 -9223372036854775808, i64* %185, align 8, !noalias !218
  br label %WhileBody.i.i

WhileBody.i.i:                                    ; preds = %OptionalThen.i.i, %WhileBody.i.i
  %i.010.i.i = phi i64 [ %194, %WhileBody.i.i ], [ 0, %OptionalThen.i.i ]
  %186 = shl nuw i64 %i.010.i.i, 5
  %187 = getelementptr inbounds i8, i8* %load_at_index_ptr_old101.unpack, i64 %186
  %188 = getelementptr inbounds i8, i8* %184, i64 %186
  %zig_helper_load_opaque.i.i.unpack.elt = bitcast i8* %187 to i8**
  %zig_helper_load_opaque.i.i.unpack.unpack = load i8*, i8** %zig_helper_load_opaque.i.i.unpack.elt, align 8, !noalias !223
  %zig_helper_load_opaque.i.i.unpack.elt14 = getelementptr inbounds i8, i8* %187, i64 8
  %189 = bitcast i8* %zig_helper_load_opaque.i.i.unpack.elt14 to i64*
  %zig_helper_load_opaque.i.i.unpack.unpack15 = load i64, i64* %189, align 8, !noalias !223
  %zig_helper_load_opaque.i.i.unpack.elt16 = getelementptr inbounds i8, i8* %187, i64 16
  %190 = bitcast i8* %zig_helper_load_opaque.i.i.unpack.elt16 to i64*
  %zig_helper_load_opaque.i.i.unpack.unpack17 = load i64, i64* %190, align 8, !noalias !223
  %zig_helper_load_opaque.i.i.elt11 = getelementptr inbounds i8, i8* %187, i64 24
  %191 = bitcast i8* %zig_helper_load_opaque.i.i.elt11 to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.i.unpack12 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %191, align 8, !noalias !223
  %call.i399 = tail call fastcc { [0 x i64], [3 x i64] }* @Arg_toHelpHelper_b4a1ce1cc6482a6eb4e497188770c2a53ecfdb6ca89a71ba81bb9e1b77f5d151({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.i.unpack12) #11
  %store_roc_value_opaque.i.i.repack = bitcast i8* %188 to { [0 x i64], [3 x i64] }**
  store { [0 x i64], [3 x i64] }* %call.i399, { [0 x i64], [3 x i64] }** %store_roc_value_opaque.i.i.repack, align 8, !noalias !223
  %store_roc_value_opaque.i.i.repack19 = getelementptr inbounds i8, i8* %188, i64 8
  %.repack = bitcast i8* %store_roc_value_opaque.i.i.repack19 to i8**
  store i8* %zig_helper_load_opaque.i.i.unpack.unpack, i8** %.repack, align 8, !noalias !223
  %.repack21 = getelementptr inbounds i8, i8* %store_roc_value_opaque.i.i.repack19, i64 8
  %192 = bitcast i8* %.repack21 to i64*
  store i64 %zig_helper_load_opaque.i.i.unpack.unpack15, i64* %192, align 8, !noalias !223
  %.repack23 = getelementptr inbounds i8, i8* %store_roc_value_opaque.i.i.repack19, i64 16
  %193 = bitcast i8* %.repack23 to i64*
  store i64 %zig_helper_load_opaque.i.i.unpack.unpack17, i64* %193, align 8, !noalias !223
  %194 = add nuw i64 %i.010.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %194, %load_at_index_ptr_old101.unpack208
  br i1 %exitcond.not.i.i, label %roc_builtins.list.map.exit.i, label %WhileBody.i.i

roc_builtins.list.map.exit.i:                     ; preds = %WhileBody.i.i, %joinpointcont102
  %list_alloca.i.sroa.7.0 = phi i64 [ 0, %joinpointcont102 ], [ %..i.i.i.i.i, %WhileBody.i.i ]
  %list_alloca.i.sroa.5.0 = phi i64 [ 0, %joinpointcont102 ], [ %load_at_index_ptr_old101.unpack208, %WhileBody.i.i ]
  %list_alloca.i.sroa.0.0 = phi i8* [ null, %joinpointcont102 ], [ %184, %WhileBody.i.i ]
  %195 = ptrtoint i8* %load_at_index_ptr_old101.unpack to i64
  %196 = shl i64 %load_at_index_ptr_old101.unpack210, 1
  %.not.i.i.i358 = icmp slt i64 %load_at_index_ptr_old101.unpack210, 0
  %197 = select i1 %.not.i.i.i358, i64 %196, i64 %195
  %.not.i19.i = icmp eq i64 %197, 0
  br i1 %.not.i19.i, label %List_map_1fe6f3e2a4f56e3ef1c6f0b923362a18479f52254644e1ec57f598d5f12bf8e.exit, label %OptionalThen.i21.i

OptionalThen.i21.i:                               ; preds = %roc_builtins.list.map.exit.i
  %198 = inttoptr i64 %197 to i8*
  %199 = getelementptr inbounds i8, i8* %198, i64 -8
  %200 = bitcast i8* %199 to i64*
  %201 = load i64, i64* %200, align 8
  %.not.i.i20.i = icmp eq i64 %201, 0
  br i1 %.not.i.i20.i, label %List_map_1fe6f3e2a4f56e3ef1c6f0b923362a18479f52254644e1ec57f598d5f12bf8e.exit, label %Then.i.i.i359

Then.i.i.i359:                                    ; preds = %OptionalThen.i21.i
  %202 = add i64 %201, -1
  store i64 %202, i64* %200, align 8
  %203 = icmp eq i64 %201, -9223372036854775808
  br i1 %203, label %Then1.i.i.i360, label %List_map_1fe6f3e2a4f56e3ef1c6f0b923362a18479f52254644e1ec57f598d5f12bf8e.exit

Then1.i.i.i360:                                   ; preds = %Then.i.i.i359
  tail call void @roc_dealloc(i8* %199, i32 8) #11
  br label %List_map_1fe6f3e2a4f56e3ef1c6f0b923362a18479f52254644e1ec57f598d5f12bf8e.exit

List_map_1fe6f3e2a4f56e3ef1c6f0b923362a18479f52254644e1ec57f598d5f12bf8e.exit: ; preds = %roc_builtins.list.map.exit.i, %OptionalThen.i21.i, %Then.i.i.i359, %Then1.i.i.i360
  %call_builtin135 = tail call fastcc i8* @roc_builtins.utils.allocate_with_refcount(i64 24)
  %field_struct_gep138.repack = bitcast i8* %call_builtin135 to i8**
  store i8* %list_alloca.i.sroa.0.0, i8** %field_struct_gep138.repack, align 8
  %field_struct_gep138.repack212 = getelementptr inbounds i8, i8* %call_builtin135, i64 8
  %204 = bitcast i8* %field_struct_gep138.repack212 to i64*
  store i64 %list_alloca.i.sroa.5.0, i64* %204, align 8
  %field_struct_gep138.repack214 = getelementptr inbounds i8, i8* %call_builtin135, i64 16
  %205 = bitcast i8* %field_struct_gep138.repack214 to i64*
  store i64 %list_alloca.i.sroa.7.0, i64* %205, align 8
  %indexed_pointer140 = getelementptr inbounds i8, i8* %call_builtin135, i64 1
  br label %common.ret

then_block162:                                    ; preds = %default
  %at_index_struct_gep_data171.idx = sub nuw nsw i64 48, %masked143
  %at_index_struct_gep_data171 = getelementptr inbounds i8, i8* %cast_to_i8_ptr145, i64 %at_index_struct_gep_data171.idx
  %206 = bitcast %str.RocStr* %load_at_index_ptr_old172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %206, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data171, i64 24, i1 false)
  %load_str_to_stack.i.elt77 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old172, i64 0, i32 2
  %load_str_to_stack.i.unpack78 = load i64, i64* %load_str_to_stack.i.elt77, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack78, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %then_block162
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old172) #11
  %get_rc_ptr.i339 = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %207 = bitcast i8* %get_rc_ptr.i339 to i64*
  %208 = load i64, i64* %207, align 8
  %.not.i.i.i.i340 = icmp eq i64 %208, 0
  br i1 %.not.i.i.i.i340, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i341

Then.i.i.i.i341:                                  ; preds = %modify_rc.i
  %209 = add i64 %208, -1
  store i64 %209, i64* %207, align 8
  %210 = icmp eq i64 %208, -9223372036854775808
  br i1 %210, label %Then1.i.i.i.i342, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i342:                                 ; preds = %Then.i.i.i.i341
  tail call void @roc_dealloc(i8* %get_rc_ptr.i339, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i341, %Then1.i.i.i.i342, %then_block162
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %6)
  br label %joinpointcont151

then187:                                          ; preds = %default
  %211 = bitcast %str.RocStr* %struct_field1.i343 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211)
  %212 = bitcast %str.RocStr* %struct_field.i344 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212)
  %load_at_index_ptr_old150.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i344, i64 0, i32 0
  store i8* %load_at_index_ptr_old150.sroa.0.0.copyload, i8** %load_at_index_ptr_old150.sroa.0.0..sroa_idx, align 8
  %load_at_index_ptr_old150.sroa.3.0..sroa_idx147 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i344, i64 0, i32 1
  store i64 %load_at_index_ptr_old150.sroa.3.0.copyload, i64* %load_at_index_ptr_old150.sroa.3.0..sroa_idx147, align 8
  %load_at_index_ptr_old150.sroa.4.0..sroa_idx149 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i344, i64 0, i32 2
  store i64 %load_at_index_ptr_old150.sroa.4.0.copyload, i64* %load_at_index_ptr_old150.sroa.4.0..sroa_idx149, align 8
  %is_big_str.i.i348 = icmp sgt i64 %load_at_index_ptr_old150.sroa.4.0.copyload, 0
  br i1 %is_big_str.i.i348, label %modify_rc.i.i353, label %"#Attr_#inc_4.exit.i356"

modify_rc.i.i353:                                 ; preds = %then187
  %call_builtin.i.i349 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i344) #11
  %get_rc_ptr.i.i351 = getelementptr inbounds i8, i8* %call_builtin.i.i349, i64 -8
  %213 = bitcast i8* %get_rc_ptr.i.i351 to i64*
  %214 = load i64, i64* %213, align 8
  %.not.i.i.i352 = icmp eq i64 %214, 0
  br i1 %.not.i.i.i352, label %"#Attr_#inc_4.exit.i356", label %Then.i.i.i354

Then.i.i.i354:                                    ; preds = %modify_rc.i.i353
  %215 = add nsw i64 %214, 1
  store i64 %215, i64* %213, align 8
  br label %"#Attr_#inc_4.exit.i356"

"#Attr_#inc_4.exit.i356":                         ; preds = %Then.i.i.i354, %modify_rc.i.i353, %then187
  %load_at_index_ptr_old150.sroa.5.24..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i343, i64 0, i32 0
  store i8* %load_at_index_ptr_old150.sroa.5.0.copyload, i8** %load_at_index_ptr_old150.sroa.5.24..sroa_idx, align 8
  %load_at_index_ptr_old150.sroa.7.24..sroa_idx151 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i343, i64 0, i32 1
  store i64 %load_at_index_ptr_old150.sroa.7.0.copyload, i64* %load_at_index_ptr_old150.sroa.7.24..sroa_idx151, align 8
  %load_at_index_ptr_old150.sroa.8.24..sroa_idx152 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i343, i64 0, i32 2
  store i64 %load_at_index_ptr_old150.sroa.8.0.copyload, i64* %load_at_index_ptr_old150.sroa.8.24..sroa_idx152, align 8
  %is_big_str.i4.i = icmp sgt i64 %load_at_index_ptr_old150.sroa.8.0.copyload, 0
  br i1 %is_big_str.i4.i, label %modify_rc.i9.i, label %"#Attr_#inc_5.exit"

modify_rc.i9.i:                                   ; preds = %"#Attr_#inc_4.exit.i356"
  %call_builtin.i5.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i343) #11
  %get_rc_ptr.i7.i = getelementptr inbounds i8, i8* %call_builtin.i5.i, i64 -8
  %216 = bitcast i8* %get_rc_ptr.i7.i to i64*
  %217 = load i64, i64* %216, align 8
  %.not.i.i8.i = icmp eq i64 %217, 0
  br i1 %.not.i.i8.i, label %"#Attr_#inc_5.exit", label %Then.i.i10.i

Then.i.i10.i:                                     ; preds = %modify_rc.i9.i
  %218 = add nsw i64 %217, 1
  store i64 %218, i64* %216, align 8
  br label %"#Attr_#inc_5.exit"

"#Attr_#inc_5.exit":                              ; preds = %"#Attr_#inc_4.exit.i356", %modify_rc.i9.i, %Then.i.i10.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212)
  %219 = load i64, i64* %6, align 8
  %.not.i.i.i334 = icmp eq i64 %219, 0
  br i1 %.not.i.i.i334, label %joinpointcont151, label %Then.i.i.i335

Then.i.i.i335:                                    ; preds = %"#Attr_#inc_5.exit"
  %220 = add i64 %219, -1
  store i64 %220, i64* %6, align 8
  %221 = icmp eq i64 %219, -9223372036854775808
  br i1 %221, label %Then1.i.i.i336, label %joinpointcont151

Then1.i.i.i336:                                   ; preds = %Then.i.i.i335
  tail call void @roc_dealloc(i8* %get_rc_ptr158, i32 8) #11
  br label %joinpointcont151

joinpointcont151:                                 ; preds = %Then1.i.i.i336, %Then.i.i.i335, %"#Attr_#inc_5.exit", %"#Attr_#dec_4.exit"
  %struct_alloca194 = alloca { { %str.RocStr, %str.RocStr } }, align 8
  %.repack.repack = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca194, i64 0, i32 0, i32 0, i32 0
  store i8* %load_at_index_ptr_old150.sroa.0.0.copyload, i8** %.repack.repack, align 8
  %.repack.repack245 = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca194, i64 0, i32 0, i32 0, i32 1
  store i64 %load_at_index_ptr_old150.sroa.3.0.copyload, i64* %.repack.repack245, align 8
  %.repack.repack247 = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca194, i64 0, i32 0, i32 0, i32 2
  store i64 %load_at_index_ptr_old150.sroa.4.0.copyload, i64* %.repack.repack247, align 8
  %.repack243.repack = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca194, i64 0, i32 0, i32 1, i32 0
  store i8* %load_at_index_ptr_old150.sroa.5.0.copyload, i8** %.repack243.repack, align 8
  %.repack243.repack249 = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca194, i64 0, i32 0, i32 1, i32 1
  store i64 %load_at_index_ptr_old150.sroa.7.0.copyload, i64* %.repack243.repack249, align 8
  %.repack243.repack251 = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca194, i64 0, i32 0, i32 1, i32 2
  store i64 %load_at_index_ptr_old150.sroa.8.0.copyload, i64* %.repack243.repack251, align 8
  %tag_alloca195 = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  %data_buffer196 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca195, i64 0, i32 1
  %222 = bitcast [10 x i64]* %data_buffer196 to i8*
  %223 = bitcast { { %str.RocStr, %str.RocStr } }* %struct_alloca194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %222, i8* noundef nonnull align 8 dereferenceable(48) %223, i64 48, i1 false)
  %tag_id_ptr198 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca195, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr198, align 8
  %"#arg1.elt.i98" = extractvalue %list.RocList %joinpointarg1, 0
  %"#arg1.elt3.i99" = extractvalue %list.RocList %joinpointarg1, 1
  %"#arg1.elt5.i100" = extractvalue %list.RocList %joinpointarg1, 2
  %.not.i.i.i101 = icmp slt i64 %"#arg1.elt5.i100", 0
  %224 = select i1 %.not.i.i.i101, i64 %"#arg1.elt3.i99", i64 %"#arg1.elt5.i100"
  %225 = add nuw i64 %"#arg1.elt3.i99", 1
  %.not.i.not.i102 = icmp ugt i64 %224, %"#arg1.elt3.i99"
  br i1 %.not.i.not.i102, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135, label %Else.i.i104

Else.i.i104:                                      ; preds = %joinpointcont151
  %.not.i1.i.i103 = icmp eq i8* %"#arg1.elt.i98", null
  br i1 %.not.i1.i.i103, label %EndIf.i27.i.i.i129, label %OptionalThen.i.i.i105

OptionalThen.i.i.i105:                            ; preds = %Else.i.i104
  %226 = icmp ne i64 %224, 0
  %227 = or i1 %.not.i.i.i101, %226
  br i1 %227, label %list.RocList.isUnique.exit.i.i.i108, label %Then.i.i.i110

list.RocList.isUnique.exit.i.i.i108:              ; preds = %OptionalThen.i.i.i105
  %228 = getelementptr inbounds i8, i8* %"#arg1.elt.i98", i64 -8
  %229 = bitcast i8* %228 to i64*
  %230 = load i64, i64* %229, align 8, !noalias !224
  %phi.cmp.i.i.i.i106 = icmp eq i64 %230, -9223372036854775808
  %231 = xor i1 %.not.i.i.i101, true
  %or.cond.i.i.i107 = select i1 %phi.cmp.i.i.i.i106, i1 %231, i1 false
  br i1 %or.cond.i.i.i107, label %Then.i.i.i110, label %OptionalEndIf.i.i.i.i124

Then.i.i.i110:                                    ; preds = %list.RocList.isUnique.exit.i.i.i108, %OptionalThen.i.i.i105
  %.not21.i.i.not.i109 = icmp ugt i64 %"#arg1.elt5.i100", %"#arg1.elt3.i99"
  br i1 %.not21.i.i.not.i109, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread, label %Else.i.i.i111

Else.i.i.i111:                                    ; preds = %Then.i.i.i110
  %232 = icmp eq i64 %"#arg1.elt5.i100", 0
  br i1 %232, label %EndIf9.i.i.i.i120, label %Else1.i.i.i.i112

Else1.i.i.i.i112:                                 ; preds = %Else.i.i.i111
  %233 = icmp ult i64 %"#arg1.elt5.i100", 46
  br i1 %233, label %Then4.i.i.i.i114, label %Else2.i.i.i.i113

Else2.i.i.i.i113:                                 ; preds = %Else1.i.i.i.i112
  %234 = icmp ugt i64 %"#arg1.elt5.i100", 1489
  br i1 %234, label %Then5.i.i.i.i115, label %Else6.i.i.i.i116

Then4.i.i.i.i114:                                 ; preds = %Else1.i.i.i.i112
  %235 = shl nuw nsw i64 %"#arg1.elt5.i100", 1
  br label %EndIf9.i.i.i.i120

Then5.i.i.i.i115:                                 ; preds = %Else2.i.i.i.i113
  %236 = shl nuw i64 %"#arg1.elt5.i100", 1
  br label %EndIf9.i.i.i.i120

Else6.i.i.i.i116:                                 ; preds = %Else2.i.i.i.i113
  %237 = mul nuw nsw i64 %"#arg1.elt5.i100", 3
  %238 = add nuw nsw i64 %237, 1
  %239 = lshr i64 %238, 1
  br label %EndIf9.i.i.i.i120

EndIf9.i.i.i.i120:                                ; preds = %Else6.i.i.i.i116, %Then5.i.i.i.i115, %Then4.i.i.i.i114, %Else.i.i.i111
  %new_capacity.0.i.i.i.i117 = phi i64 [ %235, %Then4.i.i.i.i114 ], [ %236, %Then5.i.i.i.i115 ], [ %239, %Else6.i.i.i.i116 ], [ 0, %Else.i.i.i111 ]
  %240 = icmp ugt i64 %new_capacity.0.i.i.i.i117, %225
  %..i.i.i.i.i118 = select i1 %240, i64 %new_capacity.0.i.i.i.i117, i64 %225
  %241 = mul nuw i64 %"#arg1.elt5.i100", 88
  %242 = mul nuw i64 %..i.i.i.i.i118, 88
  %.not.i.i.i.i119 = icmp ult i64 %241, %242
  br i1 %.not.i.i.i.i119, label %EndIf.i.i.i.i121, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread

EndIf.i.i.i.i121:                                 ; preds = %EndIf9.i.i.i.i120
  %243 = add nuw i64 %242, 8
  %244 = add nuw i64 %241, 8
  %245 = getelementptr inbounds i8, i8* %"#arg1.elt.i98", i64 -8
  %246 = tail call i8* @roc_realloc(i8* %245, i64 %243, i64 %244, i32 8) #11, !noalias !224
  %247 = getelementptr inbounds i8, i8* %246, i64 8
  br label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread

OptionalEndIf.i.i.i.i124:                         ; preds = %list.RocList.isUnique.exit.i.i.i108
  %248 = mul nuw i64 %225, 88
  %249 = add nuw i64 %248, 8
  %250 = tail call i8* @roc_alloc(i64 %249, i32 8) #11, !noalias !229
  %251 = icmp ne i8* %250, null
  tail call void @llvm.assume(i1 %251) #11
  %252 = getelementptr inbounds i8, i8* %250, i64 8
  %253 = bitcast i8* %250 to i64*
  store i64 -9223372036854775808, i64* %253, align 8, !noalias !229
  %254 = mul nuw i64 %"#arg1.elt3.i99", 88
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %252, i8* nonnull align 1 %"#arg1.elt.i98", i64 %254, i1 false) #11, !noalias !234
  %255 = getelementptr inbounds i8, i8* %252, i64 %254
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(88) %255, i8 0, i64 88, i1 false) #11, !noalias !234
  %phi.cast.i.i.i.i122 = ptrtoint i8* %"#arg1.elt.i98" to i64
  %256 = shl i64 %"#arg1.elt5.i100", 1
  %257 = select i1 %.not.i.i.i101, i64 %256, i64 %phi.cast.i.i.i.i122
  %258 = icmp ne i64 %"#arg1.elt5.i100", 0
  %259 = icmp ne i64 %257, 0
  %or.cond.i.i.i.i.i.i123 = select i1 %258, i1 %259, i1 false
  br i1 %or.cond.i.i.i.i.i.i123, label %OptionalNonNull.i.i.i.i.i.i126, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread

OptionalNonNull.i.i.i.i.i.i126:                   ; preds = %OptionalEndIf.i.i.i.i124
  %260 = inttoptr i64 %257 to i8*
  %261 = getelementptr inbounds i8, i8* %260, i64 -8
  %262 = bitcast i8* %261 to i64*
  %263 = load i64, i64* %262, align 8, !noalias !234
  %.not.i.i.i.i.i.i.i125 = icmp eq i64 %263, 0
  br i1 %.not.i.i.i.i.i.i.i125, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread, label %Then.i.i.i.i.i.i.i127

Then.i.i.i.i.i.i.i127:                            ; preds = %OptionalNonNull.i.i.i.i.i.i126
  %264 = add i64 %263, -1
  store i64 %264, i64* %262, align 8, !noalias !234
  %265 = icmp eq i64 %263, -9223372036854775808
  br i1 %265, label %Then1.i.i.i.i.i.i.i128, label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread

Then1.i.i.i.i.i.i.i128:                           ; preds = %Then.i.i.i.i.i.i.i127
  tail call void @roc_dealloc(i8* %261, i32 8) #11, !noalias !234
  br label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread

EndIf.i27.i.i.i129:                               ; preds = %Else.i.i104
  %266 = mul nuw i64 %225, 88
  %267 = add nuw i64 %266, 8
  %268 = tail call i8* @roc_alloc(i64 %267, i32 8) #11, !noalias !235
  %269 = icmp ne i8* %268, null
  tail call void @llvm.assume(i1 %269) #11
  %270 = getelementptr inbounds i8, i8* %268, i64 8
  %271 = bitcast i8* %268 to i64*
  store i64 -9223372036854775808, i64* %271, align 8, !noalias !235
  br label %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread

List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread: ; preds = %EndIf.i27.i.i.i129, %Then.i.i.i110, %EndIf.i.i.i.i121, %EndIf9.i.i.i.i120, %Then1.i.i.i.i.i.i.i128, %Then.i.i.i.i.i.i.i127, %OptionalNonNull.i.i.i.i.i.i126, %OptionalEndIf.i.i.i.i124
  %list_alloca.sroa.4.0.i130.ph = phi i64 [ %225, %OptionalEndIf.i.i.i.i124 ], [ %225, %OptionalNonNull.i.i.i.i.i.i126 ], [ %225, %Then.i.i.i.i.i.i.i127 ], [ %225, %Then1.i.i.i.i.i.i.i128 ], [ %..i.i.i.i.i118, %EndIf9.i.i.i.i120 ], [ %..i.i.i.i.i118, %EndIf.i.i.i.i121 ], [ %"#arg1.elt5.i100", %Then.i.i.i110 ], [ %225, %EndIf.i27.i.i.i129 ]
  %list_alloca.sroa.0.0.i131.ph = phi i8* [ %252, %OptionalEndIf.i.i.i.i124 ], [ %252, %OptionalNonNull.i.i.i.i.i.i126 ], [ %252, %Then.i.i.i.i.i.i.i127 ], [ %252, %Then1.i.i.i.i.i.i.i128 ], [ %"#arg1.elt.i98", %EndIf9.i.i.i.i120 ], [ %247, %EndIf.i.i.i.i121 ], [ %"#arg1.elt.i98", %Then.i.i.i110 ], [ %270, %EndIf.i27.i.i.i129 ]
  %element_to_pass_as_opaque.i.i.0.sroa_cast242 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %element_to_pass_as_opaque.i.i.0.sroa_cast242)
  %272 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %element_to_pass_as_opaque.i.i.0.sroa_cast242, i8* noundef nonnull align 8 dereferenceable(88) %272, i64 88, i1 false) #11
  br label %OptionalThen1.i.i.i

List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135: ; preds = %joinpointcont151
  %element_to_pass_as_opaque.i.i.0.sroa_cast = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %element_to_pass_as_opaque.i.i.0.sroa_cast)
  %273 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %element_to_pass_as_opaque.i.i.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(88) %273, i64 88, i1 false) #11
  %.not.i.i.i = icmp eq i8* %"#arg1.elt.i98", null
  br i1 %.not.i.i.i, label %List_append_6281bfaf93c1d0dad9837fadac8bc1d7b1c31152af44757fe4fdf481f3a82e.exit, label %OptionalThen1.i.i.i

OptionalThen1.i.i.i:                              ; preds = %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread, %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135
  %list_alloca.sroa.0.0.i131246 = phi i8* [ %list_alloca.sroa.0.0.i131.ph, %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread ], [ %"#arg1.elt.i98", %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135 ]
  %list_alloca.sroa.4.0.i130244 = phi i64 [ %list_alloca.sroa.4.0.i130.ph, %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135.thread ], [ %"#arg1.elt5.i100", %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135 ]
  %element_to_pass_as_opaque.i.i.0.sroa_cast248 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i to i8*
  %274 = mul nuw i64 %"#arg1.elt3.i99", 88
  %275 = getelementptr inbounds i8, i8* %list_alloca.sroa.0.0.i131246, i64 %274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(88) %275, i8* noundef nonnull align 8 dereferenceable(88) %element_to_pass_as_opaque.i.i.0.sroa_cast248, i64 88, i1 false) #11, !noalias !238
  br label %List_append_6281bfaf93c1d0dad9837fadac8bc1d7b1c31152af44757fe4fdf481f3a82e.exit

List_append_6281bfaf93c1d0dad9837fadac8bc1d7b1c31152af44757fe4fdf481f3a82e.exit: ; preds = %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135, %OptionalThen1.i.i.i
  %list_alloca.sroa.0.0.i131247 = phi i8* [ null, %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135 ], [ %list_alloca.sroa.0.0.i131246, %OptionalThen1.i.i.i ]
  %list_alloca.sroa.4.0.i130245 = phi i64 [ %"#arg1.elt5.i100", %List_reserve_f85f10cda58de8514fffaf2d59da909b5c958d366699d6af8ca5cb48e973aad0.exit135 ], [ %list_alloca.sroa.4.0.i130244, %OptionalThen1.i.i.i ]
  %element_to_pass_as_opaque.i.i.0.sroa_cast249 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %element_to_pass_as_opaque.i.i.0.sroa_cast249)
  %call_builtin200 = tail call fastcc i8* @roc_builtins.utils.allocate_with_refcount(i64 24)
  %field_struct_gep203.repack = bitcast i8* %call_builtin200 to i8**
  store i8* %list_alloca.sroa.0.0.i131247, i8** %field_struct_gep203.repack, align 8
  %field_struct_gep203.repack253 = getelementptr inbounds i8, i8* %call_builtin200, i64 8
  %276 = bitcast i8* %field_struct_gep203.repack253 to i64*
  store i64 %225, i64* %276, align 8
  %field_struct_gep203.repack255 = getelementptr inbounds i8, i8* %call_builtin200, i64 16
  %277 = bitcast i8* %field_struct_gep203.repack255 to i64*
  store i64 %list_alloca.sroa.4.0.i130245, i64* %277, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @List_get_ae171b26e9af4cb819f7344b2fd94aaffbb810fcd6bdb6fa266d41c3bc2be60(%list.RocList %list, i64 %index, { [0 x i8], [1 x i8], i8, [0 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %list_len.i = extractvalue %list.RocList %list, 1
  %lt_uint.i = icmp ugt i64 %list_len.i, %index
  br i1 %lt_uint.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_11.exit", %"#Attr_#dec_11.exit23"
  ret void

then_block:                                       ; preds = %entry
  %read_list_ptr.i = extractvalue %list.RocList %list, 0
  %list_get_element.i = getelementptr inbounds i8, i8* %read_list_ptr.i, i64 %index
  %list_get_load_element.i = load i8, i8* %list_get_element.i, align 1
  %list_capacity_or_ref_ptr.i9 = extractvalue %list.RocList %list, 2
  %"cap > 0.i10.not" = icmp eq i64 %list_capacity_or_ref_ptr.i9, 0
  br i1 %"cap > 0.i10.not", label %"#Attr_#dec_11.exit23", label %modification_list_block.i19

modification_list_block.i19:                      ; preds = %then_block
  %1 = ptrtoint i8* %read_list_ptr.i to i64
  %2 = shl i64 %list_capacity_or_ref_ptr.i9, 1
  %.not.i.i.i15 = icmp slt i64 %list_capacity_or_ref_ptr.i9, 0
  %3 = select i1 %.not.i.i.i15, i64 %2, i64 %1
  %as_usize_ptr.i16 = inttoptr i64 %3 to i64*
  %get_rc_ptr.i17 = getelementptr inbounds i64, i64* %as_usize_ptr.i16, i64 -1
  %4 = load i64, i64* %get_rc_ptr.i17, align 8
  %.not.i.i.i.i18 = icmp eq i64 %4, 0
  br i1 %.not.i.i.i.i18, label %"#Attr_#dec_11.exit23", label %Then.i.i.i.i20

Then.i.i.i.i20:                                   ; preds = %modification_list_block.i19
  %5 = add i64 %4, -1
  store i64 %5, i64* %get_rc_ptr.i17, align 8
  %6 = icmp eq i64 %4, -9223372036854775808
  br i1 %6, label %Then1.i.i.i.i21, label %"#Attr_#dec_11.exit23"

Then1.i.i.i.i21:                                  ; preds = %Then.i.i.i.i20
  %7 = bitcast i64* %get_rc_ptr.i17 to i8*
  tail call void @roc_dealloc(i8* %7, i32 8) #11
  br label %"#Attr_#dec_11.exit23"

"#Attr_#dec_11.exit23":                           ; preds = %modification_list_block.i19, %Then.i.i.i.i20, %Then1.i.i.i.i21, %then_block
  %tag_alloca = alloca i16, align 8
  %tmpcast7 = bitcast i16* %tag_alloca to { [0 x i8], [1 x i8], i8, [0 x i8] }*
  %8 = bitcast i16* %tag_alloca to i8*
  store i8 %list_get_load_element.i, i8* %8, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %tmpcast7, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr, align 1
  %9 = bitcast { [0 x i8], [1 x i8], i8, [0 x i8] }* %0 to i16*
  %10 = load i16, i16* %tag_alloca, align 8
  store i16 %10, i16* %9, align 1
  br label %common.ret

else_block:                                       ; preds = %entry
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %list, 2
  %"cap > 0.i.not" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#dec_11.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %else_block
  %list.elt = extractvalue %list.RocList %list, 0
  %11 = ptrtoint i8* %list.elt to i64
  %12 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %13 = select i1 %.not.i.i.i, i64 %12, i64 %11
  %as_usize_ptr.i = inttoptr i64 %13 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %14 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_11.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %15 = add i64 %14, -1
  store i64 %15, i64* %get_rc_ptr.i, align 8
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i, label %"#Attr_#dec_11.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %17 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %17, i32 8) #11
  br label %"#Attr_#dec_11.exit"

"#Attr_#dec_11.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %else_block
  %tag_alloca3 = alloca i16, align 8
  %tmpcast = bitcast i16* %tag_alloca3 to { [0 x i8], [1 x i8], i8, [0 x i8] }*
  %tag_id_ptr6 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %tmpcast, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr6, align 1
  %18 = bitcast { [0 x i8], [1 x i8], i8, [0 x i8] }* %0 to i16*
  %19 = load i16, i16* %tag_alloca3, align 8
  store i16 %19, i16* %18, align 1
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc %str.RocStr @Task_39_b4bf5ce9bdcdc57d63a119c66bcbe7bb289e57c2a2b6a03c556fcc989fcfa6({ [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture readonly %result, %str.RocStr* nocapture readonly %transform) unnamed_addr #11 {
entry:
  %struct_field1.i.i69 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field.i.i70 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value.i.i.i.i.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %result_value.i.i.i.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %str_alloca.i31.i135 = alloca %str.RocStr, align 8
  %result_value.i142 = alloca %str.RocStr, align 8
  %const_str_store1.i143 = alloca %str.RocStr, align 8
  %const_str_store.i144 = alloca %str.RocStr, align 8
  %const_str_store14.i = alloca %str.RocStr, align 8
  %result_value7.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value5.i = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %else_block.i, label %tag_id_modify.i76

common.ret:                                       ; preds = %"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit", %"#UserApp_28_dc6f529aae8cb34a938f3c3fa8991c215971a3e1081f87121ee57e25d74c5a.exit"
  %load_tag_to_put_in_struct.unpack.i.i.i.pn.pn = phi i8* [ %load_element18.i.sroa.0.0.copyload, %"#UserApp_28_dc6f529aae8cb34a938f3c3fa8991c215971a3e1081f87121ee57e25d74c5a.exit" ], [ %result_value2.i141.sroa.0.0.copyload, %"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit" ]
  %load_tag_to_put_in_struct.unpack3.i.i.i.pn.pn = phi i64 [ %load_element18.i.sroa.4.0.copyload, %"#UserApp_28_dc6f529aae8cb34a938f3c3fa8991c215971a3e1081f87121ee57e25d74c5a.exit" ], [ %result_value2.i141.sroa.4.0.copyload, %"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit" ]
  %load_tag_to_put_in_struct.unpack5.i.i.i.pn.pn = phi i64 [ %load_element18.i.sroa.5.0.copyload, %"#UserApp_28_dc6f529aae8cb34a938f3c3fa8991c215971a3e1081f87121ee57e25d74c5a.exit" ], [ %result_value2.i141.sroa.5.0.copyload, %"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit" ]
  %.pn40.pn = insertvalue %str.RocStr undef, i8* %load_tag_to_put_in_struct.unpack.i.i.i.pn.pn, 0
  %.pn39.pn = insertvalue %str.RocStr %.pn40.pn, i64 %load_tag_to_put_in_struct.unpack3.i.i.i.pn.pn, 1
  %load_tag_to_put_in_struct6.i.i.i.pn.pn = insertvalue %str.RocStr %.pn39.pn, i64 %load_tag_to_put_in_struct.unpack5.i.i.i.pn.pn, 2
  ret %str.RocStr %load_tag_to_put_in_struct6.i.i.i.pn.pn

else_block.i:                                     ; preds = %entry
  %get_opaque_data_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1
  %load_element.elt = bitcast [9 x i64]* %get_opaque_data_ptr to i8**
  %load_element.unpack = load i8*, i8** %load_element.elt, align 8
  %0 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.unpack119 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.unpack121 = load i64, i64* %1, align 8
  %2 = bitcast %str.RocStr* %const_str_store14.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  %3 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3)
  %4 = bitcast { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4)
  %load_str_to_stack.i44.i.elt35 = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 2
  %load_str_to_stack.i44.i.unpack36 = load i64, i64* %load_str_to_stack.i44.i.elt35, align 8
  %is_big_str.i46.i = icmp sgt i64 %load_str_to_stack.i44.i.unpack36, 0
  br i1 %is_big_str.i46.i, label %modify_rc.i51.i, label %"#Attr_#dec_4.exit55.i"

modify_rc.i51.i:                                  ; preds = %else_block.i
  %call_builtin.i47.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %transform) #11
  %get_rc_ptr.i49.i = getelementptr inbounds i8, i8* %call_builtin.i47.i, i64 -8
  %5 = bitcast i8* %get_rc_ptr.i49.i to i64*
  %6 = load i64, i64* %5, align 8
  %.not.i.i.i.i50.i = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i50.i, label %"#Attr_#dec_4.exit55.i", label %Then.i.i.i.i52.i

Then.i.i.i.i52.i:                                 ; preds = %modify_rc.i51.i
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i53.i, label %"#Attr_#dec_4.exit55.i"

Then1.i.i.i.i53.i:                                ; preds = %Then.i.i.i.i52.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i49.i, i32 8) #11
  br label %"#Attr_#dec_4.exit55.i"

"#Attr_#dec_4.exit55.i":                          ; preds = %modify_rc.i51.i, %Then.i.i.i.i52.i, %Then1.i.i.i.i53.i, %else_block.i
  %9 = bitcast { i64, %list.RocList, %list.RocList }* %struct_alloca.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %9, i8 0, i64 56, i1 false) #11
  %10 = bitcast { i64, %list.RocList, %list.RocList }* %result_value.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #11
  %11 = bitcast { i64, %list.RocList, %list.RocList }* %result_value.i.i.i.i.i to i8*
  %lt_uint.i.i.i.i50.not.i = icmp eq i64 %load_element.unpack119, 0
  br i1 %lt_uint.i.i.i.i50.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.preheader.i

then_block.i.i.i.preheader.i:                     ; preds = %"#Attr_#dec_4.exit55.i"
  %list_get_load_element.i.i.i.i.peel.i = load i8, i8* %load_element.unpack, align 1
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  call fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nonnull %struct_alloca.i, i8 %list_get_load_element.i.i.i.i.peel.i, { i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %10, i8* noundef nonnull align 8 dereferenceable(56) %11, i64 56, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  %exitcond.peel.not.i = icmp eq i64 %load_element.unpack119, 1
  br i1 %exitcond.peel.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.i

then_block.i.i.i.i:                               ; preds = %then_block.i.i.i.preheader.i, %then_block.i.i.i.i
  %joinpointarg3.i.i.i52.i = phi i64 [ %call.i.i.i.i49.i, %then_block.i.i.i.i ], [ 1, %then_block.i.i.i.preheader.i ]
  %list_get_element.i.i.i.i.i = getelementptr inbounds i8, i8* %load_element.unpack, i64 %joinpointarg3.i.i.i52.i
  %list_get_load_element.i.i.i.i.i = load i8, i8* %list_get_element.i.i.i.i.i, align 1
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  call fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i, i8 %list_get_load_element.i.i.i.i.i, { i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %10, i8* noundef nonnull align 8 dereferenceable(56) %11, i64 56, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  %call.i.i.i.i49.i = add nuw i64 %joinpointarg3.i.i.i52.i, 1
  %exitcond.not.i = icmp eq i64 %call.i.i.i.i49.i, %load_element.unpack119
  br i1 %exitcond.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.i, !llvm.loop !241

else_block.i.i.i.i:                               ; preds = %then_block.i.i.i.i, %then_block.i.i.i.preheader.i, %"#Attr_#dec_4.exit55.i"
  %joinpointarg1.i.i.i.lcssa.i = phi { i64, %list.RocList, %list.RocList }* [ %struct_alloca.i, %"#Attr_#dec_4.exit55.i" ], [ %result_value.i.i.i.i, %then_block.i.i.i.preheader.i ], [ %result_value.i.i.i.i, %then_block.i.i.i.i ]
  %"cap > 0.i.i.i.i.not.i" = icmp eq i64 %load_element.unpack121, 0
  br i1 %"cap > 0.i.i.i.i.not.i", label %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i, label %modification_list_block.i.i.i.i.i

modification_list_block.i.i.i.i.i:                ; preds = %else_block.i.i.i.i
  %12 = ptrtoint i8* %load_element.unpack to i64
  %13 = shl i64 %load_element.unpack121, 1
  %.not.i.i.i.i.i.i.i60 = icmp slt i64 %load_element.unpack121, 0
  %14 = select i1 %.not.i.i.i.i.i.i.i60, i64 %13, i64 %12
  %as_usize_ptr.i.i.i.i.i = inttoptr i64 %14 to i64*
  %get_rc_ptr.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i.i, i64 -1
  %15 = load i64, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %modification_list_block.i.i.i.i.i
  %16 = add i64 %15, -1
  store i64 %16, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %17 = icmp eq i64 %15, -9223372036854775808
  br i1 %17, label %Then1.i.i.i.i.i.i.i.i, label %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  %18 = bitcast i64* %get_rc_ptr.i.i.i.i.i to i8*
  tail call void @roc_dealloc(i8* %18, i32 8) #11
  br label %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i

List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i: ; preds = %Then1.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %modification_list_block.i.i.i.i.i, %else_block.i.i.i.i
  %result_value.i.i.sroa.4.0..sroa_idx34.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 0
  %result_value.i.i.sroa.4.0.copyload.i = load i8*, i8** %result_value.i.i.sroa.4.0..sroa_idx34.i, align 8
  %result_value.i.i.sroa.5.0..sroa_idx36.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 1
  %result_value.i.i.sroa.5.0.copyload.i = load i64, i64* %result_value.i.i.sroa.5.0..sroa_idx36.i, align 8
  %result_value.i.i.sroa.6.0..sroa_idx38.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 2
  %result_value.i.i.sroa.6.0.copyload.i = load i64, i64* %result_value.i.i.sroa.6.0..sroa_idx38.i, align 8
  %result_value.i.i.sroa.7.0..sroa_idx40.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 2, i32 0
  %result_value.i.i.sroa.7.0.copyload.i = load i8*, i8** %result_value.i.i.sroa.7.0..sroa_idx40.i, align 8
  %result_value.i.i.sroa.9.0..sroa_idx44.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 2, i32 2
  %result_value.i.i.sroa.9.0.copyload.i = load i64, i64* %result_value.i.i.sroa.9.0..sroa_idx44.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #11
  %"cap > 0.i.not.i61" = icmp eq i64 %result_value.i.i.sroa.9.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i61", label %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit", label %modification_list_block.i.i66

modification_list_block.i.i66:                    ; preds = %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i
  %19 = ptrtoint i8* %result_value.i.i.sroa.7.0.copyload.i to i64
  %20 = shl i64 %result_value.i.i.sroa.9.0.copyload.i, 1
  %.not.i.i.i.i62 = icmp slt i64 %result_value.i.i.sroa.9.0.copyload.i, 0
  %21 = select i1 %.not.i.i.i.i62, i64 %20, i64 %19
  %as_usize_ptr.i.i63 = inttoptr i64 %21 to i64*
  %get_rc_ptr.i.i64 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i63, i64 -1
  %22 = load i64, i64* %get_rc_ptr.i.i64, align 8
  %.not.i.i.i.i.i65 = icmp eq i64 %22, 0
  br i1 %.not.i.i.i.i.i65, label %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit", label %Then.i.i.i.i.i67

Then.i.i.i.i.i67:                                 ; preds = %modification_list_block.i.i66
  %23 = add i64 %22, -1
  store i64 %23, i64* %get_rc_ptr.i.i64, align 8
  %24 = icmp eq i64 %22, -9223372036854775808
  br i1 %24, label %Then1.i.i.i.i.i68, label %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit"

Then1.i.i.i.i.i68:                                ; preds = %Then.i.i.i.i.i67
  %25 = bitcast i64* %get_rc_ptr.i.i64 to i8*
  tail call void @roc_dealloc(i8* %25, i32 8) #11
  br label %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit"

"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit": ; preds = %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i, %modification_list_block.i.i66, %Then.i.i.i.i.i67, %Then1.i.i.i.i.i68
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9)
  %26 = tail call i8* @roc_alloc(i64 1008, i32 8) #11, !noalias !243
  %27 = icmp ne i8* %26, null
  tail call void @llvm.assume(i1 %27) #11, !noalias !252
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %26 to i64*
  store i64 -9223372036854775808, i64* %29, align 8, !noalias !243
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1000) %28, i8 0, i64 1000, i1 false) #11
  %struct_alloca.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 0
  store i8* %28, i8** %struct_alloca.sroa.0.0..sroa_idx.i, align 8
  %struct_alloca.sroa.2.0..sroa_idx27.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 1
  store i64 1000, i64* %struct_alloca.sroa.2.0..sroa_idx27.i, align 8
  %struct_alloca.sroa.3.0..sroa_idx28.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 2
  store i64 1000, i64* %struct_alloca.sroa.3.0..sroa_idx28.i, align 8
  %struct_alloca.sroa.4.0..sroa_idx.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 1
  %struct_alloca.sroa.4.0..sroa_cast.i = bitcast i64* %struct_alloca.sroa.4.0..sroa_idx.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %struct_alloca.sroa.4.0..sroa_cast.i, i8 0, i64 40, i1 false) #11
  %struct_alloca.sroa.5.0..sroa_idx29.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 0
  store i8* %result_value.i.i.sroa.4.0.copyload.i, i8** %struct_alloca.sroa.5.0..sroa_idx29.i, align 8
  %struct_alloca.sroa.6.0..sroa_idx30.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 1
  store i64 %result_value.i.i.sroa.5.0.copyload.i, i64* %struct_alloca.sroa.6.0..sroa_idx30.i, align 8
  %struct_alloca.sroa.7.0..sroa_idx31.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 2
  store i64 %result_value.i.i.sroa.6.0.copyload.i, i64* %struct_alloca.sroa.7.0..sroa_idx31.i, align 8
  %struct_alloca.sroa.8.0..sroa_idx32.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 5
  store i64 0, i64* %struct_alloca.sroa.8.0..sroa_idx32.i, align 8
  %call6.i = call fastcc { i8*, i64, i64 } @"#UserApp_run_cd9485bcd826cd7441fe8b77ca3d11f7f6c7eccd1a861b4655c321fceb12"({ %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* nonnull %result_value5.i) #11
  %newret8 = extractvalue { i8*, i64, i64 } %call6.i, 0
  %oldret9 = insertvalue %list.RocList undef, i8* %newret8, 0
  %newret10 = extractvalue { i8*, i64, i64 } %call6.i, 1
  %oldret11 = insertvalue %list.RocList %oldret9, i64 %newret10, 1
  %newret12 = extractvalue { i8*, i64, i64 } %call6.i, 2
  %oldret13 = insertvalue %list.RocList %oldret11, i64 %newret12, 2
  call fastcc void @Str_fromUtf8_698af71e682dce72e1b119d817a61329283ecf2354d63fc9f9be62aa47c3(%list.RocList %oldret13, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value7.i) #11
  %tag_id_ptr8.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 2
  %load_tag_id9.i = load i8, i8* %tag_id_ptr8.i, align 8
  %eq_u810.i = icmp eq i8 %load_tag_id9.i, 0
  br i1 %eq_u810.i, label %then_block12.i, label %"#UserApp_28_dc6f529aae8cb34a938f3c3fa8991c215971a3e1081f87121ee57e25d74c5a.exit"

then_block12.i:                                   ; preds = %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit"
  call fastcc void @"#Attr_#dec_31"({ [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value7.i) #11
  %const_str_store14.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_str_literal_12062936082858867291, i64 0, i64 8), i8** %const_str_store14.repack.i, align 8
  %const_str_store14.repack25.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 1
  store i64 26, i64* %const_str_store14.repack25.i, align 8
  %const_str_store14.repack26.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 2
  store i64 26, i64* %const_str_store14.repack26.i, align 8
  call void @roc_panic(%str.RocStr* %const_str_store14.i, i32 1) #11
  unreachable

"#UserApp_28_dc6f529aae8cb34a938f3c3fa8991c215971a3e1081f87121ee57e25d74c5a.exit": ; preds = %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit"
  %load_element18.i.sroa.0.0..sroa_cast = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8**
  %load_element18.i.sroa.0.0.copyload = load i8*, i8** %load_element18.i.sroa.0.0..sroa_cast, align 8
  %load_element18.i.sroa.4.0..sroa_idx219 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 1
  %load_element18.i.sroa.4.0.copyload = load i64, i64* %load_element18.i.sroa.4.0..sroa_idx219, align 8
  %load_element18.i.sroa.5.0..sroa_idx221 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 2
  %load_element18.i.sroa.5.0.copyload = load i64, i64* %load_element18.i.sroa.5.0..sroa_idx221, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4)
  br label %common.ret

tag_id_modify.i76:                                ; preds = %entry
  %load_element7.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 0, i64 0
  %load_element7.sroa.0.0.copyload = load i64, i64* %load_element7.sroa.0.0..sroa_idx, align 8
  %load_element7.sroa.2.0..sroa_idx127 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element7.sroa.2.0.copyload = load i64, i64* %load_element7.sroa.2.0..sroa_idx127, align 8
  %load_element7.sroa.3.0..sroa_idx128 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element7.sroa.3.0.copyload = load i64, i64* %load_element7.sroa.3.0..sroa_idx128, align 8
  %load_element7.sroa.4.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element7.sroa.4.0..sroa_cast = bitcast i64* %load_element7.sroa.4.0..sroa_idx to i8*
  %load_element7.sroa.4.0.copyload = load i8, i8* %load_element7.sroa.4.0..sroa_cast, align 8
  %load_element7.sroa.5.0..sroa_raw_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result to i8*
  %load_element7.sroa.5.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 25
  %load_element7.sroa.5.0.copyload = load i8, i8* %load_element7.sroa.5.0..sroa_raw_idx, align 1
  %load_element7.sroa.6.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 26
  %load_element7.sroa.6.0.copyload = load i8, i8* %load_element7.sroa.6.0..sroa_raw_idx, align 2
  %load_element7.sroa.7.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 27
  %load_element7.sroa.7.0.copyload = load i8, i8* %load_element7.sroa.7.0..sroa_raw_idx, align 1
  %load_element7.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 28
  %load_element7.sroa.8.0.copyload = load i8, i8* %load_element7.sroa.8.0..sroa_raw_idx, align 4
  %load_element7.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 29
  %load_element7.sroa.9.0.copyload = load i8, i8* %load_element7.sroa.9.0..sroa_raw_idx, align 1
  %load_element7.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 30
  %load_element7.sroa.10.0.copyload = load i8, i8* %load_element7.sroa.10.0..sroa_raw_idx, align 2
  %load_element7.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 31
  %load_element7.sroa.11.0.copyload = load i8, i8* %load_element7.sroa.11.0..sroa_raw_idx, align 1
  %load_element7.sroa.12.0..sroa_idx129 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 4
  %load_element7.sroa.12.0.copyload = load i64, i64* %load_element7.sroa.12.0..sroa_idx129, align 8
  %load_element7.sroa.13.0..sroa_idx130 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 5
  %load_element7.sroa.13.0.copyload = load i64, i64* %load_element7.sroa.13.0..sroa_idx130, align 8
  %load_element7.sroa.14.0..sroa_idx131 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element7.sroa.14.0.copyload = load i64, i64* %load_element7.sroa.14.0..sroa_idx131, align 8
  %load_element7.sroa.15.0..sroa_idx132 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 7
  %load_element7.sroa.15.0.copyload = load i64, i64* %load_element7.sroa.15.0..sroa_idx132, align 8
  %load_element7.sroa.16.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 8
  %load_element7.sroa.16.0..sroa_cast = bitcast i64* %load_element7.sroa.16.0..sroa_idx to i8*
  %load_element7.sroa.16.0.copyload = load i8, i8* %load_element7.sroa.16.0..sroa_cast, align 8
  %load_element7.sroa.17.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 65
  %load_element7.sroa.17.0.copyload = load i8, i8* %load_element7.sroa.17.0..sroa_raw_idx, align 1
  %load_element7.sroa.18.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 66
  %load_element7.sroa.18.0.copyload = load i8, i8* %load_element7.sroa.18.0..sroa_raw_idx, align 2
  %load_element7.sroa.19.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 67
  %load_element7.sroa.19.0.copyload = load i8, i8* %load_element7.sroa.19.0..sroa_raw_idx, align 1
  %load_element7.sroa.20.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 68
  %load_element7.sroa.20.0.copyload = load i8, i8* %load_element7.sroa.20.0..sroa_raw_idx, align 4
  %load_element7.sroa.21.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 69
  %load_element7.sroa.21.0.copyload = load i8, i8* %load_element7.sroa.21.0..sroa_raw_idx, align 1
  %load_element7.sroa.22.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 70
  %load_element7.sroa.22.0.copyload = load i8, i8* %load_element7.sroa.22.0..sroa_raw_idx, align 2
  %load_element7.sroa.23.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 71
  %load_element7.sroa.23.0.copyload = load i8, i8* %load_element7.sroa.23.0..sroa_raw_idx, align 1
  %struct_alloca = alloca { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, align 8
  %.repack.repack72.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 0
  store i64 %load_element7.sroa.0.0.copyload, i64* %.repack.repack72.repack, align 8
  %.repack.repack72.repack78 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 1
  store i64 %load_element7.sroa.2.0.copyload, i64* %.repack.repack72.repack78, align 8
  %.repack.repack72.repack80 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 2
  store i64 %load_element7.sroa.3.0.copyload, i64* %.repack.repack72.repack80, align 8
  %.repack.repack74 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2
  store i8 %load_element7.sroa.4.0.copyload, i8* %.repack.repack74, align 8
  %.repack.repack76.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 0
  store i8 %load_element7.sroa.5.0.copyload, i8* %.repack.repack76.repack, align 1
  %.repack.repack76.repack82 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 1
  store i8 %load_element7.sroa.6.0.copyload, i8* %.repack.repack76.repack82, align 2
  %.repack.repack76.repack84 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 2
  store i8 %load_element7.sroa.7.0.copyload, i8* %.repack.repack76.repack84, align 1
  %.repack.repack76.repack86 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 3
  store i8 %load_element7.sroa.8.0.copyload, i8* %.repack.repack76.repack86, align 4
  %.repack.repack76.repack88 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 4
  store i8 %load_element7.sroa.9.0.copyload, i8* %.repack.repack76.repack88, align 1
  %.repack.repack76.repack90 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 5
  store i8 %load_element7.sroa.10.0.copyload, i8* %.repack.repack76.repack90, align 2
  %.repack.repack76.repack92 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 6
  store i8 %load_element7.sroa.11.0.copyload, i8* %.repack.repack76.repack92, align 1
  %.repack70.repack94.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 0
  store i64 %load_element7.sroa.12.0.copyload, i64* %.repack70.repack94.repack, align 8
  %.repack70.repack94.repack100 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 1
  store i64 %load_element7.sroa.13.0.copyload, i64* %.repack70.repack94.repack100, align 8
  %.repack70.repack94.repack102 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 2
  store i64 %load_element7.sroa.14.0.copyload, i64* %.repack70.repack94.repack102, align 8
  %.repack70.repack94.repack104 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 3
  store i64 %load_element7.sroa.15.0.copyload, i64* %.repack70.repack94.repack104, align 8
  %.repack70.repack96 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 2
  store i8 %load_element7.sroa.16.0.copyload, i8* %.repack70.repack96, align 8
  %.repack70.repack98.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 0
  store i8 %load_element7.sroa.17.0.copyload, i8* %.repack70.repack98.repack, align 1
  %.repack70.repack98.repack106 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 1
  store i8 %load_element7.sroa.18.0.copyload, i8* %.repack70.repack98.repack106, align 2
  %.repack70.repack98.repack108 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 2
  store i8 %load_element7.sroa.19.0.copyload, i8* %.repack70.repack98.repack108, align 1
  %.repack70.repack98.repack110 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 3
  store i8 %load_element7.sroa.20.0.copyload, i8* %.repack70.repack98.repack110, align 4
  %.repack70.repack98.repack112 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 4
  store i8 %load_element7.sroa.21.0.copyload, i8* %.repack70.repack98.repack112, align 1
  %.repack70.repack98.repack114 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 5
  store i8 %load_element7.sroa.22.0.copyload, i8* %.repack70.repack98.repack114, align 2
  %.repack70.repack98.repack116 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 6
  store i8 %load_element7.sroa.23.0.copyload, i8* %.repack70.repack98.repack116, align 1
  %tag_alloca9 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %data_buffer10 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 1
  %30 = bitcast [9 x i64]* %data_buffer10 to i8*
  %31 = bitcast { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %30, i8* noundef nonnull align 8 dereferenceable(72) %31, i64 72, i1 false)
  %tag_id_ptr12 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr12, align 8
  %32 = bitcast %str.RocStr* %result_value.i142 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = bitcast %str.RocStr* %const_str_store1.i143 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %34 = bitcast %str.RocStr* %const_str_store.i144 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %35 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %36, i8* noundef nonnull align 8 dereferenceable(32) %31, i64 32, i1 false)
  %tag_id_ptr.i.i.i74 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 2
  %load_tag_id.i.i.i75 = load i8, i8* %tag_id_ptr.i.i.i74, align 8
  switch i8 %load_tag_id.i.i.i75, label %"#Attr_#dec_28.exit.i.i119" [
    i8 0, label %tag_id_modify.i.i.i79
    i8 1, label %tag_id_modify1.i.i.i92
    i8 2, label %tag_id_modify6.i.i.i105
  ]

tag_id_modify.i.i.i79:                            ; preds = %tag_id_modify.i76
  %37 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1, i64 2
  %field_value.i.i.unpack41.i77 = load i64, i64* %37, align 8
  %"cap > 0.i.i.i.not.i78" = icmp eq i64 %field_value.i.i.unpack41.i77, 0
  br i1 %"cap > 0.i.i.i.not.i78", label %"#Attr_#dec_28.exit.i.i119", label %modification_list_block.i.i.i.i87

modification_list_block.i.i.i.i87:                ; preds = %tag_id_modify.i.i.i79
  %field_ptr.i.i.i80 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1
  %field_value.i.i.elt.i81 = bitcast [3 x i64]* %field_ptr.i.i.i80 to i8**
  %field_value.i.i.unpack.i82 = load i8*, i8** %field_value.i.i.elt.i81, align 8
  %38 = ptrtoint i8* %field_value.i.i.unpack.i82 to i64
  %39 = shl i64 %field_value.i.i.unpack41.i77, 1
  %.not.i.i.i.i.i.i83 = icmp slt i64 %field_value.i.i.unpack41.i77, 0
  %40 = select i1 %.not.i.i.i.i.i.i83, i64 %39, i64 %38
  %as_usize_ptr.i.i.i.i84 = inttoptr i64 %40 to i64*
  %get_rc_ptr.i.i.i.i85 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i84, i64 -1
  %41 = load i64, i64* %get_rc_ptr.i.i.i.i85, align 8
  %.not.i.i.i.i.i.i.i86 = icmp eq i64 %41, 0
  br i1 %.not.i.i.i.i.i.i.i86, label %"#Attr_#dec_28.exit.i.i119", label %Then.i.i.i.i.i.i.i88

Then.i.i.i.i.i.i.i88:                             ; preds = %modification_list_block.i.i.i.i87
  %42 = add i64 %41, -1
  store i64 %42, i64* %get_rc_ptr.i.i.i.i85, align 8
  %43 = icmp eq i64 %41, -9223372036854775808
  br i1 %43, label %Then1.i.i.i.i.i.i.i89, label %"#Attr_#dec_28.exit.i.i119"

Then1.i.i.i.i.i.i.i89:                            ; preds = %Then.i.i.i.i.i.i.i88
  %44 = bitcast i64* %get_rc_ptr.i.i.i.i85 to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i114"

tag_id_modify1.i.i.i92:                           ; preds = %tag_id_modify.i76
  %45 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1, i64 2
  %field_value5.i.i.unpack32.i90 = load i64, i64* %45, align 8
  %"cap > 0.i.i.not.i91" = icmp eq i64 %field_value5.i.i.unpack32.i90, 0
  br i1 %"cap > 0.i.i.not.i91", label %"#Attr_#dec_28.exit.i.i119", label %modification_list_block.i.i.i100

modification_list_block.i.i.i100:                 ; preds = %tag_id_modify1.i.i.i92
  %field_ptr2.i.i.i93 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1
  %field_value5.i.i.elt.i94 = bitcast [3 x i64]* %field_ptr2.i.i.i93 to i8**
  %field_value5.i.i.unpack.i95 = load i8*, i8** %field_value5.i.i.elt.i94, align 8
  %46 = ptrtoint i8* %field_value5.i.i.unpack.i95 to i64
  %47 = shl i64 %field_value5.i.i.unpack32.i90, 1
  %.not.i.i.i.i.i96 = icmp slt i64 %field_value5.i.i.unpack32.i90, 0
  %48 = select i1 %.not.i.i.i.i.i96, i64 %47, i64 %46
  %as_usize_ptr.i15.i.i97 = inttoptr i64 %48 to i64*
  %get_rc_ptr.i16.i.i98 = getelementptr inbounds i64, i64* %as_usize_ptr.i15.i.i97, i64 -1
  %49 = load i64, i64* %get_rc_ptr.i16.i.i98, align 8
  %.not.i.i.i.i17.i.i99 = icmp eq i64 %49, 0
  br i1 %.not.i.i.i.i17.i.i99, label %"#Attr_#dec_28.exit.i.i119", label %Then.i.i.i.i18.i.i101

Then.i.i.i.i18.i.i101:                            ; preds = %modification_list_block.i.i.i100
  %50 = add i64 %49, -1
  store i64 %50, i64* %get_rc_ptr.i16.i.i98, align 8
  %51 = icmp eq i64 %49, -9223372036854775808
  br i1 %51, label %Then1.i.i.i.i19.i.i102, label %"#Attr_#dec_28.exit.i.i119"

Then1.i.i.i.i19.i.i102:                           ; preds = %Then.i.i.i.i18.i.i101
  %52 = bitcast i64* %get_rc_ptr.i16.i.i98 to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i114"

tag_id_modify6.i.i.i105:                          ; preds = %tag_id_modify.i76
  %53 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.unpack22.i103 = load i64, i64* %53, align 8
  %is_big_str.i.i.i104 = icmp sgt i64 %load_str_to_stack.i.i.unpack22.i103, 0
  br i1 %is_big_str.i.i.i104, label %modify_rc.i.i.i111, label %"#Attr_#dec_28.exit.i.i119"

modify_rc.i.i.i111:                               ; preds = %tag_id_modify6.i.i.i105
  %field_ptr7.i.i.i106 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1
  %modify_tag_field9.i.i.i107 = bitcast [3 x i64]* %field_ptr7.i.i.i106 to %str.RocStr*
  %call_builtin.i.i.i108 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i107) #11
  %get_rc_ptr.i.i.i109 = getelementptr inbounds i8, i8* %call_builtin.i.i.i108, i64 -8
  %54 = bitcast i8* %get_rc_ptr.i.i.i109 to i64*
  %55 = load i64, i64* %54, align 8
  %.not.i.i.i.i2.i.i110 = icmp eq i64 %55, 0
  br i1 %.not.i.i.i.i2.i.i110, label %"#Attr_#dec_28.exit.i.i119", label %Then.i.i.i.i.i.i112

Then.i.i.i.i.i.i112:                              ; preds = %modify_rc.i.i.i111
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %55, -9223372036854775808
  br i1 %57, label %"#Attr_#dec_28.exit.i.sink.split.i114", label %"#Attr_#dec_28.exit.i.i119"

"#Attr_#dec_28.exit.i.sink.split.i114":           ; preds = %Then.i.i.i.i.i.i112, %Then1.i.i.i.i19.i.i102, %Then1.i.i.i.i.i.i.i89
  %get_rc_ptr.i.i.sink.i113 = phi i8* [ %52, %Then1.i.i.i.i19.i.i102 ], [ %44, %Then1.i.i.i.i.i.i.i89 ], [ %get_rc_ptr.i.i.i109, %Then.i.i.i.i.i.i112 ]
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.sink.i113, i32 8) #11
  br label %"#Attr_#dec_28.exit.i.i119"

"#Attr_#dec_28.exit.i.i119":                      ; preds = %"#Attr_#dec_28.exit.i.sink.split.i114", %Then.i.i.i.i.i.i112, %modify_rc.i.i.i111, %tag_id_modify6.i.i.i105, %Then.i.i.i.i18.i.i101, %modification_list_block.i.i.i100, %tag_id_modify1.i.i.i92, %Then.i.i.i.i.i.i.i88, %modification_list_block.i.i.i.i87, %tag_id_modify.i.i.i79, %tag_id_modify.i76
  %struct_field_access_record_1.i.i115 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 1, i64 4
  %58 = bitcast i64* %struct_field_access_record_1.i.i115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %35, i8* noundef nonnull align 8 dereferenceable(40) %58, i64 40, i1 false) #11
  %tag_id_ptr.i3.i.i116 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i69, i64 0, i32 2
  %load_tag_id.i4.i.i117 = load i8, i8* %tag_id_ptr.i3.i.i116, align 8
  %cond.i.i.i118 = icmp eq i8 %load_tag_id.i4.i.i117, 9
  br i1 %cond.i.i.i118, label %tag_id_modify.i8.i.i122, label %"#Attr_#dec_4.exit.i170"

tag_id_modify.i8.i.i122:                          ; preds = %"#Attr_#dec_28.exit.i.i119"
  %59 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i69, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.i.unpack27.i120 = load i64, i64* %59, align 8
  %is_big_str.i.i.i.i121 = icmp sgt i64 %load_str_to_stack.i.i.i.unpack27.i120, 0
  br i1 %is_big_str.i.i.i.i121, label %modify_rc.i.i.i.i128, label %"#Attr_#dec_4.exit.i170"

modify_rc.i.i.i.i128:                             ; preds = %tag_id_modify.i8.i.i122
  %field_ptr.i5.i.i123 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i69, i64 0, i32 1
  %modify_tag_field.i7.i.i124 = bitcast [4 x i64]* %field_ptr.i5.i.i123 to %str.RocStr*
  %call_builtin.i.i.i.i125 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field.i7.i.i124) #11
  %get_rc_ptr.i.i10.i.i126 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i125, i64 -8
  %60 = bitcast i8* %get_rc_ptr.i.i10.i.i126 to i64*
  %61 = load i64, i64* %60, align 8
  %.not.i.i.i.i.i11.i.i127 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i.i11.i.i127, label %"#Attr_#dec_4.exit.i170", label %Then.i.i.i.i.i12.i.i129

Then.i.i.i.i.i12.i.i129:                          ; preds = %modify_rc.i.i.i.i128
  %62 = add i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i.i13.i.i130, label %"#Attr_#dec_4.exit.i170"

Then1.i.i.i.i.i13.i.i130:                         ; preds = %Then.i.i.i.i.i12.i.i129
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i10.i.i126, i32 8) #11
  br label %"#Attr_#dec_4.exit.i170"

"#Attr_#dec_4.exit.i170":                         ; preds = %Then1.i.i.i.i.i13.i.i130, %Then.i.i.i.i.i12.i.i129, %modify_rc.i.i.i.i128, %tag_id_modify.i8.i.i122, %"#Attr_#dec_28.exit.i.i119"
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #11
  %const_str_store.repack.i149 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 0
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_str_literal_17100216405140828939, i64 0, i64 8), i8** %const_str_store.repack.i149, align 8
  %const_str_store.repack27.i150 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 1
  store i64 31, i64* %const_str_store.repack27.i150, align 8
  %const_str_store.repack28.i151 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 2
  store i64 31, i64* %const_str_store.repack28.i151, align 8
  %const_str_store1.repack.i152 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 0
  store i8* inttoptr (i64 11872 to i8*), i8** %const_str_store1.repack.i152, align 8
  %const_str_store1.repack29.i153 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 1
  store i64 0, i64* %const_str_store1.repack29.i153, align 8
  %const_str_store1.repack30.i154 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store1.repack30.i154, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i142, %str.RocStr* nonnull readonly %transform, %str.RocStr* nocapture nonnull readonly %const_str_store1.i143) #11
  %64 = bitcast %str.RocStr* %str_alloca.i31.i135 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %str_alloca.i31.i135, %str.RocStr* nonnull readonly %const_str_store.i144, %str.RocStr* nocapture nonnull readonly %result_value.i142) #11
  %result_value2.i141.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 0
  %result_value2.i141.sroa.0.0.copyload = load i8*, i8** %result_value2.i141.sroa.0.0..sroa_idx, align 8
  %result_value2.i141.sroa.4.0..sroa_idx231 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 1
  %result_value2.i141.sroa.4.0.copyload = load i64, i64* %result_value2.i141.sroa.4.0..sroa_idx231, align 8
  %result_value2.i141.sroa.5.0..sroa_idx233 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 2
  %result_value2.i141.sroa.5.0.copyload = load i64, i64* %result_value2.i141.sroa.5.0..sroa_idx233, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  %load_str_to_stack.i32.i167.elt30 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i142, i64 0, i32 2
  %load_str_to_stack.i32.i167.unpack31 = load i64, i64* %load_str_to_stack.i32.i167.elt30, align 8
  %is_big_str.i34.i169 = icmp sgt i64 %load_str_to_stack.i32.i167.unpack31, 0
  br i1 %is_big_str.i34.i169, label %modify_rc.i39.i175, label %"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit"

modify_rc.i39.i175:                               ; preds = %"#Attr_#dec_4.exit.i170"
  %call_builtin.i35.i171 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i142) #11
  %get_rc_ptr.i37.i173 = getelementptr inbounds i8, i8* %call_builtin.i35.i171, i64 -8
  %65 = bitcast i8* %get_rc_ptr.i37.i173 to i64*
  %66 = load i64, i64* %65, align 8
  %.not.i.i.i.i38.i174 = icmp eq i64 %66, 0
  br i1 %.not.i.i.i.i38.i174, label %"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit", label %Then.i.i.i.i40.i176

Then.i.i.i.i40.i176:                              ; preds = %modify_rc.i39.i175
  %67 = add i64 %66, -1
  store i64 %67, i64* %65, align 8
  %68 = icmp eq i64 %66, -9223372036854775808
  br i1 %68, label %Then1.i.i.i.i41.i177, label %"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit"

Then1.i.i.i.i41.i177:                             ; preds = %Then.i.i.i.i40.i176
  tail call void @roc_dealloc(i8* %get_rc_ptr.i37.i173, i32 8) #11
  br label %"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit"

"#UserApp_28_63c0d48f986770d022c4e84ac428eaf66e6ff31e64f3fb8103f545b95bc4d5.exit": ; preds = %"#Attr_#dec_4.exit.i170", %Then1.i.i.i.i41.i177, %Then.i.i.i.i40.i176, %modify_rc.i39.i175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc %str.RocStr @Task_39_d43bd4d5ddc24336f7aab0060a1d39e7b5f52fc4e1cedc9bc2c942b1634d97({ [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture readonly %result, %str.RocStr* nocapture readonly %transform) unnamed_addr #11 {
entry:
  %struct_field1.i.i69 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field.i.i70 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value.i.i.i.i.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %result_value.i.i.i.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %str_alloca.i31.i135 = alloca %str.RocStr, align 8
  %result_value.i142 = alloca %str.RocStr, align 8
  %const_str_store1.i143 = alloca %str.RocStr, align 8
  %const_str_store.i144 = alloca %str.RocStr, align 8
  %const_str_store14.i = alloca %str.RocStr, align 8
  %result_value7.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value5.i = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %else_block.i, label %tag_id_modify.i76

common.ret:                                       ; preds = %"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit", %"#UserApp_28_ecd660c531b61447d475322cdcf4edd71aed292a9e2a383acc6e8426e5af3e.exit"
  %load_tag_to_put_in_struct.unpack.i.i.i.pn.pn = phi i8* [ %load_element18.i.sroa.0.0.copyload, %"#UserApp_28_ecd660c531b61447d475322cdcf4edd71aed292a9e2a383acc6e8426e5af3e.exit" ], [ %result_value2.i141.sroa.0.0.copyload, %"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit" ]
  %load_tag_to_put_in_struct.unpack3.i.i.i.pn.pn = phi i64 [ %load_element18.i.sroa.4.0.copyload, %"#UserApp_28_ecd660c531b61447d475322cdcf4edd71aed292a9e2a383acc6e8426e5af3e.exit" ], [ %result_value2.i141.sroa.4.0.copyload, %"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit" ]
  %load_tag_to_put_in_struct.unpack5.i.i.i.pn.pn = phi i64 [ %load_element18.i.sroa.5.0.copyload, %"#UserApp_28_ecd660c531b61447d475322cdcf4edd71aed292a9e2a383acc6e8426e5af3e.exit" ], [ %result_value2.i141.sroa.5.0.copyload, %"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit" ]
  %.pn40.pn = insertvalue %str.RocStr undef, i8* %load_tag_to_put_in_struct.unpack.i.i.i.pn.pn, 0
  %.pn39.pn = insertvalue %str.RocStr %.pn40.pn, i64 %load_tag_to_put_in_struct.unpack3.i.i.i.pn.pn, 1
  %load_tag_to_put_in_struct6.i.i.i.pn.pn = insertvalue %str.RocStr %.pn39.pn, i64 %load_tag_to_put_in_struct.unpack5.i.i.i.pn.pn, 2
  ret %str.RocStr %load_tag_to_put_in_struct6.i.i.i.pn.pn

else_block.i:                                     ; preds = %entry
  %get_opaque_data_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1
  %load_element.elt = bitcast [9 x i64]* %get_opaque_data_ptr to i8**
  %load_element.unpack = load i8*, i8** %load_element.elt, align 8
  %0 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.unpack119 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.unpack121 = load i64, i64* %1, align 8
  %2 = bitcast %str.RocStr* %const_str_store14.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  %3 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3)
  %4 = bitcast { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4)
  %load_str_to_stack.i44.i.elt35 = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 2
  %load_str_to_stack.i44.i.unpack36 = load i64, i64* %load_str_to_stack.i44.i.elt35, align 8
  %is_big_str.i46.i = icmp sgt i64 %load_str_to_stack.i44.i.unpack36, 0
  br i1 %is_big_str.i46.i, label %modify_rc.i51.i, label %"#Attr_#dec_4.exit55.i"

modify_rc.i51.i:                                  ; preds = %else_block.i
  %call_builtin.i47.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %transform) #11
  %get_rc_ptr.i49.i = getelementptr inbounds i8, i8* %call_builtin.i47.i, i64 -8
  %5 = bitcast i8* %get_rc_ptr.i49.i to i64*
  %6 = load i64, i64* %5, align 8
  %.not.i.i.i.i50.i = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i50.i, label %"#Attr_#dec_4.exit55.i", label %Then.i.i.i.i52.i

Then.i.i.i.i52.i:                                 ; preds = %modify_rc.i51.i
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i53.i, label %"#Attr_#dec_4.exit55.i"

Then1.i.i.i.i53.i:                                ; preds = %Then.i.i.i.i52.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i49.i, i32 8) #11
  br label %"#Attr_#dec_4.exit55.i"

"#Attr_#dec_4.exit55.i":                          ; preds = %modify_rc.i51.i, %Then.i.i.i.i52.i, %Then1.i.i.i.i53.i, %else_block.i
  %9 = bitcast { i64, %list.RocList, %list.RocList }* %struct_alloca.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %9, i8 0, i64 56, i1 false) #11
  %10 = bitcast { i64, %list.RocList, %list.RocList }* %result_value.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #11
  %11 = bitcast { i64, %list.RocList, %list.RocList }* %result_value.i.i.i.i.i to i8*
  %lt_uint.i.i.i.i50.not.i = icmp eq i64 %load_element.unpack119, 0
  br i1 %lt_uint.i.i.i.i50.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.preheader.i

then_block.i.i.i.preheader.i:                     ; preds = %"#Attr_#dec_4.exit55.i"
  %list_get_load_element.i.i.i.i.peel.i = load i8, i8* %load_element.unpack, align 1
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  call fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nonnull %struct_alloca.i, i8 %list_get_load_element.i.i.i.i.peel.i, { i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %10, i8* noundef nonnull align 8 dereferenceable(56) %11, i64 56, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  %exitcond.peel.not.i = icmp eq i64 %load_element.unpack119, 1
  br i1 %exitcond.peel.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.i

then_block.i.i.i.i:                               ; preds = %then_block.i.i.i.preheader.i, %then_block.i.i.i.i
  %joinpointarg3.i.i.i52.i = phi i64 [ %call.i.i.i.i49.i, %then_block.i.i.i.i ], [ 1, %then_block.i.i.i.preheader.i ]
  %list_get_element.i.i.i.i.i = getelementptr inbounds i8, i8* %load_element.unpack, i64 %joinpointarg3.i.i.i52.i
  %list_get_load_element.i.i.i.i.i = load i8, i8* %list_get_element.i.i.i.i.i, align 1
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  call fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i, i8 %list_get_load_element.i.i.i.i.i, { i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %10, i8* noundef nonnull align 8 dereferenceable(56) %11, i64 56, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  %call.i.i.i.i49.i = add nuw i64 %joinpointarg3.i.i.i52.i, 1
  %exitcond.not.i = icmp eq i64 %call.i.i.i.i49.i, %load_element.unpack119
  br i1 %exitcond.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.i, !llvm.loop !241

else_block.i.i.i.i:                               ; preds = %then_block.i.i.i.i, %then_block.i.i.i.preheader.i, %"#Attr_#dec_4.exit55.i"
  %joinpointarg1.i.i.i.lcssa.i = phi { i64, %list.RocList, %list.RocList }* [ %struct_alloca.i, %"#Attr_#dec_4.exit55.i" ], [ %result_value.i.i.i.i, %then_block.i.i.i.preheader.i ], [ %result_value.i.i.i.i, %then_block.i.i.i.i ]
  %"cap > 0.i.i.i.i.not.i" = icmp eq i64 %load_element.unpack121, 0
  br i1 %"cap > 0.i.i.i.i.not.i", label %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i, label %modification_list_block.i.i.i.i.i

modification_list_block.i.i.i.i.i:                ; preds = %else_block.i.i.i.i
  %12 = ptrtoint i8* %load_element.unpack to i64
  %13 = shl i64 %load_element.unpack121, 1
  %.not.i.i.i.i.i.i.i60 = icmp slt i64 %load_element.unpack121, 0
  %14 = select i1 %.not.i.i.i.i.i.i.i60, i64 %13, i64 %12
  %as_usize_ptr.i.i.i.i.i = inttoptr i64 %14 to i64*
  %get_rc_ptr.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i.i, i64 -1
  %15 = load i64, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %modification_list_block.i.i.i.i.i
  %16 = add i64 %15, -1
  store i64 %16, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %17 = icmp eq i64 %15, -9223372036854775808
  br i1 %17, label %Then1.i.i.i.i.i.i.i.i, label %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  %18 = bitcast i64* %get_rc_ptr.i.i.i.i.i to i8*
  tail call void @roc_dealloc(i8* %18, i32 8) #11
  br label %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i

List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i: ; preds = %Then1.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %modification_list_block.i.i.i.i.i, %else_block.i.i.i.i
  %result_value.i.i.sroa.4.0..sroa_idx34.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 0
  %result_value.i.i.sroa.4.0.copyload.i = load i8*, i8** %result_value.i.i.sroa.4.0..sroa_idx34.i, align 8
  %result_value.i.i.sroa.5.0..sroa_idx36.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 1
  %result_value.i.i.sroa.5.0.copyload.i = load i64, i64* %result_value.i.i.sroa.5.0..sroa_idx36.i, align 8
  %result_value.i.i.sroa.6.0..sroa_idx38.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 2
  %result_value.i.i.sroa.6.0.copyload.i = load i64, i64* %result_value.i.i.sroa.6.0..sroa_idx38.i, align 8
  %result_value.i.i.sroa.7.0..sroa_idx40.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 2, i32 0
  %result_value.i.i.sroa.7.0.copyload.i = load i8*, i8** %result_value.i.i.sroa.7.0..sroa_idx40.i, align 8
  %result_value.i.i.sroa.9.0..sroa_idx44.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 2, i32 2
  %result_value.i.i.sroa.9.0.copyload.i = load i64, i64* %result_value.i.i.sroa.9.0..sroa_idx44.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #11
  %"cap > 0.i.not.i61" = icmp eq i64 %result_value.i.i.sroa.9.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i61", label %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit", label %modification_list_block.i.i66

modification_list_block.i.i66:                    ; preds = %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i
  %19 = ptrtoint i8* %result_value.i.i.sroa.7.0.copyload.i to i64
  %20 = shl i64 %result_value.i.i.sroa.9.0.copyload.i, 1
  %.not.i.i.i.i62 = icmp slt i64 %result_value.i.i.sroa.9.0.copyload.i, 0
  %21 = select i1 %.not.i.i.i.i62, i64 %20, i64 %19
  %as_usize_ptr.i.i63 = inttoptr i64 %21 to i64*
  %get_rc_ptr.i.i64 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i63, i64 -1
  %22 = load i64, i64* %get_rc_ptr.i.i64, align 8
  %.not.i.i.i.i.i65 = icmp eq i64 %22, 0
  br i1 %.not.i.i.i.i.i65, label %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit", label %Then.i.i.i.i.i67

Then.i.i.i.i.i67:                                 ; preds = %modification_list_block.i.i66
  %23 = add i64 %22, -1
  store i64 %23, i64* %get_rc_ptr.i.i64, align 8
  %24 = icmp eq i64 %22, -9223372036854775808
  br i1 %24, label %Then1.i.i.i.i.i68, label %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit"

Then1.i.i.i.i.i68:                                ; preds = %Then.i.i.i.i.i67
  %25 = bitcast i64* %get_rc_ptr.i.i64 to i8*
  tail call void @roc_dealloc(i8* %25, i32 8) #11
  br label %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit"

"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit": ; preds = %List_walk_2cbdf6dd727da6ede3b816ff50e6c2fb522ad4cc7f391bc1663c221f72286.exit.i, %modification_list_block.i.i66, %Then.i.i.i.i.i67, %Then1.i.i.i.i.i68
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9)
  %26 = tail call i8* @roc_alloc(i64 1008, i32 8) #11, !noalias !253
  %27 = icmp ne i8* %26, null
  tail call void @llvm.assume(i1 %27) #11, !noalias !262
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %26 to i64*
  store i64 -9223372036854775808, i64* %29, align 8, !noalias !253
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1000) %28, i8 0, i64 1000, i1 false) #11
  %struct_alloca.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 0
  store i8* %28, i8** %struct_alloca.sroa.0.0..sroa_idx.i, align 8
  %struct_alloca.sroa.2.0..sroa_idx27.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 1
  store i64 1000, i64* %struct_alloca.sroa.2.0..sroa_idx27.i, align 8
  %struct_alloca.sroa.3.0..sroa_idx28.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 2
  store i64 1000, i64* %struct_alloca.sroa.3.0..sroa_idx28.i, align 8
  %struct_alloca.sroa.4.0..sroa_idx.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 1
  %struct_alloca.sroa.4.0..sroa_cast.i = bitcast i64* %struct_alloca.sroa.4.0..sroa_idx.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %struct_alloca.sroa.4.0..sroa_cast.i, i8 0, i64 40, i1 false) #11
  %struct_alloca.sroa.5.0..sroa_idx29.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 0
  store i8* %result_value.i.i.sroa.4.0.copyload.i, i8** %struct_alloca.sroa.5.0..sroa_idx29.i, align 8
  %struct_alloca.sroa.6.0..sroa_idx30.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 1
  store i64 %result_value.i.i.sroa.5.0.copyload.i, i64* %struct_alloca.sroa.6.0..sroa_idx30.i, align 8
  %struct_alloca.sroa.7.0..sroa_idx31.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 2
  store i64 %result_value.i.i.sroa.6.0.copyload.i, i64* %struct_alloca.sroa.7.0..sroa_idx31.i, align 8
  %struct_alloca.sroa.8.0..sroa_idx32.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 5
  store i64 0, i64* %struct_alloca.sroa.8.0..sroa_idx32.i, align 8
  %call6.i = call fastcc { i8*, i64, i64 } @"#UserApp_run_cd9485bcd826cd7441fe8b77ca3d11f7f6c7eccd1a861b4655c321fceb12"({ %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* nonnull %result_value5.i) #11
  %newret8 = extractvalue { i8*, i64, i64 } %call6.i, 0
  %oldret9 = insertvalue %list.RocList undef, i8* %newret8, 0
  %newret10 = extractvalue { i8*, i64, i64 } %call6.i, 1
  %oldret11 = insertvalue %list.RocList %oldret9, i64 %newret10, 1
  %newret12 = extractvalue { i8*, i64, i64 } %call6.i, 2
  %oldret13 = insertvalue %list.RocList %oldret11, i64 %newret12, 2
  call fastcc void @Str_fromUtf8_698af71e682dce72e1b119d817a61329283ecf2354d63fc9f9be62aa47c3(%list.RocList %oldret13, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value7.i) #11
  %tag_id_ptr8.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 2
  %load_tag_id9.i = load i8, i8* %tag_id_ptr8.i, align 8
  %eq_u810.i = icmp eq i8 %load_tag_id9.i, 0
  br i1 %eq_u810.i, label %then_block12.i, label %"#UserApp_28_ecd660c531b61447d475322cdcf4edd71aed292a9e2a383acc6e8426e5af3e.exit"

then_block12.i:                                   ; preds = %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit"
  call fastcc void @"#Attr_#dec_31"({ [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value7.i) #11
  %const_str_store14.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_str_literal_12062936082858867291, i64 0, i64 8), i8** %const_str_store14.repack.i, align 8
  %const_str_store14.repack25.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 1
  store i64 26, i64* %const_str_store14.repack25.i, align 8
  %const_str_store14.repack26.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 2
  store i64 26, i64* %const_str_store14.repack26.i, align 8
  call void @roc_panic(%str.RocStr* %const_str_store14.i, i32 1) #11
  unreachable

"#UserApp_28_ecd660c531b61447d475322cdcf4edd71aed292a9e2a383acc6e8426e5af3e.exit": ; preds = %"#UserApp_tokenize_94c26b3a1c7fc0ed988bb3dbcee212eeef93163339a985adf719c96dc387f28e.exit"
  %load_element18.i.sroa.0.0..sroa_cast = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8**
  %load_element18.i.sroa.0.0.copyload = load i8*, i8** %load_element18.i.sroa.0.0..sroa_cast, align 8
  %load_element18.i.sroa.4.0..sroa_idx219 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 1
  %load_element18.i.sroa.4.0.copyload = load i64, i64* %load_element18.i.sroa.4.0..sroa_idx219, align 8
  %load_element18.i.sroa.5.0..sroa_idx221 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 2
  %load_element18.i.sroa.5.0.copyload = load i64, i64* %load_element18.i.sroa.5.0..sroa_idx221, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4)
  br label %common.ret

tag_id_modify.i76:                                ; preds = %entry
  %load_element7.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 0, i64 0
  %load_element7.sroa.0.0.copyload = load i64, i64* %load_element7.sroa.0.0..sroa_idx, align 8
  %load_element7.sroa.2.0..sroa_idx127 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element7.sroa.2.0.copyload = load i64, i64* %load_element7.sroa.2.0..sroa_idx127, align 8
  %load_element7.sroa.3.0..sroa_idx128 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element7.sroa.3.0.copyload = load i64, i64* %load_element7.sroa.3.0..sroa_idx128, align 8
  %load_element7.sroa.4.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element7.sroa.4.0..sroa_cast = bitcast i64* %load_element7.sroa.4.0..sroa_idx to i8*
  %load_element7.sroa.4.0.copyload = load i8, i8* %load_element7.sroa.4.0..sroa_cast, align 8
  %load_element7.sroa.5.0..sroa_raw_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result to i8*
  %load_element7.sroa.5.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 25
  %load_element7.sroa.5.0.copyload = load i8, i8* %load_element7.sroa.5.0..sroa_raw_idx, align 1
  %load_element7.sroa.6.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 26
  %load_element7.sroa.6.0.copyload = load i8, i8* %load_element7.sroa.6.0..sroa_raw_idx, align 2
  %load_element7.sroa.7.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 27
  %load_element7.sroa.7.0.copyload = load i8, i8* %load_element7.sroa.7.0..sroa_raw_idx, align 1
  %load_element7.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 28
  %load_element7.sroa.8.0.copyload = load i8, i8* %load_element7.sroa.8.0..sroa_raw_idx, align 4
  %load_element7.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 29
  %load_element7.sroa.9.0.copyload = load i8, i8* %load_element7.sroa.9.0..sroa_raw_idx, align 1
  %load_element7.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 30
  %load_element7.sroa.10.0.copyload = load i8, i8* %load_element7.sroa.10.0..sroa_raw_idx, align 2
  %load_element7.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 31
  %load_element7.sroa.11.0.copyload = load i8, i8* %load_element7.sroa.11.0..sroa_raw_idx, align 1
  %load_element7.sroa.12.0..sroa_idx129 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 4
  %load_element7.sroa.12.0.copyload = load i64, i64* %load_element7.sroa.12.0..sroa_idx129, align 8
  %load_element7.sroa.13.0..sroa_idx130 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 5
  %load_element7.sroa.13.0.copyload = load i64, i64* %load_element7.sroa.13.0..sroa_idx130, align 8
  %load_element7.sroa.14.0..sroa_idx131 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element7.sroa.14.0.copyload = load i64, i64* %load_element7.sroa.14.0..sroa_idx131, align 8
  %load_element7.sroa.15.0..sroa_idx132 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 7
  %load_element7.sroa.15.0.copyload = load i64, i64* %load_element7.sroa.15.0..sroa_idx132, align 8
  %load_element7.sroa.16.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 8
  %load_element7.sroa.16.0..sroa_cast = bitcast i64* %load_element7.sroa.16.0..sroa_idx to i8*
  %load_element7.sroa.16.0.copyload = load i8, i8* %load_element7.sroa.16.0..sroa_cast, align 8
  %load_element7.sroa.17.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 65
  %load_element7.sroa.17.0.copyload = load i8, i8* %load_element7.sroa.17.0..sroa_raw_idx, align 1
  %load_element7.sroa.18.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 66
  %load_element7.sroa.18.0.copyload = load i8, i8* %load_element7.sroa.18.0..sroa_raw_idx, align 2
  %load_element7.sroa.19.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 67
  %load_element7.sroa.19.0.copyload = load i8, i8* %load_element7.sroa.19.0..sroa_raw_idx, align 1
  %load_element7.sroa.20.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 68
  %load_element7.sroa.20.0.copyload = load i8, i8* %load_element7.sroa.20.0..sroa_raw_idx, align 4
  %load_element7.sroa.21.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 69
  %load_element7.sroa.21.0.copyload = load i8, i8* %load_element7.sroa.21.0..sroa_raw_idx, align 1
  %load_element7.sroa.22.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 70
  %load_element7.sroa.22.0.copyload = load i8, i8* %load_element7.sroa.22.0..sroa_raw_idx, align 2
  %load_element7.sroa.23.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 71
  %load_element7.sroa.23.0.copyload = load i8, i8* %load_element7.sroa.23.0..sroa_raw_idx, align 1
  %struct_alloca = alloca { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, align 8
  %.repack.repack72.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 0
  store i64 %load_element7.sroa.0.0.copyload, i64* %.repack.repack72.repack, align 8
  %.repack.repack72.repack78 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 1
  store i64 %load_element7.sroa.2.0.copyload, i64* %.repack.repack72.repack78, align 8
  %.repack.repack72.repack80 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 2
  store i64 %load_element7.sroa.3.0.copyload, i64* %.repack.repack72.repack80, align 8
  %.repack.repack74 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2
  store i8 %load_element7.sroa.4.0.copyload, i8* %.repack.repack74, align 8
  %.repack.repack76.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 0
  store i8 %load_element7.sroa.5.0.copyload, i8* %.repack.repack76.repack, align 1
  %.repack.repack76.repack82 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 1
  store i8 %load_element7.sroa.6.0.copyload, i8* %.repack.repack76.repack82, align 2
  %.repack.repack76.repack84 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 2
  store i8 %load_element7.sroa.7.0.copyload, i8* %.repack.repack76.repack84, align 1
  %.repack.repack76.repack86 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 3
  store i8 %load_element7.sroa.8.0.copyload, i8* %.repack.repack76.repack86, align 4
  %.repack.repack76.repack88 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 4
  store i8 %load_element7.sroa.9.0.copyload, i8* %.repack.repack76.repack88, align 1
  %.repack.repack76.repack90 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 5
  store i8 %load_element7.sroa.10.0.copyload, i8* %.repack.repack76.repack90, align 2
  %.repack.repack76.repack92 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 6
  store i8 %load_element7.sroa.11.0.copyload, i8* %.repack.repack76.repack92, align 1
  %.repack70.repack94.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 0
  store i64 %load_element7.sroa.12.0.copyload, i64* %.repack70.repack94.repack, align 8
  %.repack70.repack94.repack100 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 1
  store i64 %load_element7.sroa.13.0.copyload, i64* %.repack70.repack94.repack100, align 8
  %.repack70.repack94.repack102 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 2
  store i64 %load_element7.sroa.14.0.copyload, i64* %.repack70.repack94.repack102, align 8
  %.repack70.repack94.repack104 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 3
  store i64 %load_element7.sroa.15.0.copyload, i64* %.repack70.repack94.repack104, align 8
  %.repack70.repack96 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 2
  store i8 %load_element7.sroa.16.0.copyload, i8* %.repack70.repack96, align 8
  %.repack70.repack98.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 0
  store i8 %load_element7.sroa.17.0.copyload, i8* %.repack70.repack98.repack, align 1
  %.repack70.repack98.repack106 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 1
  store i8 %load_element7.sroa.18.0.copyload, i8* %.repack70.repack98.repack106, align 2
  %.repack70.repack98.repack108 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 2
  store i8 %load_element7.sroa.19.0.copyload, i8* %.repack70.repack98.repack108, align 1
  %.repack70.repack98.repack110 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 3
  store i8 %load_element7.sroa.20.0.copyload, i8* %.repack70.repack98.repack110, align 4
  %.repack70.repack98.repack112 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 4
  store i8 %load_element7.sroa.21.0.copyload, i8* %.repack70.repack98.repack112, align 1
  %.repack70.repack98.repack114 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 5
  store i8 %load_element7.sroa.22.0.copyload, i8* %.repack70.repack98.repack114, align 2
  %.repack70.repack98.repack116 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 6
  store i8 %load_element7.sroa.23.0.copyload, i8* %.repack70.repack98.repack116, align 1
  %tag_alloca9 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %data_buffer10 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 1
  %30 = bitcast [9 x i64]* %data_buffer10 to i8*
  %31 = bitcast { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %30, i8* noundef nonnull align 8 dereferenceable(72) %31, i64 72, i1 false)
  %tag_id_ptr12 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr12, align 8
  %32 = bitcast %str.RocStr* %result_value.i142 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = bitcast %str.RocStr* %const_str_store1.i143 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %34 = bitcast %str.RocStr* %const_str_store.i144 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %35 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %36, i8* noundef nonnull align 8 dereferenceable(32) %31, i64 32, i1 false)
  %tag_id_ptr.i.i.i74 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 2
  %load_tag_id.i.i.i75 = load i8, i8* %tag_id_ptr.i.i.i74, align 8
  switch i8 %load_tag_id.i.i.i75, label %"#Attr_#dec_28.exit.i.i119" [
    i8 0, label %tag_id_modify.i.i.i79
    i8 1, label %tag_id_modify1.i.i.i92
    i8 2, label %tag_id_modify6.i.i.i105
  ]

tag_id_modify.i.i.i79:                            ; preds = %tag_id_modify.i76
  %37 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1, i64 2
  %field_value.i.i.unpack41.i77 = load i64, i64* %37, align 8
  %"cap > 0.i.i.i.not.i78" = icmp eq i64 %field_value.i.i.unpack41.i77, 0
  br i1 %"cap > 0.i.i.i.not.i78", label %"#Attr_#dec_28.exit.i.i119", label %modification_list_block.i.i.i.i87

modification_list_block.i.i.i.i87:                ; preds = %tag_id_modify.i.i.i79
  %field_ptr.i.i.i80 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1
  %field_value.i.i.elt.i81 = bitcast [3 x i64]* %field_ptr.i.i.i80 to i8**
  %field_value.i.i.unpack.i82 = load i8*, i8** %field_value.i.i.elt.i81, align 8
  %38 = ptrtoint i8* %field_value.i.i.unpack.i82 to i64
  %39 = shl i64 %field_value.i.i.unpack41.i77, 1
  %.not.i.i.i.i.i.i83 = icmp slt i64 %field_value.i.i.unpack41.i77, 0
  %40 = select i1 %.not.i.i.i.i.i.i83, i64 %39, i64 %38
  %as_usize_ptr.i.i.i.i84 = inttoptr i64 %40 to i64*
  %get_rc_ptr.i.i.i.i85 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i84, i64 -1
  %41 = load i64, i64* %get_rc_ptr.i.i.i.i85, align 8
  %.not.i.i.i.i.i.i.i86 = icmp eq i64 %41, 0
  br i1 %.not.i.i.i.i.i.i.i86, label %"#Attr_#dec_28.exit.i.i119", label %Then.i.i.i.i.i.i.i88

Then.i.i.i.i.i.i.i88:                             ; preds = %modification_list_block.i.i.i.i87
  %42 = add i64 %41, -1
  store i64 %42, i64* %get_rc_ptr.i.i.i.i85, align 8
  %43 = icmp eq i64 %41, -9223372036854775808
  br i1 %43, label %Then1.i.i.i.i.i.i.i89, label %"#Attr_#dec_28.exit.i.i119"

Then1.i.i.i.i.i.i.i89:                            ; preds = %Then.i.i.i.i.i.i.i88
  %44 = bitcast i64* %get_rc_ptr.i.i.i.i85 to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i114"

tag_id_modify1.i.i.i92:                           ; preds = %tag_id_modify.i76
  %45 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1, i64 2
  %field_value5.i.i.unpack32.i90 = load i64, i64* %45, align 8
  %"cap > 0.i.i.not.i91" = icmp eq i64 %field_value5.i.i.unpack32.i90, 0
  br i1 %"cap > 0.i.i.not.i91", label %"#Attr_#dec_28.exit.i.i119", label %modification_list_block.i.i.i100

modification_list_block.i.i.i100:                 ; preds = %tag_id_modify1.i.i.i92
  %field_ptr2.i.i.i93 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1
  %field_value5.i.i.elt.i94 = bitcast [3 x i64]* %field_ptr2.i.i.i93 to i8**
  %field_value5.i.i.unpack.i95 = load i8*, i8** %field_value5.i.i.elt.i94, align 8
  %46 = ptrtoint i8* %field_value5.i.i.unpack.i95 to i64
  %47 = shl i64 %field_value5.i.i.unpack32.i90, 1
  %.not.i.i.i.i.i96 = icmp slt i64 %field_value5.i.i.unpack32.i90, 0
  %48 = select i1 %.not.i.i.i.i.i96, i64 %47, i64 %46
  %as_usize_ptr.i15.i.i97 = inttoptr i64 %48 to i64*
  %get_rc_ptr.i16.i.i98 = getelementptr inbounds i64, i64* %as_usize_ptr.i15.i.i97, i64 -1
  %49 = load i64, i64* %get_rc_ptr.i16.i.i98, align 8
  %.not.i.i.i.i17.i.i99 = icmp eq i64 %49, 0
  br i1 %.not.i.i.i.i17.i.i99, label %"#Attr_#dec_28.exit.i.i119", label %Then.i.i.i.i18.i.i101

Then.i.i.i.i18.i.i101:                            ; preds = %modification_list_block.i.i.i100
  %50 = add i64 %49, -1
  store i64 %50, i64* %get_rc_ptr.i16.i.i98, align 8
  %51 = icmp eq i64 %49, -9223372036854775808
  br i1 %51, label %Then1.i.i.i.i19.i.i102, label %"#Attr_#dec_28.exit.i.i119"

Then1.i.i.i.i19.i.i102:                           ; preds = %Then.i.i.i.i18.i.i101
  %52 = bitcast i64* %get_rc_ptr.i16.i.i98 to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i114"

tag_id_modify6.i.i.i105:                          ; preds = %tag_id_modify.i76
  %53 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.unpack22.i103 = load i64, i64* %53, align 8
  %is_big_str.i.i.i104 = icmp sgt i64 %load_str_to_stack.i.i.unpack22.i103, 0
  br i1 %is_big_str.i.i.i104, label %modify_rc.i.i.i111, label %"#Attr_#dec_28.exit.i.i119"

modify_rc.i.i.i111:                               ; preds = %tag_id_modify6.i.i.i105
  %field_ptr7.i.i.i106 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i70, i64 0, i32 1
  %modify_tag_field9.i.i.i107 = bitcast [3 x i64]* %field_ptr7.i.i.i106 to %str.RocStr*
  %call_builtin.i.i.i108 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i107) #11
  %get_rc_ptr.i.i.i109 = getelementptr inbounds i8, i8* %call_builtin.i.i.i108, i64 -8
  %54 = bitcast i8* %get_rc_ptr.i.i.i109 to i64*
  %55 = load i64, i64* %54, align 8
  %.not.i.i.i.i2.i.i110 = icmp eq i64 %55, 0
  br i1 %.not.i.i.i.i2.i.i110, label %"#Attr_#dec_28.exit.i.i119", label %Then.i.i.i.i.i.i112

Then.i.i.i.i.i.i112:                              ; preds = %modify_rc.i.i.i111
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %55, -9223372036854775808
  br i1 %57, label %"#Attr_#dec_28.exit.i.sink.split.i114", label %"#Attr_#dec_28.exit.i.i119"

"#Attr_#dec_28.exit.i.sink.split.i114":           ; preds = %Then.i.i.i.i.i.i112, %Then1.i.i.i.i19.i.i102, %Then1.i.i.i.i.i.i.i89
  %get_rc_ptr.i.i.sink.i113 = phi i8* [ %52, %Then1.i.i.i.i19.i.i102 ], [ %44, %Then1.i.i.i.i.i.i.i89 ], [ %get_rc_ptr.i.i.i109, %Then.i.i.i.i.i.i112 ]
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.sink.i113, i32 8) #11
  br label %"#Attr_#dec_28.exit.i.i119"

"#Attr_#dec_28.exit.i.i119":                      ; preds = %"#Attr_#dec_28.exit.i.sink.split.i114", %Then.i.i.i.i.i.i112, %modify_rc.i.i.i111, %tag_id_modify6.i.i.i105, %Then.i.i.i.i18.i.i101, %modification_list_block.i.i.i100, %tag_id_modify1.i.i.i92, %Then.i.i.i.i.i.i.i88, %modification_list_block.i.i.i.i87, %tag_id_modify.i.i.i79, %tag_id_modify.i76
  %struct_field_access_record_1.i.i115 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 1, i64 4
  %58 = bitcast i64* %struct_field_access_record_1.i.i115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %35, i8* noundef nonnull align 8 dereferenceable(40) %58, i64 40, i1 false) #11
  %tag_id_ptr.i3.i.i116 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i69, i64 0, i32 2
  %load_tag_id.i4.i.i117 = load i8, i8* %tag_id_ptr.i3.i.i116, align 8
  %cond.i.i.i118 = icmp eq i8 %load_tag_id.i4.i.i117, 9
  br i1 %cond.i.i.i118, label %tag_id_modify.i8.i.i122, label %"#Attr_#dec_4.exit.i170"

tag_id_modify.i8.i.i122:                          ; preds = %"#Attr_#dec_28.exit.i.i119"
  %59 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i69, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.i.unpack27.i120 = load i64, i64* %59, align 8
  %is_big_str.i.i.i.i121 = icmp sgt i64 %load_str_to_stack.i.i.i.unpack27.i120, 0
  br i1 %is_big_str.i.i.i.i121, label %modify_rc.i.i.i.i128, label %"#Attr_#dec_4.exit.i170"

modify_rc.i.i.i.i128:                             ; preds = %tag_id_modify.i8.i.i122
  %field_ptr.i5.i.i123 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i69, i64 0, i32 1
  %modify_tag_field.i7.i.i124 = bitcast [4 x i64]* %field_ptr.i5.i.i123 to %str.RocStr*
  %call_builtin.i.i.i.i125 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field.i7.i.i124) #11
  %get_rc_ptr.i.i10.i.i126 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i125, i64 -8
  %60 = bitcast i8* %get_rc_ptr.i.i10.i.i126 to i64*
  %61 = load i64, i64* %60, align 8
  %.not.i.i.i.i.i11.i.i127 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i.i11.i.i127, label %"#Attr_#dec_4.exit.i170", label %Then.i.i.i.i.i12.i.i129

Then.i.i.i.i.i12.i.i129:                          ; preds = %modify_rc.i.i.i.i128
  %62 = add i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i.i13.i.i130, label %"#Attr_#dec_4.exit.i170"

Then1.i.i.i.i.i13.i.i130:                         ; preds = %Then.i.i.i.i.i12.i.i129
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i10.i.i126, i32 8) #11
  br label %"#Attr_#dec_4.exit.i170"

"#Attr_#dec_4.exit.i170":                         ; preds = %Then1.i.i.i.i.i13.i.i130, %Then.i.i.i.i.i12.i.i129, %modify_rc.i.i.i.i128, %tag_id_modify.i8.i.i122, %"#Attr_#dec_28.exit.i.i119"
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #11
  %const_str_store.repack.i149 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 0
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_str_literal_17100216405140828939, i64 0, i64 8), i8** %const_str_store.repack.i149, align 8
  %const_str_store.repack27.i150 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 1
  store i64 31, i64* %const_str_store.repack27.i150, align 8
  %const_str_store.repack28.i151 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 2
  store i64 31, i64* %const_str_store.repack28.i151, align 8
  %const_str_store1.repack.i152 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 0
  store i8* inttoptr (i64 11872 to i8*), i8** %const_str_store1.repack.i152, align 8
  %const_str_store1.repack29.i153 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 1
  store i64 0, i64* %const_str_store1.repack29.i153, align 8
  %const_str_store1.repack30.i154 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store1.repack30.i154, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i142, %str.RocStr* nonnull readonly %transform, %str.RocStr* nocapture nonnull readonly %const_str_store1.i143) #11
  %64 = bitcast %str.RocStr* %str_alloca.i31.i135 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %str_alloca.i31.i135, %str.RocStr* nonnull readonly %const_str_store.i144, %str.RocStr* nocapture nonnull readonly %result_value.i142) #11
  %result_value2.i141.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 0
  %result_value2.i141.sroa.0.0.copyload = load i8*, i8** %result_value2.i141.sroa.0.0..sroa_idx, align 8
  %result_value2.i141.sroa.4.0..sroa_idx231 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 1
  %result_value2.i141.sroa.4.0.copyload = load i64, i64* %result_value2.i141.sroa.4.0..sroa_idx231, align 8
  %result_value2.i141.sroa.5.0..sroa_idx233 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 2
  %result_value2.i141.sroa.5.0.copyload = load i64, i64* %result_value2.i141.sroa.5.0..sroa_idx233, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  %load_str_to_stack.i32.i167.elt30 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i142, i64 0, i32 2
  %load_str_to_stack.i32.i167.unpack31 = load i64, i64* %load_str_to_stack.i32.i167.elt30, align 8
  %is_big_str.i34.i169 = icmp sgt i64 %load_str_to_stack.i32.i167.unpack31, 0
  br i1 %is_big_str.i34.i169, label %modify_rc.i39.i175, label %"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit"

modify_rc.i39.i175:                               ; preds = %"#Attr_#dec_4.exit.i170"
  %call_builtin.i35.i171 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i142) #11
  %get_rc_ptr.i37.i173 = getelementptr inbounds i8, i8* %call_builtin.i35.i171, i64 -8
  %65 = bitcast i8* %get_rc_ptr.i37.i173 to i64*
  %66 = load i64, i64* %65, align 8
  %.not.i.i.i.i38.i174 = icmp eq i64 %66, 0
  br i1 %.not.i.i.i.i38.i174, label %"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit", label %Then.i.i.i.i40.i176

Then.i.i.i.i40.i176:                              ; preds = %modify_rc.i39.i175
  %67 = add i64 %66, -1
  store i64 %67, i64* %65, align 8
  %68 = icmp eq i64 %66, -9223372036854775808
  br i1 %68, label %Then1.i.i.i.i41.i177, label %"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit"

Then1.i.i.i.i41.i177:                             ; preds = %Then.i.i.i.i40.i176
  tail call void @roc_dealloc(i8* %get_rc_ptr.i37.i173, i32 8) #11
  br label %"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit"

"#UserApp_28_fe224b41d571216d1462c070f74dc29c2d53e11d3f426ff6c2867b559865c1b.exit": ; preds = %"#Attr_#dec_4.exit.i170", %Then1.i.i.i.i41.i177, %Then.i.i.i.i40.i176, %modify_rc.i39.i175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc { %str.RocStr, {} } @Task_39_f5306286e1c526012dd351cae9a70b87111f88aea94bbe6b820df62d315690({ [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture readonly %result, %str.RocStr* nocapture readonly %transform) unnamed_addr #11 {
entry:
  %struct_field1.i.i310 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field.i.i311 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value.i.i.i.i.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %result_value.i.i.i.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %str_alloca.i31.i135 = alloca %str.RocStr, align 8
  %result_value.i142 = alloca %str.RocStr, align 8
  %const_str_store1.i143 = alloca %str.RocStr, align 8
  %const_str_store.i144 = alloca %str.RocStr, align 8
  %const_str_store14.i = alloca %str.RocStr, align 8
  %result_value7.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value5.i = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %else_block.i, label %tag_id_modify.i317

common.ret:                                       ; preds = %"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit", %"#UserApp_28_143933598d34fe717bab485c15bdd1951ca2dd7635d4c24b8b59269c6e5a5d77.exit"
  %load_tag_to_put_in_struct.unpack.i.i.i.pn.pn = phi i8* [ %load_element18.i.sroa.0.0.copyload, %"#UserApp_28_143933598d34fe717bab485c15bdd1951ca2dd7635d4c24b8b59269c6e5a5d77.exit" ], [ %result_value2.i141.sroa.0.0.copyload, %"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit" ]
  %load_tag_to_put_in_struct.unpack3.i.i.i.pn.pn = phi i64 [ %load_element18.i.sroa.4.0.copyload, %"#UserApp_28_143933598d34fe717bab485c15bdd1951ca2dd7635d4c24b8b59269c6e5a5d77.exit" ], [ %result_value2.i141.sroa.4.0.copyload, %"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit" ]
  %load_tag_to_put_in_struct.unpack5.i.i.i.pn.pn = phi i64 [ %load_element18.i.sroa.5.0.copyload, %"#UserApp_28_143933598d34fe717bab485c15bdd1951ca2dd7635d4c24b8b59269c6e5a5d77.exit" ], [ %result_value2.i141.sroa.5.0.copyload, %"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit" ]
  %.pn281.pn = insertvalue %str.RocStr undef, i8* %load_tag_to_put_in_struct.unpack.i.i.i.pn.pn, 0
  %.pn280.pn = insertvalue %str.RocStr %.pn281.pn, i64 %load_tag_to_put_in_struct.unpack3.i.i.i.pn.pn, 1
  %load_tag_to_put_in_struct6.i.i.i.pn.pn = insertvalue %str.RocStr %.pn280.pn, i64 %load_tag_to_put_in_struct.unpack5.i.i.i.pn.pn, 2
  %insert_record_field.i.i.i.pn.pn = insertvalue { %str.RocStr, {} } zeroinitializer, %str.RocStr %load_tag_to_put_in_struct6.i.i.i.pn.pn, 0
  %common.ret.op = insertvalue { %str.RocStr, {} } %insert_record_field.i.i.i.pn.pn, {} zeroinitializer, 1
  ret { %str.RocStr, {} } %common.ret.op

else_block.i:                                     ; preds = %entry
  %get_opaque_data_ptr = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1
  %load_element.elt = bitcast [9 x i64]* %get_opaque_data_ptr to i8**
  %load_element.unpack = load i8*, i8** %load_element.elt, align 8
  %0 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.unpack119 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.unpack121 = load i64, i64* %1, align 8
  %2 = bitcast %str.RocStr* %const_str_store14.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  %3 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3)
  %4 = bitcast { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4)
  %load_str_to_stack.i44.i.elt276 = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 2
  %load_str_to_stack.i44.i.unpack277 = load i64, i64* %load_str_to_stack.i44.i.elt276, align 8
  %is_big_str.i46.i = icmp sgt i64 %load_str_to_stack.i44.i.unpack277, 0
  br i1 %is_big_str.i46.i, label %modify_rc.i51.i, label %"#Attr_#dec_4.exit55.i"

modify_rc.i51.i:                                  ; preds = %else_block.i
  %call_builtin.i47.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %transform) #11
  %get_rc_ptr.i49.i = getelementptr inbounds i8, i8* %call_builtin.i47.i, i64 -8
  %5 = bitcast i8* %get_rc_ptr.i49.i to i64*
  %6 = load i64, i64* %5, align 8
  %.not.i.i.i.i50.i = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i50.i, label %"#Attr_#dec_4.exit55.i", label %Then.i.i.i.i52.i

Then.i.i.i.i52.i:                                 ; preds = %modify_rc.i51.i
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i53.i, label %"#Attr_#dec_4.exit55.i"

Then1.i.i.i.i53.i:                                ; preds = %Then.i.i.i.i52.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i49.i, i32 8) #11
  br label %"#Attr_#dec_4.exit55.i"

"#Attr_#dec_4.exit55.i":                          ; preds = %modify_rc.i51.i, %Then.i.i.i.i52.i, %Then1.i.i.i.i53.i, %else_block.i
  %9 = bitcast { i64, %list.RocList, %list.RocList }* %struct_alloca.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %9, i8 0, i64 56, i1 false) #11
  %10 = bitcast { i64, %list.RocList, %list.RocList }* %result_value.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #11
  %11 = bitcast { i64, %list.RocList, %list.RocList }* %result_value.i.i.i.i.i to i8*
  %lt_uint.i.i.i.i50.not.i = icmp eq i64 %load_element.unpack119, 0
  br i1 %lt_uint.i.i.i.i50.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.preheader.i

then_block.i.i.i.preheader.i:                     ; preds = %"#Attr_#dec_4.exit55.i"
  %list_get_load_element.i.i.i.i.peel.i = load i8, i8* %load_element.unpack, align 1
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  call fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nonnull %struct_alloca.i, i8 %list_get_load_element.i.i.i.i.peel.i, { i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %10, i8* noundef nonnull align 8 dereferenceable(56) %11, i64 56, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  %exitcond.peel.not.i = icmp eq i64 %load_element.unpack119, 1
  br i1 %exitcond.peel.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.i

then_block.i.i.i.i:                               ; preds = %then_block.i.i.i.preheader.i, %then_block.i.i.i.i
  %joinpointarg3.i.i.i52.i = phi i64 [ %call.i.i.i.i49.i, %then_block.i.i.i.i ], [ 1, %then_block.i.i.i.preheader.i ]
  %list_get_element.i.i.i.i.i = getelementptr inbounds i8, i8* %load_element.unpack, i64 %joinpointarg3.i.i.i52.i
  %list_get_load_element.i.i.i.i.i = load i8, i8* %list_get_element.i.i.i.i.i, align 1
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  call fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i, i8 %list_get_load_element.i.i.i.i.i, { i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %10, i8* noundef nonnull align 8 dereferenceable(56) %11, i64 56, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  %call.i.i.i.i49.i = add nuw i64 %joinpointarg3.i.i.i52.i, 1
  %exitcond.not.i = icmp eq i64 %call.i.i.i.i49.i, %load_element.unpack119
  br i1 %exitcond.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.i, !llvm.loop !263

else_block.i.i.i.i:                               ; preds = %then_block.i.i.i.i, %then_block.i.i.i.preheader.i, %"#Attr_#dec_4.exit55.i"
  %joinpointarg1.i.i.i.lcssa.i = phi { i64, %list.RocList, %list.RocList }* [ %struct_alloca.i, %"#Attr_#dec_4.exit55.i" ], [ %result_value.i.i.i.i, %then_block.i.i.i.preheader.i ], [ %result_value.i.i.i.i, %then_block.i.i.i.i ]
  %"cap > 0.i.i.i.i.not.i" = icmp eq i64 %load_element.unpack121, 0
  br i1 %"cap > 0.i.i.i.i.not.i", label %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i, label %modification_list_block.i.i.i.i.i

modification_list_block.i.i.i.i.i:                ; preds = %else_block.i.i.i.i
  %12 = ptrtoint i8* %load_element.unpack to i64
  %13 = shl i64 %load_element.unpack121, 1
  %.not.i.i.i.i.i.i.i301 = icmp slt i64 %load_element.unpack121, 0
  %14 = select i1 %.not.i.i.i.i.i.i.i301, i64 %13, i64 %12
  %as_usize_ptr.i.i.i.i.i = inttoptr i64 %14 to i64*
  %get_rc_ptr.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i.i, i64 -1
  %15 = load i64, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %modification_list_block.i.i.i.i.i
  %16 = add i64 %15, -1
  store i64 %16, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %17 = icmp eq i64 %15, -9223372036854775808
  br i1 %17, label %Then1.i.i.i.i.i.i.i.i, label %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  %18 = bitcast i64* %get_rc_ptr.i.i.i.i.i to i8*
  tail call void @roc_dealloc(i8* %18, i32 8) #11
  br label %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i

List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i: ; preds = %Then1.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %modification_list_block.i.i.i.i.i, %else_block.i.i.i.i
  %result_value.i.i.sroa.4.0..sroa_idx34.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 0
  %result_value.i.i.sroa.4.0.copyload.i = load i8*, i8** %result_value.i.i.sroa.4.0..sroa_idx34.i, align 8
  %result_value.i.i.sroa.5.0..sroa_idx36.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 1
  %result_value.i.i.sroa.5.0.copyload.i = load i64, i64* %result_value.i.i.sroa.5.0..sroa_idx36.i, align 8
  %result_value.i.i.sroa.6.0..sroa_idx38.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 2
  %result_value.i.i.sroa.6.0.copyload.i = load i64, i64* %result_value.i.i.sroa.6.0..sroa_idx38.i, align 8
  %result_value.i.i.sroa.7.0..sroa_idx40.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 2, i32 0
  %result_value.i.i.sroa.7.0.copyload.i = load i8*, i8** %result_value.i.i.sroa.7.0..sroa_idx40.i, align 8
  %result_value.i.i.sroa.9.0..sroa_idx44.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 2, i32 2
  %result_value.i.i.sroa.9.0.copyload.i = load i64, i64* %result_value.i.i.sroa.9.0..sroa_idx44.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #11
  %"cap > 0.i.not.i302" = icmp eq i64 %result_value.i.i.sroa.9.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i302", label %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit", label %modification_list_block.i.i307

modification_list_block.i.i307:                   ; preds = %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i
  %19 = ptrtoint i8* %result_value.i.i.sroa.7.0.copyload.i to i64
  %20 = shl i64 %result_value.i.i.sroa.9.0.copyload.i, 1
  %.not.i.i.i.i303 = icmp slt i64 %result_value.i.i.sroa.9.0.copyload.i, 0
  %21 = select i1 %.not.i.i.i.i303, i64 %20, i64 %19
  %as_usize_ptr.i.i304 = inttoptr i64 %21 to i64*
  %get_rc_ptr.i.i305 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i304, i64 -1
  %22 = load i64, i64* %get_rc_ptr.i.i305, align 8
  %.not.i.i.i.i.i306 = icmp eq i64 %22, 0
  br i1 %.not.i.i.i.i.i306, label %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit", label %Then.i.i.i.i.i308

Then.i.i.i.i.i308:                                ; preds = %modification_list_block.i.i307
  %23 = add i64 %22, -1
  store i64 %23, i64* %get_rc_ptr.i.i305, align 8
  %24 = icmp eq i64 %22, -9223372036854775808
  br i1 %24, label %Then1.i.i.i.i.i309, label %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit"

Then1.i.i.i.i.i309:                               ; preds = %Then.i.i.i.i.i308
  %25 = bitcast i64* %get_rc_ptr.i.i305 to i8*
  tail call void @roc_dealloc(i8* %25, i32 8) #11
  br label %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit"

"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit": ; preds = %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i, %modification_list_block.i.i307, %Then.i.i.i.i.i308, %Then1.i.i.i.i.i309
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9)
  %26 = tail call i8* @roc_alloc(i64 1008, i32 8) #11, !noalias !264
  %27 = icmp ne i8* %26, null
  tail call void @llvm.assume(i1 %27) #11, !noalias !273
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %26 to i64*
  store i64 -9223372036854775808, i64* %29, align 8, !noalias !264
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1000) %28, i8 0, i64 1000, i1 false) #11
  %struct_alloca.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 0
  store i8* %28, i8** %struct_alloca.sroa.0.0..sroa_idx.i, align 8
  %struct_alloca.sroa.2.0..sroa_idx27.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 1
  store i64 1000, i64* %struct_alloca.sroa.2.0..sroa_idx27.i, align 8
  %struct_alloca.sroa.3.0..sroa_idx28.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 0, i32 2
  store i64 1000, i64* %struct_alloca.sroa.3.0..sroa_idx28.i, align 8
  %struct_alloca.sroa.4.0..sroa_idx.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 1
  %struct_alloca.sroa.4.0..sroa_cast.i = bitcast i64* %struct_alloca.sroa.4.0..sroa_idx.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %struct_alloca.sroa.4.0..sroa_cast.i, i8 0, i64 40, i1 false) #11
  %struct_alloca.sroa.5.0..sroa_idx29.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 0
  store i8* %result_value.i.i.sroa.4.0.copyload.i, i8** %struct_alloca.sroa.5.0..sroa_idx29.i, align 8
  %struct_alloca.sroa.6.0..sroa_idx30.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 1
  store i64 %result_value.i.i.sroa.5.0.copyload.i, i64* %struct_alloca.sroa.6.0..sroa_idx30.i, align 8
  %struct_alloca.sroa.7.0..sroa_idx31.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 4, i32 2
  store i64 %result_value.i.i.sroa.6.0.copyload.i, i64* %struct_alloca.sroa.7.0..sroa_idx31.i, align 8
  %struct_alloca.sroa.8.0..sroa_idx32.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i, i64 0, i32 5
  store i64 0, i64* %struct_alloca.sroa.8.0..sroa_idx32.i, align 8
  %call6.i = call fastcc { i8*, i64, i64 } @"#UserApp_run_cd9485bcd826cd7441fe8b77ca3d11f7f6c7eccd1a861b4655c321fceb12"({ %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* nonnull %result_value5.i) #11
  %newret249 = extractvalue { i8*, i64, i64 } %call6.i, 0
  %oldret250 = insertvalue %list.RocList undef, i8* %newret249, 0
  %newret251 = extractvalue { i8*, i64, i64 } %call6.i, 1
  %oldret252 = insertvalue %list.RocList %oldret250, i64 %newret251, 1
  %newret253 = extractvalue { i8*, i64, i64 } %call6.i, 2
  %oldret254 = insertvalue %list.RocList %oldret252, i64 %newret253, 2
  call fastcc void @Str_fromUtf8_698af71e682dce72e1b119d817a61329283ecf2354d63fc9f9be62aa47c3(%list.RocList %oldret254, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value7.i) #11
  %tag_id_ptr8.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 2
  %load_tag_id9.i = load i8, i8* %tag_id_ptr8.i, align 8
  %eq_u810.i = icmp eq i8 %load_tag_id9.i, 0
  br i1 %eq_u810.i, label %then_block12.i, label %"#UserApp_28_143933598d34fe717bab485c15bdd1951ca2dd7635d4c24b8b59269c6e5a5d77.exit"

then_block12.i:                                   ; preds = %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit"
  call fastcc void @"#Attr_#dec_31"({ [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value7.i) #11
  %const_str_store14.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_str_literal_12062936082858867291, i64 0, i64 8), i8** %const_str_store14.repack.i, align 8
  %const_str_store14.repack25.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 1
  store i64 26, i64* %const_str_store14.repack25.i, align 8
  %const_str_store14.repack26.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i, i64 0, i32 2
  store i64 26, i64* %const_str_store14.repack26.i, align 8
  call void @roc_panic(%str.RocStr* %const_str_store14.i, i32 1) #11
  unreachable

"#UserApp_28_143933598d34fe717bab485c15bdd1951ca2dd7635d4c24b8b59269c6e5a5d77.exit": ; preds = %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit"
  %load_element18.i.sroa.0.0..sroa_cast = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8**
  %load_element18.i.sroa.0.0.copyload = load i8*, i8** %load_element18.i.sroa.0.0..sroa_cast, align 8
  %load_element18.i.sroa.4.0..sroa_idx458 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 1
  %load_element18.i.sroa.4.0.copyload = load i64, i64* %load_element18.i.sroa.4.0..sroa_idx458, align 8
  %load_element18.i.sroa.5.0..sroa_idx460 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 2
  %load_element18.i.sroa.5.0.copyload = load i64, i64* %load_element18.i.sroa.5.0..sroa_idx460, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4)
  br label %common.ret

tag_id_modify.i317:                               ; preds = %entry
  %load_element7.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 0, i64 0
  %load_element7.sroa.0.0.copyload = load i64, i64* %load_element7.sroa.0.0..sroa_idx, align 8
  %load_element7.sroa.2.0..sroa_idx127 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element7.sroa.2.0.copyload = load i64, i64* %load_element7.sroa.2.0..sroa_idx127, align 8
  %load_element7.sroa.3.0..sroa_idx128 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element7.sroa.3.0.copyload = load i64, i64* %load_element7.sroa.3.0..sroa_idx128, align 8
  %load_element7.sroa.4.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element7.sroa.4.0..sroa_cast = bitcast i64* %load_element7.sroa.4.0..sroa_idx to i8*
  %load_element7.sroa.4.0.copyload = load i8, i8* %load_element7.sroa.4.0..sroa_cast, align 8
  %load_element7.sroa.5.0..sroa_raw_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result to i8*
  %load_element7.sroa.5.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 25
  %load_element7.sroa.5.0.copyload = load i8, i8* %load_element7.sroa.5.0..sroa_raw_idx, align 1
  %load_element7.sroa.6.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 26
  %load_element7.sroa.6.0.copyload = load i8, i8* %load_element7.sroa.6.0..sroa_raw_idx, align 2
  %load_element7.sroa.7.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 27
  %load_element7.sroa.7.0.copyload = load i8, i8* %load_element7.sroa.7.0..sroa_raw_idx, align 1
  %load_element7.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 28
  %load_element7.sroa.8.0.copyload = load i8, i8* %load_element7.sroa.8.0..sroa_raw_idx, align 4
  %load_element7.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 29
  %load_element7.sroa.9.0.copyload = load i8, i8* %load_element7.sroa.9.0..sroa_raw_idx, align 1
  %load_element7.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 30
  %load_element7.sroa.10.0.copyload = load i8, i8* %load_element7.sroa.10.0..sroa_raw_idx, align 2
  %load_element7.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 31
  %load_element7.sroa.11.0.copyload = load i8, i8* %load_element7.sroa.11.0..sroa_raw_idx, align 1
  %load_element7.sroa.12.0..sroa_idx129 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 4
  %load_element7.sroa.12.0.copyload = load i64, i64* %load_element7.sroa.12.0..sroa_idx129, align 8
  %load_element7.sroa.13.0..sroa_idx130 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 5
  %load_element7.sroa.13.0.copyload = load i64, i64* %load_element7.sroa.13.0..sroa_idx130, align 8
  %load_element7.sroa.14.0..sroa_idx131 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element7.sroa.14.0.copyload = load i64, i64* %load_element7.sroa.14.0..sroa_idx131, align 8
  %load_element7.sroa.15.0..sroa_idx132 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 7
  %load_element7.sroa.15.0.copyload = load i64, i64* %load_element7.sroa.15.0..sroa_idx132, align 8
  %load_element7.sroa.16.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 8
  %load_element7.sroa.16.0..sroa_cast = bitcast i64* %load_element7.sroa.16.0..sroa_idx to i8*
  %load_element7.sroa.16.0.copyload = load i8, i8* %load_element7.sroa.16.0..sroa_cast, align 8
  %load_element7.sroa.17.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 65
  %load_element7.sroa.17.0.copyload = load i8, i8* %load_element7.sroa.17.0..sroa_raw_idx, align 1
  %load_element7.sroa.18.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 66
  %load_element7.sroa.18.0.copyload = load i8, i8* %load_element7.sroa.18.0..sroa_raw_idx, align 2
  %load_element7.sroa.19.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 67
  %load_element7.sroa.19.0.copyload = load i8, i8* %load_element7.sroa.19.0..sroa_raw_idx, align 1
  %load_element7.sroa.20.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 68
  %load_element7.sroa.20.0.copyload = load i8, i8* %load_element7.sroa.20.0..sroa_raw_idx, align 4
  %load_element7.sroa.21.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 69
  %load_element7.sroa.21.0.copyload = load i8, i8* %load_element7.sroa.21.0..sroa_raw_idx, align 1
  %load_element7.sroa.22.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 70
  %load_element7.sroa.22.0.copyload = load i8, i8* %load_element7.sroa.22.0..sroa_raw_idx, align 2
  %load_element7.sroa.23.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element7.sroa.5.0..sroa_raw_cast, i64 71
  %load_element7.sroa.23.0.copyload = load i8, i8* %load_element7.sroa.23.0..sroa_raw_idx, align 1
  %struct_alloca = alloca { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, align 8
  %.repack.repack72.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 0
  store i64 %load_element7.sroa.0.0.copyload, i64* %.repack.repack72.repack, align 8
  %.repack.repack72.repack78 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 1
  store i64 %load_element7.sroa.2.0.copyload, i64* %.repack.repack72.repack78, align 8
  %.repack.repack72.repack80 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i64 2
  store i64 %load_element7.sroa.3.0.copyload, i64* %.repack.repack72.repack80, align 8
  %.repack.repack74 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2
  store i8 %load_element7.sroa.4.0.copyload, i8* %.repack.repack74, align 8
  %.repack.repack76.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 0
  store i8 %load_element7.sroa.5.0.copyload, i8* %.repack.repack76.repack, align 1
  %.repack.repack76.repack82 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 1
  store i8 %load_element7.sroa.6.0.copyload, i8* %.repack.repack76.repack82, align 2
  %.repack.repack76.repack84 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 2
  store i8 %load_element7.sroa.7.0.copyload, i8* %.repack.repack76.repack84, align 1
  %.repack.repack76.repack86 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 3
  store i8 %load_element7.sroa.8.0.copyload, i8* %.repack.repack76.repack86, align 4
  %.repack.repack76.repack88 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 4
  store i8 %load_element7.sroa.9.0.copyload, i8* %.repack.repack76.repack88, align 1
  %.repack.repack76.repack90 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 5
  store i8 %load_element7.sroa.10.0.copyload, i8* %.repack.repack76.repack90, align 2
  %.repack.repack76.repack92 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3, i64 6
  store i8 %load_element7.sroa.11.0.copyload, i8* %.repack.repack76.repack92, align 1
  %.repack70.repack94.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 0
  store i64 %load_element7.sroa.12.0.copyload, i64* %.repack70.repack94.repack, align 8
  %.repack70.repack94.repack100 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 1
  store i64 %load_element7.sroa.13.0.copyload, i64* %.repack70.repack94.repack100, align 8
  %.repack70.repack94.repack102 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 2
  store i64 %load_element7.sroa.14.0.copyload, i64* %.repack70.repack94.repack102, align 8
  %.repack70.repack94.repack104 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1, i64 3
  store i64 %load_element7.sroa.15.0.copyload, i64* %.repack70.repack94.repack104, align 8
  %.repack70.repack96 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 2
  store i8 %load_element7.sroa.16.0.copyload, i8* %.repack70.repack96, align 8
  %.repack70.repack98.repack = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 0
  store i8 %load_element7.sroa.17.0.copyload, i8* %.repack70.repack98.repack, align 1
  %.repack70.repack98.repack106 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 1
  store i8 %load_element7.sroa.18.0.copyload, i8* %.repack70.repack98.repack106, align 2
  %.repack70.repack98.repack108 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 2
  store i8 %load_element7.sroa.19.0.copyload, i8* %.repack70.repack98.repack108, align 1
  %.repack70.repack98.repack110 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 3
  store i8 %load_element7.sroa.20.0.copyload, i8* %.repack70.repack98.repack110, align 4
  %.repack70.repack98.repack112 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 4
  store i8 %load_element7.sroa.21.0.copyload, i8* %.repack70.repack98.repack112, align 1
  %.repack70.repack98.repack114 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 5
  store i8 %load_element7.sroa.22.0.copyload, i8* %.repack70.repack98.repack114, align 2
  %.repack70.repack98.repack116 = getelementptr inbounds { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }, { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca, i64 0, i32 0, i32 1, i32 3, i64 6
  store i8 %load_element7.sroa.23.0.copyload, i8* %.repack70.repack98.repack116, align 1
  %tag_alloca9 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %data_buffer10 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 1
  %30 = bitcast [9 x i64]* %data_buffer10 to i8*
  %31 = bitcast { { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %30, i8* noundef nonnull align 8 dereferenceable(72) %31, i64 72, i1 false)
  %tag_id_ptr12 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr12, align 8
  %32 = bitcast %str.RocStr* %result_value.i142 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = bitcast %str.RocStr* %const_str_store1.i143 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %34 = bitcast %str.RocStr* %const_str_store.i144 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %35 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i310 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i311 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %36, i8* noundef nonnull align 8 dereferenceable(32) %31, i64 32, i1 false)
  %tag_id_ptr.i.i.i315 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i311, i64 0, i32 2
  %load_tag_id.i.i.i316 = load i8, i8* %tag_id_ptr.i.i.i315, align 8
  switch i8 %load_tag_id.i.i.i316, label %"#Attr_#dec_28.exit.i.i360" [
    i8 0, label %tag_id_modify.i.i.i320
    i8 1, label %tag_id_modify1.i.i.i333
    i8 2, label %tag_id_modify6.i.i.i346
  ]

tag_id_modify.i.i.i320:                           ; preds = %tag_id_modify.i317
  %37 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i311, i64 0, i32 1, i64 2
  %field_value.i.i.unpack41.i318 = load i64, i64* %37, align 8
  %"cap > 0.i.i.i.not.i319" = icmp eq i64 %field_value.i.i.unpack41.i318, 0
  br i1 %"cap > 0.i.i.i.not.i319", label %"#Attr_#dec_28.exit.i.i360", label %modification_list_block.i.i.i.i328

modification_list_block.i.i.i.i328:               ; preds = %tag_id_modify.i.i.i320
  %field_ptr.i.i.i321 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i311, i64 0, i32 1
  %field_value.i.i.elt.i322 = bitcast [3 x i64]* %field_ptr.i.i.i321 to i8**
  %field_value.i.i.unpack.i323 = load i8*, i8** %field_value.i.i.elt.i322, align 8
  %38 = ptrtoint i8* %field_value.i.i.unpack.i323 to i64
  %39 = shl i64 %field_value.i.i.unpack41.i318, 1
  %.not.i.i.i.i.i.i324 = icmp slt i64 %field_value.i.i.unpack41.i318, 0
  %40 = select i1 %.not.i.i.i.i.i.i324, i64 %39, i64 %38
  %as_usize_ptr.i.i.i.i325 = inttoptr i64 %40 to i64*
  %get_rc_ptr.i.i.i.i326 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i325, i64 -1
  %41 = load i64, i64* %get_rc_ptr.i.i.i.i326, align 8
  %.not.i.i.i.i.i.i.i327 = icmp eq i64 %41, 0
  br i1 %.not.i.i.i.i.i.i.i327, label %"#Attr_#dec_28.exit.i.i360", label %Then.i.i.i.i.i.i.i329

Then.i.i.i.i.i.i.i329:                            ; preds = %modification_list_block.i.i.i.i328
  %42 = add i64 %41, -1
  store i64 %42, i64* %get_rc_ptr.i.i.i.i326, align 8
  %43 = icmp eq i64 %41, -9223372036854775808
  br i1 %43, label %Then1.i.i.i.i.i.i.i330, label %"#Attr_#dec_28.exit.i.i360"

Then1.i.i.i.i.i.i.i330:                           ; preds = %Then.i.i.i.i.i.i.i329
  %44 = bitcast i64* %get_rc_ptr.i.i.i.i326 to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i355"

tag_id_modify1.i.i.i333:                          ; preds = %tag_id_modify.i317
  %45 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i311, i64 0, i32 1, i64 2
  %field_value5.i.i.unpack32.i331 = load i64, i64* %45, align 8
  %"cap > 0.i.i.not.i332" = icmp eq i64 %field_value5.i.i.unpack32.i331, 0
  br i1 %"cap > 0.i.i.not.i332", label %"#Attr_#dec_28.exit.i.i360", label %modification_list_block.i.i.i341

modification_list_block.i.i.i341:                 ; preds = %tag_id_modify1.i.i.i333
  %field_ptr2.i.i.i334 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i311, i64 0, i32 1
  %field_value5.i.i.elt.i335 = bitcast [3 x i64]* %field_ptr2.i.i.i334 to i8**
  %field_value5.i.i.unpack.i336 = load i8*, i8** %field_value5.i.i.elt.i335, align 8
  %46 = ptrtoint i8* %field_value5.i.i.unpack.i336 to i64
  %47 = shl i64 %field_value5.i.i.unpack32.i331, 1
  %.not.i.i.i.i.i337 = icmp slt i64 %field_value5.i.i.unpack32.i331, 0
  %48 = select i1 %.not.i.i.i.i.i337, i64 %47, i64 %46
  %as_usize_ptr.i15.i.i338 = inttoptr i64 %48 to i64*
  %get_rc_ptr.i16.i.i339 = getelementptr inbounds i64, i64* %as_usize_ptr.i15.i.i338, i64 -1
  %49 = load i64, i64* %get_rc_ptr.i16.i.i339, align 8
  %.not.i.i.i.i17.i.i340 = icmp eq i64 %49, 0
  br i1 %.not.i.i.i.i17.i.i340, label %"#Attr_#dec_28.exit.i.i360", label %Then.i.i.i.i18.i.i342

Then.i.i.i.i18.i.i342:                            ; preds = %modification_list_block.i.i.i341
  %50 = add i64 %49, -1
  store i64 %50, i64* %get_rc_ptr.i16.i.i339, align 8
  %51 = icmp eq i64 %49, -9223372036854775808
  br i1 %51, label %Then1.i.i.i.i19.i.i343, label %"#Attr_#dec_28.exit.i.i360"

Then1.i.i.i.i19.i.i343:                           ; preds = %Then.i.i.i.i18.i.i342
  %52 = bitcast i64* %get_rc_ptr.i16.i.i339 to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i355"

tag_id_modify6.i.i.i346:                          ; preds = %tag_id_modify.i317
  %53 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i311, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.unpack22.i344 = load i64, i64* %53, align 8
  %is_big_str.i.i.i345 = icmp sgt i64 %load_str_to_stack.i.i.unpack22.i344, 0
  br i1 %is_big_str.i.i.i345, label %modify_rc.i.i.i352, label %"#Attr_#dec_28.exit.i.i360"

modify_rc.i.i.i352:                               ; preds = %tag_id_modify6.i.i.i346
  %field_ptr7.i.i.i347 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i311, i64 0, i32 1
  %modify_tag_field9.i.i.i348 = bitcast [3 x i64]* %field_ptr7.i.i.i347 to %str.RocStr*
  %call_builtin.i.i.i349 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i348) #11
  %get_rc_ptr.i.i.i350 = getelementptr inbounds i8, i8* %call_builtin.i.i.i349, i64 -8
  %54 = bitcast i8* %get_rc_ptr.i.i.i350 to i64*
  %55 = load i64, i64* %54, align 8
  %.not.i.i.i.i2.i.i351 = icmp eq i64 %55, 0
  br i1 %.not.i.i.i.i2.i.i351, label %"#Attr_#dec_28.exit.i.i360", label %Then.i.i.i.i.i.i353

Then.i.i.i.i.i.i353:                              ; preds = %modify_rc.i.i.i352
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %55, -9223372036854775808
  br i1 %57, label %"#Attr_#dec_28.exit.i.sink.split.i355", label %"#Attr_#dec_28.exit.i.i360"

"#Attr_#dec_28.exit.i.sink.split.i355":           ; preds = %Then.i.i.i.i.i.i353, %Then1.i.i.i.i19.i.i343, %Then1.i.i.i.i.i.i.i330
  %get_rc_ptr.i.i.sink.i354 = phi i8* [ %52, %Then1.i.i.i.i19.i.i343 ], [ %44, %Then1.i.i.i.i.i.i.i330 ], [ %get_rc_ptr.i.i.i350, %Then.i.i.i.i.i.i353 ]
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.sink.i354, i32 8) #11
  br label %"#Attr_#dec_28.exit.i.i360"

"#Attr_#dec_28.exit.i.i360":                      ; preds = %"#Attr_#dec_28.exit.i.sink.split.i355", %Then.i.i.i.i.i.i353, %modify_rc.i.i.i352, %tag_id_modify6.i.i.i346, %Then.i.i.i.i18.i.i342, %modification_list_block.i.i.i341, %tag_id_modify1.i.i.i333, %Then.i.i.i.i.i.i.i329, %modification_list_block.i.i.i.i328, %tag_id_modify.i.i.i320, %tag_id_modify.i317
  %struct_field_access_record_1.i.i356 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 1, i64 4
  %58 = bitcast i64* %struct_field_access_record_1.i.i356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %35, i8* noundef nonnull align 8 dereferenceable(40) %58, i64 40, i1 false) #11
  %tag_id_ptr.i3.i.i357 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i310, i64 0, i32 2
  %load_tag_id.i4.i.i358 = load i8, i8* %tag_id_ptr.i3.i.i357, align 8
  %cond.i.i.i359 = icmp eq i8 %load_tag_id.i4.i.i358, 9
  br i1 %cond.i.i.i359, label %tag_id_modify.i8.i.i363, label %"#Attr_#dec_4.exit.i170"

tag_id_modify.i8.i.i363:                          ; preds = %"#Attr_#dec_28.exit.i.i360"
  %59 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i310, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.i.unpack27.i361 = load i64, i64* %59, align 8
  %is_big_str.i.i.i.i362 = icmp sgt i64 %load_str_to_stack.i.i.i.unpack27.i361, 0
  br i1 %is_big_str.i.i.i.i362, label %modify_rc.i.i.i.i369, label %"#Attr_#dec_4.exit.i170"

modify_rc.i.i.i.i369:                             ; preds = %tag_id_modify.i8.i.i363
  %field_ptr.i5.i.i364 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i310, i64 0, i32 1
  %modify_tag_field.i7.i.i365 = bitcast [4 x i64]* %field_ptr.i5.i.i364 to %str.RocStr*
  %call_builtin.i.i.i.i366 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field.i7.i.i365) #11
  %get_rc_ptr.i.i10.i.i367 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i366, i64 -8
  %60 = bitcast i8* %get_rc_ptr.i.i10.i.i367 to i64*
  %61 = load i64, i64* %60, align 8
  %.not.i.i.i.i.i11.i.i368 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i.i11.i.i368, label %"#Attr_#dec_4.exit.i170", label %Then.i.i.i.i.i12.i.i370

Then.i.i.i.i.i12.i.i370:                          ; preds = %modify_rc.i.i.i.i369
  %62 = add i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i.i13.i.i371, label %"#Attr_#dec_4.exit.i170"

Then1.i.i.i.i.i13.i.i371:                         ; preds = %Then.i.i.i.i.i12.i.i370
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i10.i.i367, i32 8) #11
  br label %"#Attr_#dec_4.exit.i170"

"#Attr_#dec_4.exit.i170":                         ; preds = %Then1.i.i.i.i.i13.i.i371, %Then.i.i.i.i.i12.i.i370, %modify_rc.i.i.i.i369, %tag_id_modify.i8.i.i363, %"#Attr_#dec_28.exit.i.i360"
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #11
  %const_str_store.repack.i149 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 0
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_str_literal_17100216405140828939, i64 0, i64 8), i8** %const_str_store.repack.i149, align 8
  %const_str_store.repack27.i150 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 1
  store i64 31, i64* %const_str_store.repack27.i150, align 8
  %const_str_store.repack28.i151 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i144, i64 0, i32 2
  store i64 31, i64* %const_str_store.repack28.i151, align 8
  %const_str_store1.repack.i152 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 0
  store i8* inttoptr (i64 11872 to i8*), i8** %const_str_store1.repack.i152, align 8
  %const_str_store1.repack29.i153 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 1
  store i64 0, i64* %const_str_store1.repack29.i153, align 8
  %const_str_store1.repack30.i154 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i143, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store1.repack30.i154, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i142, %str.RocStr* nonnull readonly %transform, %str.RocStr* nocapture nonnull readonly %const_str_store1.i143) #11
  %64 = bitcast %str.RocStr* %str_alloca.i31.i135 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %str_alloca.i31.i135, %str.RocStr* nonnull readonly %const_str_store.i144, %str.RocStr* nocapture nonnull readonly %result_value.i142) #11
  %result_value2.i141.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 0
  %result_value2.i141.sroa.0.0.copyload = load i8*, i8** %result_value2.i141.sroa.0.0..sroa_idx, align 8
  %result_value2.i141.sroa.4.0..sroa_idx470 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 1
  %result_value2.i141.sroa.4.0.copyload = load i64, i64* %result_value2.i141.sroa.4.0..sroa_idx470, align 8
  %result_value2.i141.sroa.5.0..sroa_idx472 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i135, i64 0, i32 2
  %result_value2.i141.sroa.5.0.copyload = load i64, i64* %result_value2.i141.sroa.5.0..sroa_idx472, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  %load_str_to_stack.i32.i167.elt271 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i142, i64 0, i32 2
  %load_str_to_stack.i32.i167.unpack272 = load i64, i64* %load_str_to_stack.i32.i167.elt271, align 8
  %is_big_str.i34.i169 = icmp sgt i64 %load_str_to_stack.i32.i167.unpack272, 0
  br i1 %is_big_str.i34.i169, label %modify_rc.i39.i175, label %"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit"

modify_rc.i39.i175:                               ; preds = %"#Attr_#dec_4.exit.i170"
  %call_builtin.i35.i171 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i142) #11
  %get_rc_ptr.i37.i173 = getelementptr inbounds i8, i8* %call_builtin.i35.i171, i64 -8
  %65 = bitcast i8* %get_rc_ptr.i37.i173 to i64*
  %66 = load i64, i64* %65, align 8
  %.not.i.i.i.i38.i174 = icmp eq i64 %66, 0
  br i1 %.not.i.i.i.i38.i174, label %"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit", label %Then.i.i.i.i40.i176

Then.i.i.i.i40.i176:                              ; preds = %modify_rc.i39.i175
  %67 = add i64 %66, -1
  store i64 %67, i64* %65, align 8
  %68 = icmp eq i64 %66, -9223372036854775808
  br i1 %68, label %Then1.i.i.i.i41.i177, label %"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit"

Then1.i.i.i.i41.i177:                             ; preds = %Then.i.i.i.i40.i176
  tail call void @roc_dealloc(i8* %get_rc_ptr.i37.i173, i32 8) #11
  br label %"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit"

"#UserApp_28_bf43e62328bba1054c16189c2e871fa48fdb4fb1d5e2bba06b1f3d93dcbd1a.exit": ; preds = %"#Attr_#dec_4.exit.i170", %Then1.i.i.i.i41.i177, %Then.i.i.i.i40.i176, %modify_rc.i39.i175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Arg_formatHelpHelp_3be6299315d35c9efc205b8b814047b2fa1b123fde69cf32b75a0d03c346ab3(i64 %n, { [0 x i64], [3 x i64] }* %cmdHelp, %str.RocStr* nocapture %0) unnamed_addr #11 {
Arg_indent_9cbedaee2f25852ac1dafd886c0f490e07f718fc4e3aef53c2379368238db0.exit:
  %const_str_store.i.i = alloca %str.RocStr, align 8
  %result_value4.i = alloca %str.RocStr, align 8
  %result_value3.i = alloca %str.RocStr, align 8
  %result_value2.i = alloca %str.RocStr, align 8
  %result_value.i1491 = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i1460 = alloca %str.RocStr, align 8
  %struct_field1.i.i1377 = alloca %str.RocStr, align 8
  %struct_field.i.i1378 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i1379 = alloca { %str.RocStr, %str.RocStr }, align 8
  %struct_field1.i.i1346 = alloca %str.RocStr, align 8
  %struct_field.i.i1347 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i1348 = alloca { %str.RocStr, %str.RocStr }, align 8
  %incrementing_element_loop_load.i1317 = alloca %str.RocStr, align 8
  %struct_field2.i.i1223 = alloca %str.RocStr, align 8
  %struct_field1.i.i1224 = alloca %str.RocStr, align 8
  %struct_field.i.i1225 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i1226 = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %struct_field2.i.i1183 = alloca %str.RocStr, align 8
  %struct_field1.i.i1184 = alloca %str.RocStr, align 8
  %struct_field.i.i1185 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i1186 = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %struct_field2.i.i1104 = alloca %str.RocStr, align 8
  %struct_field1.i.i1105 = alloca %str.RocStr, align 8
  %struct_field.i.i1106 = alloca %str.RocStr, align 8
  %struct_field1.i.i.i1107 = alloca %str.RocStr, align 8
  %struct_field.i.i.i1108 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %struct_field.i.i1059 = alloca %str.RocStr, align 8
  %struct_field2.i.i = alloca %str.RocStr, align 8
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %struct_field1.i.i.i1045 = alloca %str.RocStr, align 8
  %struct_field.i.i.i1046 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.sroa.0.i = alloca [10 x i64], align 8
  %result_value.i.i689 = alloca %str.RocStr, align 8
  %list_alloca.i646 = alloca %list.RocList, align 8
  %result_value.i.i.i.i.i531 = alloca %str.RocStr, align 8
  %const_str_store.i.i.i.i.i532 = alloca %str.RocStr, align 8
  %const_str_store.i.i.i.i535 = alloca %str.RocStr, align 8
  %result_value4.i.i.i536 = alloca %str.RocStr, align 8
  %result_value3.i.i.i = alloca %str.RocStr, align 8
  %result_value2.i.i.i = alloca %str.RocStr, align 8
  %result_value.i.i.i537 = alloca %str.RocStr, align 8
  %struct_field1.i.i.i538 = alloca %str.RocStr, align 8
  %struct_field.i.i.i539 = alloca %str.RocStr, align 8
  %result_value.i.i541 = alloca %str.RocStr, align 8
  %zig_helper_load_opaque.i.i542 = alloca { %str.RocStr, %str.RocStr }, align 8
  %list_alloca.i451 = alloca %list.RocList, align 8
  %result_value.i.i25.i.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i26.i.i.i = alloca %str.RocStr, align 8
  %result_value.i.i.i.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i.i.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i.i.i = alloca %str.RocStr, align 8
  %result_value15.i.i.i = alloca %str.RocStr, align 8
  %result_value14.i.i.i = alloca %str.RocStr, align 8
  %result_value13.i.i.i = alloca %str.RocStr, align 8
  %result_value12.i.i.i = alloca %str.RocStr, align 8
  %result_value11.i.i.i = alloca %str.RocStr, align 8
  %result_value10.i.i.i = alloca %str.RocStr, align 8
  %result_value9.i.i.i = alloca %str.RocStr, align 8
  %const_str_store8.i.i.i = alloca %str.RocStr, align 8
  %const_str_store7.i.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i.i = alloca %str.RocStr, align 8
  %result_value6.i.i.i = alloca %str.RocStr, align 8
  %result_value5.i.i.i = alloca %str.RocStr, align 8
  %result_value4.i.i.i = alloca %str.RocStr, align 8
  %result_value.i.i.i = alloca %str.RocStr, align 8
  %struct_field2.i.i.i = alloca %str.RocStr, align 8
  %struct_field1.i.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i.i = alloca %str.RocStr, align 8
  %result_value.i.i = alloca %str.RocStr, align 8
  %zig_helper_load_opaque.i.i.sroa.0 = alloca { %str.RocStr, %str.RocStr, %str.RocStr }, align 8
  %struct_field2.i.i.i.i.i207 = alloca %str.RocStr, align 8
  %struct_field1.i.i.i.i.i208 = alloca %str.RocStr, align 8
  %struct_field.i.i.i.i.i209 = alloca %str.RocStr, align 8
  %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214 = alloca { %str.RocStr, %str.RocStr }, align 8
  %result_value.i.i.i.i.i.i219 = alloca { [0 x i64], [6 x i64], i8, [7 x i8] }, align 8
  %struct_field1.i.i.i.i.i.i220 = alloca %str.RocStr, align 8
  %struct_field.i.i.i.i.i.i221 = alloca %str.RocStr, align 8
  %result_value.i.i.i.i223 = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  %struct_field2.i.i.i.i.i = alloca %str.RocStr, align 8
  %struct_field1.i.i.i.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i.i.i.i = alloca %str.RocStr, align 8
  %element_to_pass_as_opaque.i.i.i.i.i.i.i.i = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %result_value.i.i.i.i.i.i = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  %struct_field1.i.i.i.i.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i.i.i.i.i = alloca %str.RocStr, align 8
  %result_value.i.i.i.i = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  %list_alloca.i = alloca %list.RocList, align 8
  %const_str_store.i = alloca %str.RocStr, align 8
  %result_value104 = alloca %str.RocStr, align 8
  %result_value103 = alloca %str.RocStr, align 8
  %result_value102 = alloca %str.RocStr, align 8
  %result_value101 = alloca %str.RocStr, align 8
  %const_str_store100 = alloca %str.RocStr, align 8
  %const_str_store99 = alloca %str.RocStr, align 8
  %result_value98 = alloca %str.RocStr, align 8
  %const_str_store97 = alloca %str.RocStr, align 8
  %const_str_store95 = alloca %str.RocStr, align 8
  %result_value88 = alloca %str.RocStr, align 8
  %result_value87 = alloca %str.RocStr, align 8
  %result_value86 = alloca %str.RocStr, align 8
  %const_str_store85 = alloca %str.RocStr, align 8
  %const_str_store84 = alloca %str.RocStr, align 8
  %result_value83 = alloca %str.RocStr, align 8
  %const_str_store82 = alloca %str.RocStr, align 8
  %const_str_store80 = alloca %str.RocStr, align 8
  %result_value31 = alloca %str.RocStr, align 8
  %result_value30 = alloca %str.RocStr, align 8
  %result_value29 = alloca %str.RocStr, align 8
  %const_str_store28 = alloca %str.RocStr, align 8
  %const_str_store27 = alloca %str.RocStr, align 8
  %result_value26 = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %1 = bitcast %str.RocStr* %const_str_store.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1)
  %const_str_store.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 0
  store i8* inttoptr (i64 32 to i8*), i8** %const_str_store.repack.i, align 8
  %const_str_store.repack1.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 1
  store i64 0, i64* %const_str_store.repack1.i, align 8
  %const_str_store.repack2.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store.repack2.i, align 8
  call fastcc void @roc_builtins.str.repeat(%str.RocStr* noalias nocapture nonnull %result_value, %str.RocStr* nocapture nonnull readonly %const_str_store.i, i64 %n) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1)
  %to_int = ptrtoint { [0 x i64], [3 x i64] }* %cmdHelp to i64
  %to_u8105 = and i64 %to_int, 7
  %eq_u8 = icmp eq i64 %to_u8105, 1
  br i1 %eq_u8, label %then_block, label %else_block

then_block:                                       ; preds = %Arg_indent_9cbedaee2f25852ac1dafd886c0f490e07f718fc4e3aef53c2379368238db0.exit
  %cast_to_i8_ptr = bitcast { [0 x i64], [3 x i64] }* %cmdHelp to i8*
  %new_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 -1
  %load_at_index_ptr_old.elt = bitcast i8* %new_ptr to i8**
  %load_at_index_ptr_old.unpack = load i8*, i8** %load_at_index_ptr_old.elt, align 8
  %load_at_index_ptr_old.elt127 = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 7
  %2 = bitcast i8* %load_at_index_ptr_old.elt127 to i64*
  %load_at_index_ptr_old.unpack128 = load i64, i64* %2, align 8
  %load_at_index_ptr_old.elt129 = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 15
  %3 = bitcast i8* %load_at_index_ptr_old.elt129 to i64*
  %load_at_index_ptr_old.unpack130 = load i64, i64* %3, align 8
  %get_rc_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 -9
  %4 = bitcast i8* %get_rc_ptr to i64*
  %get_refcount = load i64, i64* %4, align 8
  %is_one = icmp eq i64 %get_refcount, -9223372036854775808
  br i1 %is_one, label %then_block8, label %then

else_block:                                       ; preds = %Arg_indent_9cbedaee2f25852ac1dafd886c0f490e07f718fc4e3aef53c2379368238db0.exit
  %index34 = sub nsw i64 0, %to_u8105
  %cast_to_i8_ptr35 = bitcast { [0 x i64], [3 x i64] }* %cmdHelp to i8*
  %new_ptr36 = getelementptr inbounds i8, i8* %cast_to_i8_ptr35, i64 %index34
  %load_at_index_ptr_old40.elt = bitcast i8* %new_ptr36 to i8**
  %load_at_index_ptr_old40.unpack = load i8*, i8** %load_at_index_ptr_old40.elt, align 8
  %5 = insertvalue %list.RocList undef, i8* %load_at_index_ptr_old40.unpack, 0
  %load_at_index_ptr_old40.elt106 = getelementptr inbounds i8, i8* %new_ptr36, i64 8
  %6 = bitcast i8* %load_at_index_ptr_old40.elt106 to i64*
  %load_at_index_ptr_old40.unpack107 = load i64, i64* %6, align 8
  %7 = insertvalue %list.RocList %5, i64 %load_at_index_ptr_old40.unpack107, 1
  %load_at_index_ptr_old40.elt108 = getelementptr inbounds i8, i8* %new_ptr36, i64 16
  %8 = bitcast i8* %load_at_index_ptr_old40.elt108 to i64*
  %load_at_index_ptr_old40.unpack109 = load i64, i64* %8, align 8
  %load_at_index_ptr_old40110 = insertvalue %list.RocList %7, i64 %load_at_index_ptr_old40.unpack109, 2
  %incrementing_element_loop_load.sroa.0.i.0.sroa_cast = bitcast [10 x i64]* %incrementing_element_loop_load.sroa.0.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.sroa.0.i.0.sroa_cast)
  %"cap > 0.not.i" = icmp eq i64 %load_at_index_ptr_old40.unpack109, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#inc_20.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %else_block
  %cast_basic_basic.i = bitcast i8* %load_at_index_ptr_old40.unpack to { [0 x i64], [10 x i64], i8, [7 x i8] }*
  %bounds_check.not.i = icmp eq i64 %load_at_index_ptr_old40.unpack107, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %9 = bitcast %str.RocStr* %struct_field1.i.i.i1045 to i8*
  %10 = bitcast %str.RocStr* %struct_field.i.i.i1046 to i8*
  %load_str_to_stack.i.i.i.elt7.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i1046, i64 0, i32 2
  %incrementing_element_loop_load.sroa.0.24.sroa_idx.i = getelementptr inbounds [10 x i64], [10 x i64]* %incrementing_element_loop_load.sroa.0.i, i64 0, i64 3
  %incrementing_element_loop_load.sroa.0.24.sroa_cast.i = bitcast i64* %incrementing_element_loop_load.sroa.0.24.sroa_idx.i to i8*
  %load_str_to_stack.i2.i.i.elt12.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i1045, i64 0, i32 2
  %11 = bitcast %str.RocStr* %struct_field2.i.i to i8*
  %12 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  %13 = bitcast %str.RocStr* %struct_field.i.i to i8*
  %load_str_to_stack.i.i.elt17.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  %load_str_to_stack.i3.i.elt22.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %incrementing_element_loop_load.sroa.0.48.sroa_idx.i = getelementptr inbounds [10 x i64], [10 x i64]* %incrementing_element_loop_load.sroa.0.i, i64 0, i64 6
  %incrementing_element_loop_load.sroa.0.48.sroa_cast.i = bitcast i64* %incrementing_element_loop_load.sroa.0.48.sroa_idx.i to i8*
  %load_str_to_stack.i13.i.elt27.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#inc_8.exit.i", %loop.preheader.i
  %index.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#inc_8.exit.i" ]
  %next_index.i = add nuw i64 %index.i, 1
  %load_index.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index.i
  %incrementing_element_loop_load.sroa.0.0..sroa_cast.i = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %incrementing_element_loop_load.sroa.0.i.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %incrementing_element_loop_load.sroa.0.0..sroa_cast.i, i64 80, i1 false) #11
  %incrementing_element_loop_load.sroa.6.0..sroa_idx.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index.i, i32 2
  %incrementing_element_loop_load.sroa.6.0.copyload.i = load i8, i8* %incrementing_element_loop_load.sroa.6.0..sroa_idx.i, align 8
  switch i8 %incrementing_element_loop_load.sroa.6.0.copyload.i, label %"#Attr_#inc_8.exit.i" [
    i8 0, label %tag_id_modify.i.i
    i8 1, label %tag_id_modify1.i.i
  ]

tag_id_modify.i.i:                                ; preds = %loop.i
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %13, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.0..sroa_cast.i, i64 24, i1 false) #11
  %load_str_to_stack.i.i.unpack18.i = load i64, i64* %load_str_to_stack.i.i.elt17.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack18.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %tag_id_modify.i.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %14 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %15 = load i64, i64* %14, align 8
  %.not.i.i.i.i1047 = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i1047, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i.i1048

Then.i.i.i.i1048:                                 ; preds = %modify_rc.i.i.i
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i.i1048, %modify_rc.i.i.i, %tag_id_modify.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %12, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.24.sroa_cast.i, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.unpack23.i = load i64, i64* %load_str_to_stack.i3.i.elt22.i, align 8
  %is_big_str.i5.i.i = icmp sgt i64 %load_str_to_stack.i3.i.unpack23.i, 0
  br i1 %is_big_str.i5.i.i, label %modify_rc.i10.i.i, label %"#Attr_#inc_4.exit12.i.i"

modify_rc.i10.i.i:                                ; preds = %"#Attr_#inc_4.exit.i.i"
  %call_builtin.i6.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i8.i.i = getelementptr inbounds i8, i8* %call_builtin.i6.i.i, i64 -8
  %17 = bitcast i8* %get_rc_ptr.i8.i.i to i64*
  %18 = load i64, i64* %17, align 8
  %.not.i.i9.i.i = icmp eq i64 %18, 0
  br i1 %.not.i.i9.i.i, label %"#Attr_#inc_4.exit12.i.i", label %Then.i.i11.i.i

Then.i.i11.i.i:                                   ; preds = %modify_rc.i10.i.i
  %19 = add nsw i64 %18, 1
  store i64 %19, i64* %17, align 8
  br label %"#Attr_#inc_4.exit12.i.i"

"#Attr_#inc_4.exit12.i.i":                        ; preds = %Then.i.i11.i.i, %modify_rc.i10.i.i, %"#Attr_#inc_4.exit.i.i"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %11, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.48.sroa_cast.i, i64 24, i1 false) #11
  %load_str_to_stack.i13.i.unpack28.i = load i64, i64* %load_str_to_stack.i13.i.elt27.i, align 8
  %is_big_str.i15.i.i = icmp sgt i64 %load_str_to_stack.i13.i.unpack28.i, 0
  br i1 %is_big_str.i15.i.i, label %modify_rc.i20.i.i, label %"#Attr_#inc_3.exit.i"

modify_rc.i20.i.i:                                ; preds = %"#Attr_#inc_4.exit12.i.i"
  %call_builtin.i16.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i.i) #11
  %get_rc_ptr.i18.i.i = getelementptr inbounds i8, i8* %call_builtin.i16.i.i, i64 -8
  %20 = bitcast i8* %get_rc_ptr.i18.i.i to i64*
  %21 = load i64, i64* %20, align 8
  %.not.i.i19.i.i = icmp eq i64 %21, 0
  br i1 %.not.i.i19.i.i, label %"#Attr_#inc_3.exit.i", label %Then.i.i21.i.i

Then.i.i21.i.i:                                   ; preds = %modify_rc.i20.i.i
  %22 = add nsw i64 %21, 1
  store i64 %22, i64* %20, align 8
  br label %"#Attr_#inc_3.exit.i"

"#Attr_#inc_3.exit.i":                            ; preds = %Then.i.i21.i.i, %modify_rc.i20.i.i, %"#Attr_#inc_4.exit12.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  br label %"#Attr_#inc_8.exit.i"

tag_id_modify1.i.i:                               ; preds = %loop.i
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.0..sroa_cast.i, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.unpack8.i = load i64, i64* %load_str_to_stack.i.i.i.elt7.i, align 8
  %is_big_str.i.i.i.i1049 = icmp sgt i64 %load_str_to_stack.i.i.i.unpack8.i, 0
  br i1 %is_big_str.i.i.i.i1049, label %modify_rc.i.i.i.i1053, label %"#Attr_#inc_4.exit.i.i.i"

modify_rc.i.i.i.i1053:                            ; preds = %tag_id_modify1.i.i
  %call_builtin.i.i.i.i1050 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i1046) #11
  %get_rc_ptr.i.i.i.i1051 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i1050, i64 -8
  %23 = bitcast i8* %get_rc_ptr.i.i.i.i1051 to i64*
  %24 = load i64, i64* %23, align 8
  %.not.i.i.i.i.i1052 = icmp eq i64 %24, 0
  br i1 %.not.i.i.i.i.i1052, label %"#Attr_#inc_4.exit.i.i.i", label %Then.i.i.i.i.i1054

Then.i.i.i.i.i1054:                               ; preds = %modify_rc.i.i.i.i1053
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8
  br label %"#Attr_#inc_4.exit.i.i.i"

"#Attr_#inc_4.exit.i.i.i":                        ; preds = %Then.i.i.i.i.i1054, %modify_rc.i.i.i.i1053, %tag_id_modify1.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.24.sroa_cast.i, i64 24, i1 false) #11
  %load_str_to_stack.i2.i.i.unpack13.i = load i64, i64* %load_str_to_stack.i2.i.i.elt12.i, align 8
  %is_big_str.i4.i.i.i = icmp sgt i64 %load_str_to_stack.i2.i.i.unpack13.i, 0
  br i1 %is_big_str.i4.i.i.i, label %modify_rc.i9.i.i.i, label %"#Attr_#inc_5.exit.i.i"

modify_rc.i9.i.i.i:                               ; preds = %"#Attr_#inc_4.exit.i.i.i"
  %call_builtin.i5.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i1045) #11
  %get_rc_ptr.i7.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i5.i.i.i, i64 -8
  %26 = bitcast i8* %get_rc_ptr.i7.i.i.i to i64*
  %27 = load i64, i64* %26, align 8
  %.not.i.i8.i.i.i = icmp eq i64 %27, 0
  br i1 %.not.i.i8.i.i.i, label %"#Attr_#inc_5.exit.i.i", label %Then.i.i10.i.i.i

Then.i.i10.i.i.i:                                 ; preds = %modify_rc.i9.i.i.i
  %28 = add nsw i64 %27, 1
  store i64 %28, i64* %26, align 8
  br label %"#Attr_#inc_5.exit.i.i"

"#Attr_#inc_5.exit.i.i":                          ; preds = %Then.i.i10.i.i.i, %modify_rc.i9.i.i.i, %"#Attr_#inc_4.exit.i.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  br label %"#Attr_#inc_8.exit.i"

"#Attr_#inc_8.exit.i":                            ; preds = %"#Attr_#inc_5.exit.i.i", %"#Attr_#inc_3.exit.i", %loop.i
  %exitcond1680.not = icmp eq i64 %next_index.i, %load_at_index_ptr_old40.unpack107
  br i1 %exitcond1680.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#inc_8.exit.i", %modification_list_block.i
  %29 = ptrtoint i8* %load_at_index_ptr_old40.unpack to i64
  %30 = shl i64 %load_at_index_ptr_old40.unpack109, 1
  %.not.i.i.i1055 = icmp slt i64 %load_at_index_ptr_old40.unpack109, 0
  %31 = select i1 %.not.i.i.i1055, i64 %30, i64 %29
  %as_usize_ptr.i = inttoptr i64 %31 to i64*
  %get_rc_ptr.i1056 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i1056, align 8
  %.not.i.i1057 = icmp eq i64 %32, 0
  br i1 %.not.i.i1057, label %"#Attr_#inc_20.exit", label %Then.i.i1058

Then.i.i1058:                                     ; preds = %after_loop.i
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %get_rc_ptr.i1056, align 8
  br label %"#Attr_#inc_20.exit"

"#Attr_#inc_20.exit":                             ; preds = %else_block, %after_loop.i, %Then.i.i1058
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.sroa.0.i.0.sroa_cast)
  %get_rc_ptr48.idx = sub nuw nsw i64 -8, %to_u8105
  %get_rc_ptr48 = getelementptr inbounds i8, i8* %cast_to_i8_ptr35, i64 %get_rc_ptr48.idx
  %34 = bitcast i8* %get_rc_ptr48 to i64*
  %get_refcount49 = load i64, i64* %34, align 8
  %is_one50 = icmp eq i64 %get_refcount49, -9223372036854775808
  br i1 %is_one50, label %then_block52, label %then68

then_block8:                                      ; preds = %then_block
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %4)
  br label %joinpointcont

then:                                             ; preds = %then_block
  %"cap > 0.not.i1060" = icmp eq i64 %load_at_index_ptr_old.unpack130, 0
  br i1 %"cap > 0.not.i1060", label %"#Attr_#inc_22.exit", label %modification_list_block.i1063

modification_list_block.i1063:                    ; preds = %then
  %cast_basic_basic.i1061 = bitcast i8* %load_at_index_ptr_old.unpack to { { [0 x i64], [3 x i64] }*, %str.RocStr }*
  %bounds_check.not.i1062 = icmp eq i64 %load_at_index_ptr_old.unpack128, 0
  br i1 %bounds_check.not.i1062, label %after_loop.i1079, label %loop.preheader.i1064

loop.preheader.i1064:                             ; preds = %modification_list_block.i1063
  %35 = bitcast %str.RocStr* %struct_field.i.i1059 to i8*
  %struct_field.i.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1059, i64 0, i32 0
  %struct_field.i.repack13.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1059, i64 0, i32 1
  %struct_field.i.repack15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1059, i64 0, i32 2
  br label %loop.i1069

loop.i1069:                                       ; preds = %"#Attr_#inc_23.exit.i", %loop.preheader.i1064
  %index.i1065 = phi i64 [ 0, %loop.preheader.i1064 ], [ %next_index.i1066, %"#Attr_#inc_23.exit.i" ]
  %next_index.i1066 = add nuw i64 %index.i1065, 1
  %incrementing_element_loop_load.elt.i = getelementptr inbounds { { [0 x i64], [3 x i64] }*, %str.RocStr }, { { [0 x i64], [3 x i64] }*, %str.RocStr }* %cast_basic_basic.i1061, i64 %index.i1065, i32 0
  %incrementing_element_loop_load.unpack.i = load { [0 x i64], [3 x i64] }*, { [0 x i64], [3 x i64] }** %incrementing_element_loop_load.elt.i, align 8
  %incrementing_element_loop_load.unpack6.elt.i = getelementptr inbounds { { [0 x i64], [3 x i64] }*, %str.RocStr }, { { [0 x i64], [3 x i64] }*, %str.RocStr }* %cast_basic_basic.i1061, i64 %index.i1065, i32 1, i32 0
  %incrementing_element_loop_load.unpack6.unpack.i = load i8*, i8** %incrementing_element_loop_load.unpack6.elt.i, align 8
  %incrementing_element_loop_load.unpack6.elt8.i = getelementptr inbounds { { [0 x i64], [3 x i64] }*, %str.RocStr }, { { [0 x i64], [3 x i64] }*, %str.RocStr }* %cast_basic_basic.i1061, i64 %index.i1065, i32 1, i32 1
  %incrementing_element_loop_load.unpack6.unpack9.i = load i64, i64* %incrementing_element_loop_load.unpack6.elt8.i, align 8
  %incrementing_element_loop_load.unpack6.elt10.i = getelementptr inbounds { { [0 x i64], [3 x i64] }*, %str.RocStr }, { { [0 x i64], [3 x i64] }*, %str.RocStr }* %cast_basic_basic.i1061, i64 %index.i1065, i32 1, i32 2
  %incrementing_element_loop_load.unpack6.unpack11.i = load i64, i64* %incrementing_element_loop_load.unpack6.elt10.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %to_int1.i.i.i = ptrtoint { [0 x i64], [3 x i64] }* %incrementing_element_loop_load.unpack.i to i64
  %masked.i.i.i = and i64 %to_int1.i.i.i, 7
  %cast_to_i8_ptr.i.i.i = bitcast { [0 x i64], [3 x i64] }* %incrementing_element_loop_load.unpack.i to i8*
  %get_rc_ptr.i.i.idx.i = sub nuw nsw i64 -8, %masked.i.i.i
  %get_rc_ptr.i.i.i1067 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i, i64 %get_rc_ptr.i.i.idx.i
  %36 = bitcast i8* %get_rc_ptr.i.i.i1067 to i64*
  %37 = load i64, i64* %36, align 8
  %.not.i.i.i.i1068 = icmp eq i64 %37, 0
  br i1 %.not.i.i.i.i1068, label %"#Attr_#inc_24.exit.i.i", label %Then.i.i.i.i1070

Then.i.i.i.i1070:                                 ; preds = %loop.i1069
  %38 = add nsw i64 %37, 1
  store i64 %38, i64* %36, align 8
  br label %"#Attr_#inc_24.exit.i.i"

"#Attr_#inc_24.exit.i.i":                         ; preds = %Then.i.i.i.i1070, %loop.i1069
  store i8* %incrementing_element_loop_load.unpack6.unpack.i, i8** %struct_field.i.repack.i, align 8
  store i64 %incrementing_element_loop_load.unpack6.unpack9.i, i64* %struct_field.i.repack13.i, align 8
  store i64 %incrementing_element_loop_load.unpack6.unpack11.i, i64* %struct_field.i.repack15.i, align 8
  %is_big_str.i.i.i1071 = icmp sgt i64 %incrementing_element_loop_load.unpack6.unpack11.i, 0
  br i1 %is_big_str.i.i.i1071, label %modify_rc.i.i.i1073, label %"#Attr_#inc_23.exit.i"

modify_rc.i.i.i1073:                              ; preds = %"#Attr_#inc_24.exit.i.i"
  %call_builtin.i.i.i1072 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1059) #11
  %get_rc_ptr.i2.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i1072, i64 -8
  %39 = bitcast i8* %get_rc_ptr.i2.i.i to i64*
  %40 = load i64, i64* %39, align 8
  %.not.i.i3.i.i = icmp eq i64 %40, 0
  br i1 %.not.i.i3.i.i, label %"#Attr_#inc_23.exit.i", label %Then.i.i4.i.i

Then.i.i4.i.i:                                    ; preds = %modify_rc.i.i.i1073
  %41 = add nsw i64 %40, 1
  store i64 %41, i64* %39, align 8
  br label %"#Attr_#inc_23.exit.i"

"#Attr_#inc_23.exit.i":                           ; preds = %Then.i.i4.i.i, %modify_rc.i.i.i1073, %"#Attr_#inc_24.exit.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  %exitcond1670.not = icmp eq i64 %next_index.i1066, %load_at_index_ptr_old.unpack128
  br i1 %exitcond1670.not, label %after_loop.i1079, label %loop.i1069

after_loop.i1079:                                 ; preds = %"#Attr_#inc_23.exit.i", %modification_list_block.i1063
  %42 = ptrtoint i8* %load_at_index_ptr_old.unpack to i64
  %43 = shl i64 %load_at_index_ptr_old.unpack130, 1
  %.not.i.i.i1075 = icmp slt i64 %load_at_index_ptr_old.unpack130, 0
  %44 = select i1 %.not.i.i.i1075, i64 %43, i64 %42
  %as_usize_ptr.i1076 = inttoptr i64 %44 to i64*
  %get_rc_ptr.i1077 = getelementptr inbounds i64, i64* %as_usize_ptr.i1076, i64 -1
  %45 = load i64, i64* %get_rc_ptr.i1077, align 8
  %.not.i.i1078 = icmp eq i64 %45, 0
  br i1 %.not.i.i1078, label %"#Attr_#inc_22.exitthread-pre-split", label %Then.i.i1080

Then.i.i1080:                                     ; preds = %after_loop.i1079
  %46 = add nsw i64 %45, 1
  store i64 %46, i64* %get_rc_ptr.i1077, align 8
  br label %"#Attr_#inc_22.exitthread-pre-split"

"#Attr_#inc_22.exitthread-pre-split":             ; preds = %Then.i.i1080, %after_loop.i1079
  %.pr1754 = load i64, i64* %4, align 8
  br label %"#Attr_#inc_22.exit"

"#Attr_#inc_22.exit":                             ; preds = %"#Attr_#inc_22.exitthread-pre-split", %then
  %47 = phi i64 [ %.pr1754, %"#Attr_#inc_22.exitthread-pre-split" ], [ %get_refcount, %then ]
  %.not.i.i.i = icmp eq i64 %47, 0
  br i1 %.not.i.i.i, label %joinpointcont, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %"#Attr_#inc_22.exit"
  %48 = add i64 %47, -1
  store i64 %48, i64* %4, align 8
  %49 = icmp eq i64 %47, -9223372036854775808
  br i1 %49, label %Then1.i.i.i, label %joinpointcont

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  br label %joinpointcont

common.ret.sink.split:                            ; preds = %Then.i.i.i.i, %Then.i.i.i.i199
  %get_rc_ptr.i.sink = phi i8* [ %get_rc_ptr.i196, %Then.i.i.i.i199 ], [ %get_rc_ptr.i, %Then.i.i.i.i ]
  %.sink1765.ph = phi i8* [ %110, %Then.i.i.i.i199 ], [ %564, %Then.i.i.i.i ]
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.sink, i32 8) #11
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %joinpointcont89, %Then.i.i.i.i, %modify_rc.i, %"#Attr_#dec_4.exit189", %Then.i.i.i.i199, %modify_rc.i198
  %.sink1765 = phi i8* [ %110, %modify_rc.i198 ], [ %110, %Then.i.i.i.i199 ], [ %110, %"#Attr_#dec_4.exit189" ], [ %564, %modify_rc.i ], [ %564, %Then.i.i.i.i ], [ %564, %joinpointcont89 ], [ %.sink1765.ph, %common.ret.sink.split ]
  %50 = bitcast %str.RocStr* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %50, i8* noundef nonnull align 8 dereferenceable(24) %.sink1765, i64 24, i1 false)
  ret void

joinpointcont:                                    ; preds = %Then1.i.i.i, %Then.i.i.i, %"#Attr_#inc_22.exit", %then_block8
  %.not.i.i698 = icmp eq i8* %load_at_index_ptr_old.unpack, null
  br i1 %.not.i.i698, label %roc_builtins.list.map.exit.i736, label %OptionalThen.i.i701

OptionalThen.i.i701:                              ; preds = %joinpointcont
  %51 = icmp ne i64 %load_at_index_ptr_old.unpack128, 0
  tail call void @llvm.assume(i1 %51)
  %52 = icmp ugt i64 %load_at_index_ptr_old.unpack128, 2
  %..i.i.i.i.i703 = select i1 %52, i64 %load_at_index_ptr_old.unpack128, i64 2
  %53 = mul nuw i64 %..i.i.i.i.i703, 24
  %54 = add nuw i64 %53, 8
  %55 = tail call i8* @roc_alloc(i64 %54, i32 8) #11, !noalias !274
  %56 = icmp ne i8* %55, null
  tail call void @llvm.assume(i1 %56) #11
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  %58 = bitcast i8* %55 to i64*
  store i64 -9223372036854775808, i64* %58, align 8, !noalias !274
  %result_value.i.i689.0.sroa_cast = bitcast %str.RocStr* %result_value.i.i689 to i8*
  %call.i.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %n, i64 4) #11
  %has_overflowed.i.i = extractvalue { i64, i1 } %call.i.i, 1
  %operation_result.i.i = extractvalue { i64, i1 } %call.i.i, 0
  %result_value4.i.0.sroa_cast = bitcast %str.RocStr* %result_value4.i to i8*
  %59 = bitcast %str.RocStr* %result_value3.i to i8*
  %60 = bitcast %str.RocStr* %result_value2.i to i8*
  %61 = bitcast %str.RocStr* %result_value.i1491 to i8*
  %62 = bitcast %str.RocStr* %struct_field.i to i8*
  %struct_field.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 0
  %struct_field.repack5.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 1
  %struct_field.repack7.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %63 = bitcast %str.RocStr* %const_str_store.i.i to i8*
  %const_str_store.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 0
  %const_str_store.repack1.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 1
  %const_str_store.repack2.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 2
  %call.i.i1499 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %operation_result.i.i, i64 4) #11
  %has_overflowed.i.i1500 = extractvalue { i64, i1 } %call.i.i1499, 1
  %operation_result.i.i1502 = extractvalue { i64, i1 } %call.i.i1499, 0
  %load_str_to_stack.i.elt31.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value2.i, i64 0, i32 2
  %load_str_to_stack.i10.elt36.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value3.i, i64 0, i32 2
  br i1 %has_overflowed.i.i, label %WhileBody.i.i712.us, label %WhileBody.i.i712.preheader

WhileBody.i.i712.preheader:                       ; preds = %OptionalThen.i.i701
  %result_value.i.i6891759 = bitcast %str.RocStr* %result_value.i.i689 to i8*
  br label %WhileBody.i.i712

WhileBody.i.i712.us:                              ; preds = %OptionalThen.i.i701
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i689.0.sroa_cast)
  tail call fastcc void @throw_on_overflow() #11, !noalias !279
  unreachable

WhileBody.i.i712:                                 ; preds = %WhileBody.i.i712.preheader, %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit
  %i.010.i.i706 = phi i64 [ %78, %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit ], [ 0, %WhileBody.i.i712.preheader ]
  %64 = shl nuw i64 %i.010.i.i706, 5
  %65 = getelementptr inbounds i8, i8* %load_at_index_ptr_old.unpack, i64 %64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i689.0.sroa_cast)
  %zig_helper_load_opaque.i.i708.elt = bitcast i8* %65 to { [0 x i64], [3 x i64] }**
  %zig_helper_load_opaque.i.i708.unpack = load { [0 x i64], [3 x i64] }*, { [0 x i64], [3 x i64] }** %zig_helper_load_opaque.i.i708.elt, align 8, !noalias !279
  %zig_helper_load_opaque.i.i708.elt1017 = getelementptr inbounds i8, i8* %65, i64 8
  %zig_helper_load_opaque.i.i708.unpack1018.elt = bitcast i8* %zig_helper_load_opaque.i.i708.elt1017 to i8**
  %zig_helper_load_opaque.i.i708.unpack1018.unpack = load i8*, i8** %zig_helper_load_opaque.i.i708.unpack1018.elt, align 8, !noalias !279
  %zig_helper_load_opaque.i.i708.unpack1018.elt1020 = getelementptr inbounds i8, i8* %zig_helper_load_opaque.i.i708.elt1017, i64 8
  %66 = bitcast i8* %zig_helper_load_opaque.i.i708.unpack1018.elt1020 to i64*
  %zig_helper_load_opaque.i.i708.unpack1018.unpack1021 = load i64, i64* %66, align 8, !noalias !279
  %zig_helper_load_opaque.i.i708.unpack1018.elt1022 = getelementptr inbounds i8, i8* %zig_helper_load_opaque.i.i708.elt1017, i64 16
  %67 = bitcast i8* %zig_helper_load_opaque.i.i708.unpack1018.elt1022 to i64*
  %zig_helper_load_opaque.i.i708.unpack1018.unpack1023 = load i64, i64* %67, align 8, !noalias !279
  %68 = mul nuw i64 %i.010.i.i706, 24
  %69 = getelementptr inbounds i8, i8* %57, i64 %68
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value4.i.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62)
  store i8* %zig_helper_load_opaque.i.i708.unpack1018.unpack, i8** %struct_field.repack.i, align 8, !noalias !279
  store i64 %zig_helper_load_opaque.i.i708.unpack1018.unpack1021, i64* %struct_field.repack5.i, align 8, !noalias !279
  store i64 %zig_helper_load_opaque.i.i708.unpack1018.unpack1023, i64* %struct_field.repack7.i, align 8, !noalias !279
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11, !noalias !279
  store i8* inttoptr (i64 32 to i8*), i8** %const_str_store.repack.i.i, align 8, !noalias !279
  store i64 0, i64* %const_str_store.repack1.i.i, align 8, !noalias !279
  store i64 -9151314442816847872, i64* %const_str_store.repack2.i.i, align 8, !noalias !279
  call fastcc void @roc_builtins.str.repeat(%str.RocStr* noalias nocapture nonnull %result_value.i1491, %str.RocStr* nocapture nonnull readonly %const_str_store.i.i, i64 %operation_result.i.i) #11, !noalias !279
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11, !noalias !279
  br i1 %has_overflowed.i.i1500, label %throw_block.i.i1501, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i

throw_block.i.i1501:                              ; preds = %WhileBody.i.i712
  tail call fastcc void @throw_on_overflow() #11, !noalias !279
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i: ; preds = %WhileBody.i.i712
  call fastcc void @Arg_formatHelpHelp_3be6299315d35c9efc205b8b814047b2fa1b123fde69cf32b75a0d03c346ab3(i64 %operation_result.i.i1502, { [0 x i64], [3 x i64] }* %zig_helper_load_opaque.i.i708.unpack, %str.RocStr* nonnull %result_value2.i) #11, !noalias !279
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value3.i, %str.RocStr* nonnull readonly %struct_field.i, %str.RocStr* nocapture nonnull readonly %result_value2.i) #11, !noalias !279
  %load_str_to_stack.i.unpack32.i = load i64, i64* %load_str_to_stack.i.elt31.i, align 8, !noalias !279
  %is_big_str.i.i1503 = icmp sgt i64 %load_str_to_stack.i.unpack32.i, 0
  br i1 %is_big_str.i.i1503, label %modify_rc.i.i1507, label %"#Attr_#dec_4.exit.i1510"

modify_rc.i.i1507:                                ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i
  %call_builtin.i.i1504 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value2.i) #11, !noalias !279
  %get_rc_ptr.i.i1505 = getelementptr inbounds i8, i8* %call_builtin.i.i1504, i64 -8
  %70 = bitcast i8* %get_rc_ptr.i.i1505 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !279
  %.not.i.i.i.i.i1506 = icmp eq i64 %71, 0
  br i1 %.not.i.i.i.i.i1506, label %"#Attr_#dec_4.exit.i1510", label %Then.i.i.i.i.i1508

Then.i.i.i.i.i1508:                               ; preds = %modify_rc.i.i1507
  %72 = add i64 %71, -1
  store i64 %72, i64* %70, align 8, !noalias !279
  %73 = icmp eq i64 %71, -9223372036854775808
  br i1 %73, label %Then1.i.i.i.i.i1509, label %"#Attr_#dec_4.exit.i1510"

Then1.i.i.i.i.i1509:                              ; preds = %Then.i.i.i.i.i1508
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i1505, i32 8) #11, !noalias !279
  br label %"#Attr_#dec_4.exit.i1510"

"#Attr_#dec_4.exit.i1510":                        ; preds = %Then1.i.i.i.i.i1509, %Then.i.i.i.i.i1508, %modify_rc.i.i1507, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value4.i, %str.RocStr* nonnull readonly %result_value.i1491, %str.RocStr* nocapture nonnull readonly %result_value3.i) #11, !noalias !279
  %load_str_to_stack.i10.unpack37.i = load i64, i64* %load_str_to_stack.i10.elt36.i, align 8, !noalias !279
  %is_big_str.i12.i = icmp sgt i64 %load_str_to_stack.i10.unpack37.i, 0
  br i1 %is_big_str.i12.i, label %modify_rc.i17.i, label %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit

modify_rc.i17.i:                                  ; preds = %"#Attr_#dec_4.exit.i1510"
  %call_builtin.i13.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value3.i) #11, !noalias !279
  %get_rc_ptr.i15.i = getelementptr inbounds i8, i8* %call_builtin.i13.i, i64 -8
  %74 = bitcast i8* %get_rc_ptr.i15.i to i64*
  %75 = load i64, i64* %74, align 8, !noalias !279
  %.not.i.i.i.i16.i = icmp eq i64 %75, 0
  br i1 %.not.i.i.i.i16.i, label %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit, label %Then.i.i.i.i18.i

Then.i.i.i.i18.i:                                 ; preds = %modify_rc.i17.i
  %76 = add i64 %75, -1
  store i64 %76, i64* %74, align 8, !noalias !279
  %77 = icmp eq i64 %75, -9223372036854775808
  br i1 %77, label %Then1.i.i.i.i19.i, label %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit

Then1.i.i.i.i19.i:                                ; preds = %Then.i.i.i.i18.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i15.i, i32 8) #11, !noalias !279
  br label %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit

Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit: ; preds = %"#Attr_#dec_4.exit.i1510", %modify_rc.i17.i, %Then.i.i.i.i18.i, %Then1.i.i.i.i19.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i6891759, i8* noundef nonnull align 8 dereferenceable(24) %result_value4.i.0.sroa_cast, i64 24, i1 false) #11, !noalias !279
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value4.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %69, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i689.0.sroa_cast, i64 24, i1 false) #11, !noalias !279
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.i689.0.sroa_cast)
  %78 = add nuw i64 %i.010.i.i706, 1
  %exitcond.not.i.i711 = icmp eq i64 %78, %load_at_index_ptr_old.unpack128
  br i1 %exitcond.not.i.i711, label %roc_builtins.list.map.exit.i736, label %WhileBody.i.i712

roc_builtins.list.map.exit.i736:                  ; preds = %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit, %joinpointcont
  %list_alloca.i692.sroa.7.0 = phi i64 [ 0, %joinpointcont ], [ %..i.i.i.i.i703, %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit ]
  %list_alloca.i692.sroa.5.0 = phi i64 [ 0, %joinpointcont ], [ %load_at_index_ptr_old.unpack128, %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit ]
  %list_alloca.i692.sroa.0.0 = phi i8* [ null, %joinpointcont ], [ %57, %Arg_formatSubCommand_62ffc952b23b6eec7e07d773875ae83084bb5b16f3c21f4f9c4c6c87413f.exit ]
  %79 = ptrtoint i8* %load_at_index_ptr_old.unpack to i64
  %80 = shl i64 %load_at_index_ptr_old.unpack130, 1
  %.not.i.i.i734 = icmp slt i64 %load_at_index_ptr_old.unpack130, 0
  %81 = select i1 %.not.i.i.i734, i64 %80, i64 %79
  %.not.i19.i735 = icmp eq i64 %81, 0
  br i1 %.not.i19.i735, label %List_map_2949ea5dc24c62f1aef69a7b91b37210ec5654278486cb97595b787c312bc99.exit, label %OptionalThen.i21.i738

OptionalThen.i21.i738:                            ; preds = %roc_builtins.list.map.exit.i736
  %82 = inttoptr i64 %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 -8
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %.not.i.i20.i737 = icmp eq i64 %85, 0
  br i1 %.not.i.i20.i737, label %List_map_2949ea5dc24c62f1aef69a7b91b37210ec5654278486cb97595b787c312bc99.exit, label %Then.i.i.i739

Then.i.i.i739:                                    ; preds = %OptionalThen.i21.i738
  %86 = add i64 %85, -1
  store i64 %86, i64* %84, align 8
  %87 = icmp eq i64 %85, -9223372036854775808
  br i1 %87, label %Then1.i.i.i740, label %List_map_2949ea5dc24c62f1aef69a7b91b37210ec5654278486cb97595b787c312bc99.exit

Then1.i.i.i740:                                   ; preds = %Then.i.i.i739
  tail call void @roc_dealloc(i8* %83, i32 8) #11
  br label %List_map_2949ea5dc24c62f1aef69a7b91b37210ec5654278486cb97595b787c312bc99.exit

List_map_2949ea5dc24c62f1aef69a7b91b37210ec5654278486cb97595b787c312bc99.exit: ; preds = %roc_builtins.list.map.exit.i736, %OptionalThen.i21.i738, %Then.i.i.i739, %Then1.i.i.i740
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* inttoptr (i64 2570 to i8*), i8** %const_str_store.repack, align 8
  %const_str_store.repack132 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 0, i64* %const_str_store.repack132, align 8
  %const_str_store.repack133 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store.repack133, align 8
  %88 = bitcast %list.RocList* %list_alloca.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88)
  %list_alloca.repack.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i, i64 0, i32 0
  store i8* %list_alloca.i692.sroa.0.0, i8** %list_alloca.repack.i, align 8
  %list_alloca.repack1.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i, i64 0, i32 1
  store i64 %list_alloca.i692.sroa.5.0, i64* %list_alloca.repack1.i, align 8
  %list_alloca.repack3.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i, i64 0, i32 2
  store i64 %list_alloca.i692.sroa.7.0, i64* %list_alloca.repack3.i, align 8
  call fastcc void @roc_builtins.str.joinWith(%str.RocStr* noalias nocapture nonnull %result_value26, %list.RocList* nocapture nonnull readonly %list_alloca.i, %str.RocStr* nocapture nonnull readonly %const_str_store) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88)
  %89 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89)
  %"cap > 0.not.i1081" = icmp eq i64 %list_alloca.i692.sroa.7.0, 0
  br i1 %"cap > 0.not.i1081", label %"#Attr_#dec_4.exit163", label %modification_list_block.i1084

modification_list_block.i1084:                    ; preds = %List_map_2949ea5dc24c62f1aef69a7b91b37210ec5654278486cb97595b787c312bc99.exit
  %cast_basic_basic.i1082 = bitcast i8* %list_alloca.i692.sroa.0.0 to %str.RocStr*
  %bounds_check.not.i1083 = icmp eq i64 %list_alloca.i692.sroa.5.0, 0
  br i1 %bounds_check.not.i1083, label %after_loop.i1101, label %loop.preheader.i1085

loop.preheader.i1085:                             ; preds = %modification_list_block.i1084
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i1089

loop.i1089:                                       ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i1085
  %next_index12.i = phi i64 [ 0, %loop.preheader.i1085 ], [ %next_index.i1086, %"#Attr_#dec_4.exit.i" ]
  %next_index.i1086 = add nuw i64 %next_index12.i, 1
  %load_index.i1087 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i1082, i64 %next_index12.i
  %90 = bitcast %str.RocStr* %load_index.i1087 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %89, i8* noundef nonnull align 8 dereferenceable(24) %90, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i1088 = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i1088, label %modify_rc.i.i1093, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i1093:                                ; preds = %loop.i1089
  %call_builtin.i.i1090 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i1091 = getelementptr inbounds i8, i8* %call_builtin.i.i1090, i64 -8
  %91 = bitcast i8* %get_rc_ptr.i.i1091 to i64*
  %92 = load i64, i64* %91, align 8
  %.not.i.i.i.i.i1092 = icmp eq i64 %92, 0
  br i1 %.not.i.i.i.i.i1092, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i1094

Then.i.i.i.i.i1094:                               ; preds = %modify_rc.i.i1093
  %93 = add i64 %92, -1
  store i64 %93, i64* %91, align 8
  %94 = icmp eq i64 %92, -9223372036854775808
  br i1 %94, label %Then1.i.i.i.i.i1095, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i1095:                              ; preds = %Then.i.i.i.i.i1094
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i1091, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i1095, %Then.i.i.i.i.i1094, %modify_rc.i.i1093, %loop.i1089
  %exitcond.not = icmp eq i64 %next_index.i1086, %list_alloca.i692.sroa.5.0
  br i1 %exitcond.not, label %after_loop.i1101, label %loop.i1089

after_loop.i1101:                                 ; preds = %"#Attr_#dec_4.exit.i", %modification_list_block.i1084
  %95 = ptrtoint i8* %list_alloca.i692.sroa.0.0 to i64
  %96 = shl i64 %list_alloca.i692.sroa.7.0, 1
  %.not.i.i.i1097 = icmp slt i64 %list_alloca.i692.sroa.7.0, 0
  %97 = select i1 %.not.i.i.i1097, i64 %96, i64 %95
  %as_usize_ptr.i1098 = inttoptr i64 %97 to i64*
  %get_rc_ptr.i1099 = getelementptr inbounds i64, i64* %as_usize_ptr.i1098, i64 -1
  %98 = load i64, i64* %get_rc_ptr.i1099, align 8
  %.not.i.i.i.i1100 = icmp eq i64 %98, 0
  br i1 %.not.i.i.i.i1100, label %"#Attr_#dec_4.exit163", label %Then.i.i.i.i1102

Then.i.i.i.i1102:                                 ; preds = %after_loop.i1101
  %99 = add i64 %98, -1
  store i64 %99, i64* %get_rc_ptr.i1099, align 8
  %100 = icmp eq i64 %98, -9223372036854775808
  br i1 %100, label %Then1.i.i.i.i1103, label %"#Attr_#dec_4.exit163"

Then1.i.i.i.i1103:                                ; preds = %Then.i.i.i.i1102
  %101 = bitcast i64* %get_rc_ptr.i1099 to i8*
  tail call void @roc_dealloc(i8* %101, i32 8) #11
  br label %"#Attr_#dec_4.exit163"

"#Attr_#dec_4.exit163":                           ; preds = %Then1.i.i.i.i1103, %Then.i.i.i.i1102, %after_loop.i1101, %List_map_2949ea5dc24c62f1aef69a7b91b37210ec5654278486cb97595b787c312bc99.exit
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89)
  %const_str_store27.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27, i64 0, i32 0
  store i8* inttoptr (i64 10 to i8*), i8** %const_str_store27.repack, align 8
  %const_str_store27.repack134 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27, i64 0, i32 1
  store i64 0, i64* %const_str_store27.repack134, align 8
  %const_str_store27.repack135 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store27, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store27.repack135, align 8
  %const_str_store28.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store28, i64 0, i32 0
  store i8* inttoptr (i64 6000006645941096259 to i8*), i8** %const_str_store28.repack, align 8
  %const_str_store28.repack136 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store28, i64 0, i32 1
  store i64 2618, i64* %const_str_store28.repack136, align 8
  %const_str_store28.repack137 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store28, i64 0, i32 2
  store i64 -8502796096475496448, i64* %const_str_store28.repack137, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value29, %str.RocStr* nonnull readonly %const_str_store28, %str.RocStr* nocapture nonnull readonly %result_value26) #11
  %load_str_to_stack.i165.elt1032 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value26, i64 0, i32 2
  %load_str_to_stack.i165.unpack1033 = load i64, i64* %load_str_to_stack.i165.elt1032, align 8
  %is_big_str.i167 = icmp sgt i64 %load_str_to_stack.i165.unpack1033, 0
  br i1 %is_big_str.i167, label %modify_rc.i172, label %"#Attr_#dec_4.exit176"

modify_rc.i172:                                   ; preds = %"#Attr_#dec_4.exit163"
  %call_builtin.i168 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value26) #11
  %get_rc_ptr.i170 = getelementptr inbounds i8, i8* %call_builtin.i168, i64 -8
  %102 = bitcast i8* %get_rc_ptr.i170 to i64*
  %103 = load i64, i64* %102, align 8
  %.not.i.i.i.i171 = icmp eq i64 %103, 0
  br i1 %.not.i.i.i.i171, label %"#Attr_#dec_4.exit176", label %Then.i.i.i.i173

Then.i.i.i.i173:                                  ; preds = %modify_rc.i172
  %104 = add i64 %103, -1
  store i64 %104, i64* %102, align 8
  %105 = icmp eq i64 %103, -9223372036854775808
  br i1 %105, label %Then1.i.i.i.i174, label %"#Attr_#dec_4.exit176"

Then1.i.i.i.i174:                                 ; preds = %Then.i.i.i.i173
  tail call void @roc_dealloc(i8* %get_rc_ptr.i170, i32 8) #11
  br label %"#Attr_#dec_4.exit176"

"#Attr_#dec_4.exit176":                           ; preds = %modify_rc.i172, %Then.i.i.i.i173, %Then1.i.i.i.i174, %"#Attr_#dec_4.exit163"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value30, %str.RocStr* nonnull readonly %result_value, %str.RocStr* nocapture nonnull readonly %result_value29) #11
  %load_str_to_stack.i178.elt1037 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value29, i64 0, i32 2
  %load_str_to_stack.i178.unpack1038 = load i64, i64* %load_str_to_stack.i178.elt1037, align 8
  %is_big_str.i180 = icmp sgt i64 %load_str_to_stack.i178.unpack1038, 0
  br i1 %is_big_str.i180, label %modify_rc.i185, label %"#Attr_#dec_4.exit189"

modify_rc.i185:                                   ; preds = %"#Attr_#dec_4.exit176"
  %call_builtin.i181 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value29) #11
  %get_rc_ptr.i183 = getelementptr inbounds i8, i8* %call_builtin.i181, i64 -8
  %106 = bitcast i8* %get_rc_ptr.i183 to i64*
  %107 = load i64, i64* %106, align 8
  %.not.i.i.i.i184 = icmp eq i64 %107, 0
  br i1 %.not.i.i.i.i184, label %"#Attr_#dec_4.exit189", label %Then.i.i.i.i186

Then.i.i.i.i186:                                  ; preds = %modify_rc.i185
  %108 = add i64 %107, -1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %107, -9223372036854775808
  br i1 %109, label %Then1.i.i.i.i187, label %"#Attr_#dec_4.exit189"

Then1.i.i.i.i187:                                 ; preds = %Then.i.i.i.i186
  tail call void @roc_dealloc(i8* %get_rc_ptr.i183, i32 8) #11
  br label %"#Attr_#dec_4.exit189"

"#Attr_#dec_4.exit189":                           ; preds = %modify_rc.i185, %Then.i.i.i.i186, %Then1.i.i.i.i187, %"#Attr_#dec_4.exit176"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value31, %str.RocStr* nonnull readonly %const_str_store27, %str.RocStr* nocapture nonnull readonly %result_value30) #11
  %110 = bitcast %str.RocStr* %result_value31 to i8*
  %load_str_to_stack.i191.elt1042 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value30, i64 0, i32 2
  %load_str_to_stack.i191.unpack1043 = load i64, i64* %load_str_to_stack.i191.elt1042, align 8
  %is_big_str.i193 = icmp sgt i64 %load_str_to_stack.i191.unpack1043, 0
  br i1 %is_big_str.i193, label %modify_rc.i198, label %common.ret

modify_rc.i198:                                   ; preds = %"#Attr_#dec_4.exit189"
  %call_builtin.i194 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value30) #11
  %get_rc_ptr.i196 = getelementptr inbounds i8, i8* %call_builtin.i194, i64 -8
  %111 = bitcast i8* %get_rc_ptr.i196 to i64*
  %112 = load i64, i64* %111, align 8
  %.not.i.i.i.i197 = icmp eq i64 %112, 0
  br i1 %.not.i.i.i.i197, label %common.ret, label %Then.i.i.i.i199

Then.i.i.i.i199:                                  ; preds = %modify_rc.i198
  %113 = add i64 %112, -1
  store i64 %113, i64* %111, align 8
  %114 = icmp eq i64 %112, -9223372036854775808
  br i1 %114, label %common.ret.sink.split, label %common.ret

then_block52:                                     ; preds = %"#Attr_#inc_20.exit"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %34)
  br label %joinpointcont41

then68:                                           ; preds = %"#Attr_#inc_20.exit"
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.sroa.0.i.0.sroa_cast)
  br i1 %"cap > 0.not.i", label %"#Attr_#inc_20.exit1182", label %modification_list_block.i1113

modification_list_block.i1113:                    ; preds = %then68
  %cast_basic_basic.i1111 = bitcast i8* %load_at_index_ptr_old40.unpack to { [0 x i64], [10 x i64], i8, [7 x i8] }*
  %bounds_check.not.i1112 = icmp eq i64 %load_at_index_ptr_old40.unpack107, 0
  br i1 %bounds_check.not.i1112, label %after_loop.i1180, label %loop.preheader.i1124

loop.preheader.i1124:                             ; preds = %modification_list_block.i1113
  %115 = bitcast %str.RocStr* %struct_field1.i.i.i1107 to i8*
  %116 = bitcast %str.RocStr* %struct_field.i.i.i1108 to i8*
  %load_str_to_stack.i.i.i.elt7.i1115 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i1108, i64 0, i32 2
  %incrementing_element_loop_load.sroa.0.24.sroa_idx.i1116 = getelementptr inbounds [10 x i64], [10 x i64]* %incrementing_element_loop_load.sroa.0.i, i64 0, i64 3
  %incrementing_element_loop_load.sroa.0.24.sroa_cast.i1117 = bitcast i64* %incrementing_element_loop_load.sroa.0.24.sroa_idx.i1116 to i8*
  %load_str_to_stack.i2.i.i.elt12.i1118 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i1107, i64 0, i32 2
  %117 = bitcast %str.RocStr* %struct_field2.i.i1104 to i8*
  %118 = bitcast %str.RocStr* %struct_field1.i.i1105 to i8*
  %119 = bitcast %str.RocStr* %struct_field.i.i1106 to i8*
  %load_str_to_stack.i.i.elt17.i1119 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1106, i64 0, i32 2
  %load_str_to_stack.i3.i.elt22.i1120 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i1105, i64 0, i32 2
  %incrementing_element_loop_load.sroa.0.48.sroa_idx.i1121 = getelementptr inbounds [10 x i64], [10 x i64]* %incrementing_element_loop_load.sroa.0.i, i64 0, i64 6
  %incrementing_element_loop_load.sroa.0.48.sroa_cast.i1122 = bitcast i64* %incrementing_element_loop_load.sroa.0.48.sroa_idx.i1121 to i8*
  %load_str_to_stack.i13.i.elt27.i1123 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i.i1104, i64 0, i32 2
  br label %loop.i1131

loop.i1131:                                       ; preds = %"#Attr_#inc_8.exit.i1175", %loop.preheader.i1124
  %index.i1125 = phi i64 [ 0, %loop.preheader.i1124 ], [ %next_index.i1126, %"#Attr_#inc_8.exit.i1175" ]
  %next_index.i1126 = add nuw i64 %index.i1125, 1
  %load_index.i1127 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %cast_basic_basic.i1111, i64 %index.i1125
  %incrementing_element_loop_load.sroa.0.0..sroa_cast.i1128 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %load_index.i1127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %incrementing_element_loop_load.sroa.0.i.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %incrementing_element_loop_load.sroa.0.0..sroa_cast.i1128, i64 80, i1 false) #11
  %incrementing_element_loop_load.sroa.6.0..sroa_idx.i1129 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %cast_basic_basic.i1111, i64 %index.i1125, i32 2
  %incrementing_element_loop_load.sroa.6.0.copyload.i1130 = load i8, i8* %incrementing_element_loop_load.sroa.6.0..sroa_idx.i1129, align 8
  switch i8 %incrementing_element_loop_load.sroa.6.0.copyload.i1130, label %"#Attr_#inc_8.exit.i1175" [
    i8 0, label %tag_id_modify.i.i1134
    i8 1, label %tag_id_modify1.i.i1159
  ]

tag_id_modify.i.i1134:                            ; preds = %loop.i1131
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %119, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.0..sroa_cast.i1128, i64 24, i1 false) #11
  %load_str_to_stack.i.i.unpack18.i1132 = load i64, i64* %load_str_to_stack.i.i.elt17.i1119, align 8
  %is_big_str.i.i.i1133 = icmp sgt i64 %load_str_to_stack.i.i.unpack18.i1132, 0
  br i1 %is_big_str.i.i.i1133, label %modify_rc.i.i.i1138, label %"#Attr_#inc_4.exit.i.i1142"

modify_rc.i.i.i1138:                              ; preds = %tag_id_modify.i.i1134
  %call_builtin.i.i.i1135 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1106) #11
  %get_rc_ptr.i.i.i1136 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1135, i64 -8
  %120 = bitcast i8* %get_rc_ptr.i.i.i1136 to i64*
  %121 = load i64, i64* %120, align 8
  %.not.i.i.i.i1137 = icmp eq i64 %121, 0
  br i1 %.not.i.i.i.i1137, label %"#Attr_#inc_4.exit.i.i1142", label %Then.i.i.i.i1139

Then.i.i.i.i1139:                                 ; preds = %modify_rc.i.i.i1138
  %122 = add nsw i64 %121, 1
  store i64 %122, i64* %120, align 8
  br label %"#Attr_#inc_4.exit.i.i1142"

"#Attr_#inc_4.exit.i.i1142":                      ; preds = %Then.i.i.i.i1139, %modify_rc.i.i.i1138, %tag_id_modify.i.i1134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %118, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.24.sroa_cast.i1117, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.unpack23.i1140 = load i64, i64* %load_str_to_stack.i3.i.elt22.i1120, align 8
  %is_big_str.i5.i.i1141 = icmp sgt i64 %load_str_to_stack.i3.i.unpack23.i1140, 0
  br i1 %is_big_str.i5.i.i1141, label %modify_rc.i10.i.i1146, label %"#Attr_#inc_4.exit12.i.i1150"

modify_rc.i10.i.i1146:                            ; preds = %"#Attr_#inc_4.exit.i.i1142"
  %call_builtin.i6.i.i1143 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i1105) #11
  %get_rc_ptr.i8.i.i1144 = getelementptr inbounds i8, i8* %call_builtin.i6.i.i1143, i64 -8
  %123 = bitcast i8* %get_rc_ptr.i8.i.i1144 to i64*
  %124 = load i64, i64* %123, align 8
  %.not.i.i9.i.i1145 = icmp eq i64 %124, 0
  br i1 %.not.i.i9.i.i1145, label %"#Attr_#inc_4.exit12.i.i1150", label %Then.i.i11.i.i1147

Then.i.i11.i.i1147:                               ; preds = %modify_rc.i10.i.i1146
  %125 = add nsw i64 %124, 1
  store i64 %125, i64* %123, align 8
  br label %"#Attr_#inc_4.exit12.i.i1150"

"#Attr_#inc_4.exit12.i.i1150":                    ; preds = %Then.i.i11.i.i1147, %modify_rc.i10.i.i1146, %"#Attr_#inc_4.exit.i.i1142"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %117, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.48.sroa_cast.i1122, i64 24, i1 false) #11
  %load_str_to_stack.i13.i.unpack28.i1148 = load i64, i64* %load_str_to_stack.i13.i.elt27.i1123, align 8
  %is_big_str.i15.i.i1149 = icmp sgt i64 %load_str_to_stack.i13.i.unpack28.i1148, 0
  br i1 %is_big_str.i15.i.i1149, label %modify_rc.i20.i.i1154, label %"#Attr_#inc_3.exit.i1156"

modify_rc.i20.i.i1154:                            ; preds = %"#Attr_#inc_4.exit12.i.i1150"
  %call_builtin.i16.i.i1151 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i.i1104) #11
  %get_rc_ptr.i18.i.i1152 = getelementptr inbounds i8, i8* %call_builtin.i16.i.i1151, i64 -8
  %126 = bitcast i8* %get_rc_ptr.i18.i.i1152 to i64*
  %127 = load i64, i64* %126, align 8
  %.not.i.i19.i.i1153 = icmp eq i64 %127, 0
  br i1 %.not.i.i19.i.i1153, label %"#Attr_#inc_3.exit.i1156", label %Then.i.i21.i.i1155

Then.i.i21.i.i1155:                               ; preds = %modify_rc.i20.i.i1154
  %128 = add nsw i64 %127, 1
  store i64 %128, i64* %126, align 8
  br label %"#Attr_#inc_3.exit.i1156"

"#Attr_#inc_3.exit.i1156":                        ; preds = %Then.i.i21.i.i1155, %modify_rc.i20.i.i1154, %"#Attr_#inc_4.exit12.i.i1150"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #11
  br label %"#Attr_#inc_8.exit.i1175"

tag_id_modify1.i.i1159:                           ; preds = %loop.i1131
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %116, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.0..sroa_cast.i1128, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.unpack8.i1157 = load i64, i64* %load_str_to_stack.i.i.i.elt7.i1115, align 8
  %is_big_str.i.i.i.i1158 = icmp sgt i64 %load_str_to_stack.i.i.i.unpack8.i1157, 0
  br i1 %is_big_str.i.i.i.i1158, label %modify_rc.i.i.i.i1163, label %"#Attr_#inc_4.exit.i.i.i1167"

modify_rc.i.i.i.i1163:                            ; preds = %tag_id_modify1.i.i1159
  %call_builtin.i.i.i.i1160 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i1108) #11
  %get_rc_ptr.i.i.i.i1161 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i1160, i64 -8
  %129 = bitcast i8* %get_rc_ptr.i.i.i.i1161 to i64*
  %130 = load i64, i64* %129, align 8
  %.not.i.i.i.i.i1162 = icmp eq i64 %130, 0
  br i1 %.not.i.i.i.i.i1162, label %"#Attr_#inc_4.exit.i.i.i1167", label %Then.i.i.i.i.i1164

Then.i.i.i.i.i1164:                               ; preds = %modify_rc.i.i.i.i1163
  %131 = add nsw i64 %130, 1
  store i64 %131, i64* %129, align 8
  br label %"#Attr_#inc_4.exit.i.i.i1167"

"#Attr_#inc_4.exit.i.i.i1167":                    ; preds = %Then.i.i.i.i.i1164, %modify_rc.i.i.i.i1163, %tag_id_modify1.i.i1159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %115, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.24.sroa_cast.i1117, i64 24, i1 false) #11
  %load_str_to_stack.i2.i.i.unpack13.i1165 = load i64, i64* %load_str_to_stack.i2.i.i.elt12.i1118, align 8
  %is_big_str.i4.i.i.i1166 = icmp sgt i64 %load_str_to_stack.i2.i.i.unpack13.i1165, 0
  br i1 %is_big_str.i4.i.i.i1166, label %modify_rc.i9.i.i.i1171, label %"#Attr_#inc_5.exit.i.i1173"

modify_rc.i9.i.i.i1171:                           ; preds = %"#Attr_#inc_4.exit.i.i.i1167"
  %call_builtin.i5.i.i.i1168 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i1107) #11
  %get_rc_ptr.i7.i.i.i1169 = getelementptr inbounds i8, i8* %call_builtin.i5.i.i.i1168, i64 -8
  %132 = bitcast i8* %get_rc_ptr.i7.i.i.i1169 to i64*
  %133 = load i64, i64* %132, align 8
  %.not.i.i8.i.i.i1170 = icmp eq i64 %133, 0
  br i1 %.not.i.i8.i.i.i1170, label %"#Attr_#inc_5.exit.i.i1173", label %Then.i.i10.i.i.i1172

Then.i.i10.i.i.i1172:                             ; preds = %modify_rc.i9.i.i.i1171
  %134 = add nsw i64 %133, 1
  store i64 %134, i64* %132, align 8
  br label %"#Attr_#inc_5.exit.i.i1173"

"#Attr_#inc_5.exit.i.i1173":                      ; preds = %Then.i.i10.i.i.i1172, %modify_rc.i9.i.i.i1171, %"#Attr_#inc_4.exit.i.i.i1167"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #11
  br label %"#Attr_#inc_8.exit.i1175"

"#Attr_#inc_8.exit.i1175":                        ; preds = %"#Attr_#inc_5.exit.i.i1173", %"#Attr_#inc_3.exit.i1156", %loop.i1131
  %exitcond1679.not = icmp eq i64 %next_index.i1126, %load_at_index_ptr_old40.unpack107
  br i1 %exitcond1679.not, label %after_loop.i1180, label %loop.i1131

after_loop.i1180:                                 ; preds = %"#Attr_#inc_8.exit.i1175", %modification_list_block.i1113
  %135 = ptrtoint i8* %load_at_index_ptr_old40.unpack to i64
  %136 = shl i64 %load_at_index_ptr_old40.unpack109, 1
  %.not.i.i.i1176 = icmp slt i64 %load_at_index_ptr_old40.unpack109, 0
  %137 = select i1 %.not.i.i.i1176, i64 %136, i64 %135
  %as_usize_ptr.i1177 = inttoptr i64 %137 to i64*
  %get_rc_ptr.i1178 = getelementptr inbounds i64, i64* %as_usize_ptr.i1177, i64 -1
  %138 = load i64, i64* %get_rc_ptr.i1178, align 8
  %.not.i.i1179 = icmp eq i64 %138, 0
  br i1 %.not.i.i1179, label %"#Attr_#inc_20.exit1182thread-pre-split", label %Then.i.i1181

Then.i.i1181:                                     ; preds = %after_loop.i1180
  %139 = add nsw i64 %138, 1
  store i64 %139, i64* %get_rc_ptr.i1178, align 8
  br label %"#Attr_#inc_20.exit1182thread-pre-split"

"#Attr_#inc_20.exit1182thread-pre-split":         ; preds = %Then.i.i1181, %after_loop.i1180
  %.pr = load i64, i64* %34, align 8
  br label %"#Attr_#inc_20.exit1182"

"#Attr_#inc_20.exit1182":                         ; preds = %"#Attr_#inc_20.exit1182thread-pre-split", %then68
  %140 = phi i64 [ %.pr, %"#Attr_#inc_20.exit1182thread-pre-split" ], [ %get_refcount49, %then68 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.sroa.0.i.0.sroa_cast)
  %.not.i.i.i203 = icmp eq i64 %140, 0
  br i1 %.not.i.i.i203, label %joinpointcont41, label %Then.i.i.i204

Then.i.i.i204:                                    ; preds = %"#Attr_#inc_20.exit1182"
  %141 = add i64 %140, -1
  store i64 %141, i64* %34, align 8
  %142 = icmp eq i64 %140, -9223372036854775808
  br i1 %142, label %Then1.i.i.i205, label %joinpointcont41

Then1.i.i.i205:                                   ; preds = %Then.i.i.i204
  tail call void @roc_dealloc(i8* %get_rc_ptr48, i32 8) #11
  br label %joinpointcont41

joinpointcont41:                                  ; preds = %Then1.i.i.i205, %Then.i.i.i204, %"#Attr_#inc_20.exit1182", %then_block52
  %143 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %143) #11
  %cast_basic_basic.i.i.i.i.i = bitcast i8* %load_at_index_ptr_old40.unpack to { [0 x i64], [10 x i64], i8, [7 x i8] }*
  %tag_id_ptr.i.i.i.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i, i64 0, i32 2
  %field_ptr2.i.i.i.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i, i64 0, i32 1
  %144 = bitcast %str.RocStr* %struct_field1.i.i.i.i.i.i to i8*
  %145 = bitcast %str.RocStr* %struct_field.i.i.i.i.i.i to i8*
  %146 = bitcast [10 x i64]* %field_ptr2.i.i.i.i.i to i8*
  %load_str_to_stack.i.i.i.i.i.i.i.elt979 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i.i.i.i, i64 0, i32 2
  %struct_field_access_record_1.i.i.i.i.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i, i64 0, i32 1, i64 3
  %147 = bitcast i64* %struct_field_access_record_1.i.i.i.i.i.i to i8*
  %load_str_to_stack.i2.i.i.i.i.i.i.elt984 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i.i.i.i, i64 0, i32 2
  %148 = bitcast %str.RocStr* %struct_field2.i.i.i.i.i to i8*
  %149 = bitcast %str.RocStr* %struct_field1.i.i.i.i.i to i8*
  %150 = bitcast %str.RocStr* %struct_field.i.i.i.i.i to i8*
  %load_str_to_stack.i.i.i.i.i.i.elt1004 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i.i.i, i64 0, i32 2
  %load_str_to_stack.i3.i.i.i.i.i.elt1009 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i.i.i, i64 0, i32 2
  %struct_field_access_record_2.i.i.i.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i, i64 0, i32 1, i64 6
  %151 = bitcast i64* %struct_field_access_record_2.i.i.i.i.i to i8*
  %load_str_to_stack.i13.i.i.i.i.i.elt1014 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i.i.i.i.i, i64 0, i32 2
  %152 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i.i to i8*
  %tag_id_ptr.i.i.i.i.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i.i, i64 0, i32 2
  %get_opaque_data_ptr.i.i.i.i.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i.i, i64 0, i32 1
  %153 = bitcast [10 x i64]* %get_opaque_data_ptr.i.i.i.i.i.i to i8*
  %element_to_pass_as_opaque.i.i.i.i.i.i.i.i.0.sroa_cast1629 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %element_to_pass_as_opaque.i.i.i.i.i.i.i.i to i8*
  %lt_uint.i.i.i.i.i1666.not = icmp eq i64 %load_at_index_ptr_old40.unpack107, 0
  br i1 %lt_uint.i.i.i.i.i1666.not, label %Arg_filterMap_54ac5f7b52c5e6ef3555cdf974e2718e338458f36e767a8b6bc4a9bb8cd9bb.exit, label %then_block.i.i.i.i

then_block.i.i.i.i:                               ; preds = %joinpointcont41, %List_walkHelp_873a6992c5f2b18d14a1f5c43afac180bb9ecc302c7d3ade5d19317a96e17c.exit.i.i.i.i
  %joinpointarg3.i.i.i.i1668 = phi i64 [ %call.i.i.i.i.i1661, %List_walkHelp_873a6992c5f2b18d14a1f5c43afac180bb9ecc302c7d3ade5d19317a96e17c.exit.i.i.i.i ], [ 0, %joinpointcont41 ]
  %joinpointarg1.i.i.i.i1667 = phi %list.RocList [ %common.ret.op.i.i.i.i.i.i, %List_walkHelp_873a6992c5f2b18d14a1f5c43afac180bb9ecc302c7d3ade5d19317a96e17c.exit.i.i.i.i ], [ zeroinitializer, %joinpointcont41 ]
  %list_get_element.i.i.i.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %cast_basic_basic.i.i.i.i.i, i64 %joinpointarg3.i.i.i.i1668
  %154 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %list_get_element.i.i.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %143, i8* noundef nonnull align 8 dereferenceable(88) %154, i64 88, i1 false) #11
  %load_tag_id.i.i.i.i.i = load i8, i8* %tag_id_ptr.i.i.i.i.i, align 8
  switch i8 %load_tag_id.i.i.i.i.i, label %"#Attr_#inc_8.exit.i.i.i.i" [
    i8 0, label %tag_id_modify.i.i.i.i.i
    i8 1, label %tag_id_modify1.i.i.i.i.i
  ]

tag_id_modify.i.i.i.i.i:                          ; preds = %then_block.i.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %150, i8* noundef nonnull align 8 dereferenceable(24) %146, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.i.i.i.unpack1005 = load i64, i64* %load_str_to_stack.i.i.i.i.i.i.elt1004, align 8
  %is_big_str.i.i.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.i.i.i.unpack1005, 0
  br i1 %is_big_str.i.i.i.i.i.i, label %modify_rc.i.i.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i.i.i"

modify_rc.i.i.i.i.i.i:                            ; preds = %tag_id_modify.i.i.i.i.i
  %call_builtin.i.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i.i.i) #11
  %get_rc_ptr.i.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i.i, i64 -8
  %155 = bitcast i8* %get_rc_ptr.i.i.i.i.i.i to i64*
  %156 = load i64, i64* %155, align 8
  %.not.i.i.i.i.i.i.i = icmp eq i64 %156, 0
  br i1 %.not.i.i.i.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i.i.i", label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %modify_rc.i.i.i.i.i.i
  %157 = add nsw i64 %156, 1
  store i64 %157, i64* %155, align 8
  br label %"#Attr_#inc_4.exit.i.i.i.i.i"

"#Attr_#inc_4.exit.i.i.i.i.i":                    ; preds = %Then.i.i.i.i.i.i.i, %modify_rc.i.i.i.i.i.i, %tag_id_modify.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %149, i8* noundef nonnull align 8 dereferenceable(24) %147, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.i.i.i.i.unpack1010 = load i64, i64* %load_str_to_stack.i3.i.i.i.i.i.elt1009, align 8
  %is_big_str.i5.i.i.i.i.i = icmp sgt i64 %load_str_to_stack.i3.i.i.i.i.i.unpack1010, 0
  br i1 %is_big_str.i5.i.i.i.i.i, label %modify_rc.i10.i.i.i.i.i, label %"#Attr_#inc_4.exit12.i.i.i.i.i"

modify_rc.i10.i.i.i.i.i:                          ; preds = %"#Attr_#inc_4.exit.i.i.i.i.i"
  %call_builtin.i6.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i.i.i) #11
  %get_rc_ptr.i8.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i6.i.i.i.i.i, i64 -8
  %158 = bitcast i8* %get_rc_ptr.i8.i.i.i.i.i to i64*
  %159 = load i64, i64* %158, align 8
  %.not.i.i9.i.i.i.i.i = icmp eq i64 %159, 0
  br i1 %.not.i.i9.i.i.i.i.i, label %"#Attr_#inc_4.exit12.i.i.i.i.i", label %Then.i.i11.i.i.i.i.i

Then.i.i11.i.i.i.i.i:                             ; preds = %modify_rc.i10.i.i.i.i.i
  %160 = add nsw i64 %159, 1
  store i64 %160, i64* %158, align 8
  br label %"#Attr_#inc_4.exit12.i.i.i.i.i"

"#Attr_#inc_4.exit12.i.i.i.i.i":                  ; preds = %Then.i.i11.i.i.i.i.i, %modify_rc.i10.i.i.i.i.i, %"#Attr_#inc_4.exit.i.i.i.i.i"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %148, i8* noundef nonnull align 8 dereferenceable(24) %151, i64 24, i1 false) #11
  %load_str_to_stack.i13.i.i.i.i.i.unpack1015 = load i64, i64* %load_str_to_stack.i13.i.i.i.i.i.elt1014, align 8
  %is_big_str.i15.i.i.i.i.i = icmp sgt i64 %load_str_to_stack.i13.i.i.i.i.i.unpack1015, 0
  br i1 %is_big_str.i15.i.i.i.i.i, label %modify_rc.i20.i.i.i.i.i, label %"#Attr_#inc_3.exit.i.i.i.i"

modify_rc.i20.i.i.i.i.i:                          ; preds = %"#Attr_#inc_4.exit12.i.i.i.i.i"
  %call_builtin.i16.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i.i.i.i.i) #11
  %get_rc_ptr.i18.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i16.i.i.i.i.i, i64 -8
  %161 = bitcast i8* %get_rc_ptr.i18.i.i.i.i.i to i64*
  %162 = load i64, i64* %161, align 8
  %.not.i.i19.i.i.i.i.i = icmp eq i64 %162, 0
  br i1 %.not.i.i19.i.i.i.i.i, label %"#Attr_#inc_3.exit.i.i.i.i", label %Then.i.i21.i.i.i.i.i

Then.i.i21.i.i.i.i.i:                             ; preds = %modify_rc.i20.i.i.i.i.i
  %163 = add nsw i64 %162, 1
  store i64 %163, i64* %161, align 8
  br label %"#Attr_#inc_3.exit.i.i.i.i"

"#Attr_#inc_3.exit.i.i.i.i":                      ; preds = %Then.i.i21.i.i.i.i.i, %modify_rc.i20.i.i.i.i.i, %"#Attr_#inc_4.exit12.i.i.i.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #11
  br label %"#Attr_#inc_8.exit.i.i.i.i"

tag_id_modify1.i.i.i.i.i:                         ; preds = %then_block.i.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %145, i8* noundef nonnull align 8 dereferenceable(24) %146, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.i.i.i.i.unpack980 = load i64, i64* %load_str_to_stack.i.i.i.i.i.i.i.elt979, align 8
  %is_big_str.i.i.i.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.i.i.i.i.unpack980, 0
  br i1 %is_big_str.i.i.i.i.i.i.i, label %modify_rc.i.i.i.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i.i.i.i"

modify_rc.i.i.i.i.i.i.i:                          ; preds = %tag_id_modify1.i.i.i.i.i
  %call_builtin.i.i.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i.i.i.i) #11
  %get_rc_ptr.i.i.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i.i.i, i64 -8
  %164 = bitcast i8* %get_rc_ptr.i.i.i.i.i.i.i to i64*
  %165 = load i64, i64* %164, align 8
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %165, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i.i.i.i", label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %modify_rc.i.i.i.i.i.i.i
  %166 = add nsw i64 %165, 1
  store i64 %166, i64* %164, align 8
  br label %"#Attr_#inc_4.exit.i.i.i.i.i.i"

"#Attr_#inc_4.exit.i.i.i.i.i.i":                  ; preds = %Then.i.i.i.i.i.i.i.i, %modify_rc.i.i.i.i.i.i.i, %tag_id_modify1.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %144, i8* noundef nonnull align 8 dereferenceable(24) %147, i64 24, i1 false) #11
  %load_str_to_stack.i2.i.i.i.i.i.i.unpack985 = load i64, i64* %load_str_to_stack.i2.i.i.i.i.i.i.elt984, align 8
  %is_big_str.i4.i.i.i.i.i.i = icmp sgt i64 %load_str_to_stack.i2.i.i.i.i.i.i.unpack985, 0
  br i1 %is_big_str.i4.i.i.i.i.i.i, label %modify_rc.i9.i.i.i.i.i.i, label %"#Attr_#inc_5.exit.i.i.i.i.i"

modify_rc.i9.i.i.i.i.i.i:                         ; preds = %"#Attr_#inc_4.exit.i.i.i.i.i.i"
  %call_builtin.i5.i.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i.i.i.i) #11
  %get_rc_ptr.i7.i.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i5.i.i.i.i.i.i, i64 -8
  %167 = bitcast i8* %get_rc_ptr.i7.i.i.i.i.i.i to i64*
  %168 = load i64, i64* %167, align 8
  %.not.i.i8.i.i.i.i.i.i = icmp eq i64 %168, 0
  br i1 %.not.i.i8.i.i.i.i.i.i, label %"#Attr_#inc_5.exit.i.i.i.i.i", label %Then.i.i10.i.i.i.i.i.i

Then.i.i10.i.i.i.i.i.i:                           ; preds = %modify_rc.i9.i.i.i.i.i.i
  %169 = add nsw i64 %168, 1
  store i64 %169, i64* %167, align 8
  br label %"#Attr_#inc_5.exit.i.i.i.i.i"

"#Attr_#inc_5.exit.i.i.i.i.i":                    ; preds = %Then.i.i10.i.i.i.i.i.i, %modify_rc.i9.i.i.i.i.i.i, %"#Attr_#inc_4.exit.i.i.i.i.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #11
  br label %"#Attr_#inc_8.exit.i.i.i.i"

"#Attr_#inc_8.exit.i.i.i.i":                      ; preds = %"#Attr_#inc_5.exit.i.i.i.i.i", %"#Attr_#inc_3.exit.i.i.i.i", %then_block.i.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %152) #11
  call fastcc void @Arg_479_74fce1fbbfe434b55a561cfe3969ef959024ec82b29090eadd4899757629b87({ [0 x i64], [10 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i, { [0 x i64], [10 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i.i.i) #11
  %load_tag_id.i.i.i.i.i.i = load i8, i8* %tag_id_ptr.i.i.i.i.i.i, align 8
  %eq_u8.i.i.i.i.i.i = icmp eq i8 %load_tag_id.i.i.i.i.i.i, 1
  br i1 %eq_u8.i.i.i.i.i.i, label %then_block.i.i.i.i.i.i, label %List_walkHelp_873a6992c5f2b18d14a1f5c43afac180bb9ecc302c7d3ade5d19317a96e17c.exit.i.i.i.i

then_block.i.i.i.i.i.i:                           ; preds = %"#Attr_#inc_8.exit.i.i.i.i"
  %"#arg1.elt.i.i.i.i.i.i.i.i" = extractvalue %list.RocList %joinpointarg1.i.i.i.i1667, 0
  %"#arg1.elt3.i.i.i.i.i.i.i.i" = extractvalue %list.RocList %joinpointarg1.i.i.i.i1667, 1
  %"#arg1.elt5.i.i.i.i.i.i.i.i" = extractvalue %list.RocList %joinpointarg1.i.i.i.i1667, 2
  %.not.i.i.i.i.i.i.i.i.i.i = icmp slt i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 0
  %170 = select i1 %.not.i.i.i.i.i.i.i.i.i.i, i64 %"#arg1.elt3.i.i.i.i.i.i.i.i", i64 %"#arg1.elt5.i.i.i.i.i.i.i.i"
  %171 = add nuw i64 %"#arg1.elt3.i.i.i.i.i.i.i.i", 1
  %.not.i.i.i.i.i.i.i.i.i.not = icmp ugt i64 %170, %"#arg1.elt3.i.i.i.i.i.i.i.i"
  br i1 %.not.i.i.i.i.i.i.i.i.i.not, label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i, label %Else.i.i.i.i.i.i.i.i.i

Else.i.i.i.i.i.i.i.i.i:                           ; preds = %then_block.i.i.i.i.i.i
  %.not.i1.i.i.i.i.i.i.i.i.i = icmp eq i8* %"#arg1.elt.i.i.i.i.i.i.i.i", null
  br i1 %.not.i1.i.i.i.i.i.i.i.i.i, label %EndIf.i27.i.i.i.i.i.i.i.i.i.i, label %OptionalThen.i.i.i.i.i.i.i.i.i.i

OptionalThen.i.i.i.i.i.i.i.i.i.i:                 ; preds = %Else.i.i.i.i.i.i.i.i.i
  %172 = icmp ne i64 %170, 0
  %173 = or i1 %.not.i.i.i.i.i.i.i.i.i.i, %172
  br i1 %173, label %list.RocList.isUnique.exit.i.i.i.i.i.i.i.i.i.i, label %Then.i.i.i.i.i.i.i.i.i.i

list.RocList.isUnique.exit.i.i.i.i.i.i.i.i.i.i:   ; preds = %OptionalThen.i.i.i.i.i.i.i.i.i.i
  %174 = getelementptr inbounds i8, i8* %"#arg1.elt.i.i.i.i.i.i.i.i", i64 -8
  %175 = bitcast i8* %174 to i64*
  %176 = load i64, i64* %175, align 8, !noalias !280
  %phi.cmp.i.i.i.i.i.i.i.i.i.i.i = icmp eq i64 %176, -9223372036854775808
  %177 = xor i1 %.not.i.i.i.i.i.i.i.i.i.i, true
  %or.cond.i.i.i.i.i.i.i.i.i.i = select i1 %phi.cmp.i.i.i.i.i.i.i.i.i.i.i, i1 %177, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i.i.i.i, label %Then.i.i.i.i.i.i.i.i.i.i, label %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i.i.i:                         ; preds = %list.RocList.isUnique.exit.i.i.i.i.i.i.i.i.i.i, %OptionalThen.i.i.i.i.i.i.i.i.i.i
  %.not21.i.i.i.i.i.i.i.i.i.i.not = icmp ugt i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", %"#arg1.elt3.i.i.i.i.i.i.i.i"
  br i1 %.not21.i.i.i.i.i.i.i.i.i.i.not, label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread, label %Else.i.i.i.i.i.i.i.i.i.i

Else.i.i.i.i.i.i.i.i.i.i:                         ; preds = %Then.i.i.i.i.i.i.i.i.i.i
  %178 = icmp eq i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 0
  br i1 %178, label %EndIf9.i.i.i.i.i.i.i.i.i.i.i, label %Else1.i.i.i.i.i.i.i.i.i.i.i

Else1.i.i.i.i.i.i.i.i.i.i.i:                      ; preds = %Else.i.i.i.i.i.i.i.i.i.i
  %179 = icmp ult i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 51
  br i1 %179, label %Then4.i.i.i.i.i.i.i.i.i.i.i, label %Else2.i.i.i.i.i.i.i.i.i.i.i

Else2.i.i.i.i.i.i.i.i.i.i.i:                      ; preds = %Else1.i.i.i.i.i.i.i.i.i.i.i
  %180 = icmp ugt i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 1638
  br i1 %180, label %Then5.i.i.i.i.i.i.i.i.i.i.i, label %Else6.i.i.i.i.i.i.i.i.i.i.i

Then4.i.i.i.i.i.i.i.i.i.i.i:                      ; preds = %Else1.i.i.i.i.i.i.i.i.i.i.i
  %181 = shl nuw nsw i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 1
  br label %EndIf9.i.i.i.i.i.i.i.i.i.i.i

Then5.i.i.i.i.i.i.i.i.i.i.i:                      ; preds = %Else2.i.i.i.i.i.i.i.i.i.i.i
  %182 = shl nuw i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 1
  br label %EndIf9.i.i.i.i.i.i.i.i.i.i.i

Else6.i.i.i.i.i.i.i.i.i.i.i:                      ; preds = %Else2.i.i.i.i.i.i.i.i.i.i.i
  %183 = mul nuw nsw i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 3
  %184 = add nuw nsw i64 %183, 1
  %185 = lshr i64 %184, 1
  br label %EndIf9.i.i.i.i.i.i.i.i.i.i.i

EndIf9.i.i.i.i.i.i.i.i.i.i.i:                     ; preds = %Else6.i.i.i.i.i.i.i.i.i.i.i, %Then5.i.i.i.i.i.i.i.i.i.i.i, %Then4.i.i.i.i.i.i.i.i.i.i.i, %Else.i.i.i.i.i.i.i.i.i.i
  %new_capacity.0.i.i.i.i.i.i.i.i.i.i.i = phi i64 [ %181, %Then4.i.i.i.i.i.i.i.i.i.i.i ], [ %182, %Then5.i.i.i.i.i.i.i.i.i.i.i ], [ %185, %Else6.i.i.i.i.i.i.i.i.i.i.i ], [ 0, %Else.i.i.i.i.i.i.i.i.i.i ]
  %186 = icmp ugt i64 %new_capacity.0.i.i.i.i.i.i.i.i.i.i.i, %171
  %..i.i.i.i.i.i.i.i.i.i.i.i = select i1 %186, i64 %new_capacity.0.i.i.i.i.i.i.i.i.i.i.i, i64 %171
  %187 = mul nuw i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 80
  %188 = mul nuw i64 %..i.i.i.i.i.i.i.i.i.i.i.i, 80
  %.not.i.i.i.i.i.i.i.i.i.i.i = icmp ult i64 %187, %188
  br i1 %.not.i.i.i.i.i.i.i.i.i.i.i, label %EndIf.i.i.i.i.i.i.i.i.i.i.i, label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread

EndIf.i.i.i.i.i.i.i.i.i.i.i:                      ; preds = %EndIf9.i.i.i.i.i.i.i.i.i.i.i
  %189 = or i64 %188, 8
  %190 = or i64 %187, 8
  %191 = getelementptr inbounds i8, i8* %"#arg1.elt.i.i.i.i.i.i.i.i", i64 -8
  %192 = tail call i8* @roc_realloc(i8* %191, i64 %189, i64 %190, i32 8) #11, !noalias !280
  %193 = getelementptr inbounds i8, i8* %192, i64 8
  br label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread

OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i:              ; preds = %list.RocList.isUnique.exit.i.i.i.i.i.i.i.i.i.i
  %194 = mul nuw i64 %171, 80
  %195 = or i64 %194, 8
  %196 = tail call i8* @roc_alloc(i64 %195, i32 8) #11, !noalias !285
  %197 = icmp ne i8* %196, null
  tail call void @llvm.assume(i1 %197) #11
  %198 = getelementptr inbounds i8, i8* %196, i64 8
  %199 = bitcast i8* %196 to i64*
  store i64 -9223372036854775808, i64* %199, align 8, !noalias !285
  %200 = mul nuw i64 %"#arg1.elt3.i.i.i.i.i.i.i.i", 80
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %198, i8* nonnull align 1 %"#arg1.elt.i.i.i.i.i.i.i.i", i64 %200, i1 false) #11, !noalias !290
  %201 = getelementptr inbounds i8, i8* %198, i64 %200
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(80) %201, i8 0, i64 80, i1 false) #11, !noalias !290
  %phi.cast.i.i.i.i.i.i.i.i.i.i.i = ptrtoint i8* %"#arg1.elt.i.i.i.i.i.i.i.i" to i64
  %202 = shl i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 1
  %203 = select i1 %.not.i.i.i.i.i.i.i.i.i.i, i64 %202, i64 %phi.cast.i.i.i.i.i.i.i.i.i.i.i
  %204 = icmp ne i64 %"#arg1.elt5.i.i.i.i.i.i.i.i", 0
  %205 = icmp ne i64 %203, 0
  %or.cond.i.i.i.i.i.i.i.i.i.i.i.i.i = select i1 %204, i1 %205, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i.i.i.i.i.i.i, label %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i, label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread

OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i:        ; preds = %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i
  %206 = inttoptr i64 %203 to i8*
  %207 = getelementptr inbounds i8, i8* %206, i64 -8
  %208 = bitcast i8* %207 to i64*
  %209 = load i64, i64* %208, align 8, !noalias !290
  %.not.i.i.i.i.i.i.i.i.i.i.i.i.i.i = icmp eq i64 %209, 0
  br i1 %.not.i.i.i.i.i.i.i.i.i.i.i.i.i.i, label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread, label %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i:                 ; preds = %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i
  %210 = add i64 %209, -1
  store i64 %210, i64* %208, align 8, !noalias !290
  %211 = icmp eq i64 %209, -9223372036854775808
  br i1 %211, label %Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i, label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread

Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i:                ; preds = %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %207, i32 8) #11, !noalias !290
  br label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread

EndIf.i27.i.i.i.i.i.i.i.i.i.i:                    ; preds = %Else.i.i.i.i.i.i.i.i.i
  %212 = mul nuw i64 %171, 80
  %213 = or i64 %212, 8
  %214 = tail call i8* @roc_alloc(i64 %213, i32 8) #11, !noalias !291
  %215 = icmp ne i8* %214, null
  tail call void @llvm.assume(i1 %215) #11
  %216 = getelementptr inbounds i8, i8* %214, i64 8
  %217 = bitcast i8* %214 to i64*
  store i64 -9223372036854775808, i64* %217, align 8, !noalias !291
  br label %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread

List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread: ; preds = %EndIf.i27.i.i.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i.i.i, %EndIf.i.i.i.i.i.i.i.i.i.i.i, %EndIf9.i.i.i.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i, %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i
  %list_alloca.i.i.i.i.i.i.i.i.sroa.6.0.ph = phi i64 [ %171, %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i ], [ %171, %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i ], [ %171, %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i ], [ %171, %Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i.i.i.i.i, %EndIf9.i.i.i.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i.i.i.i.i, %EndIf.i.i.i.i.i.i.i.i.i.i.i ], [ %"#arg1.elt5.i.i.i.i.i.i.i.i", %Then.i.i.i.i.i.i.i.i.i.i ], [ %171, %EndIf.i27.i.i.i.i.i.i.i.i.i.i ]
  %list_alloca.i.i.i.i.i.i.i.i.sroa.0.0.ph = phi i8* [ %198, %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i ], [ %198, %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i ], [ %198, %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i ], [ %198, %Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i ], [ %"#arg1.elt.i.i.i.i.i.i.i.i", %EndIf9.i.i.i.i.i.i.i.i.i.i.i ], [ %193, %EndIf.i.i.i.i.i.i.i.i.i.i.i ], [ %"#arg1.elt.i.i.i.i.i.i.i.i", %Then.i.i.i.i.i.i.i.i.i.i ], [ %216, %EndIf.i27.i.i.i.i.i.i.i.i.i.i ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %element_to_pass_as_opaque.i.i.i.i.i.i.i.i.0.sroa_cast1629)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %element_to_pass_as_opaque.i.i.i.i.i.i.i.i.0.sroa_cast1629, i8* noundef nonnull align 8 dereferenceable(80) %153, i64 80, i1 false)
  br label %OptionalThen1.i.i.i.i.i.i.i.i.i

List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i: ; preds = %then_block.i.i.i.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %element_to_pass_as_opaque.i.i.i.i.i.i.i.i.0.sroa_cast1629)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %element_to_pass_as_opaque.i.i.i.i.i.i.i.i.0.sroa_cast1629, i8* noundef nonnull align 8 dereferenceable(80) %153, i64 80, i1 false)
  %.not.i.i7.i.i.i.i.i.i.i = icmp eq i8* %"#arg1.elt.i.i.i.i.i.i.i.i", null
  br i1 %.not.i.i7.i.i.i.i.i.i.i, label %List_append_723160b8b4a25319ea319ef950f2df9f4b88cdc99891f946ceaf16162b455e.exit.i.i.i.i.i.i, label %OptionalThen1.i.i.i.i.i.i.i.i.i

OptionalThen1.i.i.i.i.i.i.i.i.i:                  ; preds = %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread, %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i
  %list_alloca.i.i.i.i.i.i.i.i.sroa.0.01633 = phi i8* [ %list_alloca.i.i.i.i.i.i.i.i.sroa.0.0.ph, %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread ], [ %"#arg1.elt.i.i.i.i.i.i.i.i", %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i ]
  %list_alloca.i.i.i.i.i.i.i.i.sroa.6.01631 = phi i64 [ %list_alloca.i.i.i.i.i.i.i.i.sroa.6.0.ph, %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i.thread ], [ %"#arg1.elt5.i.i.i.i.i.i.i.i", %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i ]
  %218 = mul nuw i64 %"#arg1.elt3.i.i.i.i.i.i.i.i", 80
  %219 = getelementptr inbounds i8, i8* %list_alloca.i.i.i.i.i.i.i.i.sroa.0.01633, i64 %218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(80) %219, i8* noundef nonnull align 8 dereferenceable(80) %element_to_pass_as_opaque.i.i.i.i.i.i.i.i.0.sroa_cast1629, i64 80, i1 false) #11, !noalias !294
  br label %List_append_723160b8b4a25319ea319ef950f2df9f4b88cdc99891f946ceaf16162b455e.exit.i.i.i.i.i.i

List_append_723160b8b4a25319ea319ef950f2df9f4b88cdc99891f946ceaf16162b455e.exit.i.i.i.i.i.i: ; preds = %OptionalThen1.i.i.i.i.i.i.i.i.i, %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i
  %list_alloca.i.i.i.i.i.i.i.i.sroa.0.01634 = phi i8* [ %list_alloca.i.i.i.i.i.i.i.i.sroa.0.01633, %OptionalThen1.i.i.i.i.i.i.i.i.i ], [ null, %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i ]
  %list_alloca.i.i.i.i.i.i.i.i.sroa.6.01632 = phi i64 [ %list_alloca.i.i.i.i.i.i.i.i.sroa.6.01631, %OptionalThen1.i.i.i.i.i.i.i.i.i ], [ %"#arg1.elt5.i.i.i.i.i.i.i.i", %List_reserve_42589fae13d2552392dfd556aaa1befe3d3ebd37762c53db1350e2daa56950.exit.i.i.i.i.i.i.i ]
  %220 = insertvalue %list.RocList undef, i8* %list_alloca.i.i.i.i.i.i.i.i.sroa.0.01634, 0
  %221 = insertvalue %list.RocList %220, i64 %171, 1
  %load_list10.i14.i.i.i.i.i.i.i = insertvalue %list.RocList %221, i64 %list_alloca.i.i.i.i.i.i.i.i.sroa.6.01632, 2
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %element_to_pass_as_opaque.i.i.i.i.i.i.i.i.0.sroa_cast1629)
  br label %List_walkHelp_873a6992c5f2b18d14a1f5c43afac180bb9ecc302c7d3ade5d19317a96e17c.exit.i.i.i.i

List_walkHelp_873a6992c5f2b18d14a1f5c43afac180bb9ecc302c7d3ade5d19317a96e17c.exit.i.i.i.i: ; preds = %"#Attr_#inc_8.exit.i.i.i.i", %List_append_723160b8b4a25319ea319ef950f2df9f4b88cdc99891f946ceaf16162b455e.exit.i.i.i.i.i.i
  %common.ret.op.i.i.i.i.i.i = phi %list.RocList [ %load_list10.i14.i.i.i.i.i.i.i, %List_append_723160b8b4a25319ea319ef950f2df9f4b88cdc99891f946ceaf16162b455e.exit.i.i.i.i.i.i ], [ %joinpointarg1.i.i.i.i1667, %"#Attr_#inc_8.exit.i.i.i.i" ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %152) #11
  %call.i.i.i.i.i1661 = add nuw i64 %joinpointarg3.i.i.i.i1668, 1
  %exitcond1678.not = icmp eq i64 %call.i.i.i.i.i1661, %load_at_index_ptr_old40.unpack107
  br i1 %exitcond1678.not, label %Arg_filterMap_54ac5f7b52c5e6ef3555cdf974e2718e338458f36e767a8b6bc4a9bb8cd9bb.exit, label %then_block.i.i.i.i

Arg_filterMap_54ac5f7b52c5e6ef3555cdf974e2718e338458f36e767a8b6bc4a9bb8cd9bb.exit: ; preds = %List_walkHelp_873a6992c5f2b18d14a1f5c43afac180bb9ecc302c7d3ade5d19317a96e17c.exit.i.i.i.i, %joinpointcont41
  %joinpointarg1.i.i.i.i.lcssa = phi %list.RocList [ zeroinitializer, %joinpointcont41 ], [ %common.ret.op.i.i.i.i.i.i, %List_walkHelp_873a6992c5f2b18d14a1f5c43afac180bb9ecc302c7d3ade5d19317a96e17c.exit.i.i.i.i ]
  tail call fastcc void @"#Attr_#dec_20"(%list.RocList %load_at_index_ptr_old40110) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %143) #11
  %222 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i223 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %222) #11
  %tag_id_ptr.i.i.i.i.i230 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i223, i64 0, i32 2
  %field_ptr2.i.i.i.i.i270 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i223, i64 0, i32 1
  %223 = bitcast %str.RocStr* %struct_field1.i.i.i.i.i.i220 to i8*
  %224 = bitcast %str.RocStr* %struct_field.i.i.i.i.i.i221 to i8*
  %225 = bitcast [10 x i64]* %field_ptr2.i.i.i.i.i270 to i8*
  %load_str_to_stack.i.i.i.i.i.i.i274.elt944 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i.i.i.i221, i64 0, i32 2
  %struct_field_access_record_1.i.i.i.i.i.i284 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i223, i64 0, i32 1, i64 3
  %226 = bitcast i64* %struct_field_access_record_1.i.i.i.i.i.i284 to i8*
  %load_str_to_stack.i2.i.i.i.i.i.i285.elt949 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i.i.i.i220, i64 0, i32 2
  %227 = bitcast %str.RocStr* %struct_field2.i.i.i.i.i207 to i8*
  %228 = bitcast %str.RocStr* %struct_field1.i.i.i.i.i208 to i8*
  %229 = bitcast %str.RocStr* %struct_field.i.i.i.i.i209 to i8*
  %load_str_to_stack.i.i.i.i.i.i237.elt964 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i.i.i209, i64 0, i32 2
  %load_str_to_stack.i3.i.i.i.i.i248.elt969 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i.i.i208, i64 0, i32 2
  %struct_field_access_record_2.i.i.i.i.i258 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %result_value.i.i.i.i223, i64 0, i32 1, i64 6
  %230 = bitcast i64* %struct_field_access_record_2.i.i.i.i.i258 to i8*
  %load_str_to_stack.i13.i.i.i.i.i259.elt974 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i.i.i.i.i207, i64 0, i32 2
  %231 = bitcast { [0 x i64], [6 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i.i219 to i8*
  %tag_id_ptr.i.i.i.i.i.i296 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i.i219, i64 0, i32 2
  %get_opaque_data_ptr.i.i.i.i.i.i300 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i.i219, i64 0, i32 1
  %232 = bitcast [6 x i64]* %get_opaque_data_ptr.i.i.i.i.i.i300 to i8*
  %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214.0.sroa_cast1639 = bitcast { %str.RocStr, %str.RocStr }* %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214 to i8*
  br i1 %lt_uint.i.i.i.i.i1666.not, label %Arg_filterMap_aa569c3d6fd0a9ba5c3fe38b8f4b291c73dd8cc1738a2e8a272630725b8.exit, label %then_block.i.i.i.i232

then_block.i.i.i.i232:                            ; preds = %Arg_filterMap_54ac5f7b52c5e6ef3555cdf974e2718e338458f36e767a8b6bc4a9bb8cd9bb.exit, %List_walkHelp_c341f17b542d72f639f8bad1a3bf6b4b63b6a7acd80e3c76c1430d5cc14b3e8.exit.i.i.i.i
  %joinpointarg3.i.i.i.i2251665 = phi i64 [ %call.i.i.i.i.i4251662, %List_walkHelp_c341f17b542d72f639f8bad1a3bf6b4b63b6a7acd80e3c76c1430d5cc14b3e8.exit.i.i.i.i ], [ 0, %Arg_filterMap_54ac5f7b52c5e6ef3555cdf974e2718e338458f36e767a8b6bc4a9bb8cd9bb.exit ]
  %joinpointarg1.i.i.i.i2241664 = phi %list.RocList [ %common.ret.op.i.i.i.i.i.i424, %List_walkHelp_c341f17b542d72f639f8bad1a3bf6b4b63b6a7acd80e3c76c1430d5cc14b3e8.exit.i.i.i.i ], [ zeroinitializer, %Arg_filterMap_54ac5f7b52c5e6ef3555cdf974e2718e338458f36e767a8b6bc4a9bb8cd9bb.exit ]
  %list_get_element.i.i.i.i.i229 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %cast_basic_basic.i.i.i.i.i, i64 %joinpointarg3.i.i.i.i2251665
  %233 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %list_get_element.i.i.i.i.i229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %222, i8* noundef nonnull align 8 dereferenceable(88) %233, i64 88, i1 false) #11
  %load_tag_id.i.i.i.i.i231 = load i8, i8* %tag_id_ptr.i.i.i.i.i230, align 8
  switch i8 %load_tag_id.i.i.i.i.i231, label %"#Attr_#inc_8.exit.i.i.i.i299" [
    i8 0, label %tag_id_modify.i.i.i.i.i240
    i8 1, label %tag_id_modify1.i.i.i.i.i277
  ]

tag_id_modify.i.i.i.i.i240:                       ; preds = %then_block.i.i.i.i232
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %229, i8* noundef nonnull align 8 dereferenceable(24) %225, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.i.i.i237.unpack965 = load i64, i64* %load_str_to_stack.i.i.i.i.i.i237.elt964, align 8
  %is_big_str.i.i.i.i.i.i239 = icmp sgt i64 %load_str_to_stack.i.i.i.i.i.i237.unpack965, 0
  br i1 %is_big_str.i.i.i.i.i.i239, label %modify_rc.i.i.i.i.i.i245, label %"#Attr_#inc_4.exit.i.i.i.i.i251"

modify_rc.i.i.i.i.i.i245:                         ; preds = %tag_id_modify.i.i.i.i.i240
  %call_builtin.i.i.i.i.i.i241 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i.i.i209) #11
  %get_rc_ptr.i.i.i.i.i.i243 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i.i241, i64 -8
  %234 = bitcast i8* %get_rc_ptr.i.i.i.i.i.i243 to i64*
  %235 = load i64, i64* %234, align 8
  %.not.i.i.i.i.i.i.i244 = icmp eq i64 %235, 0
  br i1 %.not.i.i.i.i.i.i.i244, label %"#Attr_#inc_4.exit.i.i.i.i.i251", label %Then.i.i.i.i.i.i.i246

Then.i.i.i.i.i.i.i246:                            ; preds = %modify_rc.i.i.i.i.i.i245
  %236 = add nsw i64 %235, 1
  store i64 %236, i64* %234, align 8
  br label %"#Attr_#inc_4.exit.i.i.i.i.i251"

"#Attr_#inc_4.exit.i.i.i.i.i251":                 ; preds = %Then.i.i.i.i.i.i.i246, %modify_rc.i.i.i.i.i.i245, %tag_id_modify.i.i.i.i.i240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %228, i8* noundef nonnull align 8 dereferenceable(24) %226, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.i.i.i.i248.unpack970 = load i64, i64* %load_str_to_stack.i3.i.i.i.i.i248.elt969, align 8
  %is_big_str.i5.i.i.i.i.i250 = icmp sgt i64 %load_str_to_stack.i3.i.i.i.i.i248.unpack970, 0
  br i1 %is_big_str.i5.i.i.i.i.i250, label %modify_rc.i10.i.i.i.i.i256, label %"#Attr_#inc_4.exit12.i.i.i.i.i262"

modify_rc.i10.i.i.i.i.i256:                       ; preds = %"#Attr_#inc_4.exit.i.i.i.i.i251"
  %call_builtin.i6.i.i.i.i.i252 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i.i.i208) #11
  %get_rc_ptr.i8.i.i.i.i.i254 = getelementptr inbounds i8, i8* %call_builtin.i6.i.i.i.i.i252, i64 -8
  %237 = bitcast i8* %get_rc_ptr.i8.i.i.i.i.i254 to i64*
  %238 = load i64, i64* %237, align 8
  %.not.i.i9.i.i.i.i.i255 = icmp eq i64 %238, 0
  br i1 %.not.i.i9.i.i.i.i.i255, label %"#Attr_#inc_4.exit12.i.i.i.i.i262", label %Then.i.i11.i.i.i.i.i257

Then.i.i11.i.i.i.i.i257:                          ; preds = %modify_rc.i10.i.i.i.i.i256
  %239 = add nsw i64 %238, 1
  store i64 %239, i64* %237, align 8
  br label %"#Attr_#inc_4.exit12.i.i.i.i.i262"

"#Attr_#inc_4.exit12.i.i.i.i.i262":               ; preds = %Then.i.i11.i.i.i.i.i257, %modify_rc.i10.i.i.i.i.i256, %"#Attr_#inc_4.exit.i.i.i.i.i251"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %227, i8* noundef nonnull align 8 dereferenceable(24) %230, i64 24, i1 false) #11
  %load_str_to_stack.i13.i.i.i.i.i259.unpack975 = load i64, i64* %load_str_to_stack.i13.i.i.i.i.i259.elt974, align 8
  %is_big_str.i15.i.i.i.i.i261 = icmp sgt i64 %load_str_to_stack.i13.i.i.i.i.i259.unpack975, 0
  br i1 %is_big_str.i15.i.i.i.i.i261, label %modify_rc.i20.i.i.i.i.i267, label %"#Attr_#inc_3.exit.i.i.i.i269"

modify_rc.i20.i.i.i.i.i267:                       ; preds = %"#Attr_#inc_4.exit12.i.i.i.i.i262"
  %call_builtin.i16.i.i.i.i.i263 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i.i.i.i.i207) #11
  %get_rc_ptr.i18.i.i.i.i.i265 = getelementptr inbounds i8, i8* %call_builtin.i16.i.i.i.i.i263, i64 -8
  %240 = bitcast i8* %get_rc_ptr.i18.i.i.i.i.i265 to i64*
  %241 = load i64, i64* %240, align 8
  %.not.i.i19.i.i.i.i.i266 = icmp eq i64 %241, 0
  br i1 %.not.i.i19.i.i.i.i.i266, label %"#Attr_#inc_3.exit.i.i.i.i269", label %Then.i.i21.i.i.i.i.i268

Then.i.i21.i.i.i.i.i268:                          ; preds = %modify_rc.i20.i.i.i.i.i267
  %242 = add nsw i64 %241, 1
  store i64 %242, i64* %240, align 8
  br label %"#Attr_#inc_3.exit.i.i.i.i269"

"#Attr_#inc_3.exit.i.i.i.i269":                   ; preds = %Then.i.i21.i.i.i.i.i268, %modify_rc.i20.i.i.i.i.i267, %"#Attr_#inc_4.exit12.i.i.i.i.i262"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #11
  br label %"#Attr_#inc_8.exit.i.i.i.i299"

tag_id_modify1.i.i.i.i.i277:                      ; preds = %then_block.i.i.i.i232
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %224, i8* noundef nonnull align 8 dereferenceable(24) %225, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.i.i.i.i274.unpack945 = load i64, i64* %load_str_to_stack.i.i.i.i.i.i.i274.elt944, align 8
  %is_big_str.i.i.i.i.i.i.i276 = icmp sgt i64 %load_str_to_stack.i.i.i.i.i.i.i274.unpack945, 0
  br i1 %is_big_str.i.i.i.i.i.i.i276, label %modify_rc.i.i.i.i.i.i.i282, label %"#Attr_#inc_4.exit.i.i.i.i.i.i288"

modify_rc.i.i.i.i.i.i.i282:                       ; preds = %tag_id_modify1.i.i.i.i.i277
  %call_builtin.i.i.i.i.i.i.i278 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i.i.i.i221) #11
  %get_rc_ptr.i.i.i.i.i.i.i280 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i.i.i278, i64 -8
  %243 = bitcast i8* %get_rc_ptr.i.i.i.i.i.i.i280 to i64*
  %244 = load i64, i64* %243, align 8
  %.not.i.i.i.i.i.i.i.i281 = icmp eq i64 %244, 0
  br i1 %.not.i.i.i.i.i.i.i.i281, label %"#Attr_#inc_4.exit.i.i.i.i.i.i288", label %Then.i.i.i.i.i.i.i.i283

Then.i.i.i.i.i.i.i.i283:                          ; preds = %modify_rc.i.i.i.i.i.i.i282
  %245 = add nsw i64 %244, 1
  store i64 %245, i64* %243, align 8
  br label %"#Attr_#inc_4.exit.i.i.i.i.i.i288"

"#Attr_#inc_4.exit.i.i.i.i.i.i288":               ; preds = %Then.i.i.i.i.i.i.i.i283, %modify_rc.i.i.i.i.i.i.i282, %tag_id_modify1.i.i.i.i.i277
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %223, i8* noundef nonnull align 8 dereferenceable(24) %226, i64 24, i1 false) #11
  %load_str_to_stack.i2.i.i.i.i.i.i285.unpack950 = load i64, i64* %load_str_to_stack.i2.i.i.i.i.i.i285.elt949, align 8
  %is_big_str.i4.i.i.i.i.i.i287 = icmp sgt i64 %load_str_to_stack.i2.i.i.i.i.i.i285.unpack950, 0
  br i1 %is_big_str.i4.i.i.i.i.i.i287, label %modify_rc.i9.i.i.i.i.i.i293, label %"#Attr_#inc_5.exit.i.i.i.i.i295"

modify_rc.i9.i.i.i.i.i.i293:                      ; preds = %"#Attr_#inc_4.exit.i.i.i.i.i.i288"
  %call_builtin.i5.i.i.i.i.i.i289 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i.i.i.i220) #11
  %get_rc_ptr.i7.i.i.i.i.i.i291 = getelementptr inbounds i8, i8* %call_builtin.i5.i.i.i.i.i.i289, i64 -8
  %246 = bitcast i8* %get_rc_ptr.i7.i.i.i.i.i.i291 to i64*
  %247 = load i64, i64* %246, align 8
  %.not.i.i8.i.i.i.i.i.i292 = icmp eq i64 %247, 0
  br i1 %.not.i.i8.i.i.i.i.i.i292, label %"#Attr_#inc_5.exit.i.i.i.i.i295", label %Then.i.i10.i.i.i.i.i.i294

Then.i.i10.i.i.i.i.i.i294:                        ; preds = %modify_rc.i9.i.i.i.i.i.i293
  %248 = add nsw i64 %247, 1
  store i64 %248, i64* %246, align 8
  br label %"#Attr_#inc_5.exit.i.i.i.i.i295"

"#Attr_#inc_5.exit.i.i.i.i.i295":                 ; preds = %Then.i.i10.i.i.i.i.i.i294, %modify_rc.i9.i.i.i.i.i.i293, %"#Attr_#inc_4.exit.i.i.i.i.i.i288"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #11
  br label %"#Attr_#inc_8.exit.i.i.i.i299"

"#Attr_#inc_8.exit.i.i.i.i299":                   ; preds = %"#Attr_#inc_5.exit.i.i.i.i.i295", %"#Attr_#inc_3.exit.i.i.i.i269", %then_block.i.i.i.i232
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %231) #11
  call fastcc void @Arg_484_51f5202c4ff764f167d1887b2771e51c62f41e78a7115f87d012f3fe7912bd({ [0 x i64], [10 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i223, { [0 x i64], [6 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i.i.i219) #11
  %load_tag_id.i.i.i.i.i.i297 = load i8, i8* %tag_id_ptr.i.i.i.i.i.i296, align 8
  %eq_u8.i.i.i.i.i.i298 = icmp eq i8 %load_tag_id.i.i.i.i.i.i297, 1
  br i1 %eq_u8.i.i.i.i.i.i298, label %then_block.i.i.i.i.i.i313, label %List_walkHelp_c341f17b542d72f639f8bad1a3bf6b4b63b6a7acd80e3c76c1430d5cc14b3e8.exit.i.i.i.i

then_block.i.i.i.i.i.i313:                        ; preds = %"#Attr_#inc_8.exit.i.i.i.i299"
  %"#arg1.elt.i.i.i.i.i.i.i.i302" = extractvalue %list.RocList %joinpointarg1.i.i.i.i2241664, 0
  %"#arg1.elt3.i.i.i.i.i.i.i.i304" = extractvalue %list.RocList %joinpointarg1.i.i.i.i2241664, 1
  %"#arg1.elt5.i.i.i.i.i.i.i.i306" = extractvalue %list.RocList %joinpointarg1.i.i.i.i2241664, 2
  %.not.i.i.i.i.i.i.i.i.i.i311 = icmp slt i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 0
  %249 = select i1 %.not.i.i.i.i.i.i.i.i.i.i311, i64 %"#arg1.elt3.i.i.i.i.i.i.i.i304", i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306"
  %250 = add nuw i64 %"#arg1.elt3.i.i.i.i.i.i.i.i304", 1
  %.not.i.i.i.i.i.i.i.i.i312.not = icmp ugt i64 %249, %"#arg1.elt3.i.i.i.i.i.i.i.i304"
  br i1 %.not.i.i.i.i.i.i.i.i.i312.not, label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i, label %Else.i.i.i.i.i.i.i.i.i316

Else.i.i.i.i.i.i.i.i.i316:                        ; preds = %then_block.i.i.i.i.i.i313
  %.not.i1.i.i.i.i.i.i.i.i.i315 = icmp eq i8* %"#arg1.elt.i.i.i.i.i.i.i.i302", null
  br i1 %.not.i1.i.i.i.i.i.i.i.i.i315, label %EndIf.i27.i.i.i.i.i.i.i.i.i.i361, label %OptionalThen.i.i.i.i.i.i.i.i.i.i322

OptionalThen.i.i.i.i.i.i.i.i.i.i322:              ; preds = %Else.i.i.i.i.i.i.i.i.i316
  %251 = icmp ne i64 %249, 0
  %252 = or i1 %.not.i.i.i.i.i.i.i.i.i.i311, %251
  br i1 %252, label %list.RocList.isUnique.exit.i.i.i.i.i.i.i.i.i.i325, label %Then.i.i.i.i.i.i.i.i.i.i327

list.RocList.isUnique.exit.i.i.i.i.i.i.i.i.i.i325: ; preds = %OptionalThen.i.i.i.i.i.i.i.i.i.i322
  %253 = getelementptr inbounds i8, i8* %"#arg1.elt.i.i.i.i.i.i.i.i302", i64 -8
  %254 = bitcast i8* %253 to i64*
  %255 = load i64, i64* %254, align 8, !noalias !297
  %phi.cmp.i.i.i.i.i.i.i.i.i.i.i323 = icmp eq i64 %255, -9223372036854775808
  %256 = xor i1 %.not.i.i.i.i.i.i.i.i.i.i311, true
  %or.cond.i.i.i.i.i.i.i.i.i.i324 = select i1 %phi.cmp.i.i.i.i.i.i.i.i.i.i.i323, i1 %256, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i.i.i.i324, label %Then.i.i.i.i.i.i.i.i.i.i327, label %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i352

Then.i.i.i.i.i.i.i.i.i.i327:                      ; preds = %list.RocList.isUnique.exit.i.i.i.i.i.i.i.i.i.i325, %OptionalThen.i.i.i.i.i.i.i.i.i.i322
  %.not21.i.i.i.i.i.i.i.i.i.i326.not = icmp ugt i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", %"#arg1.elt3.i.i.i.i.i.i.i.i304"
  br i1 %.not21.i.i.i.i.i.i.i.i.i.i326.not, label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread, label %Else.i.i.i.i.i.i.i.i.i.i329

Else.i.i.i.i.i.i.i.i.i.i329:                      ; preds = %Then.i.i.i.i.i.i.i.i.i.i327
  %257 = icmp eq i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 0
  br i1 %257, label %EndIf9.i.i.i.i.i.i.i.i.i.i.i338, label %Else1.i.i.i.i.i.i.i.i.i.i.i330

Else1.i.i.i.i.i.i.i.i.i.i.i330:                   ; preds = %Else.i.i.i.i.i.i.i.i.i.i329
  %258 = icmp ult i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 85
  br i1 %258, label %Then4.i.i.i.i.i.i.i.i.i.i.i332, label %Else2.i.i.i.i.i.i.i.i.i.i.i331

Else2.i.i.i.i.i.i.i.i.i.i.i331:                   ; preds = %Else1.i.i.i.i.i.i.i.i.i.i.i330
  %259 = icmp ugt i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 2730
  br i1 %259, label %Then5.i.i.i.i.i.i.i.i.i.i.i333, label %Else6.i.i.i.i.i.i.i.i.i.i.i334

Then4.i.i.i.i.i.i.i.i.i.i.i332:                   ; preds = %Else1.i.i.i.i.i.i.i.i.i.i.i330
  %260 = shl nuw nsw i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 1
  br label %EndIf9.i.i.i.i.i.i.i.i.i.i.i338

Then5.i.i.i.i.i.i.i.i.i.i.i333:                   ; preds = %Else2.i.i.i.i.i.i.i.i.i.i.i331
  %261 = shl nuw i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 1
  br label %EndIf9.i.i.i.i.i.i.i.i.i.i.i338

Else6.i.i.i.i.i.i.i.i.i.i.i334:                   ; preds = %Else2.i.i.i.i.i.i.i.i.i.i.i331
  %262 = mul nuw nsw i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 3
  %263 = add nuw nsw i64 %262, 1
  %264 = lshr i64 %263, 1
  br label %EndIf9.i.i.i.i.i.i.i.i.i.i.i338

EndIf9.i.i.i.i.i.i.i.i.i.i.i338:                  ; preds = %Else6.i.i.i.i.i.i.i.i.i.i.i334, %Then5.i.i.i.i.i.i.i.i.i.i.i333, %Then4.i.i.i.i.i.i.i.i.i.i.i332, %Else.i.i.i.i.i.i.i.i.i.i329
  %new_capacity.0.i.i.i.i.i.i.i.i.i.i.i335 = phi i64 [ %260, %Then4.i.i.i.i.i.i.i.i.i.i.i332 ], [ %261, %Then5.i.i.i.i.i.i.i.i.i.i.i333 ], [ %264, %Else6.i.i.i.i.i.i.i.i.i.i.i334 ], [ 1, %Else.i.i.i.i.i.i.i.i.i.i329 ]
  %265 = icmp ugt i64 %new_capacity.0.i.i.i.i.i.i.i.i.i.i.i335, %250
  %..i.i.i.i.i.i.i.i.i.i.i.i336 = select i1 %265, i64 %new_capacity.0.i.i.i.i.i.i.i.i.i.i.i335, i64 %250
  %266 = mul nuw i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 48
  %267 = mul nuw i64 %..i.i.i.i.i.i.i.i.i.i.i.i336, 48
  %.not.i.i.i.i.i.i.i.i.i.i.i337 = icmp ult i64 %266, %267
  br i1 %.not.i.i.i.i.i.i.i.i.i.i.i337, label %EndIf.i.i.i.i.i.i.i.i.i.i.i339, label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread

EndIf.i.i.i.i.i.i.i.i.i.i.i339:                   ; preds = %EndIf9.i.i.i.i.i.i.i.i.i.i.i338
  %268 = or i64 %267, 8
  %269 = or i64 %266, 8
  %270 = getelementptr inbounds i8, i8* %"#arg1.elt.i.i.i.i.i.i.i.i302", i64 -8
  %271 = tail call i8* @roc_realloc(i8* %270, i64 %268, i64 %269, i32 8) #11, !noalias !297
  %272 = getelementptr inbounds i8, i8* %271, i64 8
  br label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread

OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i352:           ; preds = %list.RocList.isUnique.exit.i.i.i.i.i.i.i.i.i.i325
  %273 = mul nuw i64 %250, 48
  %274 = or i64 %273, 8
  %275 = tail call i8* @roc_alloc(i64 %274, i32 8) #11, !noalias !302
  %276 = icmp ne i8* %275, null
  tail call void @llvm.assume(i1 %276) #11
  %277 = getelementptr inbounds i8, i8* %275, i64 8
  %278 = bitcast i8* %275 to i64*
  store i64 -9223372036854775808, i64* %278, align 8, !noalias !302
  %279 = mul nuw i64 %"#arg1.elt3.i.i.i.i.i.i.i.i304", 48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %277, i8* nonnull align 1 %"#arg1.elt.i.i.i.i.i.i.i.i302", i64 %279, i1 false) #11, !noalias !307
  %280 = getelementptr inbounds i8, i8* %277, i64 %279
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(48) %280, i8 0, i64 48, i1 false) #11, !noalias !307
  %phi.cast.i.i.i.i.i.i.i.i.i.i.i346 = ptrtoint i8* %"#arg1.elt.i.i.i.i.i.i.i.i302" to i64
  %281 = shl i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 1
  %282 = select i1 %.not.i.i.i.i.i.i.i.i.i.i311, i64 %281, i64 %phi.cast.i.i.i.i.i.i.i.i.i.i.i346
  %283 = icmp ne i64 %"#arg1.elt5.i.i.i.i.i.i.i.i306", 0
  %284 = icmp ne i64 %282, 0
  %or.cond.i.i.i.i.i.i.i.i.i.i.i.i.i351 = select i1 %283, i1 %284, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i.i.i.i.i.i.i351, label %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i354, label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread

OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i354:     ; preds = %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i352
  %285 = inttoptr i64 %282 to i8*
  %286 = getelementptr inbounds i8, i8* %285, i64 -8
  %287 = bitcast i8* %286 to i64*
  %288 = load i64, i64* %287, align 8, !noalias !307
  %.not.i.i.i.i.i.i.i.i.i.i.i.i.i.i353 = icmp eq i64 %288, 0
  br i1 %.not.i.i.i.i.i.i.i.i.i.i.i.i.i.i353, label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread, label %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i355

Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i355:              ; preds = %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i354
  %289 = add i64 %288, -1
  store i64 %289, i64* %287, align 8, !noalias !307
  %290 = icmp eq i64 %288, -9223372036854775808
  br i1 %290, label %Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i356, label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread

Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i356:             ; preds = %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i355
  tail call void @roc_dealloc(i8* %286, i32 8) #11, !noalias !307
  br label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread

EndIf.i27.i.i.i.i.i.i.i.i.i.i361:                 ; preds = %Else.i.i.i.i.i.i.i.i.i316
  %291 = mul nuw i64 %250, 48
  %292 = or i64 %291, 8
  %293 = tail call i8* @roc_alloc(i64 %292, i32 8) #11, !noalias !308
  %294 = icmp ne i8* %293, null
  tail call void @llvm.assume(i1 %294) #11
  %295 = getelementptr inbounds i8, i8* %293, i64 8
  %296 = bitcast i8* %293 to i64*
  store i64 -9223372036854775808, i64* %296, align 8, !noalias !308
  br label %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread

List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread: ; preds = %EndIf.i27.i.i.i.i.i.i.i.i.i.i361, %Then.i.i.i.i.i.i.i.i.i.i327, %EndIf.i.i.i.i.i.i.i.i.i.i.i339, %EndIf9.i.i.i.i.i.i.i.i.i.i.i338, %Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i356, %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i355, %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i354, %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i352
  %list_alloca.i.i.i.i.i.i.i.i217.sroa.6.0.ph = phi i64 [ %250, %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i352 ], [ %250, %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i354 ], [ %250, %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i355 ], [ %250, %Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i356 ], [ %..i.i.i.i.i.i.i.i.i.i.i.i336, %EndIf9.i.i.i.i.i.i.i.i.i.i.i338 ], [ %..i.i.i.i.i.i.i.i.i.i.i.i336, %EndIf.i.i.i.i.i.i.i.i.i.i.i339 ], [ %"#arg1.elt5.i.i.i.i.i.i.i.i306", %Then.i.i.i.i.i.i.i.i.i.i327 ], [ %250, %EndIf.i27.i.i.i.i.i.i.i.i.i.i361 ]
  %list_alloca.i.i.i.i.i.i.i.i217.sroa.0.0.ph = phi i8* [ %277, %OptionalEndIf.i.i.i.i.i.i.i.i.i.i.i352 ], [ %277, %OptionalNonNull.i.i.i.i.i.i.i.i.i.i.i.i.i354 ], [ %277, %Then.i.i.i.i.i.i.i.i.i.i.i.i.i.i355 ], [ %277, %Then1.i.i.i.i.i.i.i.i.i.i.i.i.i.i356 ], [ %"#arg1.elt.i.i.i.i.i.i.i.i302", %EndIf9.i.i.i.i.i.i.i.i.i.i.i338 ], [ %272, %EndIf.i.i.i.i.i.i.i.i.i.i.i339 ], [ %"#arg1.elt.i.i.i.i.i.i.i.i302", %Then.i.i.i.i.i.i.i.i.i.i327 ], [ %295, %EndIf.i27.i.i.i.i.i.i.i.i.i.i361 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214.0.sroa_cast1639)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214.0.sroa_cast1639, i8* noundef nonnull align 8 dereferenceable(48) %232, i64 48, i1 false)
  br label %OptionalThen1.i.i.i.i.i.i.i.i.i380

List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i: ; preds = %then_block.i.i.i.i.i.i313
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214.0.sroa_cast1639)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214.0.sroa_cast1639, i8* noundef nonnull align 8 dereferenceable(48) %232, i64 48, i1 false)
  %.not.i.i7.i.i.i.i.i.i.i379 = icmp eq i8* %"#arg1.elt.i.i.i.i.i.i.i.i302", null
  br i1 %.not.i.i7.i.i.i.i.i.i.i379, label %List_append_78f3f29b07cdcd40bc4da1f5948d71b417e2245e9f820296fe5bb63166137.exit.i.i.i.i.i.i, label %OptionalThen1.i.i.i.i.i.i.i.i.i380

OptionalThen1.i.i.i.i.i.i.i.i.i380:               ; preds = %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread, %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i
  %list_alloca.i.i.i.i.i.i.i.i217.sroa.0.01643 = phi i8* [ %list_alloca.i.i.i.i.i.i.i.i217.sroa.0.0.ph, %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread ], [ %"#arg1.elt.i.i.i.i.i.i.i.i302", %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i ]
  %list_alloca.i.i.i.i.i.i.i.i217.sroa.6.01641 = phi i64 [ %list_alloca.i.i.i.i.i.i.i.i217.sroa.6.0.ph, %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i.thread ], [ %"#arg1.elt5.i.i.i.i.i.i.i.i306", %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i ]
  %297 = mul nuw i64 %"#arg1.elt3.i.i.i.i.i.i.i.i304", 48
  %298 = getelementptr inbounds i8, i8* %list_alloca.i.i.i.i.i.i.i.i217.sroa.0.01643, i64 %297
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(48) %298, i8* noundef nonnull align 8 dereferenceable(48) %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214.0.sroa_cast1639, i64 48, i1 false) #11, !noalias !311
  br label %List_append_78f3f29b07cdcd40bc4da1f5948d71b417e2245e9f820296fe5bb63166137.exit.i.i.i.i.i.i

List_append_78f3f29b07cdcd40bc4da1f5948d71b417e2245e9f820296fe5bb63166137.exit.i.i.i.i.i.i: ; preds = %OptionalThen1.i.i.i.i.i.i.i.i.i380, %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i
  %list_alloca.i.i.i.i.i.i.i.i217.sroa.0.01644 = phi i8* [ %list_alloca.i.i.i.i.i.i.i.i217.sroa.0.01643, %OptionalThen1.i.i.i.i.i.i.i.i.i380 ], [ null, %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i ]
  %list_alloca.i.i.i.i.i.i.i.i217.sroa.6.01642 = phi i64 [ %list_alloca.i.i.i.i.i.i.i.i217.sroa.6.01641, %OptionalThen1.i.i.i.i.i.i.i.i.i380 ], [ %"#arg1.elt5.i.i.i.i.i.i.i.i306", %List_reserve_f12c703deae1a948acf77b2859aa683b037f842934f8d8ad6ba3ea8334b7db7.exit.i.i.i.i.i.i.i ]
  %299 = insertvalue %list.RocList undef, i8* %list_alloca.i.i.i.i.i.i.i.i217.sroa.0.01644, 0
  %300 = insertvalue %list.RocList %299, i64 %250, 1
  %load_list10.i14.i.i.i.i.i.i.i390 = insertvalue %list.RocList %300, i64 %list_alloca.i.i.i.i.i.i.i.i217.sroa.6.01642, 2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %element_to_pass_as_opaque.i.i.i.i.i.i.i.i214.0.sroa_cast1639)
  br label %List_walkHelp_c341f17b542d72f639f8bad1a3bf6b4b63b6a7acd80e3c76c1430d5cc14b3e8.exit.i.i.i.i

List_walkHelp_c341f17b542d72f639f8bad1a3bf6b4b63b6a7acd80e3c76c1430d5cc14b3e8.exit.i.i.i.i: ; preds = %"#Attr_#inc_8.exit.i.i.i.i299", %List_append_78f3f29b07cdcd40bc4da1f5948d71b417e2245e9f820296fe5bb63166137.exit.i.i.i.i.i.i
  %common.ret.op.i.i.i.i.i.i424 = phi %list.RocList [ %load_list10.i14.i.i.i.i.i.i.i390, %List_append_78f3f29b07cdcd40bc4da1f5948d71b417e2245e9f820296fe5bb63166137.exit.i.i.i.i.i.i ], [ %joinpointarg1.i.i.i.i2241664, %"#Attr_#inc_8.exit.i.i.i.i299" ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %231) #11
  %call.i.i.i.i.i4251662 = add nuw i64 %joinpointarg3.i.i.i.i2251665, 1
  %exitcond1677.not = icmp eq i64 %call.i.i.i.i.i4251662, %load_at_index_ptr_old40.unpack107
  br i1 %exitcond1677.not, label %Arg_filterMap_aa569c3d6fd0a9ba5c3fe38b8f4b291c73dd8cc1738a2e8a272630725b8.exit, label %then_block.i.i.i.i232

Arg_filterMap_aa569c3d6fd0a9ba5c3fe38b8f4b291c73dd8cc1738a2e8a272630725b8.exit: ; preds = %List_walkHelp_c341f17b542d72f639f8bad1a3bf6b4b63b6a7acd80e3c76c1430d5cc14b3e8.exit.i.i.i.i, %Arg_filterMap_54ac5f7b52c5e6ef3555cdf974e2718e338458f36e767a8b6bc4a9bb8cd9bb.exit
  %joinpointarg1.i.i.i.i224.lcssa = phi %list.RocList [ zeroinitializer, %Arg_filterMap_54ac5f7b52c5e6ef3555cdf974e2718e338458f36e767a8b6bc4a9bb8cd9bb.exit ], [ %common.ret.op.i.i.i.i.i.i424, %List_walkHelp_c341f17b542d72f639f8bad1a3bf6b4b63b6a7acd80e3c76c1430d5cc14b3e8.exit.i.i.i.i ]
  tail call fastcc void @"#Attr_#dec_20"(%list.RocList %load_at_index_ptr_old40110) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %222) #11
  %incrementing_element_loop_load.i1186.0.sroa_cast = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1186 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.i1186.0.sroa_cast)
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %joinpointarg1.i.i.i.i.lcssa, 2
  %"cap > 0.not.i1187" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.not.i1187", label %"#Attr_#dec_21.exit.thread", label %modification_list_block.i1190

modification_list_block.i1190:                    ; preds = %Arg_filterMap_aa569c3d6fd0a9ba5c3fe38b8f4b291c73dd8cc1738a2e8a272630725b8.exit
  %read_list_ptr.i = extractvalue %list.RocList %joinpointarg1.i.i.i.i.lcssa, 0
  %cast_basic_basic.i1188 = bitcast i8* %read_list_ptr.i to { %str.RocStr, %str.RocStr, %str.RocStr, i8 }*
  %list_len.i = extractvalue %list.RocList %joinpointarg1.i.i.i.i.lcssa, 1
  %bounds_check.not.i1189 = icmp eq i64 %list_len.i, 0
  br i1 %bounds_check.not.i1189, label %after_loop.i1221, label %loop.preheader.i1191

loop.preheader.i1191:                             ; preds = %modification_list_block.i1190
  %301 = bitcast %str.RocStr* %struct_field2.i.i1183 to i8*
  %302 = bitcast %str.RocStr* %struct_field1.i.i1184 to i8*
  %303 = bitcast %str.RocStr* %struct_field.i.i1185 to i8*
  %load_str_to_stack.i.i.elt7.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1185, i64 0, i32 2
  %struct_field_access_record_1.i.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1186, i64 0, i32 1
  %304 = bitcast %str.RocStr* %struct_field_access_record_1.i.i to i8*
  %load_str_to_stack.i3.i.elt12.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i1184, i64 0, i32 2
  %struct_field_access_record_2.i.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1186, i64 0, i32 2
  %305 = bitcast %str.RocStr* %struct_field_access_record_2.i.i to i8*
  %load_str_to_stack.i13.i.elt17.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i.i1183, i64 0, i32 2
  br label %loop.i1195

loop.i1195:                                       ; preds = %"#Attr_#inc_3.exit.i1216", %loop.preheader.i1191
  %next_index20.i = phi i64 [ 0, %loop.preheader.i1191 ], [ %next_index.i1192, %"#Attr_#inc_3.exit.i1216" ]
  %next_index.i1192 = add nuw i64 %next_index20.i, 1
  %load_index.i1193 = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %cast_basic_basic.i1188, i64 %next_index20.i
  %306 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_index.i1193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %incrementing_element_loop_load.i1186.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %306, i64 80, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %301) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %302) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %303, i8* noundef nonnull align 8 dereferenceable(24) %306, i64 24, i1 false) #11
  %load_str_to_stack.i.i.unpack8.i = load i64, i64* %load_str_to_stack.i.i.elt7.i, align 8
  %is_big_str.i.i.i1194 = icmp sgt i64 %load_str_to_stack.i.i.unpack8.i, 0
  br i1 %is_big_str.i.i.i1194, label %modify_rc.i.i.i1199, label %"#Attr_#inc_4.exit.i.i1202"

modify_rc.i.i.i1199:                              ; preds = %loop.i1195
  %call_builtin.i.i.i1196 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1185) #11
  %get_rc_ptr.i.i.i1197 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1196, i64 -8
  %307 = bitcast i8* %get_rc_ptr.i.i.i1197 to i64*
  %308 = load i64, i64* %307, align 8
  %.not.i.i.i.i1198 = icmp eq i64 %308, 0
  br i1 %.not.i.i.i.i1198, label %"#Attr_#inc_4.exit.i.i1202", label %Then.i.i.i.i1200

Then.i.i.i.i1200:                                 ; preds = %modify_rc.i.i.i1199
  %309 = add nsw i64 %308, 1
  store i64 %309, i64* %307, align 8
  br label %"#Attr_#inc_4.exit.i.i1202"

"#Attr_#inc_4.exit.i.i1202":                      ; preds = %Then.i.i.i.i1200, %modify_rc.i.i.i1199, %loop.i1195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %302, i8* noundef nonnull align 8 dereferenceable(24) %304, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.unpack13.i = load i64, i64* %load_str_to_stack.i3.i.elt12.i, align 8
  %is_big_str.i5.i.i1201 = icmp sgt i64 %load_str_to_stack.i3.i.unpack13.i, 0
  br i1 %is_big_str.i5.i.i1201, label %modify_rc.i10.i.i1206, label %"#Attr_#inc_4.exit12.i.i1209"

modify_rc.i10.i.i1206:                            ; preds = %"#Attr_#inc_4.exit.i.i1202"
  %call_builtin.i6.i.i1203 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i1184) #11
  %get_rc_ptr.i8.i.i1204 = getelementptr inbounds i8, i8* %call_builtin.i6.i.i1203, i64 -8
  %310 = bitcast i8* %get_rc_ptr.i8.i.i1204 to i64*
  %311 = load i64, i64* %310, align 8
  %.not.i.i9.i.i1205 = icmp eq i64 %311, 0
  br i1 %.not.i.i9.i.i1205, label %"#Attr_#inc_4.exit12.i.i1209", label %Then.i.i11.i.i1207

Then.i.i11.i.i1207:                               ; preds = %modify_rc.i10.i.i1206
  %312 = add nsw i64 %311, 1
  store i64 %312, i64* %310, align 8
  br label %"#Attr_#inc_4.exit12.i.i1209"

"#Attr_#inc_4.exit12.i.i1209":                    ; preds = %Then.i.i11.i.i1207, %modify_rc.i10.i.i1206, %"#Attr_#inc_4.exit.i.i1202"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %301, i8* noundef nonnull align 8 dereferenceable(24) %305, i64 24, i1 false) #11
  %load_str_to_stack.i13.i.unpack18.i = load i64, i64* %load_str_to_stack.i13.i.elt17.i, align 8
  %is_big_str.i15.i.i1208 = icmp sgt i64 %load_str_to_stack.i13.i.unpack18.i, 0
  br i1 %is_big_str.i15.i.i1208, label %modify_rc.i20.i.i1213, label %"#Attr_#inc_3.exit.i1216"

modify_rc.i20.i.i1213:                            ; preds = %"#Attr_#inc_4.exit12.i.i1209"
  %call_builtin.i16.i.i1210 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i.i1183) #11
  %get_rc_ptr.i18.i.i1211 = getelementptr inbounds i8, i8* %call_builtin.i16.i.i1210, i64 -8
  %313 = bitcast i8* %get_rc_ptr.i18.i.i1211 to i64*
  %314 = load i64, i64* %313, align 8
  %.not.i.i19.i.i1212 = icmp eq i64 %314, 0
  br i1 %.not.i.i19.i.i1212, label %"#Attr_#inc_3.exit.i1216", label %Then.i.i21.i.i1214

Then.i.i21.i.i1214:                               ; preds = %modify_rc.i20.i.i1213
  %315 = add nsw i64 %314, 1
  store i64 %315, i64* %313, align 8
  br label %"#Attr_#inc_3.exit.i1216"

"#Attr_#inc_3.exit.i1216":                        ; preds = %Then.i.i21.i.i1214, %modify_rc.i20.i.i1213, %"#Attr_#inc_4.exit12.i.i1209"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %301) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #11
  %exitcond1676.not = icmp eq i64 %next_index.i1192, %list_len.i
  br i1 %exitcond1676.not, label %after_loop.i1221, label %loop.i1195

after_loop.i1221:                                 ; preds = %"#Attr_#inc_3.exit.i1216", %modification_list_block.i1190
  %316 = ptrtoint i8* %read_list_ptr.i to i64
  %317 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i1217 = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %318 = select i1 %.not.i.i.i1217, i64 %317, i64 %316
  %as_usize_ptr.i1218 = inttoptr i64 %318 to i64*
  %get_rc_ptr.i1219 = getelementptr inbounds i64, i64* %as_usize_ptr.i1218, i64 -1
  %319 = load i64, i64* %get_rc_ptr.i1219, align 8
  %.not.i.i1220 = icmp eq i64 %319, 0
  br i1 %.not.i.i1220, label %modification_list_block.i1233, label %Then.i.i1222

Then.i.i1222:                                     ; preds = %after_loop.i1221
  %320 = add nsw i64 %319, 1
  store i64 %320, i64* %get_rc_ptr.i1219, align 8
  br label %modification_list_block.i1233

modification_list_block.i1233:                    ; preds = %Then.i.i1222, %after_loop.i1221
  %321 = phi i64 [ 0, %after_loop.i1221 ], [ %320, %Then.i.i1222 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.i1186.0.sroa_cast)
  %incrementing_element_loop_load.i1226.0.sroa_cast = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1226 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.i1226.0.sroa_cast)
  br i1 %bounds_check.not.i1189, label %after_loop.i1257, label %loop.preheader.i1236

loop.preheader.i1236:                             ; preds = %modification_list_block.i1233
  %322 = bitcast %str.RocStr* %struct_field2.i.i1223 to i8*
  %323 = bitcast %str.RocStr* %struct_field1.i.i1224 to i8*
  %324 = bitcast %str.RocStr* %struct_field.i.i1225 to i8*
  %load_str_to_stack.i.i.elt23.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1225, i64 0, i32 2
  %struct_field_access_record_1.i.i1234 = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1226, i64 0, i32 1
  %325 = bitcast %str.RocStr* %struct_field_access_record_1.i.i1234 to i8*
  %load_str_to_stack.i.elt28.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i1224, i64 0, i32 2
  %struct_field_access_record_2.i.i1235 = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1226, i64 0, i32 2
  %326 = bitcast %str.RocStr* %struct_field_access_record_2.i.i1235 to i8*
  %load_str_to_stack.i2.elt33.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i.i1223, i64 0, i32 2
  br label %loop.i1240

loop.i1240:                                       ; preds = %"#Attr_#dec_4.exit13.i", %loop.preheader.i1236
  %next_index36.i = phi i64 [ 0, %loop.preheader.i1236 ], [ %next_index.i1237, %"#Attr_#dec_4.exit13.i" ]
  %next_index.i1237 = add nuw i64 %next_index36.i, 1
  %load_index.i1238 = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %cast_basic_basic.i1188, i64 %next_index36.i
  %327 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_index.i1238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %incrementing_element_loop_load.i1226.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %327, i64 80, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %322) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %324) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %324, i8* noundef nonnull align 8 dereferenceable(24) %327, i64 24, i1 false) #11
  %load_str_to_stack.i.i.unpack24.i = load i64, i64* %load_str_to_stack.i.i.elt23.i, align 8
  %is_big_str.i.i.i1239 = icmp sgt i64 %load_str_to_stack.i.i.unpack24.i, 0
  br i1 %is_big_str.i.i.i1239, label %modify_rc.i.i.i1243, label %"#Attr_#dec_3.exit.i"

modify_rc.i.i.i1243:                              ; preds = %loop.i1240
  %call_builtin.i.i.i1241 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1225) #11
  %get_rc_ptr.i.i.i1242 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1241, i64 -8
  %328 = bitcast i8* %get_rc_ptr.i.i.i1242 to i64*
  %329 = load i64, i64* %328, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %329, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_3.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i1243
  %330 = add i64 %329, -1
  store i64 %330, i64* %328, align 8
  %331 = icmp eq i64 %329, -9223372036854775808
  br i1 %331, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_3.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i1242, i32 8) #11
  br label %"#Attr_#dec_3.exit.i"

"#Attr_#dec_3.exit.i":                            ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modify_rc.i.i.i1243, %loop.i1240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %323, i8* noundef nonnull align 8 dereferenceable(24) %325, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack29.i = load i64, i64* %load_str_to_stack.i.elt28.i, align 8
  %is_big_str.i.i1244 = icmp sgt i64 %load_str_to_stack.i.unpack29.i, 0
  br i1 %is_big_str.i.i1244, label %modify_rc.i.i1248, label %"#Attr_#dec_4.exit.i1251"

modify_rc.i.i1248:                                ; preds = %"#Attr_#dec_3.exit.i"
  %call_builtin.i.i1245 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i1224) #11
  %get_rc_ptr.i.i1246 = getelementptr inbounds i8, i8* %call_builtin.i.i1245, i64 -8
  %332 = bitcast i8* %get_rc_ptr.i.i1246 to i64*
  %333 = load i64, i64* %332, align 8
  %.not.i.i.i.i.i1247 = icmp eq i64 %333, 0
  br i1 %.not.i.i.i.i.i1247, label %"#Attr_#dec_4.exit.i1251", label %Then.i.i.i.i.i1249

Then.i.i.i.i.i1249:                               ; preds = %modify_rc.i.i1248
  %334 = add i64 %333, -1
  store i64 %334, i64* %332, align 8
  %335 = icmp eq i64 %333, -9223372036854775808
  br i1 %335, label %Then1.i.i.i.i.i1250, label %"#Attr_#dec_4.exit.i1251"

Then1.i.i.i.i.i1250:                              ; preds = %Then.i.i.i.i.i1249
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i1246, i32 8) #11
  br label %"#Attr_#dec_4.exit.i1251"

"#Attr_#dec_4.exit.i1251":                        ; preds = %Then1.i.i.i.i.i1250, %Then.i.i.i.i.i1249, %modify_rc.i.i1248, %"#Attr_#dec_3.exit.i"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %322, i8* noundef nonnull align 8 dereferenceable(24) %326, i64 24, i1 false) #11
  %load_str_to_stack.i2.unpack34.i = load i64, i64* %load_str_to_stack.i2.elt33.i, align 8
  %is_big_str.i4.i = icmp sgt i64 %load_str_to_stack.i2.unpack34.i, 0
  br i1 %is_big_str.i4.i, label %modify_rc.i9.i, label %"#Attr_#dec_4.exit13.i"

modify_rc.i9.i:                                   ; preds = %"#Attr_#dec_4.exit.i1251"
  %call_builtin.i5.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i.i1223) #11
  %get_rc_ptr.i7.i = getelementptr inbounds i8, i8* %call_builtin.i5.i, i64 -8
  %336 = bitcast i8* %get_rc_ptr.i7.i to i64*
  %337 = load i64, i64* %336, align 8
  %.not.i.i.i.i8.i = icmp eq i64 %337, 0
  br i1 %.not.i.i.i.i8.i, label %"#Attr_#dec_4.exit13.i", label %Then.i.i.i.i10.i

Then.i.i.i.i10.i:                                 ; preds = %modify_rc.i9.i
  %338 = add i64 %337, -1
  store i64 %338, i64* %336, align 8
  %339 = icmp eq i64 %337, -9223372036854775808
  br i1 %339, label %Then1.i.i.i.i11.i, label %"#Attr_#dec_4.exit13.i"

Then1.i.i.i.i11.i:                                ; preds = %Then.i.i.i.i10.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i7.i, i32 8) #11
  br label %"#Attr_#dec_4.exit13.i"

"#Attr_#dec_4.exit13.i":                          ; preds = %Then1.i.i.i.i11.i, %Then.i.i.i.i10.i, %modify_rc.i9.i, %"#Attr_#dec_4.exit.i1251"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %322) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %324) #11
  %exitcond1675.not = icmp eq i64 %next_index.i1237, %list_len.i
  br i1 %exitcond1675.not, label %after_loop.i1257.loopexit, label %loop.i1240

after_loop.i1257.loopexit:                        ; preds = %"#Attr_#dec_4.exit13.i"
  %.pre = load i64, i64* %get_rc_ptr.i1219, align 8
  br label %after_loop.i1257

after_loop.i1257:                                 ; preds = %after_loop.i1257.loopexit, %modification_list_block.i1233
  %340 = phi i64 [ %.pre, %after_loop.i1257.loopexit ], [ %321, %modification_list_block.i1233 ]
  %.not.i.i.i.i1256 = icmp eq i64 %340, 0
  br i1 %.not.i.i.i.i1256, label %"#Attr_#dec_21.exit", label %Then.i.i.i.i1258

Then.i.i.i.i1258:                                 ; preds = %after_loop.i1257
  %341 = add i64 %340, -1
  store i64 %341, i64* %get_rc_ptr.i1219, align 8
  %342 = icmp eq i64 %340, -9223372036854775808
  br i1 %342, label %Then1.i.i.i.i1259, label %"#Attr_#dec_21.exit"

Then1.i.i.i.i1259:                                ; preds = %Then.i.i.i.i1258
  %343 = bitcast i64* %get_rc_ptr.i1219 to i8*
  tail call void @roc_dealloc(i8* %343, i32 8) #11
  br label %"#Attr_#dec_21.exit"

"#Attr_#dec_21.exit":                             ; preds = %after_loop.i1257, %Then.i.i.i.i1258, %Then1.i.i.i.i1259
  %incrementing_element_loop_load.i1226.0.sroa_cast1742.pre-phi = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1226 to i8*
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.i1226.0.sroa_cast1742.pre-phi)
  %eq_u64.i.i = icmp eq i64 %list_len.i, 0
  br i1 %eq_u64.i.i, label %then_block78, label %else_block79

"#Attr_#dec_21.exit.thread":                      ; preds = %Arg_filterMap_aa569c3d6fd0a9ba5c3fe38b8f4b291c73dd8cc1738a2e8a272630725b8.exit
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.i1186.0.sroa_cast)
  %list_len.i.i1647 = extractvalue %list.RocList %joinpointarg1.i.i.i.i.lcssa, 1
  %incrementing_element_loop_load.i1226.0.sroa_cast1741 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1226 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.i1226.0.sroa_cast1741)
  %incrementing_element_loop_load.i1226.0.sroa_cast1742.pre-phi1756 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %incrementing_element_loop_load.i1226 to i8*
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %incrementing_element_loop_load.i1226.0.sroa_cast1742.pre-phi1756)
  %eq_u64.i.i1757 = icmp eq i64 %list_len.i.i1647, 0
  br i1 %eq_u64.i.i1757, label %"#Attr_#dec_21.exit1316", label %else_block79

then_block78:                                     ; preds = %"#Attr_#dec_21.exit"
  br i1 %"cap > 0.not.i1187", label %"#Attr_#dec_21.exit1316", label %modification_list_block.i1270

modification_list_block.i1270:                    ; preds = %then_block78
  %read_list_ptr.i1266 = extractvalue %list.RocList %joinpointarg1.i.i.i.i.lcssa, 0
  %344 = ptrtoint i8* %read_list_ptr.i1266 to i64
  %345 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i1309 = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %346 = select i1 %.not.i.i.i1309, i64 %345, i64 %344
  %as_usize_ptr.i1310 = inttoptr i64 %346 to i64*
  %get_rc_ptr.i1311 = getelementptr inbounds i64, i64* %as_usize_ptr.i1310, i64 -1
  %347 = load i64, i64* %get_rc_ptr.i1311, align 8
  %.not.i.i.i.i1312 = icmp eq i64 %347, 0
  br i1 %.not.i.i.i.i1312, label %"#Attr_#dec_21.exit1316", label %Then.i.i.i.i1314

Then.i.i.i.i1314:                                 ; preds = %modification_list_block.i1270
  %348 = add i64 %347, -1
  store i64 %348, i64* %get_rc_ptr.i1311, align 8
  %349 = icmp eq i64 %347, -9223372036854775808
  br i1 %349, label %Then1.i.i.i.i1315, label %"#Attr_#dec_21.exit1316"

Then1.i.i.i.i1315:                                ; preds = %Then.i.i.i.i1314
  %350 = bitcast i64* %get_rc_ptr.i1311 to i8*
  tail call void @roc_dealloc(i8* %350, i32 8) #11
  br label %"#Attr_#dec_21.exit1316"

"#Attr_#dec_21.exit1316":                         ; preds = %"#Attr_#dec_21.exit.thread", %then_block78, %modification_list_block.i1270, %Then.i.i.i.i1314, %Then1.i.i.i.i1315
  %const_str_store80.repack126 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store80, i64 0, i32 2
  %351 = bitcast %str.RocStr* %const_str_store80 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %351, i8 0, i64 16, i1 false)
  store i64 -9223372036854775808, i64* %const_str_store80.repack126, align 8
  br label %joinpointcont75

else_block79:                                     ; preds = %"#Attr_#dec_21.exit.thread", %"#Attr_#dec_21.exit"
  %list_len.i.i16491758 = phi i64 [ %list_len.i.i1647, %"#Attr_#dec_21.exit.thread" ], [ %list_len.i, %"#Attr_#dec_21.exit" ]
  %"#arg1.elt.i432" = extractvalue %list.RocList %joinpointarg1.i.i.i.i.lcssa, 0
  %.not.i.i = icmp eq i8* %"#arg1.elt.i432", null
  br i1 %.not.i.i, label %roc_builtins.list.map.exit.i, label %OptionalThen.i.i

OptionalThen.i.i:                                 ; preds = %else_block79
  %352 = icmp ugt i64 %list_len.i.i16491758, 2
  %..i.i.i.i.i = select i1 %352, i64 %list_len.i.i16491758, i64 2
  %353 = mul nuw i64 %..i.i.i.i.i, 24
  %354 = add nuw i64 %353, 8
  %355 = tail call i8* @roc_alloc(i64 %354, i32 8) #11, !noalias !314
  %356 = icmp ne i8* %355, null
  tail call void @llvm.assume(i1 %356) #11
  %357 = getelementptr inbounds i8, i8* %355, i64 8
  %358 = bitcast i8* %355 to i64*
  store i64 -9223372036854775808, i64* %358, align 8, !noalias !314
  %result_value.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value.i.i to i8*
  %zig_helper_load_opaque.i.i.sroa.0.0.sroa_cast1573 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr }* %zig_helper_load_opaque.i.i.sroa.0 to i8*
  %call.i.i.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %n, i64 4) #11
  %has_overflowed.i.i.i = extractvalue { i64, i1 } %call.i.i.i, 1
  %operation_result.i.i.i = extractvalue { i64, i1 } %call.i.i.i, 0
  %result_value15.i.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value15.i.i.i to i8*
  %359 = bitcast %str.RocStr* %result_value14.i.i.i to i8*
  %360 = bitcast %str.RocStr* %result_value13.i.i.i to i8*
  %361 = bitcast %str.RocStr* %result_value12.i.i.i to i8*
  %362 = bitcast %str.RocStr* %result_value11.i.i.i to i8*
  %363 = bitcast %str.RocStr* %result_value10.i.i.i to i8*
  %364 = bitcast %str.RocStr* %result_value9.i.i.i to i8*
  %365 = bitcast %str.RocStr* %const_str_store8.i.i.i to i8*
  %366 = bitcast %str.RocStr* %const_str_store7.i.i.i to i8*
  %367 = bitcast %str.RocStr* %const_str_store.i.i.i to i8*
  %368 = bitcast %str.RocStr* %result_value6.i.i.i to i8*
  %369 = bitcast %str.RocStr* %result_value5.i.i.i to i8*
  %370 = bitcast %str.RocStr* %result_value4.i.i.i to i8*
  %371 = bitcast %str.RocStr* %result_value.i.i.i to i8*
  %372 = bitcast %str.RocStr* %struct_field2.i.i.i to i8*
  %373 = bitcast %str.RocStr* %struct_field1.i.i.i to i8*
  %374 = bitcast %str.RocStr* %struct_field.i.i.i to i8*
  %zig_helper_load_opaque.i.i.sroa.0.24.sroa_idx = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr, %str.RocStr }* %zig_helper_load_opaque.i.i.sroa.0, i64 0, i32 1
  %zig_helper_load_opaque.i.i.sroa.0.24.sroa_cast = bitcast %str.RocStr* %zig_helper_load_opaque.i.i.sroa.0.24.sroa_idx to i8*
  %zig_helper_load_opaque.i.i.sroa.0.48.sroa_idx = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr, %str.RocStr }* %zig_helper_load_opaque.i.i.sroa.0, i64 0, i32 2
  %zig_helper_load_opaque.i.i.sroa.0.48.sroa_cast = bitcast %str.RocStr* %zig_helper_load_opaque.i.i.sroa.0.48.sroa_idx to i8*
  %375 = bitcast %str.RocStr* %const_str_store.i.i.i.i to i8*
  %const_str_store.repack.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i, i64 0, i32 0
  %const_str_store.repack1.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i, i64 0, i32 1
  %const_str_store.repack2.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i, i64 0, i32 2
  %result_value.i.i.i.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value.i.i.i.i.i to i8*
  %376 = bitcast %str.RocStr* %const_str_store.i.i.i.i.i to i8*
  %const_str_store.repack.i.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i.i, i64 0, i32 0
  %const_str_store.repack1.i.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i.i, i64 0, i32 1
  %const_str_store.repack2.i.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i.i, i64 0, i32 2
  %load_str_to_stack.i.i.i.i.i.i437.elt824 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i.i.i, i64 0, i32 2
  %const_str_store1.sroa.0.0..sroa_idx.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value5.i.i.i, i64 0, i32 0
  %const_str_store1.sroa.2.0..sroa_idx11.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value5.i.i.i, i64 0, i32 1
  %const_str_store1.sroa.3.0..sroa_idx12.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value5.i.i.i, i64 0, i32 2
  %result_value.i.i25.i.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value.i.i25.i.i.i to i8*
  %377 = bitcast %str.RocStr* %const_str_store.i.i26.i.i.i to i8*
  %const_str_store.repack.i.i31.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i26.i.i.i, i64 0, i32 0
  %const_str_store.repack1.i.i32.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i26.i.i.i, i64 0, i32 1
  %const_str_store.repack2.i.i33.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i26.i.i.i, i64 0, i32 2
  %load_str_to_stack.i.i.i34.i.i.i.elt829 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i, i64 0, i32 2
  %const_str_store.repack.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i, i64 0, i32 0
  %const_str_store.repack16.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i, i64 0, i32 1
  %const_str_store.repack17.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i, i64 0, i32 2
  %const_str_store7.repack.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store7.i.i.i, i64 0, i32 0
  %const_str_store7.repack18.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store7.i.i.i, i64 0, i32 1
  %const_str_store7.repack19.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store7.i.i.i, i64 0, i32 2
  %const_str_store8.repack.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i.i, i64 0, i32 0
  %const_str_store8.repack20.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i.i, i64 0, i32 1
  %const_str_store8.repack21.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store8.i.i.i, i64 0, i32 2
  %load_str_to_stack.i47.i.i.i.elt839 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value9.i.i.i, i64 0, i32 2
  %load_str_to_stack.i60.i.i.i.elt844 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value10.i.i.i, i64 0, i32 2
  %load_str_to_stack.i73.i.i.i.elt849 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value11.i.i.i, i64 0, i32 2
  %load_str_to_stack.i86.i.i.i.elt854 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value12.i.i.i, i64 0, i32 2
  %load_str_to_stack.i99.i.i.i.elt859 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value13.i.i.i, i64 0, i32 2
  %load_str_to_stack.i112.i.i.i.elt864 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value14.i.i.i, i64 0, i32 2
  %result_value4.i.i.i1760 = bitcast %str.RocStr* %result_value4.i.i.i to i8*
  %result_value6.i.i.i1761 = bitcast %str.RocStr* %result_value6.i.i.i to i8*
  %result_value.i.i1762 = bitcast %str.RocStr* %result_value.i.i to i8*
  br label %WhileBody.i.i

WhileBody.i.i:                                    ; preds = %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i, %OptionalThen.i.i
  %i.010.i.i = phi i64 [ %414, %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i ], [ 0, %OptionalThen.i.i ]
  %378 = mul nuw i64 %i.010.i.i, 80
  %379 = getelementptr inbounds i8, i8* %"#arg1.elt.i432", i64 %378
  %380 = mul nuw i64 %i.010.i.i, 24
  %381 = getelementptr inbounds i8, i8* %357, i64 %380
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %zig_helper_load_opaque.i.i.sroa.0.0.sroa_cast1573)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %zig_helper_load_opaque.i.i.sroa.0.0.sroa_cast1573, i8* noundef nonnull align 8 dereferenceable(72) %379, i64 72, i1 false), !noalias !319
  %zig_helper_load_opaque.i.i.sroa.6.0..sroa_raw_idx = getelementptr inbounds i8, i8* %379, i64 72
  %zig_helper_load_opaque.i.i.sroa.6.0.copyload = load i8, i8* %zig_helper_load_opaque.i.i.sroa.6.0..sroa_raw_idx, align 8, !noalias !319
  br i1 %has_overflowed.i.i.i, label %throw_block.i.i.i, label %Arg_indent_9cbedaee2f25852ac1dafd886c0f490e07f718fc4e3aef53c2379368238db0.exit.i.i.i

throw_block.i.i.i:                                ; preds = %WhileBody.i.i
  tail call fastcc void @throw_on_overflow() #11, !noalias !319
  unreachable

Arg_indent_9cbedaee2f25852ac1dafd886c0f490e07f718fc4e3aef53c2379368238db0.exit.i.i.i: ; preds = %WhileBody.i.i
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value15.i.i.i.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %359) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %362) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %363) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %364) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %365) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %366) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %367) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %371) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %372) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %373) #11, !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %374) #11, !noalias !319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %374, i8* noundef nonnull align 8 dereferenceable(24) %379, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %373, i8* noundef nonnull align 8 dereferenceable(24) %zig_helper_load_opaque.i.i.sroa.0.24.sroa_cast, i64 24, i1 false), !noalias !319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %372, i8* noundef nonnull align 8 dereferenceable(24) %zig_helper_load_opaque.i.i.sroa.0.48.sroa_cast, i64 24, i1 false), !noalias !319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %375) #11, !noalias !319
  store i8* inttoptr (i64 32 to i8*), i8** %const_str_store.repack.i.i.i.i, align 8, !noalias !319
  store i64 0, i64* %const_str_store.repack1.i.i.i.i, align 8, !noalias !319
  store i64 -9151314442816847872, i64* %const_str_store.repack2.i.i.i.i, align 8, !noalias !319
  call fastcc void @roc_builtins.str.repeat(%str.RocStr* noalias nocapture nonnull %result_value.i.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store.i.i.i.i, i64 %operation_result.i.i.i) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %375) #11, !noalias !319
  %call_builtin.i.i23.i.i.i = call fastcc i64 @roc_builtins.str.number_of_bytes(%str.RocStr* nocapture nonnull readonly %struct_field2.i.i.i) #11, !noalias !319
  %str_len_is_zero.i.i.i.i.i = icmp eq i64 %call_builtin.i.i23.i.i.i, 0
  br i1 %str_len_is_zero.i.i.i.i.i, label %then_block.i.i.i.i436, label %else_block.i.i.i.i

then_block.i.i.i.i436:                            ; preds = %Arg_indent_9cbedaee2f25852ac1dafd886c0f490e07f718fc4e3aef53c2379368238db0.exit.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %370, i8* noundef nonnull align 8 dereferenceable(24) %zig_helper_load_opaque.i.i.sroa.0.48.sroa_cast, i64 24, i1 false)
  br label %Arg_mapNonEmptyStr_d3a52f8d384b4dd081cc744af38ee85e4a40bbb9e9828bc41c3c103c95cabd6e.exit.i.i.i

else_block.i.i.i.i:                               ; preds = %Arg_indent_9cbedaee2f25852ac1dafd886c0f490e07f718fc4e3aef53c2379368238db0.exit.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i.i.i.i.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %376) #11, !noalias !319
  store i8* inttoptr (i64 2957356 to i8*), i8** %const_str_store.repack.i.i.i.i.i, align 8, !noalias !319
  store i64 0, i64* %const_str_store.repack1.i.i.i.i.i, align 8, !noalias !319
  store i64 -9007199254740992000, i64* %const_str_store.repack2.i.i.i.i.i, align 8, !noalias !319
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i.i.i.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i.i.i.i, %str.RocStr* nocapture nonnull readonly %struct_field2.i.i.i) #11, !noalias !319
  %load_str_to_stack.i.i.i.i.i.i437.unpack825 = load i64, i64* %load_str_to_stack.i.i.i.i.i.i437.elt824, align 8, !noalias !319
  %is_big_str.i.i.i.i.i.i439 = icmp sgt i64 %load_str_to_stack.i.i.i.i.i.i437.unpack825, 0
  br i1 %is_big_str.i.i.i.i.i.i439, label %modify_rc.i.i.i.i.i.i444, label %Arg_509_52cbdfab1fef4eaa27129f11fdbd0b91db319de6a5faae5ca32c6d18a9549e.exit.i.i.i.i

modify_rc.i.i.i.i.i.i444:                         ; preds = %else_block.i.i.i.i
  %call_builtin.i.i.i.i.i.i440 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i.i.i) #11, !noalias !319
  %get_rc_ptr.i.i.i.i.i.i442 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i.i440, i64 -8
  %382 = bitcast i8* %get_rc_ptr.i.i.i.i.i.i442 to i64*
  %383 = load i64, i64* %382, align 8, !noalias !319
  %.not.i.i.i.i.i.i.i.i.i443 = icmp eq i64 %383, 0
  br i1 %.not.i.i.i.i.i.i.i.i.i443, label %Arg_509_52cbdfab1fef4eaa27129f11fdbd0b91db319de6a5faae5ca32c6d18a9549e.exit.i.i.i.i, label %Then.i.i.i.i.i.i.i.i.i445

Then.i.i.i.i.i.i.i.i.i445:                        ; preds = %modify_rc.i.i.i.i.i.i444
  %384 = add i64 %383, -1
  store i64 %384, i64* %382, align 8, !noalias !319
  %385 = icmp eq i64 %383, -9223372036854775808
  br i1 %385, label %Then1.i.i.i.i.i.i.i.i.i, label %Arg_509_52cbdfab1fef4eaa27129f11fdbd0b91db319de6a5faae5ca32c6d18a9549e.exit.i.i.i.i

Then1.i.i.i.i.i.i.i.i.i:                          ; preds = %Then.i.i.i.i.i.i.i.i.i445
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i.i.i.i442, i32 8) #11, !noalias !319
  br label %Arg_509_52cbdfab1fef4eaa27129f11fdbd0b91db319de6a5faae5ca32c6d18a9549e.exit.i.i.i.i

Arg_509_52cbdfab1fef4eaa27129f11fdbd0b91db319de6a5faae5ca32c6d18a9549e.exit.i.i.i.i: ; preds = %modify_rc.i.i.i.i.i.i444, %Then.i.i.i.i.i.i.i.i.i445, %Then1.i.i.i.i.i.i.i.i.i, %else_block.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value4.i.i.i1760, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i.i.i.i.0.sroa_cast, i64 24, i1 false) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.i.i.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %376) #11, !noalias !319
  br label %Arg_mapNonEmptyStr_d3a52f8d384b4dd081cc744af38ee85e4a40bbb9e9828bc41c3c103c95cabd6e.exit.i.i.i

Arg_mapNonEmptyStr_d3a52f8d384b4dd081cc744af38ee85e4a40bbb9e9828bc41c3c103c95cabd6e.exit.i.i.i: ; preds = %Arg_509_52cbdfab1fef4eaa27129f11fdbd0b91db319de6a5faae5ca32c6d18a9549e.exit.i.i.i.i, %then_block.i.i.i.i436
  switch i8 %zig_helper_load_opaque.i.i.sroa.6.0.copyload, label %default.i.i.i.i [
    i8 0, label %branch0.i.i.i.i
    i8 2, label %branch2.i.i.i.i
  ]

default.i.i.i.i:                                  ; preds = %Arg_mapNonEmptyStr_d3a52f8d384b4dd081cc744af38ee85e4a40bbb9e9828bc41c3c103c95cabd6e.exit.i.i.i
  store i8* inttoptr (i64 3202733779772010089 to i8*), i8** %const_str_store1.sroa.0.0..sroa_idx.i.i.i.i, align 8, !noalias !319
  br label %Arg_formatOptionType_1cd9f13e82484c83f7c52506186edb89da51b9a667bccffa6a3c4a3e3cecb7.exit.i.i.i

branch0.i.i.i.i:                                  ; preds = %Arg_mapNonEmptyStr_d3a52f8d384b4dd081cc744af38ee85e4a40bbb9e9828bc41c3c103c95cabd6e.exit.i.i.i
  store i8* inttoptr (i64 31069335677005666 to i8*), i8** %const_str_store1.sroa.0.0..sroa_idx.i.i.i.i, align 8, !noalias !319
  br label %Arg_formatOptionType_1cd9f13e82484c83f7c52506186edb89da51b9a667bccffa6a3c4a3e3cecb7.exit.i.i.i

branch2.i.i.i.i:                                  ; preds = %Arg_mapNonEmptyStr_d3a52f8d384b4dd081cc744af38ee85e4a40bbb9e9828bc41c3c103c95cabd6e.exit.i.i.i
  store i8* inttoptr (i64 113723913172083 to i8*), i8** %const_str_store1.sroa.0.0..sroa_idx.i.i.i.i, align 8, !noalias !319
  br label %Arg_formatOptionType_1cd9f13e82484c83f7c52506186edb89da51b9a667bccffa6a3c4a3e3cecb7.exit.i.i.i

Arg_formatOptionType_1cd9f13e82484c83f7c52506186edb89da51b9a667bccffa6a3c4a3e3cecb7.exit.i.i.i: ; preds = %branch2.i.i.i.i, %branch0.i.i.i.i, %default.i.i.i.i
  %.sink1766 = phi i64 [ 0, %branch2.i.i.i.i ], [ 0, %branch0.i.i.i.i ], [ 2338609976898237984, %default.i.i.i.i ]
  %.sink = phi i64 [ -8791026472627208192, %branch2.i.i.i.i ], [ -8718968878589280256, %branch0.i.i.i.i ], [ -7637994581213615757, %default.i.i.i.i ]
  store i64 %.sink1766, i64* %const_str_store1.sroa.2.0..sroa_idx11.i.i.i.i, align 8, !noalias !319
  store i64 %.sink, i64* %const_str_store1.sroa.3.0..sroa_idx12.i.i.i.i, align 8, !noalias !319
  %call_builtin.i.i28.i.i.i = call fastcc i64 @roc_builtins.str.number_of_bytes(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i) #11, !noalias !319
  %str_len_is_zero.i.i29.i.i.i = icmp eq i64 %call_builtin.i.i28.i.i.i, 0
  br i1 %str_len_is_zero.i.i29.i.i.i, label %then_block.i30.i.i.i, label %else_block.i37.i.i.i

then_block.i30.i.i.i:                             ; preds = %Arg_formatOptionType_1cd9f13e82484c83f7c52506186edb89da51b9a667bccffa6a3c4a3e3cecb7.exit.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %368, i8* noundef nonnull align 8 dereferenceable(24) %374, i64 24, i1 false) #11, !noalias !319
  br label %"#Attr_#dec_4.exit.i.i.i"

else_block.i37.i.i.i:                             ; preds = %Arg_formatOptionType_1cd9f13e82484c83f7c52506186edb89da51b9a667bccffa6a3c4a3e3cecb7.exit.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i25.i.i.i.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %377) #11, !noalias !319
  store i8* inttoptr (i64 538976288 to i8*), i8** %const_str_store.repack.i.i31.i.i.i, align 8, !noalias !319
  store i64 0, i64* %const_str_store.repack1.i.i32.i.i.i, align 8, !noalias !319
  store i64 -8935141660703064064, i64* %const_str_store.repack2.i.i33.i.i.i, align 8, !noalias !319
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i.i25.i.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i26.i.i.i, %str.RocStr* nocapture nonnull readonly %struct_field.i.i.i) #11, !noalias !319
  %load_str_to_stack.i.i.i34.i.i.i.unpack830 = load i64, i64* %load_str_to_stack.i.i.i34.i.i.i.elt829, align 8, !noalias !319
  %is_big_str.i.i.i36.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i34.i.i.i.unpack830, 0
  br i1 %is_big_str.i.i.i36.i.i.i, label %modify_rc.i.i.i42.i.i.i, label %Arg_511_a69d81e17e4689cb82f8d2eb9b814bea73525d6fef876b07fecf6b9e2467d7a.exit.i.i.i.i

modify_rc.i.i.i42.i.i.i:                          ; preds = %else_block.i37.i.i.i
  %call_builtin.i.i.i38.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i) #11, !noalias !319
  %get_rc_ptr.i.i.i40.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i38.i.i.i, i64 -8
  %386 = bitcast i8* %get_rc_ptr.i.i.i40.i.i.i to i64*
  %387 = load i64, i64* %386, align 8, !noalias !319
  %.not.i.i.i.i.i.i41.i.i.i = icmp eq i64 %387, 0
  br i1 %.not.i.i.i.i.i.i41.i.i.i, label %Arg_511_a69d81e17e4689cb82f8d2eb9b814bea73525d6fef876b07fecf6b9e2467d7a.exit.i.i.i.i, label %Then.i.i.i.i.i.i43.i.i.i

Then.i.i.i.i.i.i43.i.i.i:                         ; preds = %modify_rc.i.i.i42.i.i.i
  %388 = add i64 %387, -1
  store i64 %388, i64* %386, align 8, !noalias !319
  %389 = icmp eq i64 %387, -9223372036854775808
  br i1 %389, label %Then1.i.i.i.i.i.i44.i.i.i, label %Arg_511_a69d81e17e4689cb82f8d2eb9b814bea73525d6fef876b07fecf6b9e2467d7a.exit.i.i.i.i

Then1.i.i.i.i.i.i44.i.i.i:                        ; preds = %Then.i.i.i.i.i.i43.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i40.i.i.i, i32 8) #11, !noalias !319
  br label %Arg_511_a69d81e17e4689cb82f8d2eb9b814bea73525d6fef876b07fecf6b9e2467d7a.exit.i.i.i.i

Arg_511_a69d81e17e4689cb82f8d2eb9b814bea73525d6fef876b07fecf6b9e2467d7a.exit.i.i.i.i: ; preds = %modify_rc.i.i.i42.i.i.i, %Then.i.i.i.i.i.i43.i.i.i, %Then1.i.i.i.i.i.i44.i.i.i, %else_block.i37.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value6.i.i.i1761, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i25.i.i.i.0.sroa_cast, i64 24, i1 false) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.i25.i.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %377) #11, !noalias !319
  br label %"#Attr_#dec_4.exit.i.i.i"

"#Attr_#dec_4.exit.i.i.i":                        ; preds = %then_block.i30.i.i.i, %Arg_511_a69d81e17e4689cb82f8d2eb9b814bea73525d6fef876b07fecf6b9e2467d7a.exit.i.i.i.i
  store i8* inttoptr (i64 11565 to i8*), i8** %const_str_store.repack.i.i.i, align 8, !noalias !319
  store i64 0, i64* %const_str_store.repack16.i.i.i, align 8, !noalias !319
  store i64 -9079256848778919936, i64* %const_str_store.repack17.i.i.i, align 8, !noalias !319
  store i8* inttoptr (i64 2629664 to i8*), i8** %const_str_store7.repack.i.i.i, align 8, !noalias !319
  store i64 0, i64* %const_str_store7.repack18.i.i.i, align 8, !noalias !319
  store i64 -9007199254740992000, i64* %const_str_store7.repack19.i.i.i, align 8, !noalias !319
  store i8* inttoptr (i64 41 to i8*), i8** %const_str_store8.repack.i.i.i, align 8, !noalias !319
  store i64 0, i64* %const_str_store8.repack20.i.i.i, align 8, !noalias !319
  store i64 -9151314442816847872, i64* %const_str_store8.repack21.i.i.i, align 8, !noalias !319
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value9.i.i.i, %str.RocStr* nonnull readonly %result_value5.i.i.i, %str.RocStr* nocapture nonnull readonly %const_str_store8.i.i.i) #11, !noalias !319
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value10.i.i.i, %str.RocStr* nonnull readonly %const_str_store7.i.i.i, %str.RocStr* nocapture nonnull readonly %result_value9.i.i.i) #11, !noalias !319
  %load_str_to_stack.i47.i.i.i.unpack840 = load i64, i64* %load_str_to_stack.i47.i.i.i.elt839, align 8, !noalias !319
  %is_big_str.i49.i.i.i = icmp sgt i64 %load_str_to_stack.i47.i.i.i.unpack840, 0
  br i1 %is_big_str.i49.i.i.i, label %modify_rc.i54.i.i.i, label %"#Attr_#dec_4.exit58.i.i.i"

modify_rc.i54.i.i.i:                              ; preds = %"#Attr_#dec_4.exit.i.i.i"
  %call_builtin.i50.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value9.i.i.i) #11, !noalias !319
  %get_rc_ptr.i52.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i50.i.i.i, i64 -8
  %390 = bitcast i8* %get_rc_ptr.i52.i.i.i to i64*
  %391 = load i64, i64* %390, align 8, !noalias !319
  %.not.i.i.i.i53.i.i.i = icmp eq i64 %391, 0
  br i1 %.not.i.i.i.i53.i.i.i, label %"#Attr_#dec_4.exit58.i.i.i", label %Then.i.i.i.i55.i.i.i

Then.i.i.i.i55.i.i.i:                             ; preds = %modify_rc.i54.i.i.i
  %392 = add i64 %391, -1
  store i64 %392, i64* %390, align 8, !noalias !319
  %393 = icmp eq i64 %391, -9223372036854775808
  br i1 %393, label %Then1.i.i.i.i56.i.i.i, label %"#Attr_#dec_4.exit58.i.i.i"

Then1.i.i.i.i56.i.i.i:                            ; preds = %Then.i.i.i.i55.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i52.i.i.i, i32 8) #11, !noalias !319
  br label %"#Attr_#dec_4.exit58.i.i.i"

"#Attr_#dec_4.exit58.i.i.i":                      ; preds = %modify_rc.i54.i.i.i, %Then.i.i.i.i55.i.i.i, %Then1.i.i.i.i56.i.i.i, %"#Attr_#dec_4.exit.i.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value11.i.i.i, %str.RocStr* nonnull readonly %result_value6.i.i.i, %str.RocStr* nocapture nonnull readonly %result_value10.i.i.i) #11, !noalias !319
  %load_str_to_stack.i60.i.i.i.unpack845 = load i64, i64* %load_str_to_stack.i60.i.i.i.elt844, align 8, !noalias !319
  %is_big_str.i62.i.i.i = icmp sgt i64 %load_str_to_stack.i60.i.i.i.unpack845, 0
  br i1 %is_big_str.i62.i.i.i, label %modify_rc.i67.i.i.i, label %"#Attr_#dec_4.exit71.i.i.i"

modify_rc.i67.i.i.i:                              ; preds = %"#Attr_#dec_4.exit58.i.i.i"
  %call_builtin.i63.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value10.i.i.i) #11, !noalias !319
  %get_rc_ptr.i65.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i63.i.i.i, i64 -8
  %394 = bitcast i8* %get_rc_ptr.i65.i.i.i to i64*
  %395 = load i64, i64* %394, align 8, !noalias !319
  %.not.i.i.i.i66.i.i.i = icmp eq i64 %395, 0
  br i1 %.not.i.i.i.i66.i.i.i, label %"#Attr_#dec_4.exit71.i.i.i", label %Then.i.i.i.i68.i.i.i

Then.i.i.i.i68.i.i.i:                             ; preds = %modify_rc.i67.i.i.i
  %396 = add i64 %395, -1
  store i64 %396, i64* %394, align 8, !noalias !319
  %397 = icmp eq i64 %395, -9223372036854775808
  br i1 %397, label %Then1.i.i.i.i69.i.i.i, label %"#Attr_#dec_4.exit71.i.i.i"

Then1.i.i.i.i69.i.i.i:                            ; preds = %Then.i.i.i.i68.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i65.i.i.i, i32 8) #11, !noalias !319
  br label %"#Attr_#dec_4.exit71.i.i.i"

"#Attr_#dec_4.exit71.i.i.i":                      ; preds = %modify_rc.i67.i.i.i, %Then.i.i.i.i68.i.i.i, %Then1.i.i.i.i69.i.i.i, %"#Attr_#dec_4.exit58.i.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value12.i.i.i, %str.RocStr* nonnull readonly %result_value4.i.i.i, %str.RocStr* nocapture nonnull readonly %result_value11.i.i.i) #11, !noalias !319
  %load_str_to_stack.i73.i.i.i.unpack850 = load i64, i64* %load_str_to_stack.i73.i.i.i.elt849, align 8, !noalias !319
  %is_big_str.i75.i.i.i = icmp sgt i64 %load_str_to_stack.i73.i.i.i.unpack850, 0
  br i1 %is_big_str.i75.i.i.i, label %modify_rc.i80.i.i.i, label %"#Attr_#dec_4.exit84.i.i.i"

modify_rc.i80.i.i.i:                              ; preds = %"#Attr_#dec_4.exit71.i.i.i"
  %call_builtin.i76.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value11.i.i.i) #11, !noalias !319
  %get_rc_ptr.i78.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i76.i.i.i, i64 -8
  %398 = bitcast i8* %get_rc_ptr.i78.i.i.i to i64*
  %399 = load i64, i64* %398, align 8, !noalias !319
  %.not.i.i.i.i79.i.i.i = icmp eq i64 %399, 0
  br i1 %.not.i.i.i.i79.i.i.i, label %"#Attr_#dec_4.exit84.i.i.i", label %Then.i.i.i.i81.i.i.i

Then.i.i.i.i81.i.i.i:                             ; preds = %modify_rc.i80.i.i.i
  %400 = add i64 %399, -1
  store i64 %400, i64* %398, align 8, !noalias !319
  %401 = icmp eq i64 %399, -9223372036854775808
  br i1 %401, label %Then1.i.i.i.i82.i.i.i, label %"#Attr_#dec_4.exit84.i.i.i"

Then1.i.i.i.i82.i.i.i:                            ; preds = %Then.i.i.i.i81.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i78.i.i.i, i32 8) #11, !noalias !319
  br label %"#Attr_#dec_4.exit84.i.i.i"

"#Attr_#dec_4.exit84.i.i.i":                      ; preds = %modify_rc.i80.i.i.i, %Then.i.i.i.i81.i.i.i, %Then1.i.i.i.i82.i.i.i, %"#Attr_#dec_4.exit71.i.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value13.i.i.i, %str.RocStr* nonnull readonly %struct_field1.i.i.i, %str.RocStr* nocapture nonnull readonly %result_value12.i.i.i) #11, !noalias !319
  %load_str_to_stack.i86.i.i.i.unpack855 = load i64, i64* %load_str_to_stack.i86.i.i.i.elt854, align 8, !noalias !319
  %is_big_str.i88.i.i.i = icmp sgt i64 %load_str_to_stack.i86.i.i.i.unpack855, 0
  br i1 %is_big_str.i88.i.i.i, label %modify_rc.i93.i.i.i, label %"#Attr_#dec_4.exit97.i.i.i"

modify_rc.i93.i.i.i:                              ; preds = %"#Attr_#dec_4.exit84.i.i.i"
  %call_builtin.i89.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value12.i.i.i) #11, !noalias !319
  %get_rc_ptr.i91.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i89.i.i.i, i64 -8
  %402 = bitcast i8* %get_rc_ptr.i91.i.i.i to i64*
  %403 = load i64, i64* %402, align 8, !noalias !319
  %.not.i.i.i.i92.i.i.i = icmp eq i64 %403, 0
  br i1 %.not.i.i.i.i92.i.i.i, label %"#Attr_#dec_4.exit97.i.i.i", label %Then.i.i.i.i94.i.i.i

Then.i.i.i.i94.i.i.i:                             ; preds = %modify_rc.i93.i.i.i
  %404 = add i64 %403, -1
  store i64 %404, i64* %402, align 8, !noalias !319
  %405 = icmp eq i64 %403, -9223372036854775808
  br i1 %405, label %Then1.i.i.i.i95.i.i.i, label %"#Attr_#dec_4.exit97.i.i.i"

Then1.i.i.i.i95.i.i.i:                            ; preds = %Then.i.i.i.i94.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i91.i.i.i, i32 8) #11, !noalias !319
  br label %"#Attr_#dec_4.exit97.i.i.i"

"#Attr_#dec_4.exit97.i.i.i":                      ; preds = %modify_rc.i93.i.i.i, %Then.i.i.i.i94.i.i.i, %Then1.i.i.i.i95.i.i.i, %"#Attr_#dec_4.exit84.i.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value14.i.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i.i, %str.RocStr* nocapture nonnull readonly %result_value13.i.i.i) #11, !noalias !319
  %load_str_to_stack.i99.i.i.i.unpack860 = load i64, i64* %load_str_to_stack.i99.i.i.i.elt859, align 8, !noalias !319
  %is_big_str.i101.i.i.i = icmp sgt i64 %load_str_to_stack.i99.i.i.i.unpack860, 0
  br i1 %is_big_str.i101.i.i.i, label %modify_rc.i106.i.i.i, label %"#Attr_#dec_4.exit110.i.i.i"

modify_rc.i106.i.i.i:                             ; preds = %"#Attr_#dec_4.exit97.i.i.i"
  %call_builtin.i102.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value13.i.i.i) #11, !noalias !319
  %get_rc_ptr.i104.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i102.i.i.i, i64 -8
  %406 = bitcast i8* %get_rc_ptr.i104.i.i.i to i64*
  %407 = load i64, i64* %406, align 8, !noalias !319
  %.not.i.i.i.i105.i.i.i = icmp eq i64 %407, 0
  br i1 %.not.i.i.i.i105.i.i.i, label %"#Attr_#dec_4.exit110.i.i.i", label %Then.i.i.i.i107.i.i.i

Then.i.i.i.i107.i.i.i:                            ; preds = %modify_rc.i106.i.i.i
  %408 = add i64 %407, -1
  store i64 %408, i64* %406, align 8, !noalias !319
  %409 = icmp eq i64 %407, -9223372036854775808
  br i1 %409, label %Then1.i.i.i.i108.i.i.i, label %"#Attr_#dec_4.exit110.i.i.i"

Then1.i.i.i.i108.i.i.i:                           ; preds = %Then.i.i.i.i107.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i104.i.i.i, i32 8) #11, !noalias !319
  br label %"#Attr_#dec_4.exit110.i.i.i"

"#Attr_#dec_4.exit110.i.i.i":                     ; preds = %modify_rc.i106.i.i.i, %Then.i.i.i.i107.i.i.i, %Then1.i.i.i.i108.i.i.i, %"#Attr_#dec_4.exit97.i.i.i"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value15.i.i.i, %str.RocStr* nonnull readonly %result_value.i.i.i, %str.RocStr* nocapture nonnull readonly %result_value14.i.i.i) #11, !noalias !319
  %load_str_to_stack.i112.i.i.i.unpack865 = load i64, i64* %load_str_to_stack.i112.i.i.i.elt864, align 8, !noalias !319
  %is_big_str.i114.i.i.i = icmp sgt i64 %load_str_to_stack.i112.i.i.i.unpack865, 0
  br i1 %is_big_str.i114.i.i.i, label %modify_rc.i119.i.i.i, label %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i

modify_rc.i119.i.i.i:                             ; preds = %"#Attr_#dec_4.exit110.i.i.i"
  %call_builtin.i115.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value14.i.i.i) #11, !noalias !319
  %get_rc_ptr.i117.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i115.i.i.i, i64 -8
  %410 = bitcast i8* %get_rc_ptr.i117.i.i.i to i64*
  %411 = load i64, i64* %410, align 8, !noalias !319
  %.not.i.i.i.i118.i.i.i = icmp eq i64 %411, 0
  br i1 %.not.i.i.i.i118.i.i.i, label %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i, label %Then.i.i.i.i120.i.i.i

Then.i.i.i.i120.i.i.i:                            ; preds = %modify_rc.i119.i.i.i
  %412 = add i64 %411, -1
  store i64 %412, i64* %410, align 8, !noalias !319
  %413 = icmp eq i64 %411, -9223372036854775808
  br i1 %413, label %Then1.i.i.i.i121.i.i.i, label %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i

Then1.i.i.i.i121.i.i.i:                           ; preds = %Then.i.i.i.i120.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i117.i.i.i, i32 8) #11, !noalias !319
  br label %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i

Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i: ; preds = %modify_rc.i119.i.i.i, %Then.i.i.i.i120.i.i.i, %Then1.i.i.i.i121.i.i.i, %"#Attr_#dec_4.exit110.i.i.i"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i1762, i8* noundef nonnull align 8 dereferenceable(24) %result_value15.i.i.i.0.sroa_cast, i64 24, i1 false) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value15.i.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %363) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %364) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %365) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %366) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %367) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %370) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %372) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %373) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %374) #11, !noalias !319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %381, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i.0.sroa_cast, i64 24, i1 false) #11, !noalias !319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %zig_helper_load_opaque.i.i.sroa.0.0.sroa_cast1573)
  %414 = add nuw i64 %i.010.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %414, %list_len.i.i16491758
  br i1 %exitcond.not.i.i, label %roc_builtins.list.map.exit.i, label %WhileBody.i.i

roc_builtins.list.map.exit.i:                     ; preds = %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i, %else_block79
  %list_alloca.i431.sroa.0.0 = phi i8* [ null, %else_block79 ], [ %357, %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i ]
  %list_alloca.i431.sroa.5.0 = phi i64 [ 0, %else_block79 ], [ %list_len.i.i16491758, %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i ]
  %list_alloca.i431.sroa.7.0 = phi i64 [ 0, %else_block79 ], [ %..i.i.i.i.i, %Arg_490_c9d5ccaccd9783b6898d959523c47d9c8f83a917fbde2fb8429f228113b6194.exit.i ]
  %415 = ptrtoint i8* %"#arg1.elt.i432" to i64
  %416 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i448 = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %417 = select i1 %.not.i.i.i448, i64 %416, i64 %415
  %.not.i19.i = icmp eq i64 %417, 0
  br i1 %.not.i19.i, label %List_map_91a7185cf7830d688146391db9ed8048638290266a1538e66f9450e3b7b08a.exit, label %OptionalThen.i21.i

OptionalThen.i21.i:                               ; preds = %roc_builtins.list.map.exit.i
  %418 = inttoptr i64 %417 to i8*
  %419 = getelementptr inbounds i8, i8* %418, i64 -8
  %420 = bitcast i8* %419 to i64*
  %421 = load i64, i64* %420, align 8
  %.not.i.i20.i = icmp eq i64 %421, 0
  br i1 %.not.i.i20.i, label %List_map_91a7185cf7830d688146391db9ed8048638290266a1538e66f9450e3b7b08a.exit, label %Then.i.i.i449

Then.i.i.i449:                                    ; preds = %OptionalThen.i21.i
  %422 = add i64 %421, -1
  store i64 %422, i64* %420, align 8
  %423 = icmp eq i64 %421, -9223372036854775808
  br i1 %423, label %Then1.i.i.i450, label %List_map_91a7185cf7830d688146391db9ed8048638290266a1538e66f9450e3b7b08a.exit

Then1.i.i.i450:                                   ; preds = %Then.i.i.i449
  tail call void @roc_dealloc(i8* %419, i32 8) #11
  br label %List_map_91a7185cf7830d688146391db9ed8048638290266a1538e66f9450e3b7b08a.exit

List_map_91a7185cf7830d688146391db9ed8048638290266a1538e66f9450e3b7b08a.exit: ; preds = %roc_builtins.list.map.exit.i, %OptionalThen.i21.i, %Then.i.i.i449, %Then1.i.i.i450
  %const_str_store82.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store82, i64 0, i32 0
  store i8* inttoptr (i64 10 to i8*), i8** %const_str_store82.repack, align 8
  %const_str_store82.repack111 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store82, i64 0, i32 1
  store i64 0, i64* %const_str_store82.repack111, align 8
  %const_str_store82.repack112 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store82, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store82.repack112, align 8
  %424 = bitcast %list.RocList* %list_alloca.i451 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %424)
  %list_alloca.repack.i453 = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i451, i64 0, i32 0
  store i8* %list_alloca.i431.sroa.0.0, i8** %list_alloca.repack.i453, align 8
  %list_alloca.repack1.i454 = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i451, i64 0, i32 1
  store i64 %list_alloca.i431.sroa.5.0, i64* %list_alloca.repack1.i454, align 8
  %list_alloca.repack3.i455 = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i451, i64 0, i32 2
  store i64 %list_alloca.i431.sroa.7.0, i64* %list_alloca.repack3.i455, align 8
  call fastcc void @roc_builtins.str.joinWith(%str.RocStr* noalias nocapture nonnull %result_value83, %list.RocList* nocapture nonnull readonly %list_alloca.i451, %str.RocStr* nocapture nonnull readonly %const_str_store82) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %424)
  %425 = bitcast %str.RocStr* %incrementing_element_loop_load.i1317 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %425)
  %"cap > 0.not.i1318" = icmp eq i64 %list_alloca.i431.sroa.7.0, 0
  br i1 %"cap > 0.not.i1318", label %"#Attr_#dec_4.exit467", label %modification_list_block.i1321

modification_list_block.i1321:                    ; preds = %List_map_91a7185cf7830d688146391db9ed8048638290266a1538e66f9450e3b7b08a.exit
  %cast_basic_basic.i1319 = bitcast i8* %list_alloca.i431.sroa.0.0 to %str.RocStr*
  %bounds_check.not.i1320 = icmp eq i64 %list_alloca.i431.sroa.5.0, 0
  br i1 %bounds_check.not.i1320, label %after_loop.i1342, label %loop.preheader.i1323

loop.preheader.i1323:                             ; preds = %modification_list_block.i1321
  %load_str_to_stack.i.elt9.i1322 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i1317, i64 0, i32 2
  br label %loop.i1329

loop.i1329:                                       ; preds = %"#Attr_#dec_4.exit.i1337", %loop.preheader.i1323
  %next_index12.i1324 = phi i64 [ 0, %loop.preheader.i1323 ], [ %next_index.i1325, %"#Attr_#dec_4.exit.i1337" ]
  %next_index.i1325 = add nuw i64 %next_index12.i1324, 1
  %load_index.i1326 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i1319, i64 %next_index12.i1324
  %426 = bitcast %str.RocStr* %load_index.i1326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %425, i8* noundef nonnull align 8 dereferenceable(24) %426, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i1327 = load i64, i64* %load_str_to_stack.i.elt9.i1322, align 8
  %is_big_str.i.i1328 = icmp sgt i64 %load_str_to_stack.i.unpack10.i1327, 0
  br i1 %is_big_str.i.i1328, label %modify_rc.i.i1333, label %"#Attr_#dec_4.exit.i1337"

modify_rc.i.i1333:                                ; preds = %loop.i1329
  %call_builtin.i.i1330 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i1317) #11
  %get_rc_ptr.i.i1331 = getelementptr inbounds i8, i8* %call_builtin.i.i1330, i64 -8
  %427 = bitcast i8* %get_rc_ptr.i.i1331 to i64*
  %428 = load i64, i64* %427, align 8
  %.not.i.i.i.i.i1332 = icmp eq i64 %428, 0
  br i1 %.not.i.i.i.i.i1332, label %"#Attr_#dec_4.exit.i1337", label %Then.i.i.i.i.i1334

Then.i.i.i.i.i1334:                               ; preds = %modify_rc.i.i1333
  %429 = add i64 %428, -1
  store i64 %429, i64* %427, align 8
  %430 = icmp eq i64 %428, -9223372036854775808
  br i1 %430, label %Then1.i.i.i.i.i1335, label %"#Attr_#dec_4.exit.i1337"

Then1.i.i.i.i.i1335:                              ; preds = %Then.i.i.i.i.i1334
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i1331, i32 8) #11
  br label %"#Attr_#dec_4.exit.i1337"

"#Attr_#dec_4.exit.i1337":                        ; preds = %Then1.i.i.i.i.i1335, %Then.i.i.i.i.i1334, %modify_rc.i.i1333, %loop.i1329
  %exitcond1674.not = icmp eq i64 %next_index.i1325, %list_alloca.i431.sroa.5.0
  br i1 %exitcond1674.not, label %after_loop.i1342, label %loop.i1329

after_loop.i1342:                                 ; preds = %"#Attr_#dec_4.exit.i1337", %modification_list_block.i1321
  %431 = ptrtoint i8* %list_alloca.i431.sroa.0.0 to i64
  %432 = shl i64 %list_alloca.i431.sroa.7.0, 1
  %.not.i.i.i1338 = icmp slt i64 %list_alloca.i431.sroa.7.0, 0
  %433 = select i1 %.not.i.i.i1338, i64 %432, i64 %431
  %as_usize_ptr.i1339 = inttoptr i64 %433 to i64*
  %get_rc_ptr.i1340 = getelementptr inbounds i64, i64* %as_usize_ptr.i1339, i64 -1
  %434 = load i64, i64* %get_rc_ptr.i1340, align 8
  %.not.i.i.i.i1341 = icmp eq i64 %434, 0
  br i1 %.not.i.i.i.i1341, label %"#Attr_#dec_4.exit467", label %Then.i.i.i.i1343

Then.i.i.i.i1343:                                 ; preds = %after_loop.i1342
  %435 = add i64 %434, -1
  store i64 %435, i64* %get_rc_ptr.i1340, align 8
  %436 = icmp eq i64 %434, -9223372036854775808
  br i1 %436, label %Then1.i.i.i.i1344, label %"#Attr_#dec_4.exit467"

Then1.i.i.i.i1344:                                ; preds = %Then.i.i.i.i1343
  %437 = bitcast i64* %get_rc_ptr.i1340 to i8*
  tail call void @roc_dealloc(i8* %437, i32 8) #11
  br label %"#Attr_#dec_4.exit467"

"#Attr_#dec_4.exit467":                           ; preds = %Then1.i.i.i.i1344, %Then.i.i.i.i1343, %after_loop.i1342, %List_map_91a7185cf7830d688146391db9ed8048638290266a1538e66f9450e3b7b08a.exit
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %425)
  %const_str_store84.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store84, i64 0, i32 0
  store i8* inttoptr (i64 10 to i8*), i8** %const_str_store84.repack, align 8
  %const_str_store84.repack113 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store84, i64 0, i32 1
  store i64 0, i64* %const_str_store84.repack113, align 8
  %const_str_store84.repack114 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store84, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store84.repack114, align 8
  %const_str_store85.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store85, i64 0, i32 0
  store i8* inttoptr (i64 4202788979706449999 to i8*), i8** %const_str_store85.repack, align 8
  %const_str_store85.repack115 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store85, i64 0, i32 1
  store i64 10, i64* %const_str_store85.repack115, align 8
  %const_str_store85.repack116 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store85, i64 0, i32 2
  store i64 -8574853690513424384, i64* %const_str_store85.repack116, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value86, %str.RocStr* nonnull readonly %const_str_store85, %str.RocStr* nocapture nonnull readonly %result_value83) #11
  %load_str_to_stack.i469.elt874 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value83, i64 0, i32 2
  %load_str_to_stack.i469.unpack875 = load i64, i64* %load_str_to_stack.i469.elt874, align 8
  %is_big_str.i471 = icmp sgt i64 %load_str_to_stack.i469.unpack875, 0
  br i1 %is_big_str.i471, label %modify_rc.i476, label %"#Attr_#dec_4.exit480"

modify_rc.i476:                                   ; preds = %"#Attr_#dec_4.exit467"
  %call_builtin.i472 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value83) #11
  %get_rc_ptr.i474 = getelementptr inbounds i8, i8* %call_builtin.i472, i64 -8
  %438 = bitcast i8* %get_rc_ptr.i474 to i64*
  %439 = load i64, i64* %438, align 8
  %.not.i.i.i.i475 = icmp eq i64 %439, 0
  br i1 %.not.i.i.i.i475, label %"#Attr_#dec_4.exit480", label %Then.i.i.i.i477

Then.i.i.i.i477:                                  ; preds = %modify_rc.i476
  %440 = add i64 %439, -1
  store i64 %440, i64* %438, align 8
  %441 = icmp eq i64 %439, -9223372036854775808
  br i1 %441, label %Then1.i.i.i.i478, label %"#Attr_#dec_4.exit480"

Then1.i.i.i.i478:                                 ; preds = %Then.i.i.i.i477
  tail call void @roc_dealloc(i8* %get_rc_ptr.i474, i32 8) #11
  br label %"#Attr_#dec_4.exit480"

"#Attr_#dec_4.exit480":                           ; preds = %modify_rc.i476, %Then.i.i.i.i477, %Then1.i.i.i.i478, %"#Attr_#dec_4.exit467"
  %load_str_to_stack.i481.elt879 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value, i64 0, i32 2
  %load_str_to_stack.i481.unpack880 = load i64, i64* %load_str_to_stack.i481.elt879, align 8
  %is_big_str.i483 = icmp sgt i64 %load_str_to_stack.i481.unpack880, 0
  br i1 %is_big_str.i483, label %modify_rc.i488, label %"#Attr_#inc_4.exit"

modify_rc.i488:                                   ; preds = %"#Attr_#dec_4.exit480"
  %call_builtin.i484 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value) #11
  %get_rc_ptr.i486 = getelementptr inbounds i8, i8* %call_builtin.i484, i64 -8
  %442 = bitcast i8* %get_rc_ptr.i486 to i64*
  %443 = load i64, i64* %442, align 8
  %.not.i.i487 = icmp eq i64 %443, 0
  br i1 %.not.i.i487, label %"#Attr_#inc_4.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modify_rc.i488
  %444 = add nsw i64 %443, 1
  store i64 %444, i64* %442, align 8
  br label %"#Attr_#inc_4.exit"

"#Attr_#inc_4.exit":                              ; preds = %"#Attr_#dec_4.exit480", %modify_rc.i488, %Then.i.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value87, %str.RocStr* nonnull readonly %result_value, %str.RocStr* nocapture nonnull readonly %result_value86) #11
  %load_str_to_stack.i490.elt884 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value86, i64 0, i32 2
  %load_str_to_stack.i490.unpack885 = load i64, i64* %load_str_to_stack.i490.elt884, align 8
  %is_big_str.i492 = icmp sgt i64 %load_str_to_stack.i490.unpack885, 0
  br i1 %is_big_str.i492, label %modify_rc.i497, label %"#Attr_#dec_4.exit501"

modify_rc.i497:                                   ; preds = %"#Attr_#inc_4.exit"
  %call_builtin.i493 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value86) #11
  %get_rc_ptr.i495 = getelementptr inbounds i8, i8* %call_builtin.i493, i64 -8
  %445 = bitcast i8* %get_rc_ptr.i495 to i64*
  %446 = load i64, i64* %445, align 8
  %.not.i.i.i.i496 = icmp eq i64 %446, 0
  br i1 %.not.i.i.i.i496, label %"#Attr_#dec_4.exit501", label %Then.i.i.i.i498

Then.i.i.i.i498:                                  ; preds = %modify_rc.i497
  %447 = add i64 %446, -1
  store i64 %447, i64* %445, align 8
  %448 = icmp eq i64 %446, -9223372036854775808
  br i1 %448, label %Then1.i.i.i.i499, label %"#Attr_#dec_4.exit501"

Then1.i.i.i.i499:                                 ; preds = %Then.i.i.i.i498
  tail call void @roc_dealloc(i8* %get_rc_ptr.i495, i32 8) #11
  br label %"#Attr_#dec_4.exit501"

"#Attr_#dec_4.exit501":                           ; preds = %modify_rc.i497, %Then.i.i.i.i498, %Then1.i.i.i.i499, %"#Attr_#inc_4.exit"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value88, %str.RocStr* nonnull readonly %const_str_store84, %str.RocStr* nocapture nonnull readonly %result_value87) #11
  %load_str_to_stack.i503.elt889 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value87, i64 0, i32 2
  %load_str_to_stack.i503.unpack890 = load i64, i64* %load_str_to_stack.i503.elt889, align 8
  %is_big_str.i505 = icmp sgt i64 %load_str_to_stack.i503.unpack890, 0
  br i1 %is_big_str.i505, label %modify_rc.i510, label %joinpointcont75

modify_rc.i510:                                   ; preds = %"#Attr_#dec_4.exit501"
  %call_builtin.i506 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value87) #11
  %get_rc_ptr.i508 = getelementptr inbounds i8, i8* %call_builtin.i506, i64 -8
  %449 = bitcast i8* %get_rc_ptr.i508 to i64*
  %450 = load i64, i64* %449, align 8
  %.not.i.i.i.i509 = icmp eq i64 %450, 0
  br i1 %.not.i.i.i.i509, label %joinpointcont75, label %Then.i.i.i.i511

Then.i.i.i.i511:                                  ; preds = %modify_rc.i510
  %451 = add i64 %450, -1
  store i64 %451, i64* %449, align 8
  %452 = icmp eq i64 %450, -9223372036854775808
  br i1 %452, label %Then1.i.i.i.i512, label %joinpointcont75

Then1.i.i.i.i512:                                 ; preds = %Then.i.i.i.i511
  tail call void @roc_dealloc(i8* %get_rc_ptr.i508, i32 8) #11
  br label %joinpointcont75

joinpointcont75:                                  ; preds = %"#Attr_#dec_4.exit501", %Then1.i.i.i.i512, %Then.i.i.i.i511, %modify_rc.i510, %"#Attr_#dec_21.exit1316"
  %joinpointarg = phi %str.RocStr* [ %const_str_store80, %"#Attr_#dec_21.exit1316" ], [ %result_value88, %modify_rc.i510 ], [ %result_value88, %Then.i.i.i.i511 ], [ %result_value88, %Then1.i.i.i.i512 ], [ %result_value88, %"#Attr_#dec_4.exit501" ]
  %incrementing_element_loop_load.i1348.0.sroa_cast = bitcast { %str.RocStr, %str.RocStr }* %incrementing_element_loop_load.i1348 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %incrementing_element_loop_load.i1348.0.sroa_cast)
  %list_capacity_or_ref_ptr.i1349 = extractvalue %list.RocList %joinpointarg1.i.i.i.i224.lcssa, 2
  %"cap > 0.not.i1350" = icmp eq i64 %list_capacity_or_ref_ptr.i1349, 0
  br i1 %"cap > 0.not.i1350", label %"#Attr_#inc_25.exit.thread", label %modification_list_block.i1355

"#Attr_#inc_25.exit.thread":                      ; preds = %joinpointcont75
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %incrementing_element_loop_load.i1348.0.sroa_cast)
  %list_len.i.i5151655 = extractvalue %list.RocList %joinpointarg1.i.i.i.i224.lcssa, 1
  %incrementing_element_loop_load.i1379.0.sroa_cast1747 = bitcast { %str.RocStr, %str.RocStr }* %incrementing_element_loop_load.i1379 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %incrementing_element_loop_load.i1379.0.sroa_cast1747)
  br label %"#Attr_#dec_25.exit"

modification_list_block.i1355:                    ; preds = %joinpointcont75
  %read_list_ptr.i1351 = extractvalue %list.RocList %joinpointarg1.i.i.i.i224.lcssa, 0
  %cast_basic_basic.i1352 = bitcast i8* %read_list_ptr.i1351 to { %str.RocStr, %str.RocStr }*
  %list_len.i1353 = extractvalue %list.RocList %joinpointarg1.i.i.i.i224.lcssa, 1
  %bounds_check.not.i1354 = icmp eq i64 %list_len.i1353, 0
  br i1 %bounds_check.not.i1354, label %after_loop.i1375, label %loop.preheader.i1358

loop.preheader.i1358:                             ; preds = %modification_list_block.i1355
  %453 = bitcast %str.RocStr* %struct_field1.i.i1346 to i8*
  %454 = bitcast %str.RocStr* %struct_field.i.i1347 to i8*
  %load_str_to_stack.i.i.elt7.i1356 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1347, i64 0, i32 2
  %struct_field_access_record_1.i.i1357 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %incrementing_element_loop_load.i1348, i64 0, i32 1
  %455 = bitcast %str.RocStr* %struct_field_access_record_1.i.i1357 to i8*
  %load_str_to_stack.i2.i.elt12.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i1346, i64 0, i32 2
  br label %loop.i1363

loop.i1363:                                       ; preds = %"#Attr_#inc_5.exit.i", %loop.preheader.i1358
  %next_index15.i = phi i64 [ 0, %loop.preheader.i1358 ], [ %next_index.i1359, %"#Attr_#inc_5.exit.i" ]
  %next_index.i1359 = add nuw i64 %next_index15.i, 1
  %load_index.i1360 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %cast_basic_basic.i1352, i64 %next_index15.i
  %456 = bitcast { %str.RocStr, %str.RocStr }* %load_index.i1360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %incrementing_element_loop_load.i1348.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(48) %456, i64 48, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %453) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %454) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %454, i8* noundef nonnull align 8 dereferenceable(24) %456, i64 24, i1 false) #11
  %load_str_to_stack.i.i.unpack8.i1361 = load i64, i64* %load_str_to_stack.i.i.elt7.i1356, align 8
  %is_big_str.i.i.i1362 = icmp sgt i64 %load_str_to_stack.i.i.unpack8.i1361, 0
  br i1 %is_big_str.i.i.i1362, label %modify_rc.i.i.i1367, label %"#Attr_#inc_4.exit.i.i1369"

modify_rc.i.i.i1367:                              ; preds = %loop.i1363
  %call_builtin.i.i.i1364 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1347) #11
  %get_rc_ptr.i.i.i1365 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1364, i64 -8
  %457 = bitcast i8* %get_rc_ptr.i.i.i1365 to i64*
  %458 = load i64, i64* %457, align 8
  %.not.i.i.i.i1366 = icmp eq i64 %458, 0
  br i1 %.not.i.i.i.i1366, label %"#Attr_#inc_4.exit.i.i1369", label %Then.i.i.i.i1368

Then.i.i.i.i1368:                                 ; preds = %modify_rc.i.i.i1367
  %459 = add nsw i64 %458, 1
  store i64 %459, i64* %457, align 8
  br label %"#Attr_#inc_4.exit.i.i1369"

"#Attr_#inc_4.exit.i.i1369":                      ; preds = %Then.i.i.i.i1368, %modify_rc.i.i.i1367, %loop.i1363
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %453, i8* noundef nonnull align 8 dereferenceable(24) %455, i64 24, i1 false) #11
  %load_str_to_stack.i2.i.unpack13.i = load i64, i64* %load_str_to_stack.i2.i.elt12.i, align 8
  %is_big_str.i4.i.i = icmp sgt i64 %load_str_to_stack.i2.i.unpack13.i, 0
  br i1 %is_big_str.i4.i.i, label %modify_rc.i9.i.i, label %"#Attr_#inc_5.exit.i"

modify_rc.i9.i.i:                                 ; preds = %"#Attr_#inc_4.exit.i.i1369"
  %call_builtin.i5.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i1346) #11
  %get_rc_ptr.i7.i.i = getelementptr inbounds i8, i8* %call_builtin.i5.i.i, i64 -8
  %460 = bitcast i8* %get_rc_ptr.i7.i.i to i64*
  %461 = load i64, i64* %460, align 8
  %.not.i.i8.i.i = icmp eq i64 %461, 0
  br i1 %.not.i.i8.i.i, label %"#Attr_#inc_5.exit.i", label %Then.i.i10.i.i

Then.i.i10.i.i:                                   ; preds = %modify_rc.i9.i.i
  %462 = add nsw i64 %461, 1
  store i64 %462, i64* %460, align 8
  br label %"#Attr_#inc_5.exit.i"

"#Attr_#inc_5.exit.i":                            ; preds = %Then.i.i10.i.i, %modify_rc.i9.i.i, %"#Attr_#inc_4.exit.i.i1369"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %453) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %454) #11
  %exitcond1673.not = icmp eq i64 %next_index.i1359, %list_len.i1353
  br i1 %exitcond1673.not, label %after_loop.i1375, label %loop.i1363

after_loop.i1375:                                 ; preds = %"#Attr_#inc_5.exit.i", %modification_list_block.i1355
  %463 = ptrtoint i8* %read_list_ptr.i1351 to i64
  %464 = shl i64 %list_capacity_or_ref_ptr.i1349, 1
  %.not.i.i.i1371 = icmp slt i64 %list_capacity_or_ref_ptr.i1349, 0
  %465 = select i1 %.not.i.i.i1371, i64 %464, i64 %463
  %as_usize_ptr.i1372 = inttoptr i64 %465 to i64*
  %get_rc_ptr.i1373 = getelementptr inbounds i64, i64* %as_usize_ptr.i1372, i64 -1
  %466 = load i64, i64* %get_rc_ptr.i1373, align 8
  %.not.i.i1374 = icmp eq i64 %466, 0
  br i1 %.not.i.i1374, label %modification_list_block.i1386, label %Then.i.i1376

Then.i.i1376:                                     ; preds = %after_loop.i1375
  %467 = add nsw i64 %466, 1
  store i64 %467, i64* %get_rc_ptr.i1373, align 8
  br label %modification_list_block.i1386

modification_list_block.i1386:                    ; preds = %Then.i.i1376, %after_loop.i1375
  %468 = phi i64 [ 0, %after_loop.i1375 ], [ %467, %Then.i.i1376 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %incrementing_element_loop_load.i1348.0.sroa_cast)
  %incrementing_element_loop_load.i1379.0.sroa_cast = bitcast { %str.RocStr, %str.RocStr }* %incrementing_element_loop_load.i1379 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %incrementing_element_loop_load.i1379.0.sroa_cast)
  br i1 %bounds_check.not.i1354, label %after_loop.i1412, label %loop.preheader.i1388

loop.preheader.i1388:                             ; preds = %modification_list_block.i1386
  %469 = bitcast %str.RocStr* %struct_field1.i.i1377 to i8*
  %470 = bitcast %str.RocStr* %struct_field.i.i1378 to i8*
  %load_str_to_stack.i.i.elt10.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1378, i64 0, i32 2
  %struct_field_access_record_1.i.i1387 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %incrementing_element_loop_load.i1379, i64 0, i32 1
  %471 = bitcast %str.RocStr* %struct_field_access_record_1.i.i1387 to i8*
  %load_str_to_stack.i.elt15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i1377, i64 0, i32 2
  br label %loop.i1392

loop.i1392:                                       ; preds = %"#Attr_#dec_4.exit.i1407", %loop.preheader.i1388
  %next_index18.i = phi i64 [ 0, %loop.preheader.i1388 ], [ %next_index.i1389, %"#Attr_#dec_4.exit.i1407" ]
  %next_index.i1389 = add nuw i64 %next_index18.i, 1
  %load_index.i1390 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %cast_basic_basic.i1352, i64 %next_index18.i
  %472 = bitcast { %str.RocStr, %str.RocStr }* %load_index.i1390 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %incrementing_element_loop_load.i1379.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(48) %472, i64 48, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %469) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %470) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %470, i8* noundef nonnull align 8 dereferenceable(24) %472, i64 24, i1 false) #11
  %load_str_to_stack.i.i.unpack11.i = load i64, i64* %load_str_to_stack.i.i.elt10.i, align 8
  %is_big_str.i.i.i1391 = icmp sgt i64 %load_str_to_stack.i.i.unpack11.i, 0
  br i1 %is_big_str.i.i.i1391, label %modify_rc.i.i.i1396, label %"#Attr_#dec_5.exit.i"

modify_rc.i.i.i1396:                              ; preds = %loop.i1392
  %call_builtin.i.i.i1393 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1378) #11
  %get_rc_ptr.i.i.i1394 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1393, i64 -8
  %473 = bitcast i8* %get_rc_ptr.i.i.i1394 to i64*
  %474 = load i64, i64* %473, align 8
  %.not.i.i.i.i.i.i1395 = icmp eq i64 %474, 0
  br i1 %.not.i.i.i.i.i.i1395, label %"#Attr_#dec_5.exit.i", label %Then.i.i.i.i.i.i1397

Then.i.i.i.i.i.i1397:                             ; preds = %modify_rc.i.i.i1396
  %475 = add i64 %474, -1
  store i64 %475, i64* %473, align 8
  %476 = icmp eq i64 %474, -9223372036854775808
  br i1 %476, label %Then1.i.i.i.i.i.i1398, label %"#Attr_#dec_5.exit.i"

Then1.i.i.i.i.i.i1398:                            ; preds = %Then.i.i.i.i.i.i1397
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i1394, i32 8) #11
  br label %"#Attr_#dec_5.exit.i"

"#Attr_#dec_5.exit.i":                            ; preds = %Then1.i.i.i.i.i.i1398, %Then.i.i.i.i.i.i1397, %modify_rc.i.i.i1396, %loop.i1392
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %469, i8* noundef nonnull align 8 dereferenceable(24) %471, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack16.i = load i64, i64* %load_str_to_stack.i.elt15.i, align 8
  %is_big_str.i.i1399 = icmp sgt i64 %load_str_to_stack.i.unpack16.i, 0
  br i1 %is_big_str.i.i1399, label %modify_rc.i.i1403, label %"#Attr_#dec_4.exit.i1407"

modify_rc.i.i1403:                                ; preds = %"#Attr_#dec_5.exit.i"
  %call_builtin.i.i1400 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i1377) #11
  %get_rc_ptr.i.i1401 = getelementptr inbounds i8, i8* %call_builtin.i.i1400, i64 -8
  %477 = bitcast i8* %get_rc_ptr.i.i1401 to i64*
  %478 = load i64, i64* %477, align 8
  %.not.i.i.i.i.i1402 = icmp eq i64 %478, 0
  br i1 %.not.i.i.i.i.i1402, label %"#Attr_#dec_4.exit.i1407", label %Then.i.i.i.i.i1404

Then.i.i.i.i.i1404:                               ; preds = %modify_rc.i.i1403
  %479 = add i64 %478, -1
  store i64 %479, i64* %477, align 8
  %480 = icmp eq i64 %478, -9223372036854775808
  br i1 %480, label %Then1.i.i.i.i.i1405, label %"#Attr_#dec_4.exit.i1407"

Then1.i.i.i.i.i1405:                              ; preds = %Then.i.i.i.i.i1404
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i1401, i32 8) #11
  br label %"#Attr_#dec_4.exit.i1407"

"#Attr_#dec_4.exit.i1407":                        ; preds = %Then1.i.i.i.i.i1405, %Then.i.i.i.i.i1404, %modify_rc.i.i1403, %"#Attr_#dec_5.exit.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %469) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %470) #11
  %exitcond1672.not = icmp eq i64 %next_index.i1389, %list_len.i1353
  br i1 %exitcond1672.not, label %after_loop.i1412.loopexit, label %loop.i1392

after_loop.i1412.loopexit:                        ; preds = %"#Attr_#dec_4.exit.i1407"
  %.pre1753 = load i64, i64* %get_rc_ptr.i1373, align 8
  br label %after_loop.i1412

after_loop.i1412:                                 ; preds = %after_loop.i1412.loopexit, %modification_list_block.i1386
  %481 = phi i64 [ %.pre1753, %after_loop.i1412.loopexit ], [ %468, %modification_list_block.i1386 ]
  %.not.i.i.i.i1411 = icmp eq i64 %481, 0
  br i1 %.not.i.i.i.i1411, label %"#Attr_#dec_25.exit", label %Then.i.i.i.i1413

Then.i.i.i.i1413:                                 ; preds = %after_loop.i1412
  %482 = add i64 %481, -1
  store i64 %482, i64* %get_rc_ptr.i1373, align 8
  %483 = icmp eq i64 %481, -9223372036854775808
  br i1 %483, label %Then1.i.i.i.i1414, label %"#Attr_#dec_25.exit"

Then1.i.i.i.i1414:                                ; preds = %Then.i.i.i.i1413
  %484 = bitcast i64* %get_rc_ptr.i1373 to i8*
  tail call void @roc_dealloc(i8* %484, i32 8) #11
  br label %"#Attr_#dec_25.exit"

"#Attr_#dec_25.exit":                             ; preds = %"#Attr_#inc_25.exit.thread", %after_loop.i1412, %Then.i.i.i.i1413, %Then1.i.i.i.i1414
  %list_len.i.i5151657 = phi i64 [ %list_len.i.i5151655, %"#Attr_#inc_25.exit.thread" ], [ %list_len.i1353, %after_loop.i1412 ], [ %list_len.i1353, %Then.i.i.i.i1413 ], [ %list_len.i1353, %Then1.i.i.i.i1414 ]
  %incrementing_element_loop_load.i1379.0.sroa_cast1748.pre-phi = bitcast { %str.RocStr, %str.RocStr }* %incrementing_element_loop_load.i1379 to i8*
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %incrementing_element_loop_load.i1379.0.sroa_cast1748.pre-phi)
  %eq_u64.i.i516 = icmp eq i64 %list_len.i.i5151657, 0
  br i1 %eq_u64.i.i516, label %then_block93, label %else_block94

then_block93:                                     ; preds = %"#Attr_#dec_25.exit"
  %load_str_to_stack.i517.elt939 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value, i64 0, i32 2
  %load_str_to_stack.i517.unpack940 = load i64, i64* %load_str_to_stack.i517.elt939, align 8
  %is_big_str.i519 = icmp sgt i64 %load_str_to_stack.i517.unpack940, 0
  br i1 %is_big_str.i519, label %modify_rc.i524, label %"#Attr_#dec_4.exit528"

modify_rc.i524:                                   ; preds = %then_block93
  %call_builtin.i520 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value) #11
  %get_rc_ptr.i522 = getelementptr inbounds i8, i8* %call_builtin.i520, i64 -8
  %485 = bitcast i8* %get_rc_ptr.i522 to i64*
  %486 = load i64, i64* %485, align 8
  %.not.i.i.i.i523 = icmp eq i64 %486, 0
  br i1 %.not.i.i.i.i523, label %"#Attr_#dec_4.exit528", label %Then.i.i.i.i525

Then.i.i.i.i525:                                  ; preds = %modify_rc.i524
  %487 = add i64 %486, -1
  store i64 %487, i64* %485, align 8
  %488 = icmp eq i64 %486, -9223372036854775808
  br i1 %488, label %Then1.i.i.i.i526, label %"#Attr_#dec_4.exit528"

Then1.i.i.i.i526:                                 ; preds = %Then.i.i.i.i525
  tail call void @roc_dealloc(i8* %get_rc_ptr.i522, i32 8) #11
  br label %"#Attr_#dec_4.exit528"

"#Attr_#dec_4.exit528":                           ; preds = %modify_rc.i524, %Then.i.i.i.i525, %Then1.i.i.i.i526, %then_block93
  br i1 %"cap > 0.not.i1350", label %"#Attr_#dec_25.exit1459", label %modification_list_block.i1424

modification_list_block.i1424:                    ; preds = %"#Attr_#dec_4.exit528"
  %read_list_ptr.i1420 = extractvalue %list.RocList %joinpointarg1.i.i.i.i224.lcssa, 0
  %489 = ptrtoint i8* %read_list_ptr.i1420 to i64
  %490 = shl i64 %list_capacity_or_ref_ptr.i1349, 1
  %.not.i.i.i1452 = icmp slt i64 %list_capacity_or_ref_ptr.i1349, 0
  %491 = select i1 %.not.i.i.i1452, i64 %490, i64 %489
  %as_usize_ptr.i1453 = inttoptr i64 %491 to i64*
  %get_rc_ptr.i1454 = getelementptr inbounds i64, i64* %as_usize_ptr.i1453, i64 -1
  %492 = load i64, i64* %get_rc_ptr.i1454, align 8
  %.not.i.i.i.i1455 = icmp eq i64 %492, 0
  br i1 %.not.i.i.i.i1455, label %"#Attr_#dec_25.exit1459", label %Then.i.i.i.i1457

Then.i.i.i.i1457:                                 ; preds = %modification_list_block.i1424
  %493 = add i64 %492, -1
  store i64 %493, i64* %get_rc_ptr.i1454, align 8
  %494 = icmp eq i64 %492, -9223372036854775808
  br i1 %494, label %Then1.i.i.i.i1458, label %"#Attr_#dec_25.exit1459"

Then1.i.i.i.i1458:                                ; preds = %Then.i.i.i.i1457
  %495 = bitcast i64* %get_rc_ptr.i1454 to i8*
  tail call void @roc_dealloc(i8* %495, i32 8) #11
  br label %"#Attr_#dec_25.exit1459"

"#Attr_#dec_25.exit1459":                         ; preds = %"#Attr_#dec_4.exit528", %modification_list_block.i1424, %Then.i.i.i.i1457, %Then1.i.i.i.i1458
  %const_str_store95.repack124 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store95, i64 0, i32 2
  %496 = bitcast %str.RocStr* %const_str_store95 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %496, i8 0, i64 16, i1 false)
  store i64 -9223372036854775808, i64* %const_str_store95.repack124, align 8
  br label %joinpointcont89

else_block94:                                     ; preds = %"#Attr_#dec_25.exit"
  %"#arg1.elt.i549" = extractvalue %list.RocList %joinpointarg1.i.i.i.i224.lcssa, 0
  %.not.i.i554 = icmp eq i8* %"#arg1.elt.i549", null
  br i1 %.not.i.i554, label %roc_builtins.list.map.exit.i641, label %OptionalThen.i.i557

OptionalThen.i.i557:                              ; preds = %else_block94
  %497 = icmp ugt i64 %list_len.i.i5151657, 2
  %..i.i.i.i.i559 = select i1 %497, i64 %list_len.i.i5151657, i64 2
  %498 = mul nuw i64 %..i.i.i.i.i559, 24
  %499 = add nuw i64 %498, 8
  %500 = tail call i8* @roc_alloc(i64 %499, i32 8) #11, !noalias !320
  %501 = icmp ne i8* %500, null
  tail call void @llvm.assume(i1 %501) #11
  %502 = getelementptr inbounds i8, i8* %500, i64 8
  %503 = bitcast i8* %500 to i64*
  store i64 -9223372036854775808, i64* %503, align 8, !noalias !320
  %result_value.i.i541.0.sroa_cast = bitcast %str.RocStr* %result_value.i.i541 to i8*
  %zig_helper_load_opaque.i.i542.0.sroa_cast = bitcast { %str.RocStr, %str.RocStr }* %zig_helper_load_opaque.i.i542 to i8*
  %call.i.i.i565 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %n, i64 4) #11
  %has_overflowed.i.i.i566 = extractvalue { i64, i1 } %call.i.i.i565, 1
  %operation_result.i.i.i569 = extractvalue { i64, i1 } %call.i.i.i565, 0
  %result_value4.i.i.i536.0.sroa_cast = bitcast %str.RocStr* %result_value4.i.i.i536 to i8*
  %504 = bitcast %str.RocStr* %result_value3.i.i.i to i8*
  %505 = bitcast %str.RocStr* %result_value2.i.i.i to i8*
  %506 = bitcast %str.RocStr* %result_value.i.i.i537 to i8*
  %507 = bitcast %str.RocStr* %struct_field1.i.i.i538 to i8*
  %508 = bitcast %str.RocStr* %struct_field.i.i.i539 to i8*
  %struct_field_access_record_1.i.i.i570 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %zig_helper_load_opaque.i.i542, i64 0, i32 1
  %509 = bitcast %str.RocStr* %struct_field_access_record_1.i.i.i570 to i8*
  %510 = bitcast %str.RocStr* %const_str_store.i.i.i.i535 to i8*
  %const_str_store.repack.i.i.i.i571 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i535, i64 0, i32 0
  %const_str_store.repack1.i.i.i.i572 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i535, i64 0, i32 1
  %const_str_store.repack2.i.i.i.i573 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i535, i64 0, i32 2
  %result_value.i.i.i.i.i531.0.sroa_cast = bitcast %str.RocStr* %result_value.i.i.i.i.i531 to i8*
  %511 = bitcast %str.RocStr* %const_str_store.i.i.i.i.i532 to i8*
  %const_str_store.repack.i.i.i.i.i589 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i.i532, i64 0, i32 0
  %const_str_store.repack1.i.i.i.i.i590 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i.i532, i64 0, i32 1
  %const_str_store.repack2.i.i.i.i.i591 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i.i.i.i532, i64 0, i32 2
  %load_str_to_stack.i.i.i.i.i.i592.elt899 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i539, i64 0, i32 2
  %load_str_to_stack.i.i.i.i604.elt904 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value2.i.i.i, i64 0, i32 2
  %load_str_to_stack.i8.i.i.i.elt909 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value3.i.i.i, i64 0, i32 2
  br i1 %has_overflowed.i.i.i566, label %WhileBody.i.i567.us, label %WhileBody.i.i567.preheader

WhileBody.i.i567.preheader:                       ; preds = %OptionalThen.i.i557
  %result_value2.i.i.i1763 = bitcast %str.RocStr* %result_value2.i.i.i to i8*
  %result_value.i.i5411764 = bitcast %str.RocStr* %result_value.i.i541 to i8*
  br label %WhileBody.i.i567

WhileBody.i.i567.us:                              ; preds = %OptionalThen.i.i557
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i541.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %zig_helper_load_opaque.i.i542.0.sroa_cast)
  tail call fastcc void @throw_on_overflow() #11, !noalias !325
  unreachable

WhileBody.i.i567:                                 ; preds = %WhileBody.i.i567.preheader, %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i
  %i.010.i.i562 = phi i64 [ %528, %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i ], [ 0, %WhileBody.i.i567.preheader ]
  %512 = mul nuw i64 %i.010.i.i562, 48
  %513 = getelementptr inbounds i8, i8* %"#arg1.elt.i549", i64 %512
  %514 = mul nuw i64 %i.010.i.i562, 24
  %515 = getelementptr inbounds i8, i8* %502, i64 %514
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i541.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %zig_helper_load_opaque.i.i542.0.sroa_cast)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %zig_helper_load_opaque.i.i542.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(48) %513, i64 48, i1 false) #11, !noalias !325
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value4.i.i.i536.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %504) #11, !noalias !325
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %505) #11, !noalias !325
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %506) #11, !noalias !325
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %507) #11, !noalias !325
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %508) #11, !noalias !325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %508, i8* noundef nonnull align 8 dereferenceable(24) %513, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %507, i8* noundef nonnull align 8 dereferenceable(24) %509, i64 24, i1 false) #11, !noalias !325
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %510) #11, !noalias !325
  store i8* inttoptr (i64 32 to i8*), i8** %const_str_store.repack.i.i.i.i571, align 8, !noalias !325
  store i64 0, i64* %const_str_store.repack1.i.i.i.i572, align 8, !noalias !325
  store i64 -9151314442816847872, i64* %const_str_store.repack2.i.i.i.i573, align 8, !noalias !325
  call fastcc void @roc_builtins.str.repeat(%str.RocStr* noalias nocapture nonnull %result_value.i.i.i537, %str.RocStr* nocapture nonnull readonly %const_str_store.i.i.i.i535, i64 %operation_result.i.i.i569) #11, !noalias !325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %510) #11, !noalias !325
  %call_builtin.i.i6.i.i.i = call fastcc i64 @roc_builtins.str.number_of_bytes(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i539) #11, !noalias !325
  %str_len_is_zero.i.i.i.i.i586 = icmp eq i64 %call_builtin.i.i6.i.i.i, 0
  br i1 %str_len_is_zero.i.i.i.i.i586, label %then_block.i.i.i.i588, label %else_block.i.i.i.i595

then_block.i.i.i.i588:                            ; preds = %WhileBody.i.i567
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %505, i8* noundef nonnull align 8 dereferenceable(24) %508, i64 24, i1 false) #11, !noalias !325
  br label %Arg_mapNonEmptyStr_7c4d3e6013abb515afcdc3893b93e676e2479fef81216e4a37a63e321e2668.exit.i.i.i

else_block.i.i.i.i595:                            ; preds = %WhileBody.i.i567
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i.i.i.i531.0.sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %511) #11, !noalias !325
  store i8* inttoptr (i64 538976288 to i8*), i8** %const_str_store.repack.i.i.i.i.i589, align 8, !noalias !325
  store i64 0, i64* %const_str_store.repack1.i.i.i.i.i590, align 8, !noalias !325
  store i64 -8935141660703064064, i64* %const_str_store.repack2.i.i.i.i.i591, align 8, !noalias !325
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i.i.i.i.i531, %str.RocStr* nonnull readonly %const_str_store.i.i.i.i.i532, %str.RocStr* nocapture nonnull readonly %struct_field.i.i.i539) #11, !noalias !325
  %load_str_to_stack.i.i.i.i.i.i592.unpack900 = load i64, i64* %load_str_to_stack.i.i.i.i.i.i592.elt899, align 8, !noalias !325
  %is_big_str.i.i.i.i.i.i594 = icmp sgt i64 %load_str_to_stack.i.i.i.i.i.i592.unpack900, 0
  br i1 %is_big_str.i.i.i.i.i.i594, label %modify_rc.i.i.i.i.i.i600, label %Arg_518_fd5e4a13c1a33468ac1930715a67fcdb4e9fd26ba411d6f88967df9a64a94e9.exit.i.i.i.i

modify_rc.i.i.i.i.i.i600:                         ; preds = %else_block.i.i.i.i595
  %call_builtin.i.i.i.i.i.i596 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i539) #11, !noalias !325
  %get_rc_ptr.i.i.i.i.i.i598 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i.i596, i64 -8
  %516 = bitcast i8* %get_rc_ptr.i.i.i.i.i.i598 to i64*
  %517 = load i64, i64* %516, align 8, !noalias !325
  %.not.i.i.i.i.i.i.i.i.i599 = icmp eq i64 %517, 0
  br i1 %.not.i.i.i.i.i.i.i.i.i599, label %Arg_518_fd5e4a13c1a33468ac1930715a67fcdb4e9fd26ba411d6f88967df9a64a94e9.exit.i.i.i.i, label %Then.i.i.i.i.i.i.i.i.i601

Then.i.i.i.i.i.i.i.i.i601:                        ; preds = %modify_rc.i.i.i.i.i.i600
  %518 = add i64 %517, -1
  store i64 %518, i64* %516, align 8, !noalias !325
  %519 = icmp eq i64 %517, -9223372036854775808
  br i1 %519, label %Then1.i.i.i.i.i.i.i.i.i602, label %Arg_518_fd5e4a13c1a33468ac1930715a67fcdb4e9fd26ba411d6f88967df9a64a94e9.exit.i.i.i.i

Then1.i.i.i.i.i.i.i.i.i602:                       ; preds = %Then.i.i.i.i.i.i.i.i.i601
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i.i.i.i598, i32 8) #11, !noalias !325
  br label %Arg_518_fd5e4a13c1a33468ac1930715a67fcdb4e9fd26ba411d6f88967df9a64a94e9.exit.i.i.i.i

Arg_518_fd5e4a13c1a33468ac1930715a67fcdb4e9fd26ba411d6f88967df9a64a94e9.exit.i.i.i.i: ; preds = %modify_rc.i.i.i.i.i.i600, %Then.i.i.i.i.i.i.i.i.i601, %Then1.i.i.i.i.i.i.i.i.i602, %else_block.i.i.i.i595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value2.i.i.i1763, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i.i.i.i531.0.sroa_cast, i64 24, i1 false) #11, !noalias !325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.i.i.i.i531.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %511) #11, !noalias !325
  br label %Arg_mapNonEmptyStr_7c4d3e6013abb515afcdc3893b93e676e2479fef81216e4a37a63e321e2668.exit.i.i.i

Arg_mapNonEmptyStr_7c4d3e6013abb515afcdc3893b93e676e2479fef81216e4a37a63e321e2668.exit.i.i.i: ; preds = %Arg_518_fd5e4a13c1a33468ac1930715a67fcdb4e9fd26ba411d6f88967df9a64a94e9.exit.i.i.i.i, %then_block.i.i.i.i588
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value3.i.i.i, %str.RocStr* nonnull readonly %struct_field1.i.i.i538, %str.RocStr* nocapture nonnull readonly %result_value2.i.i.i) #11, !noalias !325
  %load_str_to_stack.i.i.i.i604.unpack905 = load i64, i64* %load_str_to_stack.i.i.i.i604.elt904, align 8, !noalias !325
  %is_big_str.i.i.i.i606 = icmp sgt i64 %load_str_to_stack.i.i.i.i604.unpack905, 0
  br i1 %is_big_str.i.i.i.i606, label %modify_rc.i.i.i.i611, label %"#Attr_#dec_4.exit.i.i.i615"

modify_rc.i.i.i.i611:                             ; preds = %Arg_mapNonEmptyStr_7c4d3e6013abb515afcdc3893b93e676e2479fef81216e4a37a63e321e2668.exit.i.i.i
  %call_builtin.i.i.i.i607 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value2.i.i.i) #11, !noalias !325
  %get_rc_ptr.i.i.i.i609 = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i607, i64 -8
  %520 = bitcast i8* %get_rc_ptr.i.i.i.i609 to i64*
  %521 = load i64, i64* %520, align 8, !noalias !325
  %.not.i.i.i.i.i.i.i610 = icmp eq i64 %521, 0
  br i1 %.not.i.i.i.i.i.i.i610, label %"#Attr_#dec_4.exit.i.i.i615", label %Then.i.i.i.i.i.i.i612

Then.i.i.i.i.i.i.i612:                            ; preds = %modify_rc.i.i.i.i611
  %522 = add i64 %521, -1
  store i64 %522, i64* %520, align 8, !noalias !325
  %523 = icmp eq i64 %521, -9223372036854775808
  br i1 %523, label %Then1.i.i.i.i.i.i.i613, label %"#Attr_#dec_4.exit.i.i.i615"

Then1.i.i.i.i.i.i.i613:                           ; preds = %Then.i.i.i.i.i.i.i612
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i.i609, i32 8) #11, !noalias !325
  br label %"#Attr_#dec_4.exit.i.i.i615"

"#Attr_#dec_4.exit.i.i.i615":                     ; preds = %modify_rc.i.i.i.i611, %Then.i.i.i.i.i.i.i612, %Then1.i.i.i.i.i.i.i613, %Arg_mapNonEmptyStr_7c4d3e6013abb515afcdc3893b93e676e2479fef81216e4a37a63e321e2668.exit.i.i.i
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value4.i.i.i536, %str.RocStr* nonnull readonly %result_value.i.i.i537, %str.RocStr* nocapture nonnull readonly %result_value3.i.i.i) #11, !noalias !325
  %load_str_to_stack.i8.i.i.i.unpack910 = load i64, i64* %load_str_to_stack.i8.i.i.i.elt909, align 8, !noalias !325
  %is_big_str.i10.i.i.i = icmp sgt i64 %load_str_to_stack.i8.i.i.i.unpack910, 0
  br i1 %is_big_str.i10.i.i.i, label %modify_rc.i15.i.i.i, label %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i

modify_rc.i15.i.i.i:                              ; preds = %"#Attr_#dec_4.exit.i.i.i615"
  %call_builtin.i11.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value3.i.i.i) #11, !noalias !325
  %get_rc_ptr.i13.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i11.i.i.i, i64 -8
  %524 = bitcast i8* %get_rc_ptr.i13.i.i.i to i64*
  %525 = load i64, i64* %524, align 8, !noalias !325
  %.not.i.i.i.i14.i.i.i = icmp eq i64 %525, 0
  br i1 %.not.i.i.i.i14.i.i.i, label %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i, label %Then.i.i.i.i16.i.i.i

Then.i.i.i.i16.i.i.i:                             ; preds = %modify_rc.i15.i.i.i
  %526 = add i64 %525, -1
  store i64 %526, i64* %524, align 8, !noalias !325
  %527 = icmp eq i64 %525, -9223372036854775808
  br i1 %527, label %Then1.i.i.i.i17.i.i.i, label %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i

Then1.i.i.i.i17.i.i.i:                            ; preds = %Then.i.i.i.i16.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i13.i.i.i, i32 8) #11, !noalias !325
  br label %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i

Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i: ; preds = %modify_rc.i15.i.i.i, %Then.i.i.i.i16.i.i.i, %Then1.i.i.i.i17.i.i.i, %"#Attr_#dec_4.exit.i.i.i615"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i5411764, i8* noundef nonnull align 8 dereferenceable(24) %result_value4.i.i.i536.0.sroa_cast, i64 24, i1 false) #11, !noalias !325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value4.i.i.i536.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %504) #11, !noalias !325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %505) #11, !noalias !325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %506) #11, !noalias !325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %507) #11, !noalias !325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %508) #11, !noalias !325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %515, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i541.0.sroa_cast, i64 24, i1 false) #11, !noalias !325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.i541.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %zig_helper_load_opaque.i.i542.0.sroa_cast)
  %528 = add nuw i64 %i.010.i.i562, 1
  %exitcond.not.i.i617 = icmp eq i64 %528, %list_len.i.i5151657
  br i1 %exitcond.not.i.i617, label %roc_builtins.list.map.exit.i641, label %WhileBody.i.i567

roc_builtins.list.map.exit.i641:                  ; preds = %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i, %else_block94
  %list_alloca.i545.sroa.7.0 = phi i64 [ 0, %else_block94 ], [ %..i.i.i.i.i559, %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i ]
  %list_alloca.i545.sroa.5.0 = phi i64 [ 0, %else_block94 ], [ %list_len.i.i5151657, %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i ]
  %list_alloca.i545.sroa.0.0 = phi i8* [ null, %else_block94 ], [ %502, %Arg_493_a89ad79dc53f5bbfc744f7f9be72ec78a63d2ce57c714bf5379cfd79f39532d.exit.i ]
  %529 = ptrtoint i8* %"#arg1.elt.i549" to i64
  %530 = shl i64 %list_capacity_or_ref_ptr.i1349, 1
  %.not.i.i.i639 = icmp slt i64 %list_capacity_or_ref_ptr.i1349, 0
  %531 = select i1 %.not.i.i.i639, i64 %530, i64 %529
  %.not.i19.i640 = icmp eq i64 %531, 0
  br i1 %.not.i19.i640, label %"#Attr_#dec_4.exit662", label %OptionalThen.i21.i643

OptionalThen.i21.i643:                            ; preds = %roc_builtins.list.map.exit.i641
  %532 = inttoptr i64 %531 to i8*
  %533 = getelementptr inbounds i8, i8* %532, i64 -8
  %534 = bitcast i8* %533 to i64*
  %535 = load i64, i64* %534, align 8
  %.not.i.i20.i642 = icmp eq i64 %535, 0
  br i1 %.not.i.i20.i642, label %"#Attr_#dec_4.exit662", label %Then.i.i.i644

Then.i.i.i644:                                    ; preds = %OptionalThen.i21.i643
  %536 = add i64 %535, -1
  store i64 %536, i64* %534, align 8
  %537 = icmp eq i64 %535, -9223372036854775808
  br i1 %537, label %Then1.i.i.i645, label %"#Attr_#dec_4.exit662"

Then1.i.i.i645:                                   ; preds = %Then.i.i.i644
  tail call void @roc_dealloc(i8* %533, i32 8) #11
  br label %"#Attr_#dec_4.exit662"

"#Attr_#dec_4.exit662":                           ; preds = %Then1.i.i.i645, %Then.i.i.i644, %OptionalThen.i21.i643, %roc_builtins.list.map.exit.i641
  %const_str_store97.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store97, i64 0, i32 0
  store i8* inttoptr (i64 10 to i8*), i8** %const_str_store97.repack, align 8
  %const_str_store97.repack117 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store97, i64 0, i32 1
  store i64 0, i64* %const_str_store97.repack117, align 8
  %const_str_store97.repack118 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store97, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store97.repack118, align 8
  %538 = bitcast %list.RocList* %list_alloca.i646 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %538)
  %list_alloca.repack.i648 = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i646, i64 0, i32 0
  store i8* %list_alloca.i545.sroa.0.0, i8** %list_alloca.repack.i648, align 8
  %list_alloca.repack1.i649 = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i646, i64 0, i32 1
  store i64 %list_alloca.i545.sroa.5.0, i64* %list_alloca.repack1.i649, align 8
  %list_alloca.repack3.i650 = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i646, i64 0, i32 2
  store i64 %list_alloca.i545.sroa.7.0, i64* %list_alloca.repack3.i650, align 8
  call fastcc void @roc_builtins.str.joinWith(%str.RocStr* noalias nocapture nonnull %result_value98, %list.RocList* nocapture nonnull readonly %list_alloca.i646, %str.RocStr* nocapture nonnull readonly %const_str_store97) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %538)
  %539 = bitcast %str.RocStr* %incrementing_element_loop_load.i1460 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %539)
  %"cap > 0.not.i1461" = icmp eq i64 %list_alloca.i545.sroa.7.0, 0
  br i1 %"cap > 0.not.i1461", label %"#Attr_#dec_17.exit1488", label %modification_list_block.i1464

modification_list_block.i1464:                    ; preds = %"#Attr_#dec_4.exit662"
  %cast_basic_basic.i1462 = bitcast i8* %list_alloca.i545.sroa.0.0 to %str.RocStr*
  %bounds_check.not.i1463 = icmp eq i64 %list_alloca.i545.sroa.5.0, 0
  br i1 %bounds_check.not.i1463, label %after_loop.i1485, label %loop.preheader.i1466

loop.preheader.i1466:                             ; preds = %modification_list_block.i1464
  %load_str_to_stack.i.elt9.i1465 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i1460, i64 0, i32 2
  br label %loop.i1472

loop.i1472:                                       ; preds = %"#Attr_#dec_4.exit.i1480", %loop.preheader.i1466
  %next_index12.i1467 = phi i64 [ 0, %loop.preheader.i1466 ], [ %next_index.i1468, %"#Attr_#dec_4.exit.i1480" ]
  %next_index.i1468 = add nuw i64 %next_index12.i1467, 1
  %load_index.i1469 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i1462, i64 %next_index12.i1467
  %540 = bitcast %str.RocStr* %load_index.i1469 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %539, i8* noundef nonnull align 8 dereferenceable(24) %540, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i1470 = load i64, i64* %load_str_to_stack.i.elt9.i1465, align 8
  %is_big_str.i.i1471 = icmp sgt i64 %load_str_to_stack.i.unpack10.i1470, 0
  br i1 %is_big_str.i.i1471, label %modify_rc.i.i1476, label %"#Attr_#dec_4.exit.i1480"

modify_rc.i.i1476:                                ; preds = %loop.i1472
  %call_builtin.i.i1473 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i1460) #11
  %get_rc_ptr.i.i1474 = getelementptr inbounds i8, i8* %call_builtin.i.i1473, i64 -8
  %541 = bitcast i8* %get_rc_ptr.i.i1474 to i64*
  %542 = load i64, i64* %541, align 8
  %.not.i.i.i.i.i1475 = icmp eq i64 %542, 0
  br i1 %.not.i.i.i.i.i1475, label %"#Attr_#dec_4.exit.i1480", label %Then.i.i.i.i.i1477

Then.i.i.i.i.i1477:                               ; preds = %modify_rc.i.i1476
  %543 = add i64 %542, -1
  store i64 %543, i64* %541, align 8
  %544 = icmp eq i64 %542, -9223372036854775808
  br i1 %544, label %Then1.i.i.i.i.i1478, label %"#Attr_#dec_4.exit.i1480"

Then1.i.i.i.i.i1478:                              ; preds = %Then.i.i.i.i.i1477
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i1474, i32 8) #11
  br label %"#Attr_#dec_4.exit.i1480"

"#Attr_#dec_4.exit.i1480":                        ; preds = %Then1.i.i.i.i.i1478, %Then.i.i.i.i.i1477, %modify_rc.i.i1476, %loop.i1472
  %exitcond1671.not = icmp eq i64 %next_index.i1468, %list_alloca.i545.sroa.5.0
  br i1 %exitcond1671.not, label %after_loop.i1485, label %loop.i1472

after_loop.i1485:                                 ; preds = %"#Attr_#dec_4.exit.i1480", %modification_list_block.i1464
  %545 = ptrtoint i8* %list_alloca.i545.sroa.0.0 to i64
  %546 = shl i64 %list_alloca.i545.sroa.7.0, 1
  %.not.i.i.i1481 = icmp slt i64 %list_alloca.i545.sroa.7.0, 0
  %547 = select i1 %.not.i.i.i1481, i64 %546, i64 %545
  %as_usize_ptr.i1482 = inttoptr i64 %547 to i64*
  %get_rc_ptr.i1483 = getelementptr inbounds i64, i64* %as_usize_ptr.i1482, i64 -1
  %548 = load i64, i64* %get_rc_ptr.i1483, align 8
  %.not.i.i.i.i1484 = icmp eq i64 %548, 0
  br i1 %.not.i.i.i.i1484, label %"#Attr_#dec_17.exit1488", label %Then.i.i.i.i1486

Then.i.i.i.i1486:                                 ; preds = %after_loop.i1485
  %549 = add i64 %548, -1
  store i64 %549, i64* %get_rc_ptr.i1483, align 8
  %550 = icmp eq i64 %548, -9223372036854775808
  br i1 %550, label %Then1.i.i.i.i1487, label %"#Attr_#dec_17.exit1488"

Then1.i.i.i.i1487:                                ; preds = %Then.i.i.i.i1486
  %551 = bitcast i64* %get_rc_ptr.i1483 to i8*
  tail call void @roc_dealloc(i8* %551, i32 8) #11
  br label %"#Attr_#dec_17.exit1488"

"#Attr_#dec_17.exit1488":                         ; preds = %"#Attr_#dec_4.exit662", %after_loop.i1485, %Then.i.i.i.i1486, %Then1.i.i.i.i1487
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %539)
  %const_str_store99.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store99, i64 0, i32 0
  store i8* inttoptr (i64 10 to i8*), i8** %const_str_store99.repack, align 8
  %const_str_store99.repack119 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store99, i64 0, i32 1
  store i64 0, i64* %const_str_store99.repack119, align 8
  %const_str_store99.repack120 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store99, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store99.repack120, align 8
  %const_str_store100.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store100, i64 0, i32 0
  store i8* inttoptr (i64 11245621563969 to i8*), i8** %const_str_store100.repack, align 8
  %const_str_store100.repack121 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store100, i64 0, i32 1
  store i64 0, i64* %const_str_store100.repack121, align 8
  %const_str_store100.repack122 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store100, i64 0, i32 2
  store i64 -8791026472627208192, i64* %const_str_store100.repack122, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value101, %str.RocStr* nonnull readonly %const_str_store100, %str.RocStr* nocapture nonnull readonly %result_value98) #11
  %load_str_to_stack.i664.elt919 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value98, i64 0, i32 2
  %load_str_to_stack.i664.unpack920 = load i64, i64* %load_str_to_stack.i664.elt919, align 8
  %is_big_str.i666 = icmp sgt i64 %load_str_to_stack.i664.unpack920, 0
  br i1 %is_big_str.i666, label %modify_rc.i671, label %"#Attr_#dec_4.exit675"

modify_rc.i671:                                   ; preds = %"#Attr_#dec_17.exit1488"
  %call_builtin.i667 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value98) #11
  %get_rc_ptr.i669 = getelementptr inbounds i8, i8* %call_builtin.i667, i64 -8
  %552 = bitcast i8* %get_rc_ptr.i669 to i64*
  %553 = load i64, i64* %552, align 8
  %.not.i.i.i.i670 = icmp eq i64 %553, 0
  br i1 %.not.i.i.i.i670, label %"#Attr_#dec_4.exit675", label %Then.i.i.i.i672

Then.i.i.i.i672:                                  ; preds = %modify_rc.i671
  %554 = add i64 %553, -1
  store i64 %554, i64* %552, align 8
  %555 = icmp eq i64 %553, -9223372036854775808
  br i1 %555, label %Then1.i.i.i.i673, label %"#Attr_#dec_4.exit675"

Then1.i.i.i.i673:                                 ; preds = %Then.i.i.i.i672
  tail call void @roc_dealloc(i8* %get_rc_ptr.i669, i32 8) #11
  br label %"#Attr_#dec_4.exit675"

"#Attr_#dec_4.exit675":                           ; preds = %modify_rc.i671, %Then.i.i.i.i672, %Then1.i.i.i.i673, %"#Attr_#dec_17.exit1488"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value102, %str.RocStr* nonnull readonly %result_value, %str.RocStr* nocapture nonnull readonly %result_value101) #11
  %load_str_to_stack.i677.elt924 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value101, i64 0, i32 2
  %load_str_to_stack.i677.unpack925 = load i64, i64* %load_str_to_stack.i677.elt924, align 8
  %is_big_str.i679 = icmp sgt i64 %load_str_to_stack.i677.unpack925, 0
  br i1 %is_big_str.i679, label %modify_rc.i684, label %"#Attr_#dec_4.exit688"

modify_rc.i684:                                   ; preds = %"#Attr_#dec_4.exit675"
  %call_builtin.i680 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value101) #11
  %get_rc_ptr.i682 = getelementptr inbounds i8, i8* %call_builtin.i680, i64 -8
  %556 = bitcast i8* %get_rc_ptr.i682 to i64*
  %557 = load i64, i64* %556, align 8
  %.not.i.i.i.i683 = icmp eq i64 %557, 0
  br i1 %.not.i.i.i.i683, label %"#Attr_#dec_4.exit688", label %Then.i.i.i.i685

Then.i.i.i.i685:                                  ; preds = %modify_rc.i684
  %558 = add i64 %557, -1
  store i64 %558, i64* %556, align 8
  %559 = icmp eq i64 %557, -9223372036854775808
  br i1 %559, label %Then1.i.i.i.i686, label %"#Attr_#dec_4.exit688"

Then1.i.i.i.i686:                                 ; preds = %Then.i.i.i.i685
  tail call void @roc_dealloc(i8* %get_rc_ptr.i682, i32 8) #11
  br label %"#Attr_#dec_4.exit688"

"#Attr_#dec_4.exit688":                           ; preds = %modify_rc.i684, %Then.i.i.i.i685, %Then1.i.i.i.i686, %"#Attr_#dec_4.exit675"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value103, %str.RocStr* nonnull readonly %const_str_store99, %str.RocStr* nocapture nonnull readonly %result_value102) #11
  %load_str_to_stack.i138.elt929 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value102, i64 0, i32 2
  %load_str_to_stack.i138.unpack930 = load i64, i64* %load_str_to_stack.i138.elt929, align 8
  %is_big_str.i140 = icmp sgt i64 %load_str_to_stack.i138.unpack930, 0
  br i1 %is_big_str.i140, label %modify_rc.i145, label %joinpointcont89

modify_rc.i145:                                   ; preds = %"#Attr_#dec_4.exit688"
  %call_builtin.i141 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value102) #11
  %get_rc_ptr.i143 = getelementptr inbounds i8, i8* %call_builtin.i141, i64 -8
  %560 = bitcast i8* %get_rc_ptr.i143 to i64*
  %561 = load i64, i64* %560, align 8
  %.not.i.i.i.i144 = icmp eq i64 %561, 0
  br i1 %.not.i.i.i.i144, label %joinpointcont89, label %Then.i.i.i.i146

Then.i.i.i.i146:                                  ; preds = %modify_rc.i145
  %562 = add i64 %561, -1
  store i64 %562, i64* %560, align 8
  %563 = icmp eq i64 %561, -9223372036854775808
  br i1 %563, label %Then1.i.i.i.i147, label %joinpointcont89

Then1.i.i.i.i147:                                 ; preds = %Then.i.i.i.i146
  tail call void @roc_dealloc(i8* %get_rc_ptr.i143, i32 8) #11
  br label %joinpointcont89

joinpointcont89:                                  ; preds = %"#Attr_#dec_4.exit688", %Then1.i.i.i.i147, %Then.i.i.i.i146, %modify_rc.i145, %"#Attr_#dec_25.exit1459"
  %joinpointarg90 = phi %str.RocStr* [ %const_str_store95, %"#Attr_#dec_25.exit1459" ], [ %result_value103, %modify_rc.i145 ], [ %result_value103, %Then.i.i.i.i146 ], [ %result_value103, %Then1.i.i.i.i147 ], [ %result_value103, %"#Attr_#dec_4.exit688" ]
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value104, %str.RocStr* nonnull readonly %joinpointarg90, %str.RocStr* nocapture nonnull readonly %joinpointarg) #11
  %564 = bitcast %str.RocStr* %result_value104 to i8*
  %load_str_to_stack.i.elt934 = getelementptr inbounds %str.RocStr, %str.RocStr* %joinpointarg, i64 0, i32 2
  %load_str_to_stack.i.unpack935 = load i64, i64* %load_str_to_stack.i.elt934, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack935, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %common.ret

modify_rc.i:                                      ; preds = %joinpointcont89
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %joinpointarg) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %565 = bitcast i8* %get_rc_ptr.i to i64*
  %566 = load i64, i64* %565, align 8
  %.not.i.i.i.i = icmp eq i64 %566, 0
  br i1 %.not.i.i.i.i, label %common.ret, label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %567 = add i64 %566, -1
  store i64 %567, i64* %565, align 8
  %568 = icmp eq i64 %566, -9223372036854775808
  br i1 %568, label %common.ret.sink.split, label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Arg_parse_3f95465e904bca7190247a1fbb41e2fb7548d72d51b572257b32d12e6faa67e2({ %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nocapture readonly %"716", %list.RocList %args, { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i189 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %result_value1.i.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value.i.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value19 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %struct_field18 = alloca %str.RocStr, align 8
  %struct_field16 = alloca %str.RocStr, align 8
  %struct_field1 = alloca %str.RocStr, align 8
  %1 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1)
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %args, 2
  %"cap > 0.not.i" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit.thread", label %modification_list_block.i

modification_list_block.i:                        ; preds = %entry
  %read_list_ptr.i = extractvalue %list.RocList %args, 0
  %cast_basic_basic.i = bitcast i8* %read_list_ptr.i to %str.RocStr*
  %list_len.i = extractvalue %list.RocList %args, 1
  %bounds_check.not.i = icmp eq i64 %list_len.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %load_str_to_stack.i.elt7.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#inc_4.exit.i", %loop.preheader.i
  %next_index10.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#inc_4.exit.i" ]
  %next_index.i = add nuw i64 %next_index10.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index10.i
  %2 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i = load i64, i64* %load_str_to_stack.i.elt7.i, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.unpack8.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#inc_4.exit.i"

modify_rc.i.i:                                    ; preds = %loop.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %3 = bitcast i8* %get_rc_ptr.i.i to i64*
  %4 = load i64, i64* %3, align 8
  %.not.i.i2.i = icmp eq i64 %4, 0
  br i1 %.not.i.i2.i, label %"#Attr_#inc_4.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modify_rc.i.i
  %5 = add nsw i64 %4, 1
  store i64 %5, i64* %3, align 8
  br label %"#Attr_#inc_4.exit.i"

"#Attr_#inc_4.exit.i":                            ; preds = %Then.i.i.i, %modify_rc.i.i, %loop.i
  %exitcond280.not = icmp eq i64 %next_index.i, %list_len.i
  br i1 %exitcond280.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#inc_4.exit.i", %modification_list_block.i
  %6 = ptrtoint i8* %read_list_ptr.i to i64
  %7 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %8 = select i1 %.not.i.i.i, i64 %7, i64 %6
  %as_usize_ptr.i = inttoptr i64 %8 to i64*
  %get_rc_ptr.i188 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %9 = load i64, i64* %get_rc_ptr.i188, align 8
  %.not.i.i = icmp eq i64 %9, 0
  br i1 %.not.i.i, label %modification_list_block.i196, label %Then.i.i

Then.i.i:                                         ; preds = %after_loop.i
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* %get_rc_ptr.i188, align 8
  br label %modification_list_block.i196

modification_list_block.i196:                     ; preds = %Then.i.i, %after_loop.i
  %11 = phi i64 [ 0, %after_loop.i ], [ %10, %Then.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1)
  %12 = bitcast %str.RocStr* %incrementing_element_loop_load.i189 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12)
  br i1 %bounds_check.not.i, label %after_loop.i210, label %loop.preheader.i197

loop.preheader.i197:                              ; preds = %modification_list_block.i196
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i189, i64 0, i32 2
  br label %loop.i201

loop.i201:                                        ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i197
  %next_index12.i = phi i64 [ 0, %loop.preheader.i197 ], [ %next_index.i198, %"#Attr_#dec_4.exit.i" ]
  %next_index.i198 = add nuw i64 %next_index12.i, 1
  %load_index.i199 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %13 = bitcast %str.RocStr* %load_index.i199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %12, i8* noundef nonnull align 8 dereferenceable(24) %13, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i200 = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i200, label %modify_rc.i.i204, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i204:                                 ; preds = %loop.i201
  %call_builtin.i.i202 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i189) #11
  %get_rc_ptr.i.i203 = getelementptr inbounds i8, i8* %call_builtin.i.i202, i64 -8
  %14 = bitcast i8* %get_rc_ptr.i.i203 to i64*
  %15 = load i64, i64* %14, align 8
  %.not.i.i.i.i.i = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i204
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %15, -9223372036854775808
  br i1 %17, label %Then1.i.i.i.i.i, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i203, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i, %Then.i.i.i.i.i, %modify_rc.i.i204, %loop.i201
  %exitcond.not = icmp eq i64 %next_index.i198, %list_len.i
  br i1 %exitcond.not, label %after_loop.i210.loopexit, label %loop.i201

after_loop.i210.loopexit:                         ; preds = %"#Attr_#dec_4.exit.i"
  %.pre = load i64, i64* %get_rc_ptr.i188, align 8
  br label %after_loop.i210

after_loop.i210:                                  ; preds = %after_loop.i210.loopexit, %modification_list_block.i196
  %18 = phi i64 [ %.pre, %after_loop.i210.loopexit ], [ %11, %modification_list_block.i196 ]
  %.not.i.i.i.i209 = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i209, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i211

Then.i.i.i.i211:                                  ; preds = %after_loop.i210
  %19 = add i64 %18, -1
  store i64 %19, i64* %get_rc_ptr.i188, align 8
  %20 = icmp eq i64 %18, -9223372036854775808
  br i1 %20, label %Then1.i.i.i.i212, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i212:                                 ; preds = %Then.i.i.i.i211
  %21 = bitcast i64* %get_rc_ptr.i188 to i8*
  tail call void @roc_dealloc(i8* %21, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %after_loop.i210, %Then.i.i.i.i211, %Then1.i.i.i.i212
  %.pre-phi = bitcast %str.RocStr* %incrementing_element_loop_load.i189 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %.pre-phi)
  %eq_u64.i.i = icmp eq i64 %list_len.i, 0
  br i1 %eq_u64.i.i, label %then_block, label %else_block

"#Attr_#dec_17.exit.thread":                      ; preds = %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1)
  %list_len.i.i278 = extractvalue %list.RocList %args, 1
  %22 = bitcast %str.RocStr* %incrementing_element_loop_load.i189 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22)
  %.pre-phi285 = bitcast %str.RocStr* %incrementing_element_loop_load.i189 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %.pre-phi285)
  %eq_u64.i.i286 = icmp eq i64 %list_len.i.i278, 0
  br i1 %eq_u64.i.i286, label %"#Attr_#dec_17.exit244", label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_4.exit160", %"#Attr_#dec_4.exit"
  %result_value19.sink = phi { [0 x i64], [7 x i64], i8, [7 x i8] }* [ %result_value19, %"#Attr_#dec_4.exit160" ], [ %tag_alloca5, %"#Attr_#dec_4.exit" ]
  %23 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  %24 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value19.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %23, i8* noundef nonnull align 8 dereferenceable(64) %24, i64 64, i1 false)
  ret void

then_block:                                       ; preds = %"#Attr_#dec_17.exit"
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit244", label %modification_list_block.i220

modification_list_block.i220:                     ; preds = %then_block
  %read_list_ptr.i216 = extractvalue %list.RocList %args, 0
  %25 = ptrtoint i8* %read_list_ptr.i216 to i64
  %26 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i237 = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %27 = select i1 %.not.i.i.i237, i64 %26, i64 %25
  %as_usize_ptr.i238 = inttoptr i64 %27 to i64*
  %get_rc_ptr.i239 = getelementptr inbounds i64, i64* %as_usize_ptr.i238, i64 -1
  %28 = load i64, i64* %get_rc_ptr.i239, align 8
  %.not.i.i.i.i240 = icmp eq i64 %28, 0
  br i1 %.not.i.i.i.i240, label %"#Attr_#dec_17.exit244", label %Then.i.i.i.i242

Then.i.i.i.i242:                                  ; preds = %modification_list_block.i220
  %29 = add i64 %28, -1
  store i64 %29, i64* %get_rc_ptr.i239, align 8
  %30 = icmp eq i64 %28, -9223372036854775808
  br i1 %30, label %Then1.i.i.i.i243, label %"#Attr_#dec_17.exit244"

Then1.i.i.i.i243:                                 ; preds = %Then.i.i.i.i242
  %31 = bitcast i64* %get_rc_ptr.i239 to i8*
  tail call void @roc_dealloc(i8* %31, i32 8) #11
  br label %"#Attr_#dec_17.exit244"

"#Attr_#dec_17.exit244":                          ; preds = %"#Attr_#dec_17.exit.thread", %then_block, %modification_list_block.i220, %Then.i.i.i.i242, %Then1.i.i.i.i243
  %struct_field.sroa.0.0..sroa_idx = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 1, i32 0
  %struct_field.sroa.0.0.copyload = load i8*, i8** %struct_field.sroa.0.0..sroa_idx, align 8
  %struct_field.sroa.2.0..sroa_idx135 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 1, i32 1
  %struct_field.sroa.2.0.copyload = load i64, i64* %struct_field.sroa.2.0..sroa_idx135, align 8
  %struct_field.sroa.3.0..sroa_idx136 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 1, i32 2
  %struct_field.sroa.3.0.copyload = load i64, i64* %struct_field.sroa.3.0..sroa_idx136, align 8
  %32 = bitcast %str.RocStr* %struct_field1 to i8*
  %33 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %32, i8* noundef nonnull align 8 dereferenceable(24) %33, i64 24, i1 false)
  %load_str_to_stack.i.elt185 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1, i64 0, i32 2
  %load_str_to_stack.i.unpack186 = load i64, i64* %load_str_to_stack.i.elt185, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack186, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %"#Attr_#dec_17.exit244"
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %34 = bitcast i8* %get_rc_ptr.i to i64*
  %35 = load i64, i64* %34, align 8
  %.not.i.i.i.i = icmp eq i64 %35, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %36 = add i64 %35, -1
  store i64 %36, i64* %34, align 8
  %37 = icmp eq i64 %35, -9223372036854775808
  br i1 %37, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_17.exit244"
  %struct_field_access_record_2 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 2
  %struct_field2 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_2, align 8
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %struct_field2)
  %38 = ptrtoint i8* %struct_field.sroa.0.0.copyload to i64
  %struct_alloca = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack107.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %38, i64* %.repack107.repack, align 8
  %.repack107.repack113 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %struct_field.sroa.2.0.copyload, i64* %.repack107.repack113, align 8
  %.repack107.repack115 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %struct_field.sroa.3.0.copyload, i64* %.repack107.repack115, align 8
  %.repack109 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 3, i8* %.repack109, align 8
  %tag_alloca5 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer6 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca5, i64 0, i32 1
  %39 = bitcast [7 x i64]* %data_buffer6 to i8*
  %40 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %39, i8* noundef nonnull align 8 dereferenceable(56) %40, i64 56, i1 false)
  %tag_id_ptr8 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca5, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr8, align 8
  br label %common.ret

else_block:                                       ; preds = %"#Attr_#dec_17.exit.thread", %"#Attr_#dec_17.exit"
  %list_len.i.i279287 = phi i64 [ %list_len.i.i278, %"#Attr_#dec_17.exit.thread" ], [ %list_len.i, %"#Attr_#dec_17.exit" ]
  %41 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %41) #11
  %42 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %42) #11
  %43 = tail call i8* @roc_alloc(i64 72, i32 8) #11, !noalias !326
  %44 = icmp ne i8* %43, null
  tail call void @llvm.assume(i1 %44) #11, !noalias !335
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  %46 = bitcast i8* %43 to i64*
  store i64 -9223372036854775808, i64* %46, align 8, !noalias !326
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %45, i8 0, i64 64, i1 false) #11
  %47 = tail call i8* @roc_alloc(i64 72, i32 8) #11, !noalias !336
  %48 = icmp ne i8* %47, null
  tail call void @llvm.assume(i1 %48) #11, !noalias !345
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  %50 = bitcast i8* %47 to i64*
  store i64 -9223372036854775808, i64* %50, align 8, !noalias !336
  %51 = bitcast i8* %49 to i64*
  store i64 -9187201950435737472, i64* %51, align 1
  %result_value.i.i288289 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i288289, i8 0, i64 24, i1 false)
  %struct_alloca.sroa.2.0..sroa_idx22.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 0
  store i8* %45, i8** %struct_alloca.sroa.2.0..sroa_idx22.i.i.i, align 8
  %struct_alloca.sroa.3.0..sroa_idx23.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 1
  store i64 8, i64* %struct_alloca.sroa.3.0..sroa_idx23.i.i.i, align 8
  %struct_alloca.sroa.4.0..sroa_idx24.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 2
  store i64 8, i64* %struct_alloca.sroa.4.0..sroa_idx24.i.i.i, align 8
  %struct_alloca.sroa.5.0..sroa_idx25.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 0
  store i8* %49, i8** %struct_alloca.sroa.5.0..sroa_idx25.i.i.i, align 8
  %struct_alloca.sroa.6.0..sroa_idx26.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 1
  store i64 8, i64* %struct_alloca.sroa.6.0..sroa_idx26.i.i.i, align 8
  %struct_alloca.sroa.7.0..sroa_idx27.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 2
  store i64 64, i64* %struct_alloca.sroa.7.0..sroa_idx27.i.i.i, align 8
  %struct_alloca.sroa.8.0..sroa_idx28.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 3
  store i64 0, i64* %struct_alloca.sroa.8.0..sroa_idx28.i.i.i, align 8
  call fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i.i, i64 0, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value1.i.i) #11
  %result_value.i.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 0, i32 0
  %result_value.i.sroa.0.0.copyload = load i8*, i8** %result_value.i.sroa.0.0..sroa_idx, align 8
  %result_value.i.sroa.4.0..sroa_idx258 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 0, i32 1
  %result_value.i.sroa.4.0.copyload = load i64, i64* %result_value.i.sroa.4.0..sroa_idx258, align 8
  %result_value.i.sroa.5.0..sroa_idx260 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 0, i32 2
  %result_value.i.sroa.5.0.copyload = load i64, i64* %result_value.i.sroa.5.0..sroa_idx260, align 8
  %result_value.i.sroa.6.0..sroa_idx262 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 1, i32 0
  %result_value.i.sroa.6.0.copyload = load i8*, i8** %result_value.i.sroa.6.0..sroa_idx262, align 8
  %result_value.i.sroa.7.0..sroa_idx264 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 1, i32 1
  %result_value.i.sroa.7.0.copyload = load i64, i64* %result_value.i.sroa.7.0..sroa_idx264, align 8
  %result_value.i.sroa.8.0..sroa_idx266 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 1, i32 2
  %result_value.i.sroa.8.0.copyload = load i64, i64* %result_value.i.sroa.8.0..sroa_idx266, align 8
  %result_value.i.sroa.9.0..sroa_idx268 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 2, i32 0
  %result_value.i.sroa.9.0.copyload = load i8*, i8** %result_value.i.sroa.9.0..sroa_idx268, align 8
  %result_value.i.sroa.10.0..sroa_idx270 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 2, i32 1
  %result_value.i.sroa.10.0.copyload = load i64, i64* %result_value.i.sroa.10.0..sroa_idx270, align 8
  %result_value.i.sroa.11.0..sroa_idx272 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 2, i32 2
  %result_value.i.sroa.11.0.copyload = load i64, i64* %result_value.i.sroa.11.0..sroa_idx272, align 8
  %result_value.i.sroa.12.0..sroa_idx274 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 3
  %result_value.i.sroa.12.0.copyload = load i64, i64* %result_value.i.sroa.12.0..sroa_idx274, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %42) #11
  %struct_alloca12 = alloca { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, align 8
  %struct_alloca12.repack.repack = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 0, i32 0
  %args.elt = extractvalue %list.RocList %args, 0
  store i8* %args.elt, i8** %struct_alloca12.repack.repack, align 8
  %struct_alloca12.repack.repack44 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 0, i32 1
  store i64 %list_len.i.i279287, i64* %struct_alloca12.repack.repack44, align 8
  %struct_alloca12.repack.repack46 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 0, i32 2
  store i64 %list_capacity_or_ref_ptr.i, i64* %struct_alloca12.repack.repack46, align 8
  %struct_alloca12.repack42.repack.repack = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 0, i32 0
  store i8* %result_value.i.sroa.0.0.copyload, i8** %struct_alloca12.repack42.repack.repack, align 8
  %struct_alloca12.repack42.repack.repack54 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 0, i32 1
  store i64 %result_value.i.sroa.4.0.copyload, i64* %struct_alloca12.repack42.repack.repack54, align 8
  %struct_alloca12.repack42.repack.repack56 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 0, i32 2
  store i64 %result_value.i.sroa.5.0.copyload, i64* %struct_alloca12.repack42.repack.repack56, align 8
  %struct_alloca12.repack42.repack48.repack = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 1, i32 0
  store i8* %result_value.i.sroa.6.0.copyload, i8** %struct_alloca12.repack42.repack48.repack, align 8
  %struct_alloca12.repack42.repack48.repack58 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 1, i32 1
  store i64 %result_value.i.sroa.7.0.copyload, i64* %struct_alloca12.repack42.repack48.repack58, align 8
  %struct_alloca12.repack42.repack48.repack60 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 1, i32 2
  store i64 %result_value.i.sroa.8.0.copyload, i64* %struct_alloca12.repack42.repack48.repack60, align 8
  %struct_alloca12.repack42.repack50.repack = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 2, i32 0
  store i8* %result_value.i.sroa.9.0.copyload, i8** %struct_alloca12.repack42.repack50.repack, align 8
  %struct_alloca12.repack42.repack50.repack62 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 2, i32 1
  store i64 %result_value.i.sroa.10.0.copyload, i64* %struct_alloca12.repack42.repack50.repack62, align 8
  %struct_alloca12.repack42.repack50.repack64 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 2, i32 2
  store i64 %result_value.i.sroa.11.0.copyload, i64* %struct_alloca12.repack42.repack50.repack64, align 8
  %struct_alloca12.repack42.repack52 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 3
  store i64 %result_value.i.sroa.12.0.copyload, i64* %struct_alloca12.repack42.repack52, align 8
  %struct_field_access_record_213 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 2
  %struct_field14 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_213, align 8
  %52 = bitcast %str.RocStr* %struct_field16 to i8*
  %53 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %52, i8* noundef nonnull align 8 dereferenceable(24) %53, i64 24, i1 false)
  %load_str_to_stack.i137.elt175 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field16, i64 0, i32 2
  %load_str_to_stack.i137.unpack176 = load i64, i64* %load_str_to_stack.i137.elt175, align 8
  %is_big_str.i139 = icmp sgt i64 %load_str_to_stack.i137.unpack176, 0
  br i1 %is_big_str.i139, label %modify_rc.i144, label %"#Attr_#dec_4.exit148"

modify_rc.i144:                                   ; preds = %else_block
  %call_builtin.i140 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field16) #11
  %get_rc_ptr.i142 = getelementptr inbounds i8, i8* %call_builtin.i140, i64 -8
  %54 = bitcast i8* %get_rc_ptr.i142 to i64*
  %55 = load i64, i64* %54, align 8
  %.not.i.i.i.i143 = icmp eq i64 %55, 0
  br i1 %.not.i.i.i.i143, label %"#Attr_#dec_4.exit148", label %Then.i.i.i.i145

Then.i.i.i.i145:                                  ; preds = %modify_rc.i144
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %55, -9223372036854775808
  br i1 %57, label %Then1.i.i.i.i146, label %"#Attr_#dec_4.exit148"

Then1.i.i.i.i146:                                 ; preds = %Then.i.i.i.i145
  tail call void @roc_dealloc(i8* %get_rc_ptr.i142, i32 8) #11
  br label %"#Attr_#dec_4.exit148"

"#Attr_#dec_4.exit148":                           ; preds = %modify_rc.i144, %Then.i.i.i.i145, %Then1.i.i.i.i146, %else_block
  %struct_field_access_record_117 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 1
  %58 = bitcast %str.RocStr* %struct_field18 to i8*
  %59 = bitcast %str.RocStr* %struct_field_access_record_117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %58, i8* noundef nonnull align 8 dereferenceable(24) %59, i64 24, i1 false)
  %load_str_to_stack.i149.elt180 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field18, i64 0, i32 2
  %load_str_to_stack.i149.unpack181 = load i64, i64* %load_str_to_stack.i149.elt180, align 8
  %is_big_str.i151 = icmp sgt i64 %load_str_to_stack.i149.unpack181, 0
  br i1 %is_big_str.i151, label %modify_rc.i156, label %"#Attr_#dec_4.exit160"

modify_rc.i156:                                   ; preds = %"#Attr_#dec_4.exit148"
  %call_builtin.i152 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field18) #11
  %get_rc_ptr.i154 = getelementptr inbounds i8, i8* %call_builtin.i152, i64 -8
  %60 = bitcast i8* %get_rc_ptr.i154 to i64*
  %61 = load i64, i64* %60, align 8
  %.not.i.i.i.i155 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i155, label %"#Attr_#dec_4.exit160", label %Then.i.i.i.i157

Then.i.i.i.i157:                                  ; preds = %modify_rc.i156
  %62 = add i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i158, label %"#Attr_#dec_4.exit160"

Then1.i.i.i.i158:                                 ; preds = %Then.i.i.i.i157
  tail call void @roc_dealloc(i8* %get_rc_ptr.i154, i32 8) #11
  br label %"#Attr_#dec_4.exit160"

"#Attr_#dec_4.exit160":                           ; preds = %modify_rc.i156, %Then.i.i.i.i157, %Then1.i.i.i.i158, %"#Attr_#dec_4.exit148"
  call fastcc void @Arg_parseHelp_719b3c2972b1ab9e3d116b79369e556fafad95d2712ee8fef4dcea0cdf186({ [0 x i64], [12 x i64] }* %struct_field14, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %struct_alloca12, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value19)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Arg_parse_ea8cd3f9e69d28db5b7124744c3e946a0cb3efa454a29a8dabf2d158514f({ %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nocapture readonly %"716", %list.RocList %args, { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i189 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %result_value1.i.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value.i.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value19 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %struct_field18 = alloca %str.RocStr, align 8
  %struct_field16 = alloca %str.RocStr, align 8
  %struct_field1 = alloca %str.RocStr, align 8
  %1 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1)
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %args, 2
  %"cap > 0.not.i" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit.thread", label %modification_list_block.i

modification_list_block.i:                        ; preds = %entry
  %read_list_ptr.i = extractvalue %list.RocList %args, 0
  %cast_basic_basic.i = bitcast i8* %read_list_ptr.i to %str.RocStr*
  %list_len.i = extractvalue %list.RocList %args, 1
  %bounds_check.not.i = icmp eq i64 %list_len.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %load_str_to_stack.i.elt7.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#inc_4.exit.i", %loop.preheader.i
  %next_index10.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#inc_4.exit.i" ]
  %next_index.i = add nuw i64 %next_index10.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index10.i
  %2 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i = load i64, i64* %load_str_to_stack.i.elt7.i, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.unpack8.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#inc_4.exit.i"

modify_rc.i.i:                                    ; preds = %loop.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %3 = bitcast i8* %get_rc_ptr.i.i to i64*
  %4 = load i64, i64* %3, align 8
  %.not.i.i2.i = icmp eq i64 %4, 0
  br i1 %.not.i.i2.i, label %"#Attr_#inc_4.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modify_rc.i.i
  %5 = add nsw i64 %4, 1
  store i64 %5, i64* %3, align 8
  br label %"#Attr_#inc_4.exit.i"

"#Attr_#inc_4.exit.i":                            ; preds = %Then.i.i.i, %modify_rc.i.i, %loop.i
  %exitcond280.not = icmp eq i64 %next_index.i, %list_len.i
  br i1 %exitcond280.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#inc_4.exit.i", %modification_list_block.i
  %6 = ptrtoint i8* %read_list_ptr.i to i64
  %7 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %8 = select i1 %.not.i.i.i, i64 %7, i64 %6
  %as_usize_ptr.i = inttoptr i64 %8 to i64*
  %get_rc_ptr.i188 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %9 = load i64, i64* %get_rc_ptr.i188, align 8
  %.not.i.i = icmp eq i64 %9, 0
  br i1 %.not.i.i, label %modification_list_block.i196, label %Then.i.i

Then.i.i:                                         ; preds = %after_loop.i
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* %get_rc_ptr.i188, align 8
  br label %modification_list_block.i196

modification_list_block.i196:                     ; preds = %Then.i.i, %after_loop.i
  %11 = phi i64 [ 0, %after_loop.i ], [ %10, %Then.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1)
  %12 = bitcast %str.RocStr* %incrementing_element_loop_load.i189 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12)
  br i1 %bounds_check.not.i, label %after_loop.i210, label %loop.preheader.i197

loop.preheader.i197:                              ; preds = %modification_list_block.i196
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i189, i64 0, i32 2
  br label %loop.i201

loop.i201:                                        ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i197
  %next_index12.i = phi i64 [ 0, %loop.preheader.i197 ], [ %next_index.i198, %"#Attr_#dec_4.exit.i" ]
  %next_index.i198 = add nuw i64 %next_index12.i, 1
  %load_index.i199 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %13 = bitcast %str.RocStr* %load_index.i199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %12, i8* noundef nonnull align 8 dereferenceable(24) %13, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i200 = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i200, label %modify_rc.i.i204, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i204:                                 ; preds = %loop.i201
  %call_builtin.i.i202 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i189) #11
  %get_rc_ptr.i.i203 = getelementptr inbounds i8, i8* %call_builtin.i.i202, i64 -8
  %14 = bitcast i8* %get_rc_ptr.i.i203 to i64*
  %15 = load i64, i64* %14, align 8
  %.not.i.i.i.i.i = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i204
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %15, -9223372036854775808
  br i1 %17, label %Then1.i.i.i.i.i, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i203, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i, %Then.i.i.i.i.i, %modify_rc.i.i204, %loop.i201
  %exitcond.not = icmp eq i64 %next_index.i198, %list_len.i
  br i1 %exitcond.not, label %after_loop.i210.loopexit, label %loop.i201

after_loop.i210.loopexit:                         ; preds = %"#Attr_#dec_4.exit.i"
  %.pre = load i64, i64* %get_rc_ptr.i188, align 8
  br label %after_loop.i210

after_loop.i210:                                  ; preds = %after_loop.i210.loopexit, %modification_list_block.i196
  %18 = phi i64 [ %.pre, %after_loop.i210.loopexit ], [ %11, %modification_list_block.i196 ]
  %.not.i.i.i.i209 = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i209, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i211

Then.i.i.i.i211:                                  ; preds = %after_loop.i210
  %19 = add i64 %18, -1
  store i64 %19, i64* %get_rc_ptr.i188, align 8
  %20 = icmp eq i64 %18, -9223372036854775808
  br i1 %20, label %Then1.i.i.i.i212, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i212:                                 ; preds = %Then.i.i.i.i211
  %21 = bitcast i64* %get_rc_ptr.i188 to i8*
  tail call void @roc_dealloc(i8* %21, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %after_loop.i210, %Then.i.i.i.i211, %Then1.i.i.i.i212
  %.pre-phi = bitcast %str.RocStr* %incrementing_element_loop_load.i189 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %.pre-phi)
  %eq_u64.i.i = icmp eq i64 %list_len.i, 0
  br i1 %eq_u64.i.i, label %then_block, label %else_block

"#Attr_#dec_17.exit.thread":                      ; preds = %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1)
  %list_len.i.i278 = extractvalue %list.RocList %args, 1
  %22 = bitcast %str.RocStr* %incrementing_element_loop_load.i189 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22)
  %.pre-phi285 = bitcast %str.RocStr* %incrementing_element_loop_load.i189 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %.pre-phi285)
  %eq_u64.i.i286 = icmp eq i64 %list_len.i.i278, 0
  br i1 %eq_u64.i.i286, label %"#Attr_#dec_17.exit244", label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_4.exit160", %"#Attr_#dec_4.exit"
  %result_value19.sink = phi { [0 x i64], [7 x i64], i8, [7 x i8] }* [ %result_value19, %"#Attr_#dec_4.exit160" ], [ %tag_alloca5, %"#Attr_#dec_4.exit" ]
  %23 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  %24 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value19.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %23, i8* noundef nonnull align 8 dereferenceable(64) %24, i64 64, i1 false)
  ret void

then_block:                                       ; preds = %"#Attr_#dec_17.exit"
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit244", label %modification_list_block.i220

modification_list_block.i220:                     ; preds = %then_block
  %read_list_ptr.i216 = extractvalue %list.RocList %args, 0
  %25 = ptrtoint i8* %read_list_ptr.i216 to i64
  %26 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i237 = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %27 = select i1 %.not.i.i.i237, i64 %26, i64 %25
  %as_usize_ptr.i238 = inttoptr i64 %27 to i64*
  %get_rc_ptr.i239 = getelementptr inbounds i64, i64* %as_usize_ptr.i238, i64 -1
  %28 = load i64, i64* %get_rc_ptr.i239, align 8
  %.not.i.i.i.i240 = icmp eq i64 %28, 0
  br i1 %.not.i.i.i.i240, label %"#Attr_#dec_17.exit244", label %Then.i.i.i.i242

Then.i.i.i.i242:                                  ; preds = %modification_list_block.i220
  %29 = add i64 %28, -1
  store i64 %29, i64* %get_rc_ptr.i239, align 8
  %30 = icmp eq i64 %28, -9223372036854775808
  br i1 %30, label %Then1.i.i.i.i243, label %"#Attr_#dec_17.exit244"

Then1.i.i.i.i243:                                 ; preds = %Then.i.i.i.i242
  %31 = bitcast i64* %get_rc_ptr.i239 to i8*
  tail call void @roc_dealloc(i8* %31, i32 8) #11
  br label %"#Attr_#dec_17.exit244"

"#Attr_#dec_17.exit244":                          ; preds = %"#Attr_#dec_17.exit.thread", %then_block, %modification_list_block.i220, %Then.i.i.i.i242, %Then1.i.i.i.i243
  %struct_field.sroa.0.0..sroa_idx = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 1, i32 0
  %struct_field.sroa.0.0.copyload = load i8*, i8** %struct_field.sroa.0.0..sroa_idx, align 8
  %struct_field.sroa.2.0..sroa_idx135 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 1, i32 1
  %struct_field.sroa.2.0.copyload = load i64, i64* %struct_field.sroa.2.0..sroa_idx135, align 8
  %struct_field.sroa.3.0..sroa_idx136 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 1, i32 2
  %struct_field.sroa.3.0.copyload = load i64, i64* %struct_field.sroa.3.0..sroa_idx136, align 8
  %32 = bitcast %str.RocStr* %struct_field1 to i8*
  %33 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %32, i8* noundef nonnull align 8 dereferenceable(24) %33, i64 24, i1 false)
  %load_str_to_stack.i.elt185 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1, i64 0, i32 2
  %load_str_to_stack.i.unpack186 = load i64, i64* %load_str_to_stack.i.elt185, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack186, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %"#Attr_#dec_17.exit244"
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %34 = bitcast i8* %get_rc_ptr.i to i64*
  %35 = load i64, i64* %34, align 8
  %.not.i.i.i.i = icmp eq i64 %35, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %36 = add i64 %35, -1
  store i64 %36, i64* %34, align 8
  %37 = icmp eq i64 %35, -9223372036854775808
  br i1 %37, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_17.exit244"
  %struct_field_access_record_2 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 2
  %struct_field2 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_2, align 8
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %struct_field2)
  %38 = ptrtoint i8* %struct_field.sroa.0.0.copyload to i64
  %struct_alloca = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack107.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %38, i64* %.repack107.repack, align 8
  %.repack107.repack113 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %struct_field.sroa.2.0.copyload, i64* %.repack107.repack113, align 8
  %.repack107.repack115 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %struct_field.sroa.3.0.copyload, i64* %.repack107.repack115, align 8
  %.repack109 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 3, i8* %.repack109, align 8
  %tag_alloca5 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer6 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca5, i64 0, i32 1
  %39 = bitcast [7 x i64]* %data_buffer6 to i8*
  %40 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %39, i8* noundef nonnull align 8 dereferenceable(56) %40, i64 56, i1 false)
  %tag_id_ptr8 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca5, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr8, align 8
  br label %common.ret

else_block:                                       ; preds = %"#Attr_#dec_17.exit.thread", %"#Attr_#dec_17.exit"
  %list_len.i.i279287 = phi i64 [ %list_len.i.i278, %"#Attr_#dec_17.exit.thread" ], [ %list_len.i, %"#Attr_#dec_17.exit" ]
  %41 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %41) #11
  %42 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %42) #11
  %43 = tail call i8* @roc_alloc(i64 72, i32 8) #11, !noalias !346
  %44 = icmp ne i8* %43, null
  tail call void @llvm.assume(i1 %44) #11, !noalias !355
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  %46 = bitcast i8* %43 to i64*
  store i64 -9223372036854775808, i64* %46, align 8, !noalias !346
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(64) %45, i8 0, i64 64, i1 false) #11
  %47 = tail call i8* @roc_alloc(i64 72, i32 8) #11, !noalias !356
  %48 = icmp ne i8* %47, null
  tail call void @llvm.assume(i1 %48) #11, !noalias !365
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  %50 = bitcast i8* %47 to i64*
  store i64 -9223372036854775808, i64* %50, align 8, !noalias !356
  %51 = bitcast i8* %49 to i64*
  store i64 -9187201950435737472, i64* %51, align 1
  %result_value.i.i288289 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i288289, i8 0, i64 24, i1 false)
  %struct_alloca.sroa.2.0..sroa_idx22.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 0
  store i8* %45, i8** %struct_alloca.sroa.2.0..sroa_idx22.i.i.i, align 8
  %struct_alloca.sroa.3.0..sroa_idx23.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 1
  store i64 8, i64* %struct_alloca.sroa.3.0..sroa_idx23.i.i.i, align 8
  %struct_alloca.sroa.4.0..sroa_idx24.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 2
  store i64 8, i64* %struct_alloca.sroa.4.0..sroa_idx24.i.i.i, align 8
  %struct_alloca.sroa.5.0..sroa_idx25.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 0
  store i8* %49, i8** %struct_alloca.sroa.5.0..sroa_idx25.i.i.i, align 8
  %struct_alloca.sroa.6.0..sroa_idx26.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 1
  store i64 8, i64* %struct_alloca.sroa.6.0..sroa_idx26.i.i.i, align 8
  %struct_alloca.sroa.7.0..sroa_idx27.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 2
  store i64 64, i64* %struct_alloca.sroa.7.0..sroa_idx27.i.i.i, align 8
  %struct_alloca.sroa.8.0..sroa_idx28.i.i.i = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 3
  store i64 0, i64* %struct_alloca.sroa.8.0..sroa_idx28.i.i.i, align 8
  call fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i.i, i64 0, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value1.i.i) #11
  %result_value.i.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 0, i32 0
  %result_value.i.sroa.0.0.copyload = load i8*, i8** %result_value.i.sroa.0.0..sroa_idx, align 8
  %result_value.i.sroa.4.0..sroa_idx258 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 0, i32 1
  %result_value.i.sroa.4.0.copyload = load i64, i64* %result_value.i.sroa.4.0..sroa_idx258, align 8
  %result_value.i.sroa.5.0..sroa_idx260 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 0, i32 2
  %result_value.i.sroa.5.0.copyload = load i64, i64* %result_value.i.sroa.5.0..sroa_idx260, align 8
  %result_value.i.sroa.6.0..sroa_idx262 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 1, i32 0
  %result_value.i.sroa.6.0.copyload = load i8*, i8** %result_value.i.sroa.6.0..sroa_idx262, align 8
  %result_value.i.sroa.7.0..sroa_idx264 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 1, i32 1
  %result_value.i.sroa.7.0.copyload = load i64, i64* %result_value.i.sroa.7.0..sroa_idx264, align 8
  %result_value.i.sroa.8.0..sroa_idx266 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 1, i32 2
  %result_value.i.sroa.8.0.copyload = load i64, i64* %result_value.i.sroa.8.0..sroa_idx266, align 8
  %result_value.i.sroa.9.0..sroa_idx268 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 2, i32 0
  %result_value.i.sroa.9.0.copyload = load i8*, i8** %result_value.i.sroa.9.0..sroa_idx268, align 8
  %result_value.i.sroa.10.0..sroa_idx270 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 2, i32 1
  %result_value.i.sroa.10.0.copyload = load i64, i64* %result_value.i.sroa.10.0..sroa_idx270, align 8
  %result_value.i.sroa.11.0..sroa_idx272 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 2, i32 2
  %result_value.i.sroa.11.0.copyload = load i64, i64* %result_value.i.sroa.11.0..sroa_idx272, align 8
  %result_value.i.sroa.12.0..sroa_idx274 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value1.i.i, i64 0, i32 3
  %result_value.i.sroa.12.0.copyload = load i64, i64* %result_value.i.sroa.12.0..sroa_idx274, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %42) #11
  %struct_alloca12 = alloca { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, align 8
  %struct_alloca12.repack.repack = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 0, i32 0
  %args.elt = extractvalue %list.RocList %args, 0
  store i8* %args.elt, i8** %struct_alloca12.repack.repack, align 8
  %struct_alloca12.repack.repack44 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 0, i32 1
  store i64 %list_len.i.i279287, i64* %struct_alloca12.repack.repack44, align 8
  %struct_alloca12.repack.repack46 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 0, i32 2
  store i64 %list_capacity_or_ref_ptr.i, i64* %struct_alloca12.repack.repack46, align 8
  %struct_alloca12.repack42.repack.repack = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 0, i32 0
  store i8* %result_value.i.sroa.0.0.copyload, i8** %struct_alloca12.repack42.repack.repack, align 8
  %struct_alloca12.repack42.repack.repack54 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 0, i32 1
  store i64 %result_value.i.sroa.4.0.copyload, i64* %struct_alloca12.repack42.repack.repack54, align 8
  %struct_alloca12.repack42.repack.repack56 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 0, i32 2
  store i64 %result_value.i.sroa.5.0.copyload, i64* %struct_alloca12.repack42.repack.repack56, align 8
  %struct_alloca12.repack42.repack48.repack = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 1, i32 0
  store i8* %result_value.i.sroa.6.0.copyload, i8** %struct_alloca12.repack42.repack48.repack, align 8
  %struct_alloca12.repack42.repack48.repack58 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 1, i32 1
  store i64 %result_value.i.sroa.7.0.copyload, i64* %struct_alloca12.repack42.repack48.repack58, align 8
  %struct_alloca12.repack42.repack48.repack60 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 1, i32 2
  store i64 %result_value.i.sroa.8.0.copyload, i64* %struct_alloca12.repack42.repack48.repack60, align 8
  %struct_alloca12.repack42.repack50.repack = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 2, i32 0
  store i8* %result_value.i.sroa.9.0.copyload, i8** %struct_alloca12.repack42.repack50.repack, align 8
  %struct_alloca12.repack42.repack50.repack62 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 2, i32 1
  store i64 %result_value.i.sroa.10.0.copyload, i64* %struct_alloca12.repack42.repack50.repack62, align 8
  %struct_alloca12.repack42.repack50.repack64 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 2, i32 2
  store i64 %result_value.i.sroa.11.0.copyload, i64* %struct_alloca12.repack42.repack50.repack64, align 8
  %struct_alloca12.repack42.repack52 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_alloca12, i64 0, i32 1, i32 3
  store i64 %result_value.i.sroa.12.0.copyload, i64* %struct_alloca12.repack42.repack52, align 8
  %struct_field_access_record_213 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 2
  %struct_field14 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_213, align 8
  %52 = bitcast %str.RocStr* %struct_field16 to i8*
  %53 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %52, i8* noundef nonnull align 8 dereferenceable(24) %53, i64 24, i1 false)
  %load_str_to_stack.i137.elt175 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field16, i64 0, i32 2
  %load_str_to_stack.i137.unpack176 = load i64, i64* %load_str_to_stack.i137.elt175, align 8
  %is_big_str.i139 = icmp sgt i64 %load_str_to_stack.i137.unpack176, 0
  br i1 %is_big_str.i139, label %modify_rc.i144, label %"#Attr_#dec_4.exit148"

modify_rc.i144:                                   ; preds = %else_block
  %call_builtin.i140 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field16) #11
  %get_rc_ptr.i142 = getelementptr inbounds i8, i8* %call_builtin.i140, i64 -8
  %54 = bitcast i8* %get_rc_ptr.i142 to i64*
  %55 = load i64, i64* %54, align 8
  %.not.i.i.i.i143 = icmp eq i64 %55, 0
  br i1 %.not.i.i.i.i143, label %"#Attr_#dec_4.exit148", label %Then.i.i.i.i145

Then.i.i.i.i145:                                  ; preds = %modify_rc.i144
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %55, -9223372036854775808
  br i1 %57, label %Then1.i.i.i.i146, label %"#Attr_#dec_4.exit148"

Then1.i.i.i.i146:                                 ; preds = %Then.i.i.i.i145
  tail call void @roc_dealloc(i8* %get_rc_ptr.i142, i32 8) #11
  br label %"#Attr_#dec_4.exit148"

"#Attr_#dec_4.exit148":                           ; preds = %modify_rc.i144, %Then.i.i.i.i145, %Then1.i.i.i.i146, %else_block
  %struct_field_access_record_117 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"716", i64 0, i32 1
  %58 = bitcast %str.RocStr* %struct_field18 to i8*
  %59 = bitcast %str.RocStr* %struct_field_access_record_117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %58, i8* noundef nonnull align 8 dereferenceable(24) %59, i64 24, i1 false)
  %load_str_to_stack.i149.elt180 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field18, i64 0, i32 2
  %load_str_to_stack.i149.unpack181 = load i64, i64* %load_str_to_stack.i149.elt180, align 8
  %is_big_str.i151 = icmp sgt i64 %load_str_to_stack.i149.unpack181, 0
  br i1 %is_big_str.i151, label %modify_rc.i156, label %"#Attr_#dec_4.exit160"

modify_rc.i156:                                   ; preds = %"#Attr_#dec_4.exit148"
  %call_builtin.i152 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field18) #11
  %get_rc_ptr.i154 = getelementptr inbounds i8, i8* %call_builtin.i152, i64 -8
  %60 = bitcast i8* %get_rc_ptr.i154 to i64*
  %61 = load i64, i64* %60, align 8
  %.not.i.i.i.i155 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i155, label %"#Attr_#dec_4.exit160", label %Then.i.i.i.i157

Then.i.i.i.i157:                                  ; preds = %modify_rc.i156
  %62 = add i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i158, label %"#Attr_#dec_4.exit160"

Then1.i.i.i.i158:                                 ; preds = %Then.i.i.i.i157
  tail call void @roc_dealloc(i8* %get_rc_ptr.i154, i32 8) #11
  br label %"#Attr_#dec_4.exit160"

"#Attr_#dec_4.exit160":                           ; preds = %modify_rc.i156, %Then.i.i.i.i157, %Then1.i.i.i.i158, %"#Attr_#dec_4.exit148"
  call fastcc void @Arg_parseHelp_ec1d1386fb533c8aee1842424cc42554c2fffbb26c2d398f3cb191d6af132({ [0 x i64], [12 x i64] }* %struct_field14, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %struct_alloca12, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value19)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Result_map_3f9ab963e3201c9c9298568dff66db4e8baa1bfb7c816e95b979552a49782f7({ [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture readonly %result, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nocapture readonly %transform, { [0 x i64], [13 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %result_value.i.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field2.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_16.exit", %"#Attr_#dec_17.exit"
  %tag_alloca10.sink165 = phi { [0 x i64], [13 x i64], i8, [7 x i8] }* [ %tag_alloca10, %"#Attr_#dec_16.exit" ], [ %tag_alloca, %"#Attr_#dec_17.exit" ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_16.exit" ], [ 1, %"#Attr_#dec_17.exit" ]
  %tag_id_ptr13 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10.sink165, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr13, align 8
  %1 = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10.sink165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(112) %1, i8* noundef nonnull align 8 dereferenceable(112) %2, i64 112, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_element.elt = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt73 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.unpack74.elt = bitcast i64* %load_element.elt73 to i8**
  %load_element.unpack74.unpack = load i8*, i8** %load_element.unpack74.elt, align 8
  %3 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.unpack74.unpack77 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element.unpack74.unpack79 = load i64, i64* %4, align 8
  %5 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5)
  %struct_field_access_record_11.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1
  %6 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field_access_record_11.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %5, i8* noundef nonnull align 8 dereferenceable(80) %6, i64 80, i1 false) #11
  %struct_field4.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 0
  %struct_field4.unpack.i = load i8*, i8** %struct_field4.elt.i, align 8
  %struct_field4.elt11.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 1
  %struct_field4.unpack12.i = load i64, i64* %struct_field4.elt11.i, align 8
  %struct_field4.elt13.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 2
  %struct_field4.unpack14.i = load i64, i64* %struct_field4.elt13.i, align 8
  %7 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %"cap > 0.not.i" = icmp eq i64 %struct_field4.unpack14.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %then_block
  %cast_basic_basic.i = bitcast i8* %struct_field4.unpack.i to %str.RocStr*
  %bounds_check.not.i = icmp eq i64 %struct_field4.unpack12.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i
  %next_index12.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_4.exit.i" ]
  %next_index.i = add nuw i64 %next_index12.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %8 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8* noundef nonnull align 8 dereferenceable(24) %8, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i:                                    ; preds = %loop.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %9 = bitcast i8* %get_rc_ptr.i.i to i64*
  %10 = load i64, i64* %9, align 8
  %.not.i.i.i.i.i = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i.i, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i, %Then.i.i.i.i.i, %modify_rc.i.i, %loop.i
  %exitcond.not = icmp eq i64 %next_index.i, %struct_field4.unpack12.i
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_4.exit.i", %modification_list_block.i
  %13 = ptrtoint i8* %struct_field4.unpack.i to i64
  %14 = shl i64 %struct_field4.unpack14.i, 1
  %.not.i.i.i = icmp slt i64 %struct_field4.unpack14.i, 0
  %15 = select i1 %.not.i.i.i, i64 %14, i64 %13
  %as_usize_ptr.i = inttoptr i64 %15 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %16 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %16, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %after_loop.i
  %17 = add i64 %16, -1
  store i64 %17, i64* %get_rc_ptr.i, align 8
  %18 = icmp eq i64 %16, -9223372036854775808
  br i1 %18, label %Then1.i.i.i.i, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %19 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %19, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %then_block, %after_loop.i, %Then.i.i.i.i, %Then1.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  %20 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #11
  call fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_field2.i, i64 %load_element.unpack, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i.i) #11
  %result_value.i.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 0
  %result_value.i.sroa.0.0.copyload = load i8*, i8** %result_value.i.sroa.0.0..sroa_idx, align 8
  %result_value.i.sroa.4.0..sroa_idx146 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 1
  %result_value.i.sroa.4.0.copyload = load i64, i64* %result_value.i.sroa.4.0..sroa_idx146, align 8
  %result_value.i.sroa.5.0..sroa_idx148 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 2
  %result_value.i.sroa.5.0.copyload = load i64, i64* %result_value.i.sroa.5.0..sroa_idx148, align 8
  %result_value.i.sroa.6.0..sroa_idx150 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 0
  %result_value.i.sroa.6.0.copyload = load i8*, i8** %result_value.i.sroa.6.0..sroa_idx150, align 8
  %result_value.i.sroa.7.0..sroa_idx152 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 1
  %result_value.i.sroa.7.0.copyload = load i64, i64* %result_value.i.sroa.7.0..sroa_idx152, align 8
  %result_value.i.sroa.8.0..sroa_idx154 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 2
  %result_value.i.sroa.8.0.copyload = load i64, i64* %result_value.i.sroa.8.0..sroa_idx154, align 8
  %result_value.i.sroa.9.0..sroa_idx156 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 0
  %result_value.i.sroa.9.0.copyload = load i8*, i8** %result_value.i.sroa.9.0..sroa_idx156, align 8
  %result_value.i.sroa.10.0..sroa_idx158 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 1
  %result_value.i.sroa.10.0.copyload = load i64, i64* %result_value.i.sroa.10.0..sroa_idx158, align 8
  %result_value.i.sroa.11.0..sroa_idx160 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 2
  %result_value.i.sroa.11.0.copyload = load i64, i64* %result_value.i.sroa.11.0..sroa_idx160, align 8
  %result_value.i.sroa.12.0..sroa_idx162 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 3
  %result_value.i.sroa.12.0.copyload = load i64, i64* %result_value.i.sroa.12.0..sroa_idx162, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5)
  %struct_alloca = alloca { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, align 8
  %.repack.repack.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %result_value.i.sroa.0.0.copyload, i8** %.repack.repack.repack, align 8
  %.repack.repack.repack119 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %result_value.i.sroa.4.0.copyload, i64* %.repack.repack.repack119, align 8
  %.repack.repack.repack121 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 2
  store i64 %result_value.i.sroa.5.0.copyload, i64* %.repack.repack.repack121, align 8
  %.repack.repack113.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8* %result_value.i.sroa.6.0.copyload, i8** %.repack.repack113.repack, align 8
  %.repack.repack113.repack123 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 1
  store i64 %result_value.i.sroa.7.0.copyload, i64* %.repack.repack113.repack123, align 8
  %.repack.repack113.repack125 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 2
  store i64 %result_value.i.sroa.8.0.copyload, i64* %.repack.repack113.repack125, align 8
  %.repack.repack115.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 0
  store i8* %result_value.i.sroa.9.0.copyload, i8** %.repack.repack115.repack, align 8
  %.repack.repack115.repack127 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 1
  store i64 %result_value.i.sroa.10.0.copyload, i64* %.repack.repack115.repack127, align 8
  %.repack.repack115.repack129 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 2
  store i64 %result_value.i.sroa.11.0.copyload, i64* %.repack.repack115.repack129, align 8
  %.repack.repack117 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3
  store i64 %result_value.i.sroa.12.0.copyload, i64* %.repack.repack117, align 8
  %.repack111.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 0
  store i8* %load_element.unpack74.unpack, i8** %.repack111.repack, align 8
  %.repack111.repack131 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1
  store i64 %load_element.unpack74.unpack77, i64* %.repack111.repack131, align 8
  %.repack111.repack133 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 2
  store i64 %load_element.unpack74.unpack79, i64* %.repack111.repack133, align 8
  %tag_alloca = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %21 = bitcast [13 x i64]* %data_buffer to i8*
  %22 = bitcast { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(104) %21, i8* noundef nonnull align 8 dereferenceable(104) %22, i64 104, i1 false)
  br label %common.ret

else_block:                                       ; preds = %entry
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %23 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %else_block
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %24 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8* noundef nonnull align 8 dereferenceable(24) %24, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %loop.i.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %25 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %26 = load i64, i64* %25, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %26, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i
  %27 = add i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %26, -9223372036854775808
  br i1 %28, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %29 = ptrtoint i8* %struct_field.unpack.i to i64
  %30 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %31 = select i1 %.not.i.i.i57.i, i64 %30, i64 %29
  %as_usize_ptr.i58.i = inttoptr i64 %31 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %33 = add i64 %32, -1
  store i64 %33, i64* %get_rc_ptr.i59.i, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %35 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %35, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %else_block
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %36 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %37 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i140 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %38 = select i1 %.not.i.i.i.i.i140, i64 %37, i64 %36
  %as_usize_ptr.i.i.i = inttoptr i64 %38 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %39 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %39, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %40 = add i64 %39, -1
  store i64 %40, i64* %get_rc_ptr.i.i.i, align 8
  %41 = icmp eq i64 %39, -9223372036854775808
  br i1 %41, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %42 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  tail call void @roc_dealloc(i8* %42, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %43 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %44 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %45 = select i1 %.not.i.i.i10.i, i64 %44, i64 %43
  %as_usize_ptr.i11.i = inttoptr i64 %45 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %46 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %46, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %47 = add i64 %46, -1
  store i64 %47, i64* %get_rc_ptr.i12.i, align 8
  %48 = icmp eq i64 %46, -9223372036854775808
  br i1 %48, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %49 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %49, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %50 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %51 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i141 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %52 = select i1 %.not.i.i.i.i141, i64 %51, i64 %50
  %as_usize_ptr.i.i = inttoptr i64 %52 to i64*
  %get_rc_ptr.i.i142 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %53 = load i64, i64* %get_rc_ptr.i.i142, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %53, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i143

Then.i.i.i.i.i143:                                ; preds = %modification_list_block.i.i
  %54 = add i64 %53, -1
  store i64 %54, i64* %get_rc_ptr.i.i142, align 8
  %55 = icmp eq i64 %53, -9223372036854775808
  br i1 %55, label %Then1.i.i.i.i.i144, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i144:                               ; preds = %Then.i.i.i.i.i143
  %56 = bitcast i64* %get_rc_ptr.i.i142 to i8*
  tail call void @roc_dealloc(i8* %56, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i143, %Then1.i.i.i.i.i144
  %load_element6.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 0, i64 0
  %load_element6.sroa.0.0.copyload = load i64, i64* %load_element6.sroa.0.0..sroa_idx, align 8
  %load_element6.sroa.2.0..sroa_idx135 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element6.sroa.2.0.copyload = load i64, i64* %load_element6.sroa.2.0..sroa_idx135, align 8
  %load_element6.sroa.3.0..sroa_idx136 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element6.sroa.3.0.copyload = load i64, i64* %load_element6.sroa.3.0..sroa_idx136, align 8
  %load_element6.sroa.4.0..sroa_idx137 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element6.sroa.4.0.copyload = load i64, i64* %load_element6.sroa.4.0..sroa_idx137, align 8
  %load_element6.sroa.5.0..sroa_idx138 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 4
  %load_element6.sroa.5.0.copyload = load i64, i64* %load_element6.sroa.5.0..sroa_idx138, align 8
  %load_element6.sroa.6.0..sroa_idx139 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 5
  %load_element6.sroa.6.0.copyload = load i64, i64* %load_element6.sroa.6.0..sroa_idx139, align 8
  %load_element6.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element6.sroa.7.0..sroa_cast = bitcast i64* %load_element6.sroa.7.0..sroa_idx to i8*
  %load_element6.sroa.7.0.copyload = load i8, i8* %load_element6.sroa.7.0..sroa_cast, align 8
  %load_element6.sroa.8.0..sroa_raw_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8*
  %load_element6.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 49
  %load_element6.sroa.8.0.copyload = load i8, i8* %load_element6.sroa.8.0..sroa_raw_idx, align 1
  %load_element6.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 50
  %load_element6.sroa.9.0.copyload = load i8, i8* %load_element6.sroa.9.0..sroa_raw_idx, align 2
  %load_element6.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 51
  %load_element6.sroa.10.0.copyload = load i8, i8* %load_element6.sroa.10.0..sroa_raw_idx, align 1
  %load_element6.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 52
  %load_element6.sroa.11.0.copyload = load i8, i8* %load_element6.sroa.11.0..sroa_raw_idx, align 4
  %load_element6.sroa.12.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 53
  %load_element6.sroa.12.0.copyload = load i8, i8* %load_element6.sroa.12.0..sroa_raw_idx, align 1
  %load_element6.sroa.13.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 54
  %load_element6.sroa.13.0.copyload = load i8, i8* %load_element6.sroa.13.0..sroa_raw_idx, align 2
  %load_element6.sroa.14.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 55
  %load_element6.sroa.14.0.copyload = load i8, i8* %load_element6.sroa.14.0..sroa_raw_idx, align 1
  %struct_alloca9 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack45.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 0
  store i64 %load_element6.sroa.0.0.copyload, i64* %.repack45.repack, align 8
  %.repack45.repack51 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 1
  store i64 %load_element6.sroa.2.0.copyload, i64* %.repack45.repack51, align 8
  %.repack45.repack53 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 2
  store i64 %load_element6.sroa.3.0.copyload, i64* %.repack45.repack53, align 8
  %.repack45.repack55 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 3
  store i64 %load_element6.sroa.4.0.copyload, i64* %.repack45.repack55, align 8
  %.repack45.repack57 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 4
  store i64 %load_element6.sroa.5.0.copyload, i64* %.repack45.repack57, align 8
  %.repack45.repack59 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 5
  store i64 %load_element6.sroa.6.0.copyload, i64* %.repack45.repack59, align 8
  %.repack47 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 2
  store i8 %load_element6.sroa.7.0.copyload, i8* %.repack47, align 8
  %.repack49.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 0
  store i8 %load_element6.sroa.8.0.copyload, i8* %.repack49.repack, align 1
  %.repack49.repack61 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 1
  store i8 %load_element6.sroa.9.0.copyload, i8* %.repack49.repack61, align 2
  %.repack49.repack63 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 2
  store i8 %load_element6.sroa.10.0.copyload, i8* %.repack49.repack63, align 1
  %.repack49.repack65 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 3
  store i8 %load_element6.sroa.11.0.copyload, i8* %.repack49.repack65, align 4
  %.repack49.repack67 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 4
  store i8 %load_element6.sroa.12.0.copyload, i8* %.repack49.repack67, align 1
  %.repack49.repack69 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 5
  store i8 %load_element6.sroa.13.0.copyload, i8* %.repack49.repack69, align 2
  %.repack49.repack71 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 6
  store i8 %load_element6.sroa.14.0.copyload, i8* %.repack49.repack71, align 1
  %tag_alloca10 = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %data_buffer11 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10, i64 0, i32 1
  %57 = bitcast [13 x i64]* %data_buffer11 to i8*
  %58 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %57, i8* noundef nonnull align 8 dereferenceable(56) %58, i64 56, i1 false)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Result_map_7df4baa6084d5ea4d0b2321a71ef6e3fe3e391864b9e2614493ae69a133e7({ [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture readonly %result, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nocapture readonly %transform, { [0 x i64], [13 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %result_value.i.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field2.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_16.exit", %"#Attr_#dec_17.exit"
  %tag_alloca10.sink165 = phi { [0 x i64], [13 x i64], i8, [7 x i8] }* [ %tag_alloca10, %"#Attr_#dec_16.exit" ], [ %tag_alloca, %"#Attr_#dec_17.exit" ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_16.exit" ], [ 1, %"#Attr_#dec_17.exit" ]
  %tag_id_ptr13 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10.sink165, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr13, align 8
  %1 = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10.sink165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(112) %1, i8* noundef nonnull align 8 dereferenceable(112) %2, i64 112, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_element.elt = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt73 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.unpack74.elt = bitcast i64* %load_element.elt73 to i8**
  %load_element.unpack74.unpack = load i8*, i8** %load_element.unpack74.elt, align 8
  %3 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.unpack74.unpack77 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element.unpack74.unpack79 = load i64, i64* %4, align 8
  %5 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5)
  %struct_field_access_record_11.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1
  %6 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field_access_record_11.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %5, i8* noundef nonnull align 8 dereferenceable(80) %6, i64 80, i1 false) #11
  %struct_field4.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 0
  %struct_field4.unpack.i = load i8*, i8** %struct_field4.elt.i, align 8
  %struct_field4.elt11.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 1
  %struct_field4.unpack12.i = load i64, i64* %struct_field4.elt11.i, align 8
  %struct_field4.elt13.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 2
  %struct_field4.unpack14.i = load i64, i64* %struct_field4.elt13.i, align 8
  %7 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %"cap > 0.not.i" = icmp eq i64 %struct_field4.unpack14.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %then_block
  %cast_basic_basic.i = bitcast i8* %struct_field4.unpack.i to %str.RocStr*
  %bounds_check.not.i = icmp eq i64 %struct_field4.unpack12.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i
  %next_index12.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_4.exit.i" ]
  %next_index.i = add nuw i64 %next_index12.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %8 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8* noundef nonnull align 8 dereferenceable(24) %8, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i:                                    ; preds = %loop.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %9 = bitcast i8* %get_rc_ptr.i.i to i64*
  %10 = load i64, i64* %9, align 8
  %.not.i.i.i.i.i = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i.i, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i, %Then.i.i.i.i.i, %modify_rc.i.i, %loop.i
  %exitcond.not = icmp eq i64 %next_index.i, %struct_field4.unpack12.i
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_4.exit.i", %modification_list_block.i
  %13 = ptrtoint i8* %struct_field4.unpack.i to i64
  %14 = shl i64 %struct_field4.unpack14.i, 1
  %.not.i.i.i = icmp slt i64 %struct_field4.unpack14.i, 0
  %15 = select i1 %.not.i.i.i, i64 %14, i64 %13
  %as_usize_ptr.i = inttoptr i64 %15 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %16 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %16, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %after_loop.i
  %17 = add i64 %16, -1
  store i64 %17, i64* %get_rc_ptr.i, align 8
  %18 = icmp eq i64 %16, -9223372036854775808
  br i1 %18, label %Then1.i.i.i.i, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %19 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %19, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %then_block, %after_loop.i, %Then.i.i.i.i, %Then1.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  %20 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #11
  call fastcc void @Dict_insert_8f3cca30279c62eb87d49f74f6e2d0aff9714f4cd7f7d89048851b8ec7aa2944({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_field2.i, i64 %load_element.unpack, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i.i) #11
  %result_value.i.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 0
  %result_value.i.sroa.0.0.copyload = load i8*, i8** %result_value.i.sroa.0.0..sroa_idx, align 8
  %result_value.i.sroa.4.0..sroa_idx146 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 1
  %result_value.i.sroa.4.0.copyload = load i64, i64* %result_value.i.sroa.4.0..sroa_idx146, align 8
  %result_value.i.sroa.5.0..sroa_idx148 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 2
  %result_value.i.sroa.5.0.copyload = load i64, i64* %result_value.i.sroa.5.0..sroa_idx148, align 8
  %result_value.i.sroa.6.0..sroa_idx150 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 0
  %result_value.i.sroa.6.0.copyload = load i8*, i8** %result_value.i.sroa.6.0..sroa_idx150, align 8
  %result_value.i.sroa.7.0..sroa_idx152 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 1
  %result_value.i.sroa.7.0.copyload = load i64, i64* %result_value.i.sroa.7.0..sroa_idx152, align 8
  %result_value.i.sroa.8.0..sroa_idx154 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 2
  %result_value.i.sroa.8.0.copyload = load i64, i64* %result_value.i.sroa.8.0..sroa_idx154, align 8
  %result_value.i.sroa.9.0..sroa_idx156 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 0
  %result_value.i.sroa.9.0.copyload = load i8*, i8** %result_value.i.sroa.9.0..sroa_idx156, align 8
  %result_value.i.sroa.10.0..sroa_idx158 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 1
  %result_value.i.sroa.10.0.copyload = load i64, i64* %result_value.i.sroa.10.0..sroa_idx158, align 8
  %result_value.i.sroa.11.0..sroa_idx160 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 2
  %result_value.i.sroa.11.0.copyload = load i64, i64* %result_value.i.sroa.11.0..sroa_idx160, align 8
  %result_value.i.sroa.12.0..sroa_idx162 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 3
  %result_value.i.sroa.12.0.copyload = load i64, i64* %result_value.i.sroa.12.0..sroa_idx162, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5)
  %struct_alloca = alloca { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, align 8
  %.repack.repack.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %result_value.i.sroa.0.0.copyload, i8** %.repack.repack.repack, align 8
  %.repack.repack.repack119 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %result_value.i.sroa.4.0.copyload, i64* %.repack.repack.repack119, align 8
  %.repack.repack.repack121 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 2
  store i64 %result_value.i.sroa.5.0.copyload, i64* %.repack.repack.repack121, align 8
  %.repack.repack113.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8* %result_value.i.sroa.6.0.copyload, i8** %.repack.repack113.repack, align 8
  %.repack.repack113.repack123 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 1
  store i64 %result_value.i.sroa.7.0.copyload, i64* %.repack.repack113.repack123, align 8
  %.repack.repack113.repack125 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 2
  store i64 %result_value.i.sroa.8.0.copyload, i64* %.repack.repack113.repack125, align 8
  %.repack.repack115.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 0
  store i8* %result_value.i.sroa.9.0.copyload, i8** %.repack.repack115.repack, align 8
  %.repack.repack115.repack127 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 1
  store i64 %result_value.i.sroa.10.0.copyload, i64* %.repack.repack115.repack127, align 8
  %.repack.repack115.repack129 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 2
  store i64 %result_value.i.sroa.11.0.copyload, i64* %.repack.repack115.repack129, align 8
  %.repack.repack117 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3
  store i64 %result_value.i.sroa.12.0.copyload, i64* %.repack.repack117, align 8
  %.repack111.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 0
  store i8* %load_element.unpack74.unpack, i8** %.repack111.repack, align 8
  %.repack111.repack131 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1
  store i64 %load_element.unpack74.unpack77, i64* %.repack111.repack131, align 8
  %.repack111.repack133 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 2
  store i64 %load_element.unpack74.unpack79, i64* %.repack111.repack133, align 8
  %tag_alloca = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %21 = bitcast [13 x i64]* %data_buffer to i8*
  %22 = bitcast { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(104) %21, i8* noundef nonnull align 8 dereferenceable(104) %22, i64 104, i1 false)
  br label %common.ret

else_block:                                       ; preds = %entry
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %23 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %else_block
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %24 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8* noundef nonnull align 8 dereferenceable(24) %24, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %loop.i.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %25 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %26 = load i64, i64* %25, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %26, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i
  %27 = add i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %26, -9223372036854775808
  br i1 %28, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %29 = ptrtoint i8* %struct_field.unpack.i to i64
  %30 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %31 = select i1 %.not.i.i.i57.i, i64 %30, i64 %29
  %as_usize_ptr.i58.i = inttoptr i64 %31 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %33 = add i64 %32, -1
  store i64 %33, i64* %get_rc_ptr.i59.i, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %35 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %35, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %else_block
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %36 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %37 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i140 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %38 = select i1 %.not.i.i.i.i.i140, i64 %37, i64 %36
  %as_usize_ptr.i.i.i = inttoptr i64 %38 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %39 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %39, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %40 = add i64 %39, -1
  store i64 %40, i64* %get_rc_ptr.i.i.i, align 8
  %41 = icmp eq i64 %39, -9223372036854775808
  br i1 %41, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %42 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  tail call void @roc_dealloc(i8* %42, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %43 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %44 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %45 = select i1 %.not.i.i.i10.i, i64 %44, i64 %43
  %as_usize_ptr.i11.i = inttoptr i64 %45 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %46 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %46, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %47 = add i64 %46, -1
  store i64 %47, i64* %get_rc_ptr.i12.i, align 8
  %48 = icmp eq i64 %46, -9223372036854775808
  br i1 %48, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %49 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %49, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %50 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %51 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i141 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %52 = select i1 %.not.i.i.i.i141, i64 %51, i64 %50
  %as_usize_ptr.i.i = inttoptr i64 %52 to i64*
  %get_rc_ptr.i.i142 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %53 = load i64, i64* %get_rc_ptr.i.i142, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %53, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i143

Then.i.i.i.i.i143:                                ; preds = %modification_list_block.i.i
  %54 = add i64 %53, -1
  store i64 %54, i64* %get_rc_ptr.i.i142, align 8
  %55 = icmp eq i64 %53, -9223372036854775808
  br i1 %55, label %Then1.i.i.i.i.i144, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i144:                               ; preds = %Then.i.i.i.i.i143
  %56 = bitcast i64* %get_rc_ptr.i.i142 to i8*
  tail call void @roc_dealloc(i8* %56, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i143, %Then1.i.i.i.i.i144
  %load_element6.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 0, i64 0
  %load_element6.sroa.0.0.copyload = load i64, i64* %load_element6.sroa.0.0..sroa_idx, align 8
  %load_element6.sroa.2.0..sroa_idx135 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element6.sroa.2.0.copyload = load i64, i64* %load_element6.sroa.2.0..sroa_idx135, align 8
  %load_element6.sroa.3.0..sroa_idx136 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element6.sroa.3.0.copyload = load i64, i64* %load_element6.sroa.3.0..sroa_idx136, align 8
  %load_element6.sroa.4.0..sroa_idx137 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element6.sroa.4.0.copyload = load i64, i64* %load_element6.sroa.4.0..sroa_idx137, align 8
  %load_element6.sroa.5.0..sroa_idx138 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 4
  %load_element6.sroa.5.0.copyload = load i64, i64* %load_element6.sroa.5.0..sroa_idx138, align 8
  %load_element6.sroa.6.0..sroa_idx139 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 5
  %load_element6.sroa.6.0.copyload = load i64, i64* %load_element6.sroa.6.0..sroa_idx139, align 8
  %load_element6.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element6.sroa.7.0..sroa_cast = bitcast i64* %load_element6.sroa.7.0..sroa_idx to i8*
  %load_element6.sroa.7.0.copyload = load i8, i8* %load_element6.sroa.7.0..sroa_cast, align 8
  %load_element6.sroa.8.0..sroa_raw_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8*
  %load_element6.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 49
  %load_element6.sroa.8.0.copyload = load i8, i8* %load_element6.sroa.8.0..sroa_raw_idx, align 1
  %load_element6.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 50
  %load_element6.sroa.9.0.copyload = load i8, i8* %load_element6.sroa.9.0..sroa_raw_idx, align 2
  %load_element6.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 51
  %load_element6.sroa.10.0.copyload = load i8, i8* %load_element6.sroa.10.0..sroa_raw_idx, align 1
  %load_element6.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 52
  %load_element6.sroa.11.0.copyload = load i8, i8* %load_element6.sroa.11.0..sroa_raw_idx, align 4
  %load_element6.sroa.12.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 53
  %load_element6.sroa.12.0.copyload = load i8, i8* %load_element6.sroa.12.0..sroa_raw_idx, align 1
  %load_element6.sroa.13.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 54
  %load_element6.sroa.13.0.copyload = load i8, i8* %load_element6.sroa.13.0..sroa_raw_idx, align 2
  %load_element6.sroa.14.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 55
  %load_element6.sroa.14.0.copyload = load i8, i8* %load_element6.sroa.14.0..sroa_raw_idx, align 1
  %struct_alloca9 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack45.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 0
  store i64 %load_element6.sroa.0.0.copyload, i64* %.repack45.repack, align 8
  %.repack45.repack51 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 1
  store i64 %load_element6.sroa.2.0.copyload, i64* %.repack45.repack51, align 8
  %.repack45.repack53 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 2
  store i64 %load_element6.sroa.3.0.copyload, i64* %.repack45.repack53, align 8
  %.repack45.repack55 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 3
  store i64 %load_element6.sroa.4.0.copyload, i64* %.repack45.repack55, align 8
  %.repack45.repack57 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 4
  store i64 %load_element6.sroa.5.0.copyload, i64* %.repack45.repack57, align 8
  %.repack45.repack59 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 5
  store i64 %load_element6.sroa.6.0.copyload, i64* %.repack45.repack59, align 8
  %.repack47 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 2
  store i8 %load_element6.sroa.7.0.copyload, i8* %.repack47, align 8
  %.repack49.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 0
  store i8 %load_element6.sroa.8.0.copyload, i8* %.repack49.repack, align 1
  %.repack49.repack61 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 1
  store i8 %load_element6.sroa.9.0.copyload, i8* %.repack49.repack61, align 2
  %.repack49.repack63 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 2
  store i8 %load_element6.sroa.10.0.copyload, i8* %.repack49.repack63, align 1
  %.repack49.repack65 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 3
  store i8 %load_element6.sroa.11.0.copyload, i8* %.repack49.repack65, align 4
  %.repack49.repack67 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 4
  store i8 %load_element6.sroa.12.0.copyload, i8* %.repack49.repack67, align 1
  %.repack49.repack69 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 5
  store i8 %load_element6.sroa.13.0.copyload, i8* %.repack49.repack69, align 2
  %.repack49.repack71 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 6
  store i8 %load_element6.sroa.14.0.copyload, i8* %.repack49.repack71, align 1
  %tag_alloca10 = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %data_buffer11 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10, i64 0, i32 1
  %57 = bitcast [13 x i64]* %data_buffer11 to i8*
  %58 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %57, i8* noundef nonnull align 8 dereferenceable(56) %58, i64 56, i1 false)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Result_map_951cd0dfb35f58212872b90ac2c97b3bf693b7e7df281541d7cc9c13a({ [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture readonly %result, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nocapture readonly %transform, { [0 x i64], [13 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %result_value.i.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field2.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_16.exit", %"#Attr_#dec_17.exit"
  %tag_alloca10.sink165 = phi { [0 x i64], [13 x i64], i8, [7 x i8] }* [ %tag_alloca10, %"#Attr_#dec_16.exit" ], [ %tag_alloca, %"#Attr_#dec_17.exit" ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_16.exit" ], [ 1, %"#Attr_#dec_17.exit" ]
  %tag_id_ptr13 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10.sink165, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr13, align 8
  %1 = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10.sink165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(112) %1, i8* noundef nonnull align 8 dereferenceable(112) %2, i64 112, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_element.elt = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt73 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.unpack74.elt = bitcast i64* %load_element.elt73 to i8**
  %load_element.unpack74.unpack = load i8*, i8** %load_element.unpack74.elt, align 8
  %3 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.unpack74.unpack77 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element.unpack74.unpack79 = load i64, i64* %4, align 8
  %5 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5)
  %struct_field_access_record_11.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1
  %6 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field_access_record_11.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %5, i8* noundef nonnull align 8 dereferenceable(80) %6, i64 80, i1 false) #11
  %struct_field4.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 0
  %struct_field4.unpack.i = load i8*, i8** %struct_field4.elt.i, align 8
  %struct_field4.elt11.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 1
  %struct_field4.unpack12.i = load i64, i64* %struct_field4.elt11.i, align 8
  %struct_field4.elt13.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 2
  %struct_field4.unpack14.i = load i64, i64* %struct_field4.elt13.i, align 8
  %7 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %"cap > 0.not.i" = icmp eq i64 %struct_field4.unpack14.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %then_block
  %cast_basic_basic.i = bitcast i8* %struct_field4.unpack.i to %str.RocStr*
  %bounds_check.not.i = icmp eq i64 %struct_field4.unpack12.i, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i
  %next_index12.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_4.exit.i" ]
  %next_index.i = add nuw i64 %next_index12.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %8 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8* noundef nonnull align 8 dereferenceable(24) %8, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i:                                    ; preds = %loop.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %9 = bitcast i8* %get_rc_ptr.i.i to i64*
  %10 = load i64, i64* %9, align 8
  %.not.i.i.i.i.i = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i.i, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i, %Then.i.i.i.i.i, %modify_rc.i.i, %loop.i
  %exitcond.not = icmp eq i64 %next_index.i, %struct_field4.unpack12.i
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_4.exit.i", %modification_list_block.i
  %13 = ptrtoint i8* %struct_field4.unpack.i to i64
  %14 = shl i64 %struct_field4.unpack14.i, 1
  %.not.i.i.i = icmp slt i64 %struct_field4.unpack14.i, 0
  %15 = select i1 %.not.i.i.i, i64 %14, i64 %13
  %as_usize_ptr.i = inttoptr i64 %15 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %16 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %16, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %after_loop.i
  %17 = add i64 %16, -1
  store i64 %17, i64* %get_rc_ptr.i, align 8
  %18 = icmp eq i64 %16, -9223372036854775808
  br i1 %18, label %Then1.i.i.i.i, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %19 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %19, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %then_block, %after_loop.i, %Then.i.i.i.i, %Then1.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  %20 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #11
  call fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_field2.i, i64 %load_element.unpack, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i.i) #11
  %result_value.i.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 0
  %result_value.i.sroa.0.0.copyload = load i8*, i8** %result_value.i.sroa.0.0..sroa_idx, align 8
  %result_value.i.sroa.4.0..sroa_idx146 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 1
  %result_value.i.sroa.4.0.copyload = load i64, i64* %result_value.i.sroa.4.0..sroa_idx146, align 8
  %result_value.i.sroa.5.0..sroa_idx148 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 0, i32 2
  %result_value.i.sroa.5.0.copyload = load i64, i64* %result_value.i.sroa.5.0..sroa_idx148, align 8
  %result_value.i.sroa.6.0..sroa_idx150 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 0
  %result_value.i.sroa.6.0.copyload = load i8*, i8** %result_value.i.sroa.6.0..sroa_idx150, align 8
  %result_value.i.sroa.7.0..sroa_idx152 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 1
  %result_value.i.sroa.7.0.copyload = load i64, i64* %result_value.i.sroa.7.0..sroa_idx152, align 8
  %result_value.i.sroa.8.0..sroa_idx154 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 1, i32 2
  %result_value.i.sroa.8.0.copyload = load i64, i64* %result_value.i.sroa.8.0..sroa_idx154, align 8
  %result_value.i.sroa.9.0..sroa_idx156 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 0
  %result_value.i.sroa.9.0.copyload = load i8*, i8** %result_value.i.sroa.9.0..sroa_idx156, align 8
  %result_value.i.sroa.10.0..sroa_idx158 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 1
  %result_value.i.sroa.10.0.copyload = load i64, i64* %result_value.i.sroa.10.0..sroa_idx158, align 8
  %result_value.i.sroa.11.0..sroa_idx160 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 2, i32 2
  %result_value.i.sroa.11.0.copyload = load i64, i64* %result_value.i.sroa.11.0..sroa_idx160, align 8
  %result_value.i.sroa.12.0..sroa_idx162 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i.i, i64 0, i32 3
  %result_value.i.sroa.12.0.copyload = load i64, i64* %result_value.i.sroa.12.0..sroa_idx162, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5)
  %struct_alloca = alloca { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, align 8
  %.repack.repack.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %result_value.i.sroa.0.0.copyload, i8** %.repack.repack.repack, align 8
  %.repack.repack.repack119 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %result_value.i.sroa.4.0.copyload, i64* %.repack.repack.repack119, align 8
  %.repack.repack.repack121 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0, i32 2
  store i64 %result_value.i.sroa.5.0.copyload, i64* %.repack.repack.repack121, align 8
  %.repack.repack113.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8* %result_value.i.sroa.6.0.copyload, i8** %.repack.repack113.repack, align 8
  %.repack.repack113.repack123 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 1
  store i64 %result_value.i.sroa.7.0.copyload, i64* %.repack.repack113.repack123, align 8
  %.repack.repack113.repack125 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1, i32 2
  store i64 %result_value.i.sroa.8.0.copyload, i64* %.repack.repack113.repack125, align 8
  %.repack.repack115.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 0
  store i8* %result_value.i.sroa.9.0.copyload, i8** %.repack.repack115.repack, align 8
  %.repack.repack115.repack127 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 1
  store i64 %result_value.i.sroa.10.0.copyload, i64* %.repack.repack115.repack127, align 8
  %.repack.repack115.repack129 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2, i32 2
  store i64 %result_value.i.sroa.11.0.copyload, i64* %.repack.repack115.repack129, align 8
  %.repack.repack117 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 3
  store i64 %result_value.i.sroa.12.0.copyload, i64* %.repack.repack117, align 8
  %.repack111.repack = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 0
  store i8* %load_element.unpack74.unpack, i8** %.repack111.repack, align 8
  %.repack111.repack131 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1
  store i64 %load_element.unpack74.unpack77, i64* %.repack111.repack131, align 8
  %.repack111.repack133 = getelementptr inbounds { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }, { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 2
  store i64 %load_element.unpack74.unpack79, i64* %.repack111.repack133, align 8
  %tag_alloca = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %21 = bitcast [13 x i64]* %data_buffer to i8*
  %22 = bitcast { { { %list.RocList, %list.RocList, %list.RocList, i64 }, %str.RocStr } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(104) %21, i8* noundef nonnull align 8 dereferenceable(104) %22, i64 104, i1 false)
  br label %common.ret

else_block:                                       ; preds = %entry
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %23 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %else_block
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %24 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8* noundef nonnull align 8 dereferenceable(24) %24, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %loop.i.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %25 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %26 = load i64, i64* %25, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %26, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i
  %27 = add i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %26, -9223372036854775808
  br i1 %28, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %29 = ptrtoint i8* %struct_field.unpack.i to i64
  %30 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %31 = select i1 %.not.i.i.i57.i, i64 %30, i64 %29
  %as_usize_ptr.i58.i = inttoptr i64 %31 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %33 = add i64 %32, -1
  store i64 %33, i64* %get_rc_ptr.i59.i, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %35 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %35, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %else_block
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %transform, i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %36 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %37 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i140 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %38 = select i1 %.not.i.i.i.i.i140, i64 %37, i64 %36
  %as_usize_ptr.i.i.i = inttoptr i64 %38 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %39 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %39, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %40 = add i64 %39, -1
  store i64 %40, i64* %get_rc_ptr.i.i.i, align 8
  %41 = icmp eq i64 %39, -9223372036854775808
  br i1 %41, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %42 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  tail call void @roc_dealloc(i8* %42, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %43 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %44 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %45 = select i1 %.not.i.i.i10.i, i64 %44, i64 %43
  %as_usize_ptr.i11.i = inttoptr i64 %45 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %46 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %46, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %47 = add i64 %46, -1
  store i64 %47, i64* %get_rc_ptr.i12.i, align 8
  %48 = icmp eq i64 %46, -9223372036854775808
  br i1 %48, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %49 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %49, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %50 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %51 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i141 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %52 = select i1 %.not.i.i.i.i141, i64 %51, i64 %50
  %as_usize_ptr.i.i = inttoptr i64 %52 to i64*
  %get_rc_ptr.i.i142 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %53 = load i64, i64* %get_rc_ptr.i.i142, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %53, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i143

Then.i.i.i.i.i143:                                ; preds = %modification_list_block.i.i
  %54 = add i64 %53, -1
  store i64 %54, i64* %get_rc_ptr.i.i142, align 8
  %55 = icmp eq i64 %53, -9223372036854775808
  br i1 %55, label %Then1.i.i.i.i.i144, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i144:                               ; preds = %Then.i.i.i.i.i143
  %56 = bitcast i64* %get_rc_ptr.i.i142 to i8*
  tail call void @roc_dealloc(i8* %56, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i143, %Then1.i.i.i.i.i144
  %load_element6.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 0, i64 0
  %load_element6.sroa.0.0.copyload = load i64, i64* %load_element6.sroa.0.0..sroa_idx, align 8
  %load_element6.sroa.2.0..sroa_idx135 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element6.sroa.2.0.copyload = load i64, i64* %load_element6.sroa.2.0..sroa_idx135, align 8
  %load_element6.sroa.3.0..sroa_idx136 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element6.sroa.3.0.copyload = load i64, i64* %load_element6.sroa.3.0..sroa_idx136, align 8
  %load_element6.sroa.4.0..sroa_idx137 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element6.sroa.4.0.copyload = load i64, i64* %load_element6.sroa.4.0..sroa_idx137, align 8
  %load_element6.sroa.5.0..sroa_idx138 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 4
  %load_element6.sroa.5.0.copyload = load i64, i64* %load_element6.sroa.5.0..sroa_idx138, align 8
  %load_element6.sroa.6.0..sroa_idx139 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 5
  %load_element6.sroa.6.0.copyload = load i64, i64* %load_element6.sroa.6.0..sroa_idx139, align 8
  %load_element6.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element6.sroa.7.0..sroa_cast = bitcast i64* %load_element6.sroa.7.0..sroa_idx to i8*
  %load_element6.sroa.7.0.copyload = load i8, i8* %load_element6.sroa.7.0..sroa_cast, align 8
  %load_element6.sroa.8.0..sroa_raw_cast = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result to i8*
  %load_element6.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 49
  %load_element6.sroa.8.0.copyload = load i8, i8* %load_element6.sroa.8.0..sroa_raw_idx, align 1
  %load_element6.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 50
  %load_element6.sroa.9.0.copyload = load i8, i8* %load_element6.sroa.9.0..sroa_raw_idx, align 2
  %load_element6.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 51
  %load_element6.sroa.10.0.copyload = load i8, i8* %load_element6.sroa.10.0..sroa_raw_idx, align 1
  %load_element6.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 52
  %load_element6.sroa.11.0.copyload = load i8, i8* %load_element6.sroa.11.0..sroa_raw_idx, align 4
  %load_element6.sroa.12.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 53
  %load_element6.sroa.12.0.copyload = load i8, i8* %load_element6.sroa.12.0..sroa_raw_idx, align 1
  %load_element6.sroa.13.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 54
  %load_element6.sroa.13.0.copyload = load i8, i8* %load_element6.sroa.13.0..sroa_raw_idx, align 2
  %load_element6.sroa.14.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 55
  %load_element6.sroa.14.0.copyload = load i8, i8* %load_element6.sroa.14.0..sroa_raw_idx, align 1
  %struct_alloca9 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack45.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 0
  store i64 %load_element6.sroa.0.0.copyload, i64* %.repack45.repack, align 8
  %.repack45.repack51 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 1
  store i64 %load_element6.sroa.2.0.copyload, i64* %.repack45.repack51, align 8
  %.repack45.repack53 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 2
  store i64 %load_element6.sroa.3.0.copyload, i64* %.repack45.repack53, align 8
  %.repack45.repack55 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 3
  store i64 %load_element6.sroa.4.0.copyload, i64* %.repack45.repack55, align 8
  %.repack45.repack57 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 4
  store i64 %load_element6.sroa.5.0.copyload, i64* %.repack45.repack57, align 8
  %.repack45.repack59 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 1, i64 5
  store i64 %load_element6.sroa.6.0.copyload, i64* %.repack45.repack59, align 8
  %.repack47 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 2
  store i8 %load_element6.sroa.7.0.copyload, i8* %.repack47, align 8
  %.repack49.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 0
  store i8 %load_element6.sroa.8.0.copyload, i8* %.repack49.repack, align 1
  %.repack49.repack61 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 1
  store i8 %load_element6.sroa.9.0.copyload, i8* %.repack49.repack61, align 2
  %.repack49.repack63 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 2
  store i8 %load_element6.sroa.10.0.copyload, i8* %.repack49.repack63, align 1
  %.repack49.repack65 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 3
  store i8 %load_element6.sroa.11.0.copyload, i8* %.repack49.repack65, align 4
  %.repack49.repack67 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 4
  store i8 %load_element6.sroa.12.0.copyload, i8* %.repack49.repack67, align 1
  %.repack49.repack69 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 5
  store i8 %load_element6.sroa.13.0.copyload, i8* %.repack49.repack69, align 2
  %.repack49.repack71 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9, i64 0, i32 0, i32 3, i64 6
  store i8 %load_element6.sroa.14.0.copyload, i8* %.repack49.repack71, align 1
  %tag_alloca10 = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %data_buffer11 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %tag_alloca10, i64 0, i32 1
  %57 = bitcast [13 x i64]* %data_buffer11 to i8*
  %58 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %57, i8* noundef nonnull align 8 dereferenceable(56) %58, i64 56, i1 false)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @List_get_88ecaf34605d4babf11d9fca1495df88ce587924eefcbe1079cfc8adccdfc7db(%list.RocList %list, i64 %index, { [0 x i64], [1 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %list_len.i = extractvalue %list.RocList %list, 1
  %lt_uint.i = icmp ugt i64 %list_len.i, %index
  br i1 %lt_uint.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_10.exit", %"#Attr_#dec_10.exit22"
  %tag_alloca3.sink40 = phi { [0 x i64], [1 x i64], i8, [7 x i8] }* [ %tag_alloca3, %"#Attr_#dec_10.exit" ], [ %tag_alloca, %"#Attr_#dec_10.exit22" ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_10.exit" ], [ 1, %"#Attr_#dec_10.exit22" ]
  %tag_id_ptr6 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca3.sink40, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr6, align 8
  %1 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca3.sink40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %1, i8* noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %read_list_ptr.i = extractvalue %list.RocList %list, 0
  %cast_basic_basic.i = bitcast i8* %read_list_ptr.i to i64*
  %list_get_element.i = getelementptr inbounds i64, i64* %cast_basic_basic.i, i64 %index
  %list_get_load_element.i = load i64, i64* %list_get_element.i, align 8
  %list_capacity_or_ref_ptr.i8 = extractvalue %list.RocList %list, 2
  %"cap > 0.i9.not" = icmp eq i64 %list_capacity_or_ref_ptr.i8, 0
  br i1 %"cap > 0.i9.not", label %"#Attr_#dec_10.exit22", label %modification_list_block.i18

modification_list_block.i18:                      ; preds = %then_block
  %3 = ptrtoint i8* %read_list_ptr.i to i64
  %4 = shl i64 %list_capacity_or_ref_ptr.i8, 1
  %.not.i.i.i14 = icmp slt i64 %list_capacity_or_ref_ptr.i8, 0
  %5 = select i1 %.not.i.i.i14, i64 %4, i64 %3
  %as_usize_ptr.i15 = inttoptr i64 %5 to i64*
  %get_rc_ptr.i16 = getelementptr inbounds i64, i64* %as_usize_ptr.i15, i64 -1
  %6 = load i64, i64* %get_rc_ptr.i16, align 8
  %.not.i.i.i.i17 = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i17, label %"#Attr_#dec_10.exit22", label %Then.i.i.i.i19

Then.i.i.i.i19:                                   ; preds = %modification_list_block.i18
  %7 = add i64 %6, -1
  store i64 %7, i64* %get_rc_ptr.i16, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i20, label %"#Attr_#dec_10.exit22"

Then1.i.i.i.i20:                                  ; preds = %Then.i.i.i.i19
  %9 = bitcast i64* %get_rc_ptr.i16 to i8*
  tail call void @roc_dealloc(i8* %9, i32 8) #11
  br label %"#Attr_#dec_10.exit22"

"#Attr_#dec_10.exit22":                           ; preds = %modification_list_block.i18, %Then.i.i.i.i19, %Then1.i.i.i.i20, %then_block
  %tag_alloca = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %10 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 0
  store i64 %list_get_load_element.i, i64* %10, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %list, 2
  %"cap > 0.i.not" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#dec_10.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %else_block
  %list.elt = extractvalue %list.RocList %list, 0
  %11 = ptrtoint i8* %list.elt to i64
  %12 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %13 = select i1 %.not.i.i.i, i64 %12, i64 %11
  %as_usize_ptr.i = inttoptr i64 %13 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %14 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_10.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %15 = add i64 %14, -1
  store i64 %15, i64* %get_rc_ptr.i, align 8
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i, label %"#Attr_#dec_10.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %17 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %17, i32 8) #11
  br label %"#Attr_#dec_10.exit"

"#Attr_#dec_10.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %else_block
  %tag_alloca3 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Str_concat_d77833c102eda14a840828118bc87384d40b7741c1075c7a34448b284a1667(%str.RocStr* nocapture readonly %"#arg1", %str.RocStr* nocapture readonly %"#arg2", %str.RocStr* nocapture %0) unnamed_addr #11 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %str_alloca, %str.RocStr* nonnull readonly %"#arg1", %str.RocStr* nocapture nonnull readonly %"#arg2")
  %1 = bitcast %str.RocStr* %0 to i8*
  %2 = bitcast %str.RocStr* %str_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind
define internal fastcc void @Str_concat_ed7a5dacca91de9232ab8944f865755faef8bde8c489d724d326bd8c369ec0(%str.RocStr* nocapture readonly %"#arg1", %str.RocStr* nocapture readonly %"#arg2", %str.RocStr* nocapture %0) unnamed_addr #11 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %str_alloca, %str.RocStr* nonnull readonly %"#arg1", %str.RocStr* nocapture nonnull readonly %"#arg2")
  %1 = bitcast %str.RocStr* %0 to i8*
  %2 = bitcast %str.RocStr* %str_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind
define void @roc__mainForHost_1_exposed_generic({ { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* nocapture %0) local_unnamed_addr #11 {
entry:
  %call_builtin.i.i = tail call fastcc i8* @roc_builtins.utils.allocate_with_refcount(i64 96) #11
  %struct_alloca.sroa.0.0.call_builtin.sroa_cast.i.i = bitcast i8* %call_builtin.i.i to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_str_literal_6416867770529264732, i64 0, i64 8), i8** %struct_alloca.sroa.0.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.2.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 8
  %struct_alloca.sroa.2.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.2.0.call_builtin.sroa_idx.i.i to i64*
  store i64 30, i64* %struct_alloca.sroa.2.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.3.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 16
  %struct_alloca.sroa.3.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.3.0.call_builtin.sroa_idx.i.i to i64*
  store i64 30, i64* %struct_alloca.sroa.3.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.4.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 24
  %struct_alloca.sroa.4.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.4.0.call_builtin.sroa_idx.i.i to i8**
  store i8* inttoptr (i64 500186508905 to i8*), i8** %struct_alloca.sroa.4.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.5.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 32
  %struct_alloca.sroa.5.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.5.0.call_builtin.sroa_idx.i.i to i64*
  store i64 0, i64* %struct_alloca.sroa.5.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.6.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 40
  %struct_alloca.sroa.6.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.6.0.call_builtin.sroa_idx.i.i to i64*
  store i64 -8863084066665136128, i64* %struct_alloca.sroa.6.0.call_builtin.sroa_cast.i.i, align 8
  %struct_field1.i.sroa.0.0.field_struct_gep4.i.sroa_idx.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 48
  %struct_field1.i.sroa.0.0.field_struct_gep4.i.sroa_cast.i = bitcast i8* %struct_field1.i.sroa.0.0.field_struct_gep4.i.sroa_idx.i to i8**
  store i8* inttoptr (i64 500186508905 to i8*), i8** %struct_field1.i.sroa.0.0.field_struct_gep4.i.sroa_cast.i, align 8
  %struct_field1.i.sroa.4.0.field_struct_gep4.i.sroa_idx.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 56
  %struct_field1.i.sroa.4.0.field_struct_gep4.i.sroa_cast.i = bitcast i8* %struct_field1.i.sroa.4.0.field_struct_gep4.i.sroa_idx.i to i64*
  store i64 0, i64* %struct_field1.i.sroa.4.0.field_struct_gep4.i.sroa_cast.i, align 8
  %struct_field1.i.sroa.5.0.field_struct_gep4.i.sroa_idx.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 64
  %struct_field1.i.sroa.5.0.field_struct_gep4.i.sroa_cast.i = bitcast i8* %struct_field1.i.sroa.5.0.field_struct_gep4.i.sroa_idx.i to i64*
  store i64 -8863084066665136128, i64* %struct_field1.i.sroa.5.0.field_struct_gep4.i.sroa_cast.i, align 8
  %indexed_pointer.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 2
  %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast.sroa_idx = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 0, i32 0
  store i8* inttoptr (i64 8389758743176421441 to i8*), i8** %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast.sroa_idx, align 8
  %result_value.sroa.0.sroa.2.0.result_value.sroa.0.0..sroa_cast.sroa_idx16 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 0, i32 1
  store i64 8243122672032051813, i64* %result_value.sroa.0.sroa.2.0.result_value.sroa.0.0..sroa_cast.sroa_idx16, align 8
  %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast.sroa_idx17 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 0, i32 2
  store i64 -7998392938210000850, i64* %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast.sroa_idx17, align 8
  %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast.sroa_idx18 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 1, i32 0
  store i8* inttoptr (i64 7165071350709711458 to i8*), i8** %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast.sroa_idx18, align 8
  %result_value.sroa.0.sroa.5.0.result_value.sroa.0.0..sroa_cast.sroa_idx19 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 1, i32 1
  store i64 0, i64* %result_value.sroa.0.sroa.5.0.result_value.sroa.0.0..sroa_cast.sroa_idx19, align 8
  %result_value.sroa.0.sroa.6.0.result_value.sroa.0.0..sroa_cast.sroa_idx20 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 1, i32 2
  store i64 -8646911284551352320, i64* %result_value.sroa.0.sroa.6.0.result_value.sroa.0.0..sroa_cast.sroa_idx20, align 8
  %result_value.sroa.0.sroa.7.0.result_value.sroa.0.0..sroa_cast.sroa_idx21 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 2
  %result_value.sroa.0.sroa.7.0.result_value.sroa.0.0..sroa_cast.sroa_cast = bitcast { [0 x i64], [12 x i64] }** %result_value.sroa.0.sroa.7.0.result_value.sroa.0.0..sroa_cast.sroa_idx21 to i8**
  store i8* %indexed_pointer.i.i, i8** %result_value.sroa.0.sroa.7.0.result_value.sroa.0.0..sroa_cast.sroa_cast, align 8
  ret void
}

; Function Attrs: nounwind
define void @roc__mainForHost_1_exposed({ { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* nocapture sret({ { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }) %0) local_unnamed_addr #11 {
entry:
  %call_builtin.i.i = tail call fastcc i8* @roc_builtins.utils.allocate_with_refcount(i64 96) #11
  %struct_alloca.sroa.0.0.call_builtin.sroa_cast.i.i = bitcast i8* %call_builtin.i.i to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_str_literal_6416867770529264732, i64 0, i64 8), i8** %struct_alloca.sroa.0.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.2.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 8
  %struct_alloca.sroa.2.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.2.0.call_builtin.sroa_idx.i.i to i64*
  store i64 30, i64* %struct_alloca.sroa.2.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.3.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 16
  %struct_alloca.sroa.3.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.3.0.call_builtin.sroa_idx.i.i to i64*
  store i64 30, i64* %struct_alloca.sroa.3.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.4.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 24
  %struct_alloca.sroa.4.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.4.0.call_builtin.sroa_idx.i.i to i8**
  store i8* inttoptr (i64 500186508905 to i8*), i8** %struct_alloca.sroa.4.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.5.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 32
  %struct_alloca.sroa.5.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.5.0.call_builtin.sroa_idx.i.i to i64*
  store i64 0, i64* %struct_alloca.sroa.5.0.call_builtin.sroa_cast.i.i, align 8
  %struct_alloca.sroa.6.0.call_builtin.sroa_idx.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 40
  %struct_alloca.sroa.6.0.call_builtin.sroa_cast.i.i = bitcast i8* %struct_alloca.sroa.6.0.call_builtin.sroa_idx.i.i to i64*
  store i64 -8863084066665136128, i64* %struct_alloca.sroa.6.0.call_builtin.sroa_cast.i.i, align 8
  %struct_field1.i.sroa.0.0.field_struct_gep4.i.sroa_idx.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 48
  %struct_field1.i.sroa.0.0.field_struct_gep4.i.sroa_cast.i = bitcast i8* %struct_field1.i.sroa.0.0.field_struct_gep4.i.sroa_idx.i to i8**
  store i8* inttoptr (i64 500186508905 to i8*), i8** %struct_field1.i.sroa.0.0.field_struct_gep4.i.sroa_cast.i, align 8
  %struct_field1.i.sroa.4.0.field_struct_gep4.i.sroa_idx.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 56
  %struct_field1.i.sroa.4.0.field_struct_gep4.i.sroa_cast.i = bitcast i8* %struct_field1.i.sroa.4.0.field_struct_gep4.i.sroa_idx.i to i64*
  store i64 0, i64* %struct_field1.i.sroa.4.0.field_struct_gep4.i.sroa_cast.i, align 8
  %struct_field1.i.sroa.5.0.field_struct_gep4.i.sroa_idx.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 64
  %struct_field1.i.sroa.5.0.field_struct_gep4.i.sroa_cast.i = bitcast i8* %struct_field1.i.sroa.5.0.field_struct_gep4.i.sroa_idx.i to i64*
  store i64 -8863084066665136128, i64* %struct_field1.i.sroa.5.0.field_struct_gep4.i.sroa_cast.i, align 8
  %indexed_pointer.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 2
  %.repack.repack.repack = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 0, i32 0
  store i8* inttoptr (i64 8389758743176421441 to i8*), i8** %.repack.repack.repack, align 8
  %.repack.repack.repack28 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 0, i32 1
  store i64 8243122672032051813, i64* %.repack.repack.repack28, align 8
  %.repack.repack.repack30 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 0, i32 2
  store i64 -7998392938210000850, i64* %.repack.repack.repack30, align 8
  %.repack.repack24.repack = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 1, i32 0
  store i8* inttoptr (i64 7165071350709711458 to i8*), i8** %.repack.repack24.repack, align 8
  %.repack.repack24.repack32 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 1, i32 1
  store i64 0, i64* %.repack.repack24.repack32, align 8
  %.repack.repack24.repack34 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 1, i32 2
  store i64 -8646911284551352320, i64* %.repack.repack24.repack34, align 8
  %.repack.repack26 = getelementptr inbounds { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %0, i64 0, i32 0, i32 2
  %1 = bitcast { [0 x i64], [12 x i64] }** %.repack.repack26 to i8**
  store i8* %indexed_pointer.i.i, i8** %1, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_1_exposed_size() local_unnamed_addr #12 {
entry:
  ret i64 56
}

; Function Attrs: nounwind
define internal fastcc void @List_get_bb335968d023ed6df8f24236716c2f1839a6e4296eba11d250838e1f82b750(%list.RocList %list, i64 %index, { [0 x i64], [2 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %list_len.i = extractvalue %list.RocList %list, 1
  %lt_uint.i = icmp ugt i64 %list_len.i, %index
  br i1 %lt_uint.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_12.exit", %"#Attr_#dec_12.exit60"
  %tag_alloca2.sink78 = phi { [0 x i64], [2 x i64], i8, [7 x i8] }* [ %tag_alloca2, %"#Attr_#dec_12.exit" ], [ %tag_alloca, %"#Attr_#dec_12.exit60" ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_12.exit" ], [ 1, %"#Attr_#dec_12.exit60" ]
  %tag_id_ptr5 = getelementptr inbounds { [0 x i64], [2 x i64], i8, [7 x i8] }, { [0 x i64], [2 x i64], i8, [7 x i8] }* %tag_alloca2.sink78, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr5, align 8
  %1 = bitcast { [0 x i64], [2 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [2 x i64], i8, [7 x i8] }* %tag_alloca2.sink78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %read_list_ptr.i = extractvalue %list.RocList %list, 0
  %cast_basic_basic.i = bitcast i8* %read_list_ptr.i to { [0 x i64], [1 x i64], i8, [7 x i8] }*
  %result_value.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 0, i64 0
  %result_value.sroa.0.0.copyload = load i64, i64* %result_value.sroa.0.0..sroa_idx, align 8
  %result_value.sroa.2.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 2
  %result_value.sroa.2.0.copyload = load i8, i8* %result_value.sroa.2.0..sroa_idx, align 8
  %result_value.sroa.3.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 3, i64 0
  %result_value.sroa.3.0.copyload = load i8, i8* %result_value.sroa.3.0..sroa_idx, align 1
  %result_value.sroa.4.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 3, i64 1
  %result_value.sroa.4.0.copyload = load i8, i8* %result_value.sroa.4.0..sroa_idx, align 2
  %result_value.sroa.5.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 3, i64 2
  %result_value.sroa.5.0.copyload = load i8, i8* %result_value.sroa.5.0..sroa_idx, align 1
  %result_value.sroa.6.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 3, i64 3
  %result_value.sroa.6.0.copyload = load i8, i8* %result_value.sroa.6.0..sroa_idx, align 4
  %result_value.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 3, i64 4
  %result_value.sroa.7.0.copyload = load i8, i8* %result_value.sroa.7.0..sroa_idx, align 1
  %result_value.sroa.8.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 3, i64 5
  %result_value.sroa.8.0.copyload = load i8, i8* %result_value.sroa.8.0..sroa_idx, align 2
  %result_value.sroa.9.0..sroa_idx = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %cast_basic_basic.i, i64 %index, i32 3, i64 6
  %result_value.sroa.9.0.copyload = load i8, i8* %result_value.sroa.9.0..sroa_idx, align 1
  %list_capacity_or_ref_ptr.i46 = extractvalue %list.RocList %list, 2
  %"cap > 0.i47.not" = icmp eq i64 %list_capacity_or_ref_ptr.i46, 0
  br i1 %"cap > 0.i47.not", label %"#Attr_#dec_12.exit60", label %modification_list_block.i56

modification_list_block.i56:                      ; preds = %then_block
  %3 = ptrtoint i8* %read_list_ptr.i to i64
  %4 = shl i64 %list_capacity_or_ref_ptr.i46, 1
  %.not.i.i.i52 = icmp slt i64 %list_capacity_or_ref_ptr.i46, 0
  %5 = select i1 %.not.i.i.i52, i64 %4, i64 %3
  %as_usize_ptr.i53 = inttoptr i64 %5 to i64*
  %get_rc_ptr.i54 = getelementptr inbounds i64, i64* %as_usize_ptr.i53, i64 -1
  %6 = load i64, i64* %get_rc_ptr.i54, align 8
  %.not.i.i.i.i55 = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i55, label %"#Attr_#dec_12.exit60", label %Then.i.i.i.i57

Then.i.i.i.i57:                                   ; preds = %modification_list_block.i56
  %7 = add i64 %6, -1
  store i64 %7, i64* %get_rc_ptr.i54, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i58, label %"#Attr_#dec_12.exit60"

Then1.i.i.i.i58:                                  ; preds = %Then.i.i.i.i57
  %9 = bitcast i64* %get_rc_ptr.i54 to i8*
  tail call void @roc_dealloc(i8* %9, i32 8) #11
  br label %"#Attr_#dec_12.exit60"

"#Attr_#dec_12.exit60":                           ; preds = %modification_list_block.i56, %Then.i.i.i.i57, %Then1.i.i.i.i58, %then_block
  %tag_alloca = alloca { [0 x i64], [2 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [2 x i64], i8, [7 x i8] }, { [0 x i64], [2 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %10 = bitcast [2 x i64]* %data_buffer to { [0 x i64], [1 x i64], i8, [7 x i8] }*
  %11 = getelementptr [2 x i64], [2 x i64]* %data_buffer, i64 0, i64 0
  store i64 %result_value.sroa.0.0.copyload, i64* %11, align 8
  %.repack29 = getelementptr inbounds { [0 x i64], [2 x i64], i8, [7 x i8] }, { [0 x i64], [2 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  %12 = bitcast i64* %.repack29 to i8*
  store i8 %result_value.sroa.2.0.copyload, i8* %12, align 8
  %.repack31.repack = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %10, i64 0, i32 3, i64 0
  store i8 %result_value.sroa.3.0.copyload, i8* %.repack31.repack, align 1
  %.repack31.repack33 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %10, i64 0, i32 3, i64 1
  store i8 %result_value.sroa.4.0.copyload, i8* %.repack31.repack33, align 2
  %.repack31.repack35 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %10, i64 0, i32 3, i64 2
  store i8 %result_value.sroa.5.0.copyload, i8* %.repack31.repack35, align 1
  %.repack31.repack37 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %10, i64 0, i32 3, i64 3
  store i8 %result_value.sroa.6.0.copyload, i8* %.repack31.repack37, align 4
  %.repack31.repack39 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %10, i64 0, i32 3, i64 4
  store i8 %result_value.sroa.7.0.copyload, i8* %.repack31.repack39, align 1
  %.repack31.repack41 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %10, i64 0, i32 3, i64 5
  store i8 %result_value.sroa.8.0.copyload, i8* %.repack31.repack41, align 2
  %.repack31.repack43 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %10, i64 0, i32 3, i64 6
  store i8 %result_value.sroa.9.0.copyload, i8* %.repack31.repack43, align 1
  br label %common.ret

else_block:                                       ; preds = %entry
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %list, 2
  %"cap > 0.i.not" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#dec_12.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %else_block
  %list.elt = extractvalue %list.RocList %list, 0
  %13 = ptrtoint i8* %list.elt to i64
  %14 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %15 = select i1 %.not.i.i.i, i64 %14, i64 %13
  %as_usize_ptr.i = inttoptr i64 %15 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %16 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %16, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_12.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %17 = add i64 %16, -1
  store i64 %17, i64* %get_rc_ptr.i, align 8
  %18 = icmp eq i64 %16, -9223372036854775808
  br i1 %18, label %Then1.i.i.i.i, label %"#Attr_#dec_12.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %19 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %19, i32 8) #11
  br label %"#Attr_#dec_12.exit"

"#Attr_#dec_12.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %else_block
  %tag_alloca2 = alloca { [0 x i64], [2 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @"#UserApp_runOne_8260e92f9a2d24d9b2660f165db8dae572caf38c10eae7fd35fcf473904457"({ %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* readonly %state, { [0 x i64], [12 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %const_str_store.i745 = alloca %str.RocStr, align 8
  %result_value.i746 = alloca { [0 x i8], [1 x i8], i8, [0 x i8] }, align 8
  %result_value.i695 = alloca { [0 x i8], [1 x i8], i8, [0 x i8] }, align 8
  %result_value.i655 = alloca { [0 x i8], [1 x i8], i8, [0 x i8] }, align 8
  %const_str_store.i625 = alloca %str.RocStr, align 8
  %result_value.i626 = alloca { [0 x i8], [1 x i8], i8, [0 x i8] }, align 8
  %const_str_store.i603 = alloca %str.RocStr, align 8
  %result_value.i604 = alloca { [0 x i64], [2 x i64], i8, [7 x i8] }, align 8
  %const_str_store.i = alloca %str.RocStr, align 8
  %result_value.i = alloca { [0 x i8], [1 x i8], i8, [0 x i8] }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %struct_field_access_record_5 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 5
  %struct_field = load i64, i64* %struct_field_access_record_5, align 8
  %struct_field1.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 4, i32 0
  %struct_field1.elt186 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 4, i32 1
  %struct_field1.unpack187 = load i64, i64* %struct_field1.elt186, align 8
  %struct_field1.elt188 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 4, i32 2
  %gte_uint.i.not = icmp ult i64 %struct_field, %struct_field1.unpack187
  br i1 %gte_uint.i.not, label %else_block, label %then_block

common.ret:                                       ; preds = %joinpointcont, %then_block
  %tag_alloca182.sink927 = phi { [0 x i64], [12 x i64], i8, [7 x i8] }* [ %tag_alloca182, %joinpointcont ], [ %tag_alloca, %then_block ]
  %struct_alloca181.sink = phi { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* [ %struct_alloca181, %joinpointcont ], [ %struct_alloca, %then_block ]
  %.sink = phi i8 [ 1, %joinpointcont ], [ 0, %then_block ]
  %data_buffer183 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %tag_alloca182.sink927, i64 0, i32 1
  %1 = bitcast [12 x i64]* %data_buffer183 to i8*
  %2 = bitcast { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(96) %1, i8* noundef nonnull align 8 dereferenceable(96) %2, i64 96, i1 false)
  %tag_id_ptr185 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %tag_alloca182.sink927, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr185, align 8
  %3 = bitcast { [0 x i64], [12 x i64], i8, [7 x i8] }* %0 to i8*
  %4 = bitcast { [0 x i64], [12 x i64], i8, [7 x i8] }* %tag_alloca182.sink927 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(104) %3, i8* noundef nonnull align 8 dereferenceable(104) %4, i64 104, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_tag_to_put_in_struct.unpack.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %load_tag_to_put_in_struct.unpack.unpack = load i8*, i8** %load_tag_to_put_in_struct.unpack.elt, align 8
  %load_tag_to_put_in_struct.unpack.elt541 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %load_tag_to_put_in_struct.unpack.unpack542 = load i64, i64* %load_tag_to_put_in_struct.unpack.elt541, align 8
  %load_tag_to_put_in_struct.unpack.elt543 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %load_tag_to_put_in_struct.unpack.unpack544 = load i64, i64* %load_tag_to_put_in_struct.unpack.elt543, align 8
  %load_tag_to_put_in_struct.elt530 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %load_tag_to_put_in_struct.unpack531 = load i64, i64* %load_tag_to_put_in_struct.elt530, align 8
  %load_tag_to_put_in_struct.elt532 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack533 = load i64, i64* %load_tag_to_put_in_struct.elt532, align 8
  %load_tag_to_put_in_struct.unpack535.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %load_tag_to_put_in_struct.unpack535.unpack = load i8*, i8** %load_tag_to_put_in_struct.unpack535.elt, align 8
  %load_tag_to_put_in_struct.unpack535.elt546 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %load_tag_to_put_in_struct.unpack535.unpack547 = load i64, i64* %load_tag_to_put_in_struct.unpack535.elt546, align 8
  %load_tag_to_put_in_struct.unpack535.elt548 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %load_tag_to_put_in_struct.unpack535.unpack549 = load i64, i64* %load_tag_to_put_in_struct.unpack535.elt548, align 8
  %load_tag_to_put_in_struct.unpack537.unpack = load i8*, i8** %struct_field1.elt, align 8
  %load_tag_to_put_in_struct.unpack537.unpack554 = load i64, i64* %struct_field1.elt188, align 8
  %struct_alloca = alloca { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, align 8
  %.repack.repack566 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0
  store i8* %load_tag_to_put_in_struct.unpack.unpack, i8** %.repack.repack566, align 8
  %.repack.repack567 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1
  store i64 %load_tag_to_put_in_struct.unpack.unpack542, i64* %.repack.repack567, align 8
  %.repack.repack569 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2
  store i64 %load_tag_to_put_in_struct.unpack.unpack544, i64* %.repack.repack569, align 8
  %.repack556 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 1
  store i64 %load_tag_to_put_in_struct.unpack531, i64* %.repack556, align 8
  %.repack558 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 2
  store i64 %load_tag_to_put_in_struct.unpack533, i64* %.repack558, align 8
  %.repack560.repack = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 3, i32 0
  store i8* %load_tag_to_put_in_struct.unpack535.unpack, i8** %.repack560.repack, align 8
  %.repack560.repack571 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 3, i32 1
  store i64 %load_tag_to_put_in_struct.unpack535.unpack547, i64* %.repack560.repack571, align 8
  %.repack560.repack573 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 3, i32 2
  store i64 %load_tag_to_put_in_struct.unpack535.unpack549, i64* %.repack560.repack573, align 8
  %.repack562.repack = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 4, i32 0
  store i8* %load_tag_to_put_in_struct.unpack537.unpack, i8** %.repack562.repack, align 8
  %.repack562.repack575 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 4, i32 1
  store i64 %struct_field1.unpack187, i64* %.repack562.repack575, align 8
  %.repack562.repack577 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 4, i32 2
  store i64 %load_tag_to_put_in_struct.unpack537.unpack554, i64* %.repack562.repack577, align 8
  %.repack564 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca, i64 0, i32 0, i32 5
  store i64 %struct_field, i64* %.repack564, align 8
  %tag_alloca = alloca { [0 x i64], [12 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %struct_field4.unpack = load i8*, i8** %struct_field1.elt, align 8
  %5 = insertvalue %list.RocList undef, i8* %struct_field4.unpack, 0
  %6 = insertvalue %list.RocList %5, i64 %struct_field1.unpack187, 1
  %struct_field4.unpack194 = load i64, i64* %struct_field1.elt188, align 8
  %struct_field4195 = insertvalue %list.RocList %6, i64 %struct_field4.unpack194, 2
  %"cap > 0.i.not" = icmp eq i64 %struct_field4.unpack194, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#inc_12.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %else_block
  %7 = ptrtoint i8* %struct_field4.unpack to i64
  %8 = shl i64 %struct_field4.unpack194, 1
  %.not.i.i.i = icmp slt i64 %struct_field4.unpack194, 0
  %9 = select i1 %.not.i.i.i, i64 %8, i64 %7
  %as_usize_ptr.i = inttoptr i64 %9 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %10 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i = icmp eq i64 %10, 0
  br i1 %.not.i.i, label %"#Attr_#inc_12.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modification_list_block.i
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %get_rc_ptr.i, align 8
  %struct_field6.pre = load i64, i64* %struct_field_access_record_5, align 8
  br label %"#Attr_#inc_12.exit"

"#Attr_#inc_12.exit":                             ; preds = %else_block, %modification_list_block.i, %Then.i.i
  %struct_field6 = phi i64 [ %struct_field, %else_block ], [ %struct_field, %modification_list_block.i ], [ %struct_field6.pre, %Then.i.i ]
  %12 = bitcast %str.RocStr* %const_str_store.i603 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12)
  %13 = bitcast { [0 x i64], [2 x i64], i8, [7 x i8] }* %result_value.i604 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  call fastcc void @List_get_bb335968d023ed6df8f24236716c2f1839a6e4296eba11d250838e1f82b750(%list.RocList %struct_field4195, i64 %struct_field6, { [0 x i64], [2 x i64], i8, [7 x i8] }* nonnull %result_value.i604) #11
  %tag_id_ptr.i605 = getelementptr inbounds { [0 x i64], [2 x i64], i8, [7 x i8] }, { [0 x i64], [2 x i64], i8, [7 x i8] }* %result_value.i604, i64 0, i32 2
  %load_tag_id.i606 = load i8, i8* %tag_id_ptr.i605, align 8
  %eq_u8.i607 = icmp eq i8 %load_tag_id.i606, 0
  br i1 %eq_u8.i607, label %then_block.i611, label %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"

then_block.i611:                                  ; preds = %"#Attr_#inc_12.exit"
  %const_str_store.repack.i608 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i603, i64 0, i32 0
  store i8* inttoptr (i64 7070764042443584847 to i8*), i8** %const_str_store.repack.i608, align 8
  %const_str_store.repack2.i609 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i603, i64 0, i32 1
  store i64 495606199663, i64* %const_str_store.repack2.i609, align 8
  %const_str_store.repack3.i610 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i603, i64 0, i32 2
  store i64 -8286623314361712640, i64* %const_str_store.repack3.i610, align 8
  call void @roc_panic(%str.RocStr* %const_str_store.i603, i32 1) #11
  unreachable

"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit": ; preds = %"#Attr_#inc_12.exit"
  %result_value.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [2 x i64], i8, [7 x i8] }, { [0 x i64], [2 x i64], i8, [7 x i8] }* %result_value.i604, i64 0, i32 0, i64 0
  %result_value.sroa.0.0.copyload = load i64, i64* %result_value.sroa.0.0..sroa_idx, align 8
  %result_value.sroa.3.0..sroa_idx = getelementptr inbounds { [0 x i64], [2 x i64], i8, [7 x i8] }, { [0 x i64], [2 x i64], i8, [7 x i8] }* %result_value.i604, i64 0, i32 1, i64 1
  %result_value.sroa.3.0..sroa_cast = bitcast i64* %result_value.sroa.3.0..sroa_idx to i8*
  %result_value.sroa.3.0.copyload = load i8, i8* %result_value.sroa.3.0..sroa_cast, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  switch i8 %result_value.sroa.3.0.copyload, label %default [
    i8 5, label %branch5
    i8 7, label %branch7
    i8 1, label %branch1
    i8 0, label %branch0
    i8 2, label %branch2
    i8 6, label %branch6
    i8 4, label %branch4
  ]

default:                                          ; preds = %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"
  %struct_field152.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %struct_field152.unpack = load i8*, i8** %struct_field152.elt, align 8
  %14 = insertvalue %list.RocList undef, i8* %struct_field152.unpack, 0
  %struct_field152.elt488 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %struct_field152.unpack489 = load i64, i64* %struct_field152.elt488, align 8
  %15 = insertvalue %list.RocList %14, i64 %struct_field152.unpack489, 1
  %struct_field152.elt490 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %struct_field152.unpack491 = load i64, i64* %struct_field152.elt490, align 8
  %struct_field152492 = insertvalue %list.RocList %15, i64 %struct_field152.unpack491, 2
  %"cap > 0.i613.not" = icmp eq i64 %struct_field152.unpack491, 0
  br i1 %"cap > 0.i613.not", label %"#Attr_#inc_29.exit624", label %modification_list_block.i622

modification_list_block.i622:                     ; preds = %default
  %16 = ptrtoint i8* %struct_field152.unpack to i64
  %17 = shl i64 %struct_field152.unpack491, 1
  %.not.i.i.i618 = icmp slt i64 %struct_field152.unpack491, 0
  %18 = select i1 %.not.i.i.i618, i64 %17, i64 %16
  %as_usize_ptr.i619 = inttoptr i64 %18 to i64*
  %get_rc_ptr.i620 = getelementptr inbounds i64, i64* %as_usize_ptr.i619, i64 -1
  %19 = load i64, i64* %get_rc_ptr.i620, align 8
  %.not.i.i621 = icmp eq i64 %19, 0
  br i1 %.not.i.i621, label %"#Attr_#inc_29.exit624", label %Then.i.i623

Then.i.i623:                                      ; preds = %modification_list_block.i622
  %20 = add nsw i64 %19, 1
  store i64 %20, i64* %get_rc_ptr.i620, align 8
  br label %"#Attr_#inc_29.exit624"

"#Attr_#inc_29.exit624":                          ; preds = %default, %modification_list_block.i622, %Then.i.i623
  %struct_field_access_record_1153 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field154 = load i64, i64* %struct_field_access_record_1153, align 8
  %21 = bitcast %str.RocStr* %const_str_store.i625 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21)
  %22 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i626, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %22)
  call fastcc void @List_get_4bc3befd4127054416125539e7bc161699db1de9fc4587f06d2ee1b827f164(%list.RocList %struct_field152492, i64 %struct_field154, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i626) #11
  %tag_id_ptr.i627 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i626, i64 0, i32 2
  %load_tag_id.i628 = load i8, i8* %tag_id_ptr.i627, align 1
  %eq_u8.i629 = icmp eq i8 %load_tag_id.i628, 0
  br i1 %eq_u8.i629, label %then_block.i633, label %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit636"

then_block.i633:                                  ; preds = %"#Attr_#inc_29.exit624"
  %const_str_store.repack.i630 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i625, i64 0, i32 0
  store i8* inttoptr (i64 7070764042443584847 to i8*), i8** %const_str_store.repack.i630, align 8
  %const_str_store.repack2.i631 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i625, i64 0, i32 1
  store i64 495606199663, i64* %const_str_store.repack2.i631, align 8
  %const_str_store.repack3.i632 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i625, i64 0, i32 2
  store i64 -8286623314361712640, i64* %const_str_store.repack3.i632, align 8
  call void @roc_panic(%str.RocStr* %const_str_store.i625, i32 1) #11
  unreachable

"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit636": ; preds = %"#Attr_#inc_29.exit624"
  %get_opaque_data_ptr1.i634 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i626, i64 0, i32 1, i64 0
  %load_element.i635 = load i8, i8* %get_opaque_data_ptr1.i634, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %22)
  %neq_u8.i.i.not = icmp eq i8 %load_element.i635, 0
  br i1 %neq_u8.i.i.not, label %joinpointcont, label %then_block160

branch5:                                          ; preds = %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"
  %struct_field9.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %struct_field9.unpack = load i8*, i8** %struct_field9.elt, align 8
  %struct_field9.elt451 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %struct_field9.unpack452 = load i64, i64* %struct_field9.elt451, align 8
  %struct_field9.elt453 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %struct_field9.unpack454 = load i64, i64* %struct_field9.elt453, align 8
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field10 = load i64, i64* %struct_field_access_record_1, align 8
  %struct_field_access_record_2 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 2
  %struct_field11 = load i64, i64* %struct_field_access_record_2, align 8
  %struct_field12.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %struct_field12.unpack = load i8*, i8** %struct_field12.elt, align 8
  %struct_field12.elt456 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %struct_field12.unpack457 = load i64, i64* %struct_field12.elt456, align 8
  %struct_field12.elt458 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %struct_field12.unpack459 = load i64, i64* %struct_field12.elt458, align 8
  %struct_field14.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field14.unpack462 = load i64, i64* %struct_field1.elt186, align 8
  %struct_field14.unpack464 = load i64, i64* %struct_field1.elt188, align 8
  %struct_field16 = load i64, i64* %struct_field_access_record_5, align 8
  %add_int_wrap.i = add i64 %struct_field10, 1
  %struct_alloca24 = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca24.repack.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca24, i64 0, i32 0, i32 0
  store i8* %struct_field9.unpack, i8** %struct_alloca24.repack.repack, align 8
  %struct_alloca24.repack.repack476 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca24, i64 0, i32 0, i32 1
  store i64 %struct_field9.unpack452, i64* %struct_alloca24.repack.repack476, align 8
  %struct_alloca24.repack.repack478 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca24, i64 0, i32 0, i32 2
  store i64 %struct_field9.unpack454, i64* %struct_alloca24.repack.repack478, align 8
  br label %joinpointcont.sink.split

branch7:                                          ; preds = %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"
  %struct_field26.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %struct_field26.unpack = load i8*, i8** %struct_field26.elt, align 8
  %struct_field26.elt414 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %struct_field26.unpack415 = load i64, i64* %struct_field26.elt414, align 8
  %struct_field26.elt416 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %struct_field26.unpack417 = load i64, i64* %struct_field26.elt416, align 8
  %struct_field_access_record_127 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field28 = load i64, i64* %struct_field_access_record_127, align 8
  %struct_field_access_record_229 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 2
  %struct_field30 = load i64, i64* %struct_field_access_record_229, align 8
  %struct_field32.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %struct_field32.unpack = load i8*, i8** %struct_field32.elt, align 8
  %struct_field32.elt419 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %struct_field32.unpack420 = load i64, i64* %struct_field32.elt419, align 8
  %struct_field32.elt421 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %struct_field32.unpack422 = load i64, i64* %struct_field32.elt421, align 8
  %struct_field34.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field34.unpack425 = load i64, i64* %struct_field1.elt186, align 8
  %struct_field34.unpack427 = load i64, i64* %struct_field1.elt188, align 8
  %struct_field36 = load i64, i64* %struct_field_access_record_5, align 8
  %sub_int.i = add i64 %struct_field28, -1
  %struct_alloca44 = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca44.repack.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca44, i64 0, i32 0, i32 0
  store i8* %struct_field26.unpack, i8** %struct_alloca44.repack.repack, align 8
  %struct_alloca44.repack.repack439 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca44, i64 0, i32 0, i32 1
  store i64 %struct_field26.unpack415, i64* %struct_alloca44.repack.repack439, align 8
  %struct_alloca44.repack.repack441 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca44, i64 0, i32 0, i32 2
  store i64 %struct_field26.unpack417, i64* %struct_alloca44.repack.repack441, align 8
  br label %joinpointcont.sink.split

branch1:                                          ; preds = %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"
  %struct_field46.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %struct_field46.unpack = load i8*, i8** %struct_field46.elt, align 8
  %23 = insertvalue %list.RocList undef, i8* %struct_field46.unpack, 0
  %struct_field46.elt377 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %struct_field46.unpack378 = load i64, i64* %struct_field46.elt377, align 8
  %24 = insertvalue %list.RocList %23, i64 %struct_field46.unpack378, 1
  %struct_field46.elt379 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %struct_field46.unpack380 = load i64, i64* %struct_field46.elt379, align 8
  %struct_field46381 = insertvalue %list.RocList %24, i64 %struct_field46.unpack380, 2
  %"cap > 0.i642.not" = icmp eq i64 %struct_field46.unpack380, 0
  br i1 %"cap > 0.i642.not", label %"#Attr_#inc_29.exit653", label %modification_list_block.i651

modification_list_block.i651:                     ; preds = %branch1
  %25 = ptrtoint i8* %struct_field46.unpack to i64
  %26 = shl i64 %struct_field46.unpack380, 1
  %.not.i.i.i647 = icmp slt i64 %struct_field46.unpack380, 0
  %27 = select i1 %.not.i.i.i647, i64 %26, i64 %25
  %as_usize_ptr.i648 = inttoptr i64 %27 to i64*
  %get_rc_ptr.i649 = getelementptr inbounds i64, i64* %as_usize_ptr.i648, i64 -1
  %28 = load i64, i64* %get_rc_ptr.i649, align 8
  %.not.i.i650 = icmp eq i64 %28, 0
  br i1 %.not.i.i650, label %modification_list_block.i.i.thread, label %modification_list_block.i.i

modification_list_block.i.i.thread:               ; preds = %modification_list_block.i651
  %struct_field_access_record_147886913 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field48887914 = load i64, i64* %struct_field_access_record_147886913, align 8
  %29 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i655, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %29)
  br label %"#Attr_#inc_29.exit.i"

"#Attr_#inc_29.exit653":                          ; preds = %branch1
  %struct_field_access_record_147 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field48 = load i64, i64* %struct_field_access_record_147, align 8
  %30 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i655, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30)
  br label %"#Attr_#inc_29.exit.i"

modification_list_block.i.i:                      ; preds = %modification_list_block.i651
  %31 = add nsw i64 %28, 1
  store i64 %31, i64* %get_rc_ptr.i649, align 8
  %struct_field_access_record_147886 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field48887 = load i64, i64* %struct_field_access_record_147886, align 8
  %32 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i655, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %32)
  %.not.i.i.i659 = icmp eq i64 %31, 0
  br i1 %.not.i.i.i659, label %"#Attr_#inc_29.exit.i", label %Then.i.i.i660

Then.i.i.i660:                                    ; preds = %modification_list_block.i.i
  %33 = add nsw i64 %28, 2
  store i64 %33, i64* %get_rc_ptr.i649, align 8
  br label %"#Attr_#inc_29.exit.i"

"#Attr_#inc_29.exit.i":                           ; preds = %modification_list_block.i.i.thread, %"#Attr_#inc_29.exit653", %Then.i.i.i660, %modification_list_block.i.i
  %struct_field48891 = phi i64 [ %struct_field48887, %Then.i.i.i660 ], [ %struct_field48887, %modification_list_block.i.i ], [ %struct_field48, %"#Attr_#inc_29.exit653" ], [ %struct_field48887914, %modification_list_block.i.i.thread ]
  %struct_field_access_record_147889 = phi i64* [ %struct_field_access_record_147886, %Then.i.i.i660 ], [ %struct_field_access_record_147886, %modification_list_block.i.i ], [ %struct_field_access_record_147, %"#Attr_#inc_29.exit653" ], [ %struct_field_access_record_147886913, %modification_list_block.i.i.thread ]
  %34 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i655, i64 0, i32 0, i64 0
  call fastcc void @List_get_4bc3befd4127054416125539e7bc161699db1de9fc4587f06d2ee1b827f164(%list.RocList %struct_field46381, i64 %struct_field48891, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i655) #11
  %tag_id_ptr.i661 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i655, i64 0, i32 2
  %load_tag_id.i662 = load i8, i8* %tag_id_ptr.i661, align 1
  %eq_u8.i663 = icmp eq i8 %load_tag_id.i662, 0
  br i1 %eq_u8.i663, label %List_update_f76befe233f9b66356e7ebb99389fad4d59caab0cdbbe59943f79227ea3.exit, label %else_block.i

else_block.i:                                     ; preds = %"#Attr_#inc_29.exit.i"
  %get_opaque_data_ptr1.i664 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i655, i64 0, i32 1, i64 0
  %load_element.i665 = load i8, i8* %get_opaque_data_ptr1.i664, align 8
  %add_int_wrap.i.i.i = add i8 %load_element.i665, 1
  %.not.i.i.i.i.i.i836 = icmp slt i64 %struct_field46.unpack380, 0
  %35 = select i1 %.not.i.i.i.i.i.i836, i64 %struct_field46.unpack378, i64 %struct_field46.unpack380
  %36 = icmp ne i64 %35, 0
  %37 = or i1 %.not.i.i.i.i.i.i836, %36
  br i1 %37, label %list.RocList.isUnique.exit.i.i.i838, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit

list.RocList.isUnique.exit.i.i.i838:              ; preds = %else_block.i
  %38 = getelementptr inbounds i8, i8* %struct_field46.unpack, i64 -8
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !366
  %phi.cmp.i.i.i.i837 = icmp eq i64 %40, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i837, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit, label %EndIf.i.i.i

EndIf.i.i.i:                                      ; preds = %list.RocList.isUnique.exit.i.i.i838
  %41 = icmp eq i64 %struct_field46.unpack378, 0
  br i1 %41, label %Then1.i.i.i, label %EndIf.i.i.i.i840

Then1.i.i.i:                                      ; preds = %EndIf.i.i.i
  %42 = ptrtoint i8* %struct_field46.unpack to i64
  %43 = shl i64 %struct_field46.unpack380, 1
  %44 = select i1 %.not.i.i.i.i.i.i836, i64 %43, i64 %42
  %45 = icmp ne i64 %struct_field46.unpack380, 0
  %46 = icmp ne i64 %44, 0
  %or.cond.i.i.i.i.i = select i1 %45, i1 %46, i1 false
  br i1 %or.cond.i.i.i.i.i, label %OptionalNonNull.i.i.i.i.i, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit

OptionalNonNull.i.i.i.i.i:                        ; preds = %Then1.i.i.i
  %47 = inttoptr i64 %44 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 -8
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !366
  %.not.i.i.i12.i.i.i = icmp eq i64 %50, 0
  br i1 %.not.i.i.i12.i.i.i, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %OptionalNonNull.i.i.i.i.i
  %51 = add i64 %50, -1
  store i64 %51, i64* %49, align 8, !noalias !366
  %52 = icmp eq i64 %50, -9223372036854775808
  br i1 %52, label %roc_builtins.list.replace.exit.sink.split.i, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit

EndIf.i.i.i.i840:                                 ; preds = %EndIf.i.i.i
  %53 = icmp ugt i64 %struct_field46.unpack378, 64
  %..i.i.i.i.i.i839 = select i1 %53, i64 %struct_field46.unpack378, i64 64
  %54 = add nuw i64 %..i.i.i.i.i.i839, 8
  %55 = tail call i8* @roc_alloc(i64 %54, i32 8) #11, !noalias !371
  %56 = icmp ne i8* %55, null
  tail call void @llvm.assume(i1 %56) #11
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  %58 = bitcast i8* %55 to i64*
  store i64 -9223372036854775808, i64* %58, align 8, !noalias !371
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* nonnull align 1 %struct_field46.unpack, i64 %struct_field46.unpack378, i1 false) #11, !noalias !366
  %59 = ptrtoint i8* %struct_field46.unpack to i64
  %60 = shl i64 %struct_field46.unpack380, 1
  %61 = select i1 %.not.i.i.i.i.i.i836, i64 %60, i64 %59
  %62 = icmp ne i64 %struct_field46.unpack380, 0
  %63 = icmp ne i64 %61, 0
  %or.cond.i.i15.i.i.i = select i1 %62, i1 %63, i1 false
  br i1 %or.cond.i.i15.i.i.i, label %OptionalNonNull.i.i17.i.i.i, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit

OptionalNonNull.i.i17.i.i.i:                      ; preds = %EndIf.i.i.i.i840
  %64 = inttoptr i64 %61 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 -8
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !366
  %.not.i.i.i16.i.i.i = icmp eq i64 %67, 0
  br i1 %.not.i.i.i16.i.i.i, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit, label %Then.i.i.i18.i.i.i

Then.i.i.i18.i.i.i:                               ; preds = %OptionalNonNull.i.i17.i.i.i
  %68 = add i64 %67, -1
  store i64 %68, i64* %66, align 8, !noalias !366
  %69 = icmp eq i64 %67, -9223372036854775808
  br i1 %69, label %roc_builtins.list.replace.exit.sink.split.i, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit

roc_builtins.list.replace.exit.sink.split.i:      ; preds = %Then.i.i.i18.i.i.i, %Then.i.i.i.i.i.i
  %.sink.i = phi i8* [ %48, %Then.i.i.i.i.i.i ], [ %65, %Then.i.i.i18.i.i.i ]
  %.sroa.10.0.ph.i = phi i64 [ 0, %Then.i.i.i.i.i.i ], [ %..i.i.i.i.i.i839, %Then.i.i.i18.i.i.i ]
  %.sroa.0.0.ph.i = phi i8* [ null, %Then.i.i.i.i.i.i ], [ %57, %Then.i.i.i18.i.i.i ]
  tail call void @roc_dealloc(i8* %.sink.i, i32 1) #11, !noalias !366
  br label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit

List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit: ; preds = %else_block.i, %list.RocList.isUnique.exit.i.i.i838, %Then1.i.i.i, %OptionalNonNull.i.i.i.i.i, %Then.i.i.i.i.i.i, %EndIf.i.i.i.i840, %OptionalNonNull.i.i17.i.i.i, %Then.i.i.i18.i.i.i, %roc_builtins.list.replace.exit.sink.split.i
  %.sroa.10.0.i = phi i64 [ %struct_field46.unpack380, %list.RocList.isUnique.exit.i.i.i838 ], [ %struct_field46.unpack380, %else_block.i ], [ 0, %Then.i.i.i.i.i.i ], [ 0, %OptionalNonNull.i.i.i.i.i ], [ 0, %Then1.i.i.i ], [ %..i.i.i.i.i.i839, %Then.i.i.i18.i.i.i ], [ %..i.i.i.i.i.i839, %OptionalNonNull.i.i17.i.i.i ], [ %..i.i.i.i.i.i839, %EndIf.i.i.i.i840 ], [ %.sroa.10.0.ph.i, %roc_builtins.list.replace.exit.sink.split.i ]
  %.sroa.7.0.i = phi i64 [ %struct_field46.unpack378, %list.RocList.isUnique.exit.i.i.i838 ], [ %struct_field46.unpack378, %else_block.i ], [ 0, %Then.i.i.i.i.i.i ], [ 0, %OptionalNonNull.i.i.i.i.i ], [ 0, %Then1.i.i.i ], [ %struct_field46.unpack378, %Then.i.i.i18.i.i.i ], [ %struct_field46.unpack378, %OptionalNonNull.i.i17.i.i.i ], [ %struct_field46.unpack378, %EndIf.i.i.i.i840 ], [ %struct_field46.unpack378, %roc_builtins.list.replace.exit.sink.split.i ]
  %.sroa.0.0.i = phi i8* [ %struct_field46.unpack, %list.RocList.isUnique.exit.i.i.i838 ], [ %struct_field46.unpack, %else_block.i ], [ null, %Then.i.i.i.i.i.i ], [ null, %OptionalNonNull.i.i.i.i.i ], [ null, %Then1.i.i.i ], [ %57, %Then.i.i.i18.i.i.i ], [ %57, %OptionalNonNull.i.i17.i.i.i ], [ %57, %EndIf.i.i.i.i840 ], [ %.sroa.0.0.ph.i, %roc_builtins.list.replace.exit.sink.split.i ]
  %70 = getelementptr inbounds i8, i8* %.sroa.0.0.i, i64 %struct_field48891
  store i8 %add_int_wrap.i.i.i, i8* %70, align 1
  %71 = insertvalue %list.RocList undef, i8* %.sroa.0.0.i, 0
  %72 = insertvalue %list.RocList %71, i64 %.sroa.7.0.i, 1
  %load_list10.i = insertvalue %list.RocList %72, i64 %.sroa.10.0.i, 2
  br label %List_update_f76befe233f9b66356e7ebb99389fad4d59caab0cdbbe59943f79227ea3.exit

List_update_f76befe233f9b66356e7ebb99389fad4d59caab0cdbbe59943f79227ea3.exit: ; preds = %"#Attr_#inc_29.exit.i", %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit
  %common.ret.op.i = phi %list.RocList [ %load_list10.i, %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit ], [ %struct_field46381, %"#Attr_#inc_29.exit.i" ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %34)
  %struct_field51 = load i64, i64* %struct_field_access_record_147889, align 8
  %struct_field_access_record_252 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 2
  %struct_field53 = load i64, i64* %struct_field_access_record_252, align 8
  %struct_field55.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %struct_field55.unpack = load i8*, i8** %struct_field55.elt, align 8
  %struct_field55.elt382 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %struct_field55.unpack383 = load i64, i64* %struct_field55.elt382, align 8
  %struct_field55.elt384 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %struct_field55.unpack385 = load i64, i64* %struct_field55.elt384, align 8
  %struct_field57.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field57.unpack388 = load i64, i64* %struct_field1.elt186, align 8
  %struct_field57.unpack390 = load i64, i64* %struct_field1.elt188, align 8
  %struct_field59 = load i64, i64* %struct_field_access_record_5, align 8
  br i1 %"cap > 0.i642.not", label %"#Attr_#dec_29.exit680", label %modification_list_block.i676

modification_list_block.i676:                     ; preds = %List_update_f76befe233f9b66356e7ebb99389fad4d59caab0cdbbe59943f79227ea3.exit
  %73 = ptrtoint i8* %struct_field46.unpack to i64
  %74 = shl i64 %struct_field46.unpack380, 1
  %.not.i.i.i672 = icmp slt i64 %struct_field46.unpack380, 0
  %75 = select i1 %.not.i.i.i672, i64 %74, i64 %73
  %as_usize_ptr.i673 = inttoptr i64 %75 to i64*
  %get_rc_ptr.i674 = getelementptr inbounds i64, i64* %as_usize_ptr.i673, i64 -1
  %76 = load i64, i64* %get_rc_ptr.i674, align 8
  %.not.i.i.i.i675 = icmp eq i64 %76, 0
  br i1 %.not.i.i.i.i675, label %"#Attr_#dec_29.exit680", label %Then.i.i.i.i677

Then.i.i.i.i677:                                  ; preds = %modification_list_block.i676
  %77 = add i64 %76, -1
  store i64 %77, i64* %get_rc_ptr.i674, align 8
  %78 = icmp eq i64 %76, -9223372036854775808
  br i1 %78, label %Then1.i.i.i.i678, label %"#Attr_#dec_29.exit680"

Then1.i.i.i.i678:                                 ; preds = %Then.i.i.i.i677
  %79 = bitcast i64* %get_rc_ptr.i674 to i8*
  tail call void @roc_dealloc(i8* %79, i32 8) #11
  br label %"#Attr_#dec_29.exit680"

"#Attr_#dec_29.exit680":                          ; preds = %modification_list_block.i676, %Then.i.i.i.i677, %Then1.i.i.i.i678, %List_update_f76befe233f9b66356e7ebb99389fad4d59caab0cdbbe59943f79227ea3.exit
  %struct_alloca66 = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca66.repack.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca66, i64 0, i32 0, i32 0
  %call49.elt = extractvalue %list.RocList %common.ret.op.i, 0
  store i8* %call49.elt, i8** %struct_alloca66.repack.repack, align 8
  %struct_alloca66.repack.repack402 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca66, i64 0, i32 0, i32 1
  %call49.elt403 = extractvalue %list.RocList %common.ret.op.i, 1
  store i64 %call49.elt403, i64* %struct_alloca66.repack.repack402, align 8
  %struct_alloca66.repack.repack404 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca66, i64 0, i32 0, i32 2
  %call49.elt405 = extractvalue %list.RocList %common.ret.op.i, 2
  store i64 %call49.elt405, i64* %struct_alloca66.repack.repack404, align 8
  br label %joinpointcont.sink.split

branch0:                                          ; preds = %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"
  %struct_field68.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %struct_field68.unpack = load i8*, i8** %struct_field68.elt, align 8
  %80 = insertvalue %list.RocList undef, i8* %struct_field68.unpack, 0
  %struct_field68.elt340 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %struct_field68.unpack341 = load i64, i64* %struct_field68.elt340, align 8
  %81 = insertvalue %list.RocList %80, i64 %struct_field68.unpack341, 1
  %struct_field68.elt342 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %struct_field68.unpack343 = load i64, i64* %struct_field68.elt342, align 8
  %struct_field68344 = insertvalue %list.RocList %81, i64 %struct_field68.unpack343, 2
  %"cap > 0.i682.not" = icmp eq i64 %struct_field68.unpack343, 0
  br i1 %"cap > 0.i682.not", label %"#Attr_#inc_29.exit693", label %modification_list_block.i691

modification_list_block.i691:                     ; preds = %branch0
  %82 = ptrtoint i8* %struct_field68.unpack to i64
  %83 = shl i64 %struct_field68.unpack343, 1
  %.not.i.i.i687 = icmp slt i64 %struct_field68.unpack343, 0
  %84 = select i1 %.not.i.i.i687, i64 %83, i64 %82
  %as_usize_ptr.i688 = inttoptr i64 %84 to i64*
  %get_rc_ptr.i689 = getelementptr inbounds i64, i64* %as_usize_ptr.i688, i64 -1
  %85 = load i64, i64* %get_rc_ptr.i689, align 8
  %.not.i.i690 = icmp eq i64 %85, 0
  br i1 %.not.i.i690, label %modification_list_block.i.i705.thread, label %modification_list_block.i.i705

modification_list_block.i.i705.thread:            ; preds = %modification_list_block.i691
  %struct_field_access_record_169892916 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field70893917 = load i64, i64* %struct_field_access_record_169892916, align 8
  %86 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i695, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %86)
  br label %"#Attr_#inc_29.exit.i710"

"#Attr_#inc_29.exit693":                          ; preds = %branch0
  %struct_field_access_record_169 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field70 = load i64, i64* %struct_field_access_record_169, align 8
  %87 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i695, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %87)
  br label %"#Attr_#inc_29.exit.i710"

modification_list_block.i.i705:                   ; preds = %modification_list_block.i691
  %88 = add nsw i64 %85, 1
  store i64 %88, i64* %get_rc_ptr.i689, align 8
  %struct_field_access_record_169892 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field70893 = load i64, i64* %struct_field_access_record_169892, align 8
  %89 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i695, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %89)
  %.not.i.i.i704 = icmp eq i64 %88, 0
  br i1 %.not.i.i.i704, label %"#Attr_#inc_29.exit.i710", label %Then.i.i.i706

Then.i.i.i706:                                    ; preds = %modification_list_block.i.i705
  %90 = add nsw i64 %85, 2
  store i64 %90, i64* %get_rc_ptr.i689, align 8
  br label %"#Attr_#inc_29.exit.i710"

"#Attr_#inc_29.exit.i710":                        ; preds = %modification_list_block.i.i705.thread, %"#Attr_#inc_29.exit693", %Then.i.i.i706, %modification_list_block.i.i705
  %struct_field70897 = phi i64 [ %struct_field70893, %Then.i.i.i706 ], [ %struct_field70893, %modification_list_block.i.i705 ], [ %struct_field70, %"#Attr_#inc_29.exit693" ], [ %struct_field70893917, %modification_list_block.i.i705.thread ]
  %struct_field_access_record_169895 = phi i64* [ %struct_field_access_record_169892, %Then.i.i.i706 ], [ %struct_field_access_record_169892, %modification_list_block.i.i705 ], [ %struct_field_access_record_169, %"#Attr_#inc_29.exit693" ], [ %struct_field_access_record_169892916, %modification_list_block.i.i705.thread ]
  %91 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i695, i64 0, i32 0, i64 0
  call fastcc void @List_get_4bc3befd4127054416125539e7bc161699db1de9fc4587f06d2ee1b827f164(%list.RocList %struct_field68344, i64 %struct_field70897, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i695) #11
  %tag_id_ptr.i707 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i695, i64 0, i32 2
  %load_tag_id.i708 = load i8, i8* %tag_id_ptr.i707, align 1
  %eq_u8.i709 = icmp eq i8 %load_tag_id.i708, 0
  br i1 %eq_u8.i709, label %List_update_4c75285b1729a7f87fbcd82e6d314659d84de598b47e454c454af4d2267459.exit, label %else_block.i716

else_block.i716:                                  ; preds = %"#Attr_#inc_29.exit.i710"
  %get_opaque_data_ptr1.i712 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i695, i64 0, i32 1, i64 0
  %load_element.i713 = load i8, i8* %get_opaque_data_ptr1.i712, align 8
  %sub_int.i.i.i = add i8 %load_element.i713, -1
  %.not.i.i.i.i.i.i841 = icmp slt i64 %struct_field68.unpack343, 0
  %92 = select i1 %.not.i.i.i.i.i.i841, i64 %struct_field68.unpack341, i64 %struct_field68.unpack343
  %93 = icmp ne i64 %92, 0
  %94 = or i1 %.not.i.i.i.i.i.i841, %93
  br i1 %94, label %list.RocList.isUnique.exit.i.i.i843, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865

list.RocList.isUnique.exit.i.i.i843:              ; preds = %else_block.i716
  %95 = getelementptr inbounds i8, i8* %struct_field68.unpack, i64 -8
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8, !noalias !374
  %phi.cmp.i.i.i.i842 = icmp eq i64 %97, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i842, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865, label %EndIf.i.i.i844

EndIf.i.i.i844:                                   ; preds = %list.RocList.isUnique.exit.i.i.i843
  %98 = icmp eq i64 %struct_field68.unpack341, 0
  br i1 %98, label %Then1.i.i.i846, label %EndIf.i.i.i.i852

Then1.i.i.i846:                                   ; preds = %EndIf.i.i.i844
  %99 = ptrtoint i8* %struct_field68.unpack to i64
  %100 = shl i64 %struct_field68.unpack343, 1
  %101 = select i1 %.not.i.i.i.i.i.i841, i64 %100, i64 %99
  %102 = icmp ne i64 %struct_field68.unpack343, 0
  %103 = icmp ne i64 %101, 0
  %or.cond.i.i.i.i.i845 = select i1 %102, i1 %103, i1 false
  br i1 %or.cond.i.i.i.i.i845, label %OptionalNonNull.i.i.i.i.i848, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865

OptionalNonNull.i.i.i.i.i848:                     ; preds = %Then1.i.i.i846
  %104 = inttoptr i64 %101 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 -8
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 8, !noalias !374
  %.not.i.i.i12.i.i.i847 = icmp eq i64 %107, 0
  br i1 %.not.i.i.i12.i.i.i847, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865, label %Then.i.i.i.i.i.i849

Then.i.i.i.i.i.i849:                              ; preds = %OptionalNonNull.i.i.i.i.i848
  %108 = add i64 %107, -1
  store i64 %108, i64* %106, align 8, !noalias !374
  %109 = icmp eq i64 %107, -9223372036854775808
  br i1 %109, label %roc_builtins.list.replace.exit.sink.split.i860, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865

EndIf.i.i.i.i852:                                 ; preds = %EndIf.i.i.i844
  %110 = icmp ugt i64 %struct_field68.unpack341, 64
  %..i.i.i.i.i.i850 = select i1 %110, i64 %struct_field68.unpack341, i64 64
  %111 = add nuw i64 %..i.i.i.i.i.i850, 8
  %112 = tail call i8* @roc_alloc(i64 %111, i32 8) #11, !noalias !379
  %113 = icmp ne i8* %112, null
  tail call void @llvm.assume(i1 %113) #11
  %114 = getelementptr inbounds i8, i8* %112, i64 8
  %115 = bitcast i8* %112 to i64*
  store i64 -9223372036854775808, i64* %115, align 8, !noalias !379
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %114, i8* nonnull align 1 %struct_field68.unpack, i64 %struct_field68.unpack341, i1 false) #11, !noalias !374
  %116 = ptrtoint i8* %struct_field68.unpack to i64
  %117 = shl i64 %struct_field68.unpack343, 1
  %118 = select i1 %.not.i.i.i.i.i.i841, i64 %117, i64 %116
  %119 = icmp ne i64 %struct_field68.unpack343, 0
  %120 = icmp ne i64 %118, 0
  %or.cond.i.i15.i.i.i851 = select i1 %119, i1 %120, i1 false
  br i1 %or.cond.i.i15.i.i.i851, label %OptionalNonNull.i.i17.i.i.i854, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865

OptionalNonNull.i.i17.i.i.i854:                   ; preds = %EndIf.i.i.i.i852
  %121 = inttoptr i64 %118 to i8*
  %122 = getelementptr inbounds i8, i8* %121, i64 -8
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8, !noalias !374
  %.not.i.i.i16.i.i.i853 = icmp eq i64 %124, 0
  br i1 %.not.i.i.i16.i.i.i853, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865, label %Then.i.i.i18.i.i.i855

Then.i.i.i18.i.i.i855:                            ; preds = %OptionalNonNull.i.i17.i.i.i854
  %125 = add i64 %124, -1
  store i64 %125, i64* %123, align 8, !noalias !374
  %126 = icmp eq i64 %124, -9223372036854775808
  br i1 %126, label %roc_builtins.list.replace.exit.sink.split.i860, label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865

roc_builtins.list.replace.exit.sink.split.i860:   ; preds = %Then.i.i.i18.i.i.i855, %Then.i.i.i.i.i.i849
  %.sink.i856 = phi i8* [ %105, %Then.i.i.i.i.i.i849 ], [ %122, %Then.i.i.i18.i.i.i855 ]
  %.sroa.10.0.ph.i857 = phi i64 [ 0, %Then.i.i.i.i.i.i849 ], [ %..i.i.i.i.i.i850, %Then.i.i.i18.i.i.i855 ]
  %.sroa.0.0.ph.i859 = phi i8* [ null, %Then.i.i.i.i.i.i849 ], [ %114, %Then.i.i.i18.i.i.i855 ]
  tail call void @roc_dealloc(i8* %.sink.i856, i32 1) #11, !noalias !374
  br label %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865

List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865: ; preds = %else_block.i716, %list.RocList.isUnique.exit.i.i.i843, %Then1.i.i.i846, %OptionalNonNull.i.i.i.i.i848, %Then.i.i.i.i.i.i849, %EndIf.i.i.i.i852, %OptionalNonNull.i.i17.i.i.i854, %Then.i.i.i18.i.i.i855, %roc_builtins.list.replace.exit.sink.split.i860
  %.sroa.10.0.i861 = phi i64 [ %struct_field68.unpack343, %list.RocList.isUnique.exit.i.i.i843 ], [ %struct_field68.unpack343, %else_block.i716 ], [ 0, %Then.i.i.i.i.i.i849 ], [ 0, %OptionalNonNull.i.i.i.i.i848 ], [ 0, %Then1.i.i.i846 ], [ %..i.i.i.i.i.i850, %Then.i.i.i18.i.i.i855 ], [ %..i.i.i.i.i.i850, %OptionalNonNull.i.i17.i.i.i854 ], [ %..i.i.i.i.i.i850, %EndIf.i.i.i.i852 ], [ %.sroa.10.0.ph.i857, %roc_builtins.list.replace.exit.sink.split.i860 ]
  %.sroa.7.0.i862 = phi i64 [ %struct_field68.unpack341, %list.RocList.isUnique.exit.i.i.i843 ], [ %struct_field68.unpack341, %else_block.i716 ], [ 0, %Then.i.i.i.i.i.i849 ], [ 0, %OptionalNonNull.i.i.i.i.i848 ], [ 0, %Then1.i.i.i846 ], [ %struct_field68.unpack341, %Then.i.i.i18.i.i.i855 ], [ %struct_field68.unpack341, %OptionalNonNull.i.i17.i.i.i854 ], [ %struct_field68.unpack341, %EndIf.i.i.i.i852 ], [ %struct_field68.unpack341, %roc_builtins.list.replace.exit.sink.split.i860 ]
  %.sroa.0.0.i863 = phi i8* [ %struct_field68.unpack, %list.RocList.isUnique.exit.i.i.i843 ], [ %struct_field68.unpack, %else_block.i716 ], [ null, %Then.i.i.i.i.i.i849 ], [ null, %OptionalNonNull.i.i.i.i.i848 ], [ null, %Then1.i.i.i846 ], [ %114, %Then.i.i.i18.i.i.i855 ], [ %114, %OptionalNonNull.i.i17.i.i.i854 ], [ %114, %EndIf.i.i.i.i852 ], [ %.sroa.0.0.ph.i859, %roc_builtins.list.replace.exit.sink.split.i860 ]
  %127 = getelementptr inbounds i8, i8* %.sroa.0.0.i863, i64 %struct_field70897
  store i8 %sub_int.i.i.i, i8* %127, align 1
  %128 = insertvalue %list.RocList undef, i8* %.sroa.0.0.i863, 0
  %129 = insertvalue %list.RocList %128, i64 %.sroa.7.0.i862, 1
  %load_list10.i864 = insertvalue %list.RocList %129, i64 %.sroa.10.0.i861, 2
  br label %List_update_4c75285b1729a7f87fbcd82e6d314659d84de598b47e454c454af4d2267459.exit

List_update_4c75285b1729a7f87fbcd82e6d314659d84de598b47e454c454af4d2267459.exit: ; preds = %"#Attr_#inc_29.exit.i710", %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865
  %common.ret.op.i711 = phi %list.RocList [ %load_list10.i864, %List_replaceUnsafe_950b4600da679ac26d3ab5bfe188abedc121563866e0e9514343a266815.exit865 ], [ %struct_field68344, %"#Attr_#inc_29.exit.i710" ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %91)
  %struct_field73 = load i64, i64* %struct_field_access_record_169895, align 8
  %struct_field_access_record_274 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 2
  %struct_field75 = load i64, i64* %struct_field_access_record_274, align 8
  %struct_field77.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %struct_field77.unpack = load i8*, i8** %struct_field77.elt, align 8
  %struct_field77.elt345 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %struct_field77.unpack346 = load i64, i64* %struct_field77.elt345, align 8
  %struct_field77.elt347 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %struct_field77.unpack348 = load i64, i64* %struct_field77.elt347, align 8
  %struct_field79.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field79.unpack351 = load i64, i64* %struct_field1.elt186, align 8
  %struct_field79.unpack353 = load i64, i64* %struct_field1.elt188, align 8
  %struct_field81 = load i64, i64* %struct_field_access_record_5, align 8
  br i1 %"cap > 0.i682.not", label %"#Attr_#dec_29.exit731", label %modification_list_block.i727

modification_list_block.i727:                     ; preds = %List_update_4c75285b1729a7f87fbcd82e6d314659d84de598b47e454c454af4d2267459.exit
  %130 = ptrtoint i8* %struct_field68.unpack to i64
  %131 = shl i64 %struct_field68.unpack343, 1
  %.not.i.i.i723 = icmp slt i64 %struct_field68.unpack343, 0
  %132 = select i1 %.not.i.i.i723, i64 %131, i64 %130
  %as_usize_ptr.i724 = inttoptr i64 %132 to i64*
  %get_rc_ptr.i725 = getelementptr inbounds i64, i64* %as_usize_ptr.i724, i64 -1
  %133 = load i64, i64* %get_rc_ptr.i725, align 8
  %.not.i.i.i.i726 = icmp eq i64 %133, 0
  br i1 %.not.i.i.i.i726, label %"#Attr_#dec_29.exit731", label %Then.i.i.i.i728

Then.i.i.i.i728:                                  ; preds = %modification_list_block.i727
  %134 = add i64 %133, -1
  store i64 %134, i64* %get_rc_ptr.i725, align 8
  %135 = icmp eq i64 %133, -9223372036854775808
  br i1 %135, label %Then1.i.i.i.i729, label %"#Attr_#dec_29.exit731"

Then1.i.i.i.i729:                                 ; preds = %Then.i.i.i.i728
  %136 = bitcast i64* %get_rc_ptr.i725 to i8*
  tail call void @roc_dealloc(i8* %136, i32 8) #11
  br label %"#Attr_#dec_29.exit731"

"#Attr_#dec_29.exit731":                          ; preds = %modification_list_block.i727, %Then.i.i.i.i728, %Then1.i.i.i.i729, %List_update_4c75285b1729a7f87fbcd82e6d314659d84de598b47e454c454af4d2267459.exit
  %struct_alloca88 = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca88.repack.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca88, i64 0, i32 0, i32 0
  %call71.elt = extractvalue %list.RocList %common.ret.op.i711, 0
  store i8* %call71.elt, i8** %struct_alloca88.repack.repack, align 8
  %struct_alloca88.repack.repack365 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca88, i64 0, i32 0, i32 1
  %call71.elt366 = extractvalue %list.RocList %common.ret.op.i711, 1
  store i64 %call71.elt366, i64* %struct_alloca88.repack.repack365, align 8
  %struct_alloca88.repack.repack367 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca88, i64 0, i32 0, i32 2
  %call71.elt368 = extractvalue %list.RocList %common.ret.op.i711, 2
  store i64 %call71.elt368, i64* %struct_alloca88.repack.repack367, align 8
  br label %joinpointcont.sink.split

branch2:                                          ; preds = %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"
  %struct_field90.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %struct_field90.unpack = load i8*, i8** %struct_field90.elt, align 8
  %137 = insertvalue %list.RocList undef, i8* %struct_field90.unpack, 0
  %struct_field90.elt328 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %struct_field90.unpack329 = load i64, i64* %struct_field90.elt328, align 8
  %138 = insertvalue %list.RocList %137, i64 %struct_field90.unpack329, 1
  %struct_field90.elt330 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %struct_field90.unpack331 = load i64, i64* %struct_field90.elt330, align 8
  %struct_field90332 = insertvalue %list.RocList %138, i64 %struct_field90.unpack331, 2
  tail call fastcc void @"#Attr_#dec_29"(%list.RocList %struct_field90332)
  %struct_field92.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %struct_field92.unpack = load i8*, i8** %struct_field92.elt, align 8
  %139 = insertvalue %list.RocList undef, i8* %struct_field92.unpack, 0
  %struct_field92.elt333 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %struct_field92.unpack334 = load i64, i64* %struct_field92.elt333, align 8
  %140 = insertvalue %list.RocList %139, i64 %struct_field92.unpack334, 1
  %struct_field92.elt335 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %struct_field92.unpack336 = load i64, i64* %struct_field92.elt335, align 8
  %struct_field92337 = insertvalue %list.RocList %140, i64 %struct_field92.unpack336, 2
  tail call fastcc void @"#Attr_#dec_29"(%list.RocList %struct_field92337)
  tail call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field4195)
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_str_literal_10490427581256294289, i64 0, i64 8), i8** %const_str_store.repack, align 8
  %const_str_store.repack338 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 32, i64* %const_str_store.repack338, align 8
  %const_str_store.repack339 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 32, i64* %const_str_store.repack339, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 1)
  unreachable

branch6:                                          ; preds = %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"
  %struct_field94.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %struct_field94.unpack = load i8*, i8** %struct_field94.elt, align 8
  %141 = insertvalue %list.RocList undef, i8* %struct_field94.unpack, 0
  %struct_field94.elt286 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %struct_field94.unpack287 = load i64, i64* %struct_field94.elt286, align 8
  %142 = insertvalue %list.RocList %141, i64 %struct_field94.unpack287, 1
  %struct_field94.elt288 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %struct_field94.unpack289 = load i64, i64* %struct_field94.elt288, align 8
  %struct_field94290 = insertvalue %list.RocList %142, i64 %struct_field94.unpack289, 2
  %"cap > 0.i733.not" = icmp eq i64 %struct_field94.unpack289, 0
  br i1 %"cap > 0.i733.not", label %"#Attr_#inc_29.exit744", label %modification_list_block.i742

modification_list_block.i742:                     ; preds = %branch6
  %143 = ptrtoint i8* %struct_field94.unpack to i64
  %144 = shl i64 %struct_field94.unpack289, 1
  %.not.i.i.i738 = icmp slt i64 %struct_field94.unpack289, 0
  %145 = select i1 %.not.i.i.i738, i64 %144, i64 %143
  %as_usize_ptr.i739 = inttoptr i64 %145 to i64*
  %get_rc_ptr.i740 = getelementptr inbounds i64, i64* %as_usize_ptr.i739, i64 -1
  %146 = load i64, i64* %get_rc_ptr.i740, align 8
  %.not.i.i741 = icmp eq i64 %146, 0
  br i1 %.not.i.i741, label %"#Attr_#inc_29.exit744", label %Then.i.i743

Then.i.i743:                                      ; preds = %modification_list_block.i742
  %147 = add nsw i64 %146, 1
  store i64 %147, i64* %get_rc_ptr.i740, align 8
  br label %"#Attr_#inc_29.exit744"

"#Attr_#inc_29.exit744":                          ; preds = %branch6, %modification_list_block.i742, %Then.i.i743
  %struct_field_access_record_195 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field96 = load i64, i64* %struct_field_access_record_195, align 8
  %148 = bitcast %str.RocStr* %const_str_store.i745 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148)
  %149 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i746, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %149)
  call fastcc void @List_get_4bc3befd4127054416125539e7bc161699db1de9fc4587f06d2ee1b827f164(%list.RocList %struct_field94290, i64 %struct_field96, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i746) #11
  %tag_id_ptr.i747 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i746, i64 0, i32 2
  %load_tag_id.i748 = load i8, i8* %tag_id_ptr.i747, align 1
  %eq_u8.i749 = icmp eq i8 %load_tag_id.i748, 0
  br i1 %eq_u8.i749, label %then_block.i753, label %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit757"

then_block.i753:                                  ; preds = %"#Attr_#inc_29.exit744"
  %const_str_store.repack.i750 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i745, i64 0, i32 0
  store i8* inttoptr (i64 7070764042443584847 to i8*), i8** %const_str_store.repack.i750, align 8
  %const_str_store.repack2.i751 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i745, i64 0, i32 1
  store i64 495606199663, i64* %const_str_store.repack2.i751, align 8
  %const_str_store.repack3.i752 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i745, i64 0, i32 2
  store i64 -8286623314361712640, i64* %const_str_store.repack3.i752, align 8
  call void @roc_panic(%str.RocStr* %const_str_store.i745, i32 1) #11
  unreachable

"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit757": ; preds = %"#Attr_#inc_29.exit744"
  %get_opaque_data_ptr1.i754 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i746, i64 0, i32 1, i64 0
  %load_element.i755 = load i8, i8* %get_opaque_data_ptr1.i754, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %149)
  %struct_field99.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %struct_field99.unpack = load i8*, i8** %struct_field99.elt, align 8
  %struct_field99.elt291 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %struct_field99.unpack292 = load i64, i64* %struct_field99.elt291, align 8
  %struct_field99.elt293 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %struct_field99.unpack294 = load i64, i64* %struct_field99.elt293, align 8
  %"cap > 0.i759.not" = icmp eq i64 %struct_field99.unpack294, 0
  br i1 %"cap > 0.i759.not", label %"#Attr_#inc_29.exit770", label %modification_list_block.i768

modification_list_block.i768:                     ; preds = %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit757"
  %150 = ptrtoint i8* %struct_field99.unpack to i64
  %151 = shl i64 %struct_field99.unpack294, 1
  %.not.i.i.i764 = icmp slt i64 %struct_field99.unpack294, 0
  %152 = select i1 %.not.i.i.i764, i64 %151, i64 %150
  %as_usize_ptr.i765 = inttoptr i64 %152 to i64*
  %get_rc_ptr.i766 = getelementptr inbounds i64, i64* %as_usize_ptr.i765, i64 -1
  %153 = load i64, i64* %get_rc_ptr.i766, align 8
  %.not.i.i767 = icmp eq i64 %153, 0
  br i1 %.not.i.i767, label %"#Attr_#inc_29.exit770", label %Then.i.i769

Then.i.i769:                                      ; preds = %modification_list_block.i768
  %154 = add nsw i64 %153, 1
  store i64 %154, i64* %get_rc_ptr.i766, align 8
  br label %"#Attr_#inc_29.exit770"

"#Attr_#inc_29.exit770":                          ; preds = %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit757", %modification_list_block.i768, %Then.i.i769
  %.not.i.i.i.i.i.i = icmp slt i64 %struct_field99.unpack294, 0
  %155 = select i1 %.not.i.i.i.i.i.i, i64 %struct_field99.unpack292, i64 %struct_field99.unpack294
  %156 = icmp ne i64 %155, 0
  %157 = or i1 %.not.i.i.i.i.i.i, %156
  br i1 %157, label %list.RocList.isUnique.exit.i.i.i, label %BoolAndTrue.i.i.i

list.RocList.isUnique.exit.i.i.i:                 ; preds = %"#Attr_#inc_29.exit770"
  %158 = getelementptr inbounds i8, i8* %struct_field99.unpack, i64 -8
  %159 = bitcast i8* %158 to i64*
  %160 = load i64, i64* %159, align 8, !noalias !382
  %phi.cmp.i.i.i.i = icmp eq i64 %160, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i, label %BoolAndTrue.i.i.i, label %list.RocList.isUnique.exit.i.i.i.i.thread

list.RocList.isUnique.exit.i.i.i.i.thread:        ; preds = %list.RocList.isUnique.exit.i.i.i
  %.pre-phi.i.i.i898 = add nuw i64 %struct_field99.unpack292, 1
  br label %OptionalEndIf.i.i.i.i.i

BoolAndTrue.i.i.i:                                ; preds = %list.RocList.isUnique.exit.i.i.i, %"#Attr_#inc_29.exit770"
  %.not.i.i.i638.not = icmp ugt i64 %155, %struct_field99.unpack292
  br i1 %.not.i.i.i638.not, label %List_reserve_f758e9af61a832ed6ca6f1f79fb036178b1682b942063bf93b74f88b1956.exit.i, label %Else.i.i.i

Else.i.i.i:                                       ; preds = %BoolAndTrue.i.i.i
  %.pre-phi.i.i.i = add nuw i64 %struct_field99.unpack292, 1
  %.not.i1.i.i.i = icmp eq i8* %struct_field99.unpack, null
  br i1 %.not.i1.i.i.i, label %OptionalEndIf.i.i.i.i, label %OptionalThen.i.i.i.i

OptionalThen.i.i.i.i:                             ; preds = %Else.i.i.i
  br i1 %157, label %list.RocList.isUnique.exit.i.i.i.i, label %Then.i.i.i.i639

list.RocList.isUnique.exit.i.i.i.i:               ; preds = %OptionalThen.i.i.i.i
  %.phi.trans.insert = getelementptr inbounds i8, i8* %struct_field99.unpack, i64 -8
  %.phi.trans.insert912 = bitcast i8* %.phi.trans.insert to i64*
  %.pre = load i64, i64* %.phi.trans.insert912, align 8, !noalias !385
  %phi.cmp.i.i.i.i.i = icmp eq i64 %.pre, -9223372036854775808
  %161 = xor i1 %.not.i.i.i.i.i.i, true
  %or.cond.i.i.i.i = select i1 %phi.cmp.i.i.i.i.i, i1 %161, i1 false
  br i1 %or.cond.i.i.i.i, label %Then.i.i.i.i639, label %OptionalEndIf.i.i.i.i.i

Then.i.i.i.i639:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i, %OptionalThen.i.i.i.i
  %.not21.i.i.i.i.not = icmp ugt i64 %struct_field99.unpack294, %struct_field99.unpack292
  br i1 %.not21.i.i.i.i.not, label %OptionalThen1.i.i.i, label %Else.i.i.i.i

Else.i.i.i.i:                                     ; preds = %Then.i.i.i.i639
  br i1 %"cap > 0.i759.not", label %EndIf9.i.i.i.i.i, label %Else1.i.i.i.i.i

Else1.i.i.i.i.i:                                  ; preds = %Else.i.i.i.i
  %162 = icmp ult i64 %struct_field99.unpack294, 4096
  br i1 %162, label %Then4.i.i.i.i.i, label %Else2.i.i.i.i.i

Else2.i.i.i.i.i:                                  ; preds = %Else1.i.i.i.i.i
  %163 = icmp ugt i64 %struct_field99.unpack294, 131072
  br i1 %163, label %Then5.i.i.i.i.i, label %Else6.i.i.i.i.i

Then4.i.i.i.i.i:                                  ; preds = %Else1.i.i.i.i.i
  %164 = shl nuw nsw i64 %struct_field99.unpack294, 1
  br label %EndIf9.i.i.i.i.i

Then5.i.i.i.i.i:                                  ; preds = %Else2.i.i.i.i.i
  %165 = shl nuw i64 %struct_field99.unpack294, 1
  br label %EndIf9.i.i.i.i.i

Else6.i.i.i.i.i:                                  ; preds = %Else2.i.i.i.i.i
  %166 = mul nuw nsw i64 %struct_field99.unpack294, 3
  %167 = add nuw nsw i64 %166, 1
  %168 = lshr i64 %167, 1
  br label %EndIf9.i.i.i.i.i

EndIf9.i.i.i.i.i:                                 ; preds = %Else6.i.i.i.i.i, %Then5.i.i.i.i.i, %Then4.i.i.i.i.i, %Else.i.i.i.i
  %new_capacity.0.i.i.i.i.i = phi i64 [ %164, %Then4.i.i.i.i.i ], [ %165, %Then5.i.i.i.i.i ], [ %168, %Else6.i.i.i.i.i ], [ 64, %Else.i.i.i.i ]
  %169 = icmp ugt i64 %new_capacity.0.i.i.i.i.i, %.pre-phi.i.i.i
  %..i.i.i.i.i.i = select i1 %169, i64 %new_capacity.0.i.i.i.i.i, i64 %.pre-phi.i.i.i
  %.not.i.i.i.i.i = icmp ult i64 %struct_field99.unpack294, %..i.i.i.i.i.i
  br i1 %.not.i.i.i.i.i, label %EndIf.i.i.i.i.i, label %OptionalThen1.i.i.i

EndIf.i.i.i.i.i:                                  ; preds = %EndIf9.i.i.i.i.i
  %170 = add nuw i64 %..i.i.i.i.i.i, 8
  %171 = add nuw i64 %struct_field99.unpack294, 8
  %172 = getelementptr inbounds i8, i8* %struct_field99.unpack, i64 -8
  %173 = tail call i8* @roc_realloc(i8* %172, i64 %170, i64 %171, i32 1) #11, !noalias !385
  %174 = getelementptr inbounds i8, i8* %173, i64 8
  br label %OptionalThen1.i.i.i

OptionalEndIf.i.i.i.i.i:                          ; preds = %list.RocList.isUnique.exit.i.i.i.i.thread, %list.RocList.isUnique.exit.i.i.i.i
  %.pre-phi.i.i.i900903922 = phi i64 [ %.pre-phi.i.i.i898, %list.RocList.isUnique.exit.i.i.i.i.thread ], [ %.pre-phi.i.i.i, %list.RocList.isUnique.exit.i.i.i.i ]
  %.inv = icmp ult i64 %struct_field99.unpack292, 64
  %..i.i.i.i.i.i.i.i = select i1 %.inv, i64 64, i64 %.pre-phi.i.i.i900903922
  %175 = add nuw i64 %..i.i.i.i.i.i.i.i, 8
  %176 = tail call i8* @roc_alloc(i64 %175, i32 8) #11, !noalias !388
  %177 = icmp ne i8* %176, null
  tail call void @llvm.assume(i1 %177) #11
  %178 = getelementptr inbounds i8, i8* %176, i64 8
  %179 = bitcast i8* %176 to i64*
  store i64 -9223372036854775808, i64* %179, align 8, !noalias !388
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %178, i8* nonnull align 1 %struct_field99.unpack, i64 %struct_field99.unpack292, i1 false) #11, !noalias !393
  %180 = getelementptr inbounds i8, i8* %178, i64 %struct_field99.unpack292
  store i8 0, i8* %180, align 1
  %phi.cast.i.i.i.i.i = ptrtoint i8* %struct_field99.unpack to i64
  %181 = shl i64 %struct_field99.unpack294, 1
  %182 = select i1 %.not.i.i.i.i.i.i, i64 %181, i64 %phi.cast.i.i.i.i.i
  %183 = icmp ne i64 %struct_field99.unpack294, 0
  %184 = icmp ne i64 %182, 0
  %or.cond.i.i.i.i.i.i.i = select i1 %183, i1 %184, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i, label %OptionalNonNull.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i

OptionalNonNull.i.i.i.i.i.i.i:                    ; preds = %OptionalEndIf.i.i.i.i.i
  %185 = inttoptr i64 %182 to i8*
  %186 = getelementptr inbounds i8, i8* %185, i64 -8
  %187 = bitcast i8* %186 to i64*
  %188 = load i64, i64* %187, align 8, !noalias !393
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %188, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %OptionalNonNull.i.i.i.i.i.i.i
  %189 = add i64 %188, -1
  store i64 %189, i64* %187, align 8, !noalias !393
  %190 = icmp eq i64 %188, -9223372036854775808
  br i1 %190, label %Then1.i.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %186, i32 1) #11, !noalias !393
  br label %OptionalThen1.i.i.i

OptionalEndIf.i.i.i.i:                            ; preds = %Else.i.i.i
  %.inv795 = icmp ult i64 %struct_field99.unpack292, 64
  %..i.i.i.i.i.i.i = select i1 %.inv795, i64 64, i64 %.pre-phi.i.i.i
  %191 = add nuw i64 %..i.i.i.i.i.i.i, 8
  %192 = tail call i8* @roc_alloc(i64 %191, i32 8) #11, !noalias !394
  %193 = icmp ne i8* %192, null
  tail call void @llvm.assume(i1 %193) #11
  %194 = getelementptr inbounds i8, i8* %192, i64 8
  %195 = bitcast i8* %192 to i64*
  store i64 -9223372036854775808, i64* %195, align 8, !noalias !394
  br label %OptionalThen1.i.i.i

List_reserve_f758e9af61a832ed6ca6f1f79fb036178b1682b942063bf93b74f88b1956.exit.i: ; preds = %BoolAndTrue.i.i.i
  %.not.i.i7.i = icmp eq i8* %struct_field99.unpack, null
  br i1 %.not.i.i7.i, label %List_append_e1214f5c12aafc687667afe113fdffb01712a9dd6cc02478b11f982651b87b2.exit, label %OptionalThen1.i.i.i

OptionalThen1.i.i.i:                              ; preds = %OptionalEndIf.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i, %EndIf9.i.i.i.i.i, %EndIf.i.i.i.i.i, %Then.i.i.i.i639, %OptionalEndIf.i.i.i.i, %List_reserve_f758e9af61a832ed6ca6f1f79fb036178b1682b942063bf93b74f88b1956.exit.i
  %list_alloca.i.i.sroa.0.0909 = phi i8* [ %struct_field99.unpack, %List_reserve_f758e9af61a832ed6ca6f1f79fb036178b1682b942063bf93b74f88b1956.exit.i ], [ %178, %OptionalEndIf.i.i.i.i.i ], [ %178, %OptionalNonNull.i.i.i.i.i.i.i ], [ %178, %Then.i.i.i.i.i.i.i.i ], [ %178, %Then1.i.i.i.i.i.i.i.i ], [ %struct_field99.unpack, %EndIf9.i.i.i.i.i ], [ %174, %EndIf.i.i.i.i.i ], [ %struct_field99.unpack, %Then.i.i.i.i639 ], [ %194, %OptionalEndIf.i.i.i.i ]
  %list_alloca.i.i.sroa.6.0907 = phi i64 [ %struct_field99.unpack294, %List_reserve_f758e9af61a832ed6ca6f1f79fb036178b1682b942063bf93b74f88b1956.exit.i ], [ %..i.i.i.i.i.i.i.i, %OptionalEndIf.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i, %EndIf9.i.i.i.i.i ], [ %..i.i.i.i.i.i, %EndIf.i.i.i.i.i ], [ %struct_field99.unpack294, %Then.i.i.i.i639 ], [ %..i.i.i.i.i.i.i, %OptionalEndIf.i.i.i.i ]
  %196 = getelementptr inbounds i8, i8* %list_alloca.i.i.sroa.0.0909, i64 %struct_field99.unpack292
  store i8 %load_element.i755, i8* %196, align 1
  br label %List_append_e1214f5c12aafc687667afe113fdffb01712a9dd6cc02478b11f982651b87b2.exit

List_append_e1214f5c12aafc687667afe113fdffb01712a9dd6cc02478b11f982651b87b2.exit: ; preds = %List_reserve_f758e9af61a832ed6ca6f1f79fb036178b1682b942063bf93b74f88b1956.exit.i, %OptionalThen1.i.i.i
  %list_alloca.i.i.sroa.0.0910 = phi i8* [ null, %List_reserve_f758e9af61a832ed6ca6f1f79fb036178b1682b942063bf93b74f88b1956.exit.i ], [ %list_alloca.i.i.sroa.0.0909, %OptionalThen1.i.i.i ]
  %list_alloca.i.i.sroa.6.0908 = phi i64 [ %struct_field99.unpack294, %List_reserve_f758e9af61a832ed6ca6f1f79fb036178b1682b942063bf93b74f88b1956.exit.i ], [ %list_alloca.i.i.sroa.6.0907, %OptionalThen1.i.i.i ]
  %197 = add nuw i64 %struct_field99.unpack292, 1
  %struct_field102.unpack = load i8*, i8** %struct_field94.elt, align 8
  %struct_field102.unpack297 = load i64, i64* %struct_field94.elt286, align 8
  %struct_field102.unpack299 = load i64, i64* %struct_field94.elt288, align 8
  %struct_field104 = load i64, i64* %struct_field_access_record_195, align 8
  %struct_field_access_record_2105 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 2
  %struct_field106 = load i64, i64* %struct_field_access_record_2105, align 8
  %struct_field108.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field108.unpack302 = load i64, i64* %struct_field1.elt186, align 8
  %struct_field108.unpack304 = load i64, i64* %struct_field1.elt188, align 8
  %struct_field110 = load i64, i64* %struct_field_access_record_5, align 8
  br i1 %"cap > 0.i759.not", label %"#Attr_#dec_29.exit", label %modification_list_block.i601

modification_list_block.i601:                     ; preds = %List_append_e1214f5c12aafc687667afe113fdffb01712a9dd6cc02478b11f982651b87b2.exit
  %198 = ptrtoint i8* %struct_field99.unpack to i64
  %199 = shl i64 %struct_field99.unpack294, 1
  %200 = select i1 %.not.i.i.i.i.i.i, i64 %199, i64 %198
  %as_usize_ptr.i599 = inttoptr i64 %200 to i64*
  %get_rc_ptr.i600 = getelementptr inbounds i64, i64* %as_usize_ptr.i599, i64 -1
  %201 = load i64, i64* %get_rc_ptr.i600, align 8
  %.not.i.i.i.i = icmp eq i64 %201, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_29.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i601
  %202 = add i64 %201, -1
  store i64 %202, i64* %get_rc_ptr.i600, align 8
  %203 = icmp eq i64 %201, -9223372036854775808
  br i1 %203, label %Then1.i.i.i.i, label %"#Attr_#dec_29.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %204 = bitcast i64* %get_rc_ptr.i600 to i8*
  tail call void @roc_dealloc(i8* %204, i32 8) #11
  br label %"#Attr_#dec_29.exit"

"#Attr_#dec_29.exit":                             ; preds = %modification_list_block.i601, %Then.i.i.i.i, %Then1.i.i.i.i, %List_append_e1214f5c12aafc687667afe113fdffb01712a9dd6cc02478b11f982651b87b2.exit
  %struct_alloca117 = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca117.repack.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca117, i64 0, i32 0, i32 0
  store i8* %struct_field102.unpack, i8** %struct_alloca117.repack.repack, align 8
  %struct_alloca117.repack.repack316 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca117, i64 0, i32 0, i32 1
  store i64 %struct_field102.unpack297, i64* %struct_alloca117.repack.repack316, align 8
  %struct_alloca117.repack.repack318 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca117, i64 0, i32 0, i32 2
  store i64 %struct_field102.unpack299, i64* %struct_alloca117.repack.repack318, align 8
  br label %joinpointcont.sink.split

branch4:                                          ; preds = %"#UserApp_getUnsafe_f738fe4a57e1dae4427f2f23f46dfc84eebad94d8f9483baa14bbe7b28fe643.exit"
  %struct_field120.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 0
  %struct_field120.unpack = load i8*, i8** %struct_field120.elt, align 8
  %205 = insertvalue %list.RocList undef, i8* %struct_field120.unpack, 0
  %struct_field120.elt196 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 1
  %struct_field120.unpack197 = load i64, i64* %struct_field120.elt196, align 8
  %206 = insertvalue %list.RocList %205, i64 %struct_field120.unpack197, 1
  %struct_field120.elt198 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 0, i32 2
  %struct_field120.unpack199 = load i64, i64* %struct_field120.elt198, align 8
  %struct_field120200 = insertvalue %list.RocList %206, i64 %struct_field120.unpack199, 2
  %"cap > 0.i581.not" = icmp eq i64 %struct_field120.unpack199, 0
  br i1 %"cap > 0.i581.not", label %"#Attr_#inc_29.exit", label %modification_list_block.i590

modification_list_block.i590:                     ; preds = %branch4
  %207 = ptrtoint i8* %struct_field120.unpack to i64
  %208 = shl i64 %struct_field120.unpack199, 1
  %.not.i.i.i586 = icmp slt i64 %struct_field120.unpack199, 0
  %209 = select i1 %.not.i.i.i586, i64 %208, i64 %207
  %as_usize_ptr.i587 = inttoptr i64 %209 to i64*
  %get_rc_ptr.i588 = getelementptr inbounds i64, i64* %as_usize_ptr.i587, i64 -1
  %210 = load i64, i64* %get_rc_ptr.i588, align 8
  %.not.i.i589 = icmp eq i64 %210, 0
  br i1 %.not.i.i589, label %"#Attr_#inc_29.exit", label %Then.i.i591

Then.i.i591:                                      ; preds = %modification_list_block.i590
  %211 = add nsw i64 %210, 1
  store i64 %211, i64* %get_rc_ptr.i588, align 8
  br label %"#Attr_#inc_29.exit"

"#Attr_#inc_29.exit":                             ; preds = %branch4, %modification_list_block.i590, %Then.i.i591
  %struct_field_access_record_1121 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 1
  %struct_field122 = load i64, i64* %struct_field_access_record_1121, align 8
  %212 = bitcast %str.RocStr* %const_str_store.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212)
  %213 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %213)
  call fastcc void @List_get_4bc3befd4127054416125539e7bc161699db1de9fc4587f06d2ee1b827f164(%list.RocList %struct_field120200, i64 %struct_field122, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i) #11
  %tag_id_ptr.i = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 2
  %load_tag_id.i = load i8, i8* %tag_id_ptr.i, align 1
  %eq_u8.i579 = icmp eq i8 %load_tag_id.i, 0
  br i1 %eq_u8.i579, label %then_block.i, label %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit"

then_block.i:                                     ; preds = %"#Attr_#inc_29.exit"
  %const_str_store.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 0
  store i8* inttoptr (i64 7070764042443584847 to i8*), i8** %const_str_store.repack.i, align 8
  %const_str_store.repack2.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 1
  store i64 495606199663, i64* %const_str_store.repack2.i, align 8
  %const_str_store.repack3.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i, i64 0, i32 2
  store i64 -8286623314361712640, i64* %const_str_store.repack3.i, align 8
  call void @roc_panic(%str.RocStr* %const_str_store.i, i32 1) #11
  unreachable

"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit": ; preds = %"#Attr_#inc_29.exit"
  %get_opaque_data_ptr1.i = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 1, i64 0
  %load_element.i = load i8, i8* %get_opaque_data_ptr1.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %213)
  %eq_u8.i = icmp eq i8 %load_element.i, 0
  br i1 %eq_u8.i, label %then_block128, label %joinpointcont

then_block128:                                    ; preds = %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit"
  %struct_field131.unpack = load i8*, i8** %struct_field120.elt, align 8
  %struct_field131.unpack250 = load i64, i64* %struct_field120.elt196, align 8
  %struct_field131.unpack252 = load i64, i64* %struct_field120.elt198, align 8
  %struct_field133 = load i64, i64* %struct_field_access_record_1121, align 8
  %struct_field_access_record_2134 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 2
  %struct_field135 = load i64, i64* %struct_field_access_record_2134, align 8
  %struct_field137.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %struct_field137.unpack = load i8*, i8** %struct_field137.elt, align 8
  %struct_field137.elt254 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %struct_field137.unpack255 = load i64, i64* %struct_field137.elt254, align 8
  %struct_field137.elt256 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %struct_field137.unpack257 = load i64, i64* %struct_field137.elt256, align 8
  %struct_field139.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field139.unpack260 = load i64, i64* %struct_field1.elt186, align 8
  %struct_field139.unpack262 = load i64, i64* %struct_field1.elt188, align 8
  %struct_alloca146 = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca146.repack.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca146, i64 0, i32 0, i32 0
  store i8* %struct_field131.unpack, i8** %struct_alloca146.repack.repack, align 8
  %struct_alloca146.repack.repack274 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca146, i64 0, i32 0, i32 1
  store i64 %struct_field131.unpack250, i64* %struct_alloca146.repack.repack274, align 8
  %struct_alloca146.repack.repack276 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca146, i64 0, i32 0, i32 2
  store i64 %struct_field131.unpack252, i64* %struct_alloca146.repack.repack276, align 8
  br label %joinpointcont.sink.split

then_block160:                                    ; preds = %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit636"
  %struct_field163.unpack = load i8*, i8** %struct_field152.elt, align 8
  %struct_field163.unpack494 = load i64, i64* %struct_field152.elt488, align 8
  %struct_field163.unpack496 = load i64, i64* %struct_field152.elt490, align 8
  %struct_field165 = load i64, i64* %struct_field_access_record_1153, align 8
  %struct_field_access_record_2166 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 2
  %struct_field167 = load i64, i64* %struct_field_access_record_2166, align 8
  %struct_field169.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 0
  %struct_field169.unpack = load i8*, i8** %struct_field169.elt, align 8
  %struct_field169.elt498 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 1
  %struct_field169.unpack499 = load i64, i64* %struct_field169.elt498, align 8
  %struct_field169.elt500 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %state, i64 0, i32 3, i32 2
  %struct_field169.unpack501 = load i64, i64* %struct_field169.elt500, align 8
  %struct_field171.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field171.unpack504 = load i64, i64* %struct_field1.elt186, align 8
  %struct_field171.unpack506 = load i64, i64* %struct_field1.elt188, align 8
  %struct_alloca178 = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca178.repack.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178, i64 0, i32 0, i32 0
  store i8* %struct_field163.unpack, i8** %struct_alloca178.repack.repack, align 8
  %struct_alloca178.repack.repack518 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178, i64 0, i32 0, i32 1
  store i64 %struct_field163.unpack494, i64* %struct_alloca178.repack.repack518, align 8
  %struct_alloca178.repack.repack520 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178, i64 0, i32 0, i32 2
  store i64 %struct_field163.unpack496, i64* %struct_alloca178.repack.repack520, align 8
  br label %joinpointcont.sink.split

joinpointcont.sink.split:                         ; preds = %branch5, %branch7, %"#Attr_#dec_29.exit680", %"#Attr_#dec_29.exit731", %"#Attr_#dec_29.exit", %then_block128, %then_block160
  %struct_alloca178.sink935 = phi { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* [ %struct_alloca178, %then_block160 ], [ %struct_alloca146, %then_block128 ], [ %struct_alloca117, %"#Attr_#dec_29.exit" ], [ %struct_alloca88, %"#Attr_#dec_29.exit731" ], [ %struct_alloca66, %"#Attr_#dec_29.exit680" ], [ %struct_alloca44, %branch7 ], [ %struct_alloca24, %branch5 ]
  %struct_field165.sink = phi i64 [ %struct_field165, %then_block160 ], [ %struct_field133, %then_block128 ], [ %struct_field104, %"#Attr_#dec_29.exit" ], [ %struct_field73, %"#Attr_#dec_29.exit731" ], [ %struct_field51, %"#Attr_#dec_29.exit680" ], [ %sub_int.i, %branch7 ], [ %add_int_wrap.i, %branch5 ]
  %struct_field167.sink = phi i64 [ %struct_field167, %then_block160 ], [ %struct_field135, %then_block128 ], [ %struct_field106, %"#Attr_#dec_29.exit" ], [ %struct_field75, %"#Attr_#dec_29.exit731" ], [ %struct_field53, %"#Attr_#dec_29.exit680" ], [ %struct_field30, %branch7 ], [ %struct_field11, %branch5 ]
  %struct_field169.unpack.sink = phi i8* [ %struct_field169.unpack, %then_block160 ], [ %struct_field137.unpack, %then_block128 ], [ %list_alloca.i.i.sroa.0.0910, %"#Attr_#dec_29.exit" ], [ %struct_field77.unpack, %"#Attr_#dec_29.exit731" ], [ %struct_field55.unpack, %"#Attr_#dec_29.exit680" ], [ %struct_field32.unpack, %branch7 ], [ %struct_field12.unpack, %branch5 ]
  %struct_field169.unpack499.sink = phi i64 [ %struct_field169.unpack499, %then_block160 ], [ %struct_field137.unpack255, %then_block128 ], [ %197, %"#Attr_#dec_29.exit" ], [ %struct_field77.unpack346, %"#Attr_#dec_29.exit731" ], [ %struct_field55.unpack383, %"#Attr_#dec_29.exit680" ], [ %struct_field32.unpack420, %branch7 ], [ %struct_field12.unpack457, %branch5 ]
  %struct_field169.unpack501.sink = phi i64 [ %struct_field169.unpack501, %then_block160 ], [ %struct_field137.unpack257, %then_block128 ], [ %list_alloca.i.i.sroa.6.0908, %"#Attr_#dec_29.exit" ], [ %struct_field77.unpack348, %"#Attr_#dec_29.exit731" ], [ %struct_field55.unpack385, %"#Attr_#dec_29.exit680" ], [ %struct_field32.unpack422, %branch7 ], [ %struct_field12.unpack459, %branch5 ]
  %struct_field171.unpack.sink = phi i8* [ %struct_field171.unpack, %then_block160 ], [ %struct_field139.unpack, %then_block128 ], [ %struct_field108.unpack, %"#Attr_#dec_29.exit" ], [ %struct_field79.unpack, %"#Attr_#dec_29.exit731" ], [ %struct_field57.unpack, %"#Attr_#dec_29.exit680" ], [ %struct_field34.unpack, %branch7 ], [ %struct_field14.unpack, %branch5 ]
  %struct_field171.unpack504.sink = phi i64 [ %struct_field171.unpack504, %then_block160 ], [ %struct_field139.unpack260, %then_block128 ], [ %struct_field108.unpack302, %"#Attr_#dec_29.exit" ], [ %struct_field79.unpack351, %"#Attr_#dec_29.exit731" ], [ %struct_field57.unpack388, %"#Attr_#dec_29.exit680" ], [ %struct_field34.unpack425, %branch7 ], [ %struct_field14.unpack462, %branch5 ]
  %struct_field171.unpack506.sink = phi i64 [ %struct_field171.unpack506, %then_block160 ], [ %struct_field139.unpack262, %then_block128 ], [ %struct_field108.unpack304, %"#Attr_#dec_29.exit" ], [ %struct_field79.unpack353, %"#Attr_#dec_29.exit731" ], [ %struct_field57.unpack390, %"#Attr_#dec_29.exit680" ], [ %struct_field34.unpack427, %branch7 ], [ %struct_field14.unpack464, %branch5 ]
  %result_value.sroa.0.0.copyload.sink = phi i64 [ %result_value.sroa.0.0.copyload, %then_block160 ], [ %result_value.sroa.0.0.copyload, %then_block128 ], [ %struct_field110, %"#Attr_#dec_29.exit" ], [ %struct_field81, %"#Attr_#dec_29.exit731" ], [ %struct_field59, %"#Attr_#dec_29.exit680" ], [ %struct_field36, %branch7 ], [ %struct_field16, %branch5 ]
  %struct_alloca178.repack508 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 1
  store i64 %struct_field165.sink, i64* %struct_alloca178.repack508, align 8
  %struct_alloca178.repack510 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 2
  store i64 %struct_field167.sink, i64* %struct_alloca178.repack510, align 8
  %struct_alloca178.repack512.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 3, i32 0
  store i8* %struct_field169.unpack.sink, i8** %struct_alloca178.repack512.repack, align 8
  %struct_alloca178.repack512.repack522 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 3, i32 1
  store i64 %struct_field169.unpack499.sink, i64* %struct_alloca178.repack512.repack522, align 8
  %struct_alloca178.repack512.repack524 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 3, i32 2
  store i64 %struct_field169.unpack501.sink, i64* %struct_alloca178.repack512.repack524, align 8
  %struct_alloca178.repack514.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 4, i32 0
  store i8* %struct_field171.unpack.sink, i8** %struct_alloca178.repack514.repack, align 8
  %struct_alloca178.repack514.repack526 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 4, i32 1
  store i64 %struct_field171.unpack504.sink, i64* %struct_alloca178.repack514.repack526, align 8
  %struct_alloca178.repack514.repack528 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 4, i32 2
  store i64 %struct_field171.unpack506.sink, i64* %struct_alloca178.repack514.repack528, align 8
  %struct_alloca178.repack516 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca178.sink935, i64 0, i32 5
  store i64 %result_value.sroa.0.0.copyload.sink, i64* %struct_alloca178.repack516, align 8
  br label %joinpointcont

joinpointcont:                                    ; preds = %joinpointcont.sink.split, %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit636", %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit"
  %joinpointarg = phi { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* [ %state, %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit" ], [ %state, %"#UserApp_getUnsafe_9b71679a78d3731a4b48cfda1bf9798b48ef94ba8e20ab9862386b3480ac36.exit636" ], [ %struct_alloca178.sink935, %joinpointcont.sink.split ]
  %load_tag_to_put_in_struct179.unpack.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 0, i32 0
  %load_tag_to_put_in_struct179.unpack.unpack = load i8*, i8** %load_tag_to_put_in_struct179.unpack.elt, align 8
  %load_tag_to_put_in_struct179.unpack.elt212 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 0, i32 1
  %load_tag_to_put_in_struct179.unpack.unpack213 = load i64, i64* %load_tag_to_put_in_struct179.unpack.elt212, align 8
  %load_tag_to_put_in_struct179.unpack.elt214 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 0, i32 2
  %load_tag_to_put_in_struct179.unpack.unpack215 = load i64, i64* %load_tag_to_put_in_struct179.unpack.elt214, align 8
  %load_tag_to_put_in_struct179.elt201 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 1
  %load_tag_to_put_in_struct179.unpack202 = load i64, i64* %load_tag_to_put_in_struct179.elt201, align 8
  %load_tag_to_put_in_struct179.elt203 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 2
  %load_tag_to_put_in_struct179.unpack204 = load i64, i64* %load_tag_to_put_in_struct179.elt203, align 8
  %load_tag_to_put_in_struct179.unpack206.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 3, i32 0
  %load_tag_to_put_in_struct179.unpack206.unpack = load i8*, i8** %load_tag_to_put_in_struct179.unpack206.elt, align 8
  %load_tag_to_put_in_struct179.unpack206.elt217 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 3, i32 1
  %load_tag_to_put_in_struct179.unpack206.unpack218 = load i64, i64* %load_tag_to_put_in_struct179.unpack206.elt217, align 8
  %load_tag_to_put_in_struct179.unpack206.elt219 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 3, i32 2
  %load_tag_to_put_in_struct179.unpack206.unpack220 = load i64, i64* %load_tag_to_put_in_struct179.unpack206.elt219, align 8
  %load_tag_to_put_in_struct179.unpack208.elt = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 4, i32 0
  %load_tag_to_put_in_struct179.unpack208.unpack = load i8*, i8** %load_tag_to_put_in_struct179.unpack208.elt, align 8
  %load_tag_to_put_in_struct179.unpack208.elt222 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 4, i32 1
  %load_tag_to_put_in_struct179.unpack208.unpack223 = load i64, i64* %load_tag_to_put_in_struct179.unpack208.elt222, align 8
  %load_tag_to_put_in_struct179.unpack208.elt224 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 4, i32 2
  %load_tag_to_put_in_struct179.unpack208.unpack225 = load i64, i64* %load_tag_to_put_in_struct179.unpack208.elt224, align 8
  %load_tag_to_put_in_struct179.elt209 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %joinpointarg, i64 0, i32 5
  %load_tag_to_put_in_struct179.unpack210 = load i64, i64* %load_tag_to_put_in_struct179.elt209, align 8
  %struct_alloca181 = alloca { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, align 8
  %.repack.repack = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 0, i32 0
  store i8* %load_tag_to_put_in_struct179.unpack.unpack, i8** %.repack.repack, align 8
  %.repack.repack237 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 0, i32 1
  store i64 %load_tag_to_put_in_struct179.unpack.unpack213, i64* %.repack.repack237, align 8
  %.repack.repack239 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 0, i32 2
  store i64 %load_tag_to_put_in_struct179.unpack.unpack215, i64* %.repack.repack239, align 8
  %.repack227 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 1
  store i64 %load_tag_to_put_in_struct179.unpack202, i64* %.repack227, align 8
  %.repack229 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 2
  store i64 %load_tag_to_put_in_struct179.unpack204, i64* %.repack229, align 8
  %.repack231.repack = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 3, i32 0
  store i8* %load_tag_to_put_in_struct179.unpack206.unpack, i8** %.repack231.repack, align 8
  %.repack231.repack241 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 3, i32 1
  store i64 %load_tag_to_put_in_struct179.unpack206.unpack218, i64* %.repack231.repack241, align 8
  %.repack231.repack243 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 3, i32 2
  store i64 %load_tag_to_put_in_struct179.unpack206.unpack220, i64* %.repack231.repack243, align 8
  %.repack233.repack = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 4, i32 0
  store i8* %load_tag_to_put_in_struct179.unpack208.unpack, i8** %.repack233.repack, align 8
  %.repack233.repack245 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 4, i32 1
  store i64 %load_tag_to_put_in_struct179.unpack208.unpack223, i64* %.repack233.repack245, align 8
  %.repack233.repack247 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 4, i32 2
  store i64 %load_tag_to_put_in_struct179.unpack208.unpack225, i64* %.repack233.repack247, align 8
  %.repack235 = getelementptr inbounds { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }, { { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 } }* %struct_alloca181, i64 0, i32 0, i32 5
  store i64 %load_tag_to_put_in_struct179.unpack210, i64* %.repack235, align 8
  %tag_alloca182 = alloca { [0 x i64], [12 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @List_get_bda8b2e07052b2efc66a1e9f03e76f797cb87da45d821543a55583177338ade(%list.RocList %list, i64 %index, { [0 x i64], [3 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i24 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %list_len.i = extractvalue %list.RocList %list, 1
  %lt_uint.i = icmp ugt i64 %list_len.i, %index
  br i1 %lt_uint.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_17.exit55", %"#Attr_#dec_17.exit"
  %tag_alloca2.sink58 = phi { [0 x i64], [3 x i64], i8, [7 x i8] }* [ %tag_alloca2, %"#Attr_#dec_17.exit55" ], [ %tag_alloca, %"#Attr_#dec_17.exit" ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_17.exit55" ], [ 1, %"#Attr_#dec_17.exit" ]
  %tag_id_ptr5 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca2.sink58, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr5, align 8
  %1 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca2.sink58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %1, i8* noundef nonnull align 8 dereferenceable(32) %2, i64 32, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %read_list_ptr.i = extractvalue %list.RocList %list, 0
  %cast_basic_basic.i = bitcast i8* %read_list_ptr.i to %str.RocStr*
  %list_get_element.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %index
  %3 = bitcast %str.RocStr* %list_get_element.i to i8*
  %4 = bitcast %str.RocStr* %result_value to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false) #11
  %load_str_to_stack.i.elt17 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value, i64 0, i32 2
  %load_str_to_stack.i.unpack18 = load i64, i64* %load_str_to_stack.i.elt17, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack18, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#inc_4.exit"

modify_rc.i:                                      ; preds = %then_block
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %5 = bitcast i8* %get_rc_ptr.i to i64*
  %6 = load i64, i64* %5, align 8
  %.not.i.i = icmp eq i64 %6, 0
  br i1 %.not.i.i, label %"#Attr_#inc_4.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modify_rc.i
  %7 = add nsw i64 %6, 1
  store i64 %7, i64* %5, align 8
  br label %"#Attr_#inc_4.exit"

"#Attr_#inc_4.exit":                              ; preds = %then_block, %modify_rc.i, %Then.i.i
  %8 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %list, 2
  %"cap > 0.not.i" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit", label %loop.preheader.i

loop.preheader.i:                                 ; preds = %"#Attr_#inc_4.exit"
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i
  %next_index12.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_4.exit.i" ]
  %next_index.i = add nuw i64 %next_index12.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %9 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %8, i8* noundef nonnull align 8 dereferenceable(24) %9, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i:                                    ; preds = %loop.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %10 = bitcast i8* %get_rc_ptr.i.i to i64*
  %11 = load i64, i64* %10, align 8
  %.not.i.i.i.i.i = icmp eq i64 %11, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %12 = add i64 %11, -1
  store i64 %12, i64* %10, align 8
  %13 = icmp eq i64 %11, -9223372036854775808
  br i1 %13, label %Then1.i.i.i.i.i, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i, %Then.i.i.i.i.i, %modify_rc.i.i, %loop.i
  %exitcond.not = icmp eq i64 %next_index.i, %list_len.i
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_4.exit.i"
  %14 = ptrtoint i8* %read_list_ptr.i to i64
  %15 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %16 = select i1 %.not.i.i.i, i64 %15, i64 %14
  %as_usize_ptr.i = inttoptr i64 %16 to i64*
  %get_rc_ptr.i23 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %17 = load i64, i64* %get_rc_ptr.i23, align 8
  %.not.i.i.i.i = icmp eq i64 %17, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %after_loop.i
  %18 = add i64 %17, -1
  store i64 %18, i64* %get_rc_ptr.i23, align 8
  %19 = icmp eq i64 %17, -9223372036854775808
  br i1 %19, label %Then1.i.i.i.i, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %20 = bitcast i64* %get_rc_ptr.i23 to i8*
  tail call void @roc_dealloc(i8* %20, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %"#Attr_#inc_4.exit", %after_loop.i, %Then.i.i.i.i, %Then1.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  %load_tag_to_put_in_struct.elt = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value, i64 0, i32 0
  %load_tag_to_put_in_struct.unpack = load i8*, i8** %load_tag_to_put_in_struct.elt, align 8
  %load_tag_to_put_in_struct.elt6 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value, i64 0, i32 1
  %load_tag_to_put_in_struct.unpack7 = load i64, i64* %load_tag_to_put_in_struct.elt6, align 8
  %tag_alloca = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %.repack = bitcast [3 x i64]* %data_buffer to i8**
  store i8* %load_tag_to_put_in_struct.unpack, i8** %.repack, align 8
  %21 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack7, i64* %21, align 8
  %22 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_str_to_stack.i.unpack18, i64* %22, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %23 = bitcast %str.RocStr* %incrementing_element_loop_load.i24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23)
  %list_capacity_or_ref_ptr.i25 = extractvalue %list.RocList %list, 2
  %"cap > 0.not.i26" = icmp eq i64 %list_capacity_or_ref_ptr.i25, 0
  br i1 %"cap > 0.not.i26", label %"#Attr_#dec_17.exit55", label %modification_list_block.i31

modification_list_block.i31:                      ; preds = %else_block
  %read_list_ptr.i27 = extractvalue %list.RocList %list, 0
  %cast_basic_basic.i28 = bitcast i8* %read_list_ptr.i27 to %str.RocStr*
  %bounds_check.not.i30 = icmp eq i64 %list_len.i, 0
  br i1 %bounds_check.not.i30, label %after_loop.i52, label %loop.preheader.i33

loop.preheader.i33:                               ; preds = %modification_list_block.i31
  %load_str_to_stack.i.elt9.i32 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i24, i64 0, i32 2
  br label %loop.i39

loop.i39:                                         ; preds = %"#Attr_#dec_4.exit.i47", %loop.preheader.i33
  %next_index12.i34 = phi i64 [ 0, %loop.preheader.i33 ], [ %next_index.i35, %"#Attr_#dec_4.exit.i47" ]
  %next_index.i35 = add nuw i64 %next_index12.i34, 1
  %load_index.i36 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i28, i64 %next_index12.i34
  %24 = bitcast %str.RocStr* %load_index.i36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8* noundef nonnull align 8 dereferenceable(24) %24, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i37 = load i64, i64* %load_str_to_stack.i.elt9.i32, align 8
  %is_big_str.i.i38 = icmp sgt i64 %load_str_to_stack.i.unpack10.i37, 0
  br i1 %is_big_str.i.i38, label %modify_rc.i.i43, label %"#Attr_#dec_4.exit.i47"

modify_rc.i.i43:                                  ; preds = %loop.i39
  %call_builtin.i.i40 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i24) #11
  %get_rc_ptr.i.i41 = getelementptr inbounds i8, i8* %call_builtin.i.i40, i64 -8
  %25 = bitcast i8* %get_rc_ptr.i.i41 to i64*
  %26 = load i64, i64* %25, align 8
  %.not.i.i.i.i.i42 = icmp eq i64 %26, 0
  br i1 %.not.i.i.i.i.i42, label %"#Attr_#dec_4.exit.i47", label %Then.i.i.i.i.i44

Then.i.i.i.i.i44:                                 ; preds = %modify_rc.i.i43
  %27 = add i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %26, -9223372036854775808
  br i1 %28, label %Then1.i.i.i.i.i45, label %"#Attr_#dec_4.exit.i47"

Then1.i.i.i.i.i45:                                ; preds = %Then.i.i.i.i.i44
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i41, i32 8) #11
  br label %"#Attr_#dec_4.exit.i47"

"#Attr_#dec_4.exit.i47":                          ; preds = %Then1.i.i.i.i.i45, %Then.i.i.i.i.i44, %modify_rc.i.i43, %loop.i39
  %exitcond56.not = icmp eq i64 %next_index.i35, %list_len.i
  br i1 %exitcond56.not, label %after_loop.i52, label %loop.i39

after_loop.i52:                                   ; preds = %"#Attr_#dec_4.exit.i47", %modification_list_block.i31
  %29 = ptrtoint i8* %read_list_ptr.i27 to i64
  %30 = shl i64 %list_capacity_or_ref_ptr.i25, 1
  %.not.i.i.i48 = icmp slt i64 %list_capacity_or_ref_ptr.i25, 0
  %31 = select i1 %.not.i.i.i48, i64 %30, i64 %29
  %as_usize_ptr.i49 = inttoptr i64 %31 to i64*
  %get_rc_ptr.i50 = getelementptr inbounds i64, i64* %as_usize_ptr.i49, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i50, align 8
  %.not.i.i.i.i51 = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i51, label %"#Attr_#dec_17.exit55", label %Then.i.i.i.i53

Then.i.i.i.i53:                                   ; preds = %after_loop.i52
  %33 = add i64 %32, -1
  store i64 %33, i64* %get_rc_ptr.i50, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %Then1.i.i.i.i54, label %"#Attr_#dec_17.exit55"

Then1.i.i.i.i54:                                  ; preds = %Then.i.i.i.i53
  %35 = bitcast i64* %get_rc_ptr.i50 to i8*
  tail call void @roc_dealloc(i8* %35, i32 8) #11
  br label %"#Attr_#dec_17.exit55"

"#Attr_#dec_17.exit55":                           ; preds = %else_block, %after_loop.i52, %Then.i.i.i.i53, %Then1.i.i.i.i54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23)
  %tag_alloca2 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Result_mapErr_6aefbf48562dfc8b90f8fa88c36a09d50313f33e538dd1c4b3a5ea41197cc31({ [0 x i64], [4 x i64], i8, [7 x i8] }* nocapture readonly %result, %str.RocStr* nocapture readonly %transform, { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %else_block, %"#Attr_#dec_4.exit"
  %tag_alloca8.sink97 = phi { [0 x i64], [7 x i64], i8, [7 x i8] }* [ %tag_alloca8, %else_block ], [ %tag_alloca, %"#Attr_#dec_4.exit" ]
  %.sink = phi i8 [ 0, %else_block ], [ 1, %"#Attr_#dec_4.exit" ]
  %tag_id_ptr11 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca8.sink97, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr11, align 8
  %1 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca8.sink97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %1, i8* noundef nonnull align 8 dereferenceable(64) %2, i64 64, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_str_to_stack.i.elt88 = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 2
  %load_str_to_stack.i.unpack89 = load i64, i64* %load_str_to_stack.i.elt88, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack89, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %then_block
  %call_builtin.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %transform) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %3 = bitcast i8* %get_rc_ptr.i to i64*
  %4 = load i64, i64* %3, align 8
  %.not.i.i.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %5 = add i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = icmp eq i64 %4, -9223372036854775808
  br i1 %6, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %then_block
  %load_element.elt = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt71 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.unpack72.elt = bitcast i64* %load_element.elt71 to i8**
  %load_element.unpack72.unpack = load i8*, i8** %load_element.unpack72.elt, align 8
  %7 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.unpack72.unpack75 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element.unpack72.unpack77 = load i64, i64* %8, align 8
  %tag_alloca = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %.repack = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 0
  store i64 %load_element.unpack, i64* %.repack, align 8
  %.repack79 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  %.repack81 = bitcast i64* %.repack79 to i8**
  store i8* %load_element.unpack72.unpack, i8** %.repack81, align 8
  %9 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_element.unpack72.unpack75, i64* %9, align 8
  %10 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 3
  store i64 %load_element.unpack72.unpack77, i64* %10, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %load_tag_to_put_in_struct.elt.i = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 0
  %load_tag_to_put_in_struct.unpack.i = load i8*, i8** %load_tag_to_put_in_struct.elt.i, align 8
  %load_tag_to_put_in_struct.elt1.i = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 1
  %load_tag_to_put_in_struct.unpack2.i = load i64, i64* %load_tag_to_put_in_struct.elt1.i, align 8
  %load_tag_to_put_in_struct.elt3.i = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack4.i = load i64, i64* %load_tag_to_put_in_struct.elt3.i, align 8
  %11 = ptrtoint i8* %load_tag_to_put_in_struct.unpack.i to i64
  %struct_alloca = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack43.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %11, i64* %.repack43.repack, align 8
  %.repack43.repack49 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack2.i, i64* %.repack43.repack49, align 8
  %.repack43.repack51 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack4.i, i64* %.repack43.repack51, align 8
  %.repack45 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 1, i8* %.repack45, align 8
  %tag_alloca8 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer9 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca8, i64 0, i32 1
  %12 = bitcast [7 x i64]* %data_buffer9 to i8*
  %13 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %12, i8* noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Result_mapErr_f3717d8d695ceecc8bdf05d2fa68cfb4e9074a591f91410b8cf55b1598d641({ [0 x i64], [4 x i64], i8, [7 x i8] }* nocapture readonly %result, %str.RocStr* nocapture readonly %transform, { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %else_block, %"#Attr_#dec_4.exit"
  %tag_alloca8.sink97 = phi { [0 x i64], [7 x i64], i8, [7 x i8] }* [ %tag_alloca8, %else_block ], [ %tag_alloca, %"#Attr_#dec_4.exit" ]
  %.sink = phi i8 [ 0, %else_block ], [ 1, %"#Attr_#dec_4.exit" ]
  %tag_id_ptr11 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca8.sink97, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr11, align 8
  %1 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca8.sink97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %1, i8* noundef nonnull align 8 dereferenceable(64) %2, i64 64, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_str_to_stack.i.elt88 = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 2
  %load_str_to_stack.i.unpack89 = load i64, i64* %load_str_to_stack.i.elt88, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack89, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %then_block
  %call_builtin.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %transform) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %3 = bitcast i8* %get_rc_ptr.i to i64*
  %4 = load i64, i64* %3, align 8
  %.not.i.i.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %5 = add i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = icmp eq i64 %4, -9223372036854775808
  br i1 %6, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %then_block
  %load_element.elt = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt71 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.unpack72.elt = bitcast i64* %load_element.elt71 to i8**
  %load_element.unpack72.unpack = load i8*, i8** %load_element.unpack72.elt, align 8
  %7 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.unpack72.unpack75 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element.unpack72.unpack77 = load i64, i64* %8, align 8
  %tag_alloca = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %.repack = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 0
  store i64 %load_element.unpack, i64* %.repack, align 8
  %.repack79 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  %.repack81 = bitcast i64* %.repack79 to i8**
  store i8* %load_element.unpack72.unpack, i8** %.repack81, align 8
  %9 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_element.unpack72.unpack75, i64* %9, align 8
  %10 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 3
  store i64 %load_element.unpack72.unpack77, i64* %10, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %load_tag_to_put_in_struct.elt.i = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 0
  %load_tag_to_put_in_struct.unpack.i = load i8*, i8** %load_tag_to_put_in_struct.elt.i, align 8
  %load_tag_to_put_in_struct.elt1.i = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 1
  %load_tag_to_put_in_struct.unpack2.i = load i64, i64* %load_tag_to_put_in_struct.elt1.i, align 8
  %load_tag_to_put_in_struct.elt3.i = getelementptr inbounds %str.RocStr, %str.RocStr* %transform, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack4.i = load i64, i64* %load_tag_to_put_in_struct.elt3.i, align 8
  %11 = ptrtoint i8* %load_tag_to_put_in_struct.unpack.i to i64
  %struct_alloca = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack43.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %11, i64* %.repack43.repack, align 8
  %.repack43.repack49 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack2.i, i64* %.repack43.repack49, align 8
  %.repack43.repack51 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack4.i, i64* %.repack43.repack51, align 8
  %.repack45 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 1, i8* %.repack45, align 8
  %tag_alloca8 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer9 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca8, i64 0, i32 1
  %12 = bitcast [7 x i64]* %data_buffer9 to i8*
  %13 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %12, i8* noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @"#UserApp_pop_1de0e1a82673e5dc4437c2257b54db19301b3a371fda01e9d225d2fb820ec98"(%list.RocList %list, { [0 x i64], [4 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %list, 2
  %"cap > 0.i.not" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#inc_10.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %entry
  %list.elt52 = extractvalue %list.RocList %list, 0
  %1 = ptrtoint i8* %list.elt52 to i64
  %2 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %3 = select i1 %.not.i.i.i, i64 %2, i64 %1
  %as_usize_ptr.i = inttoptr i64 %3 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %4 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i, label %"#Attr_#inc_10.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modification_list_block.i
  %5 = add nsw i64 %4, 1
  store i64 %5, i64* %get_rc_ptr.i, align 8
  br label %"#Attr_#inc_10.exit"

"#Attr_#inc_10.exit":                             ; preds = %entry, %modification_list_block.i, %Then.i.i
  call fastcc void @List_last_deb68aa7af341ff4b89cb152327848b7ca14b05d435651625c81f0d8fa516(%list.RocList %list, { [0 x i64], [1 x i64], i8, [7 x i8] }* nonnull %result_value)
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 0
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit, %"#Attr_#dec_10.exit"
  %tag_alloca10.sink111 = phi { [0 x i64], [4 x i64], i8, [7 x i8] }* [ %tag_alloca10, %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit ], [ %tag_alloca, %"#Attr_#dec_10.exit" ]
  %.sink = phi i8 [ 1, %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit ], [ 0, %"#Attr_#dec_10.exit" ]
  %tag_id_ptr13 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca10.sink111, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr13, align 8
  %6 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %0 to i8*
  %7 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca10.sink111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %6, i8* noundef nonnull align 8 dereferenceable(40) %7, i64 40, i1 false)
  ret void

then_block:                                       ; preds = %"#Attr_#inc_10.exit"
  br i1 %"cap > 0.i.not", label %"#Attr_#dec_10.exit", label %modification_list_block.i33

modification_list_block.i33:                      ; preds = %then_block
  %list.elt = extractvalue %list.RocList %list, 0
  %8 = ptrtoint i8* %list.elt to i64
  %9 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i29 = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %10 = select i1 %.not.i.i.i29, i64 %9, i64 %8
  %as_usize_ptr.i30 = inttoptr i64 %10 to i64*
  %get_rc_ptr.i31 = getelementptr inbounds i64, i64* %as_usize_ptr.i30, i64 -1
  %11 = load i64, i64* %get_rc_ptr.i31, align 8
  %.not.i.i.i.i32 = icmp eq i64 %11, 0
  br i1 %.not.i.i.i.i32, label %"#Attr_#dec_10.exit", label %Then.i.i.i.i34

Then.i.i.i.i34:                                   ; preds = %modification_list_block.i33
  %12 = add i64 %11, -1
  store i64 %12, i64* %get_rc_ptr.i31, align 8
  %13 = icmp eq i64 %11, -9223372036854775808
  br i1 %13, label %Then1.i.i.i.i35, label %"#Attr_#dec_10.exit"

Then1.i.i.i.i35:                                  ; preds = %Then.i.i.i.i34
  %14 = bitcast i64* %get_rc_ptr.i31 to i8*
  tail call void @roc_dealloc(i8* %14, i32 8) #11
  br label %"#Attr_#dec_10.exit"

"#Attr_#dec_10.exit":                             ; preds = %modification_list_block.i33, %Then.i.i.i.i34, %Then1.i.i.i.i35, %then_block
  %tag_alloca = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

else_block:                                       ; preds = %"#Attr_#inc_10.exit"
  %get_opaque_data_ptr5 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_element6 = load i64, i64* %get_opaque_data_ptr5, align 8
  %list_len.i.i = extractvalue %list.RocList %list, 1
  %call.i.i = tail call i64 @llvm.usub.sat.i64(i64 %list_len.i.i, i64 1) #11
  %"#arg1.elt.i.i" = extractvalue %list.RocList %list, 0
  %15 = icmp ult i64 %list_len.i.i, 2
  br i1 %15, label %OptionalEndIf.i.i.i.i, label %EndIf3.i35.i.i.i

OptionalEndIf.i.i.i.i:                            ; preds = %else_block
  %.not.i.i.i.i.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %16 = select i1 %.not.i.i.i.i.i.i.i, i64 %list_len.i.i, i64 %list_capacity_or_ref_ptr.i
  %17 = icmp ne i64 %16, 0
  %18 = or i1 %.not.i.i.i.i.i.i.i, %17
  br i1 %18, label %list.RocList.isUnique.exit.i.i.i.i, label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit

list.RocList.isUnique.exit.i.i.i.i:               ; preds = %OptionalEndIf.i.i.i.i
  %19 = getelementptr inbounds i8, i8* %"#arg1.elt.i.i", i64 -8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !397
  %phi.cmp.i.i.i.i.i = icmp eq i64 %21, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i.i, label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit, label %EndIf.i1.i.i.i

EndIf.i1.i.i.i:                                   ; preds = %list.RocList.isUnique.exit.i.i.i.i
  %22 = ptrtoint i8* %"#arg1.elt.i.i" to i64
  %23 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %24 = select i1 %.not.i.i.i.i.i.i.i, i64 %23, i64 %22
  %25 = icmp ne i64 %list_capacity_or_ref_ptr.i, 0
  %26 = icmp ne i64 %24, 0
  %or.cond.i.i.i.i.i.i = select i1 %25, i1 %26, i1 false
  br i1 %or.cond.i.i.i.i.i.i, label %OptionalNonNull.i.i.i.i.i.i, label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit

OptionalNonNull.i.i.i.i.i.i:                      ; preds = %EndIf.i1.i.i.i
  %27 = inttoptr i64 %24 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 -8
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !397
  %.not.i.i.i72.i.i.i.i = icmp eq i64 %30, 0
  br i1 %.not.i.i.i72.i.i.i.i, label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit, label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %OptionalNonNull.i.i.i.i.i.i
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8, !noalias !397
  %32 = icmp eq i64 %30, -9223372036854775808
  br i1 %32, label %Then1.i.i.i.i.i.i.i, label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit

Then1.i.i.i.i.i.i.i:                              ; preds = %Then.i.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %28, i32 8) #11, !noalias !397
  br label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit

EndIf3.i35.i.i.i:                                 ; preds = %else_block
  %.not.i34.i.i.i = icmp eq i8* %"#arg1.elt.i.i", null
  br i1 %.not.i34.i.i.i, label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit, label %OptionalThen4.i37.i.i.i

OptionalThen4.i37.i.i.i:                          ; preds = %EndIf3.i35.i.i.i
  %33 = icmp ugt i64 %list_len.i.i, %call.i.i
  %..i.i36.i.i.i = select i1 %33, i64 %call.i.i, i64 %list_len.i.i
  %.not.i.i.i77.i.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %34 = select i1 %.not.i.i.i77.i.i.i.i, i64 %list_len.i.i, i64 %list_capacity_or_ref_ptr.i
  %35 = icmp ne i64 %34, 0
  %36 = or i1 %.not.i.i.i77.i.i.i.i, %35
  br i1 %36, label %list.RocList.isUnique.exit81.i.i.i.i, label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit

list.RocList.isUnique.exit81.i.i.i.i:             ; preds = %OptionalThen4.i37.i.i.i
  %37 = getelementptr inbounds i8, i8* %"#arg1.elt.i.i", i64 -8
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8, !noalias !400
  %phi.cmp.i78.i.i.i.i = icmp eq i64 %39, -9223372036854775808
  br i1 %phi.cmp.i78.i.i.i.i, label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit, label %Else12.i.i.i.i

Else12.i.i.i.i:                                   ; preds = %list.RocList.isUnique.exit81.i.i.i.i
  %40 = ptrtoint i8* %"#arg1.elt.i.i" to i64
  %41 = lshr i64 %40, 1
  %42 = or i64 %41, -9223372036854775808
  %43 = select i1 %.not.i.i.i77.i.i.i.i, i64 %list_capacity_or_ref_ptr.i, i64 %42
  br label %List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit

List_dropLast_f76ad689ee94733942e68ba74fec71e3b7c7a4fdaf45e2934278948dcb39d2d2.exit: ; preds = %EndIf3.i35.i.i.i, %list.RocList.isUnique.exit81.i.i.i.i, %OptionalThen4.i37.i.i.i, %EndIf.i1.i.i.i, %OptionalNonNull.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i, %list.RocList.isUnique.exit.i.i.i.i, %OptionalEndIf.i.i.i.i, %Else12.i.i.i.i
  %list_alloca.i.i.sroa.24.0 = phi i64 [ %43, %Else12.i.i.i.i ], [ %list_capacity_or_ref_ptr.i, %OptionalEndIf.i.i.i.i ], [ %list_capacity_or_ref_ptr.i, %list.RocList.isUnique.exit.i.i.i.i ], [ 0, %Then1.i.i.i.i.i.i.i ], [ 0, %Then.i.i.i.i.i.i.i ], [ 0, %OptionalNonNull.i.i.i.i.i.i ], [ 0, %EndIf.i1.i.i.i ], [ %list_capacity_or_ref_ptr.i, %OptionalThen4.i37.i.i.i ], [ %list_capacity_or_ref_ptr.i, %list.RocList.isUnique.exit81.i.i.i.i ], [ 0, %EndIf3.i35.i.i.i ]
  %list_alloca.i.i.sroa.16.0 = phi i64 [ %..i.i36.i.i.i, %Else12.i.i.i.i ], [ 0, %OptionalEndIf.i.i.i.i ], [ 0, %list.RocList.isUnique.exit.i.i.i.i ], [ 0, %Then1.i.i.i.i.i.i.i ], [ 0, %Then.i.i.i.i.i.i.i ], [ 0, %OptionalNonNull.i.i.i.i.i.i ], [ 0, %EndIf.i1.i.i.i ], [ %..i.i36.i.i.i, %OptionalThen4.i37.i.i.i ], [ %..i.i36.i.i.i, %list.RocList.isUnique.exit81.i.i.i.i ], [ 0, %EndIf3.i35.i.i.i ]
  %list_alloca.i.i.sroa.0.0 = phi i8* [ %"#arg1.elt.i.i", %Else12.i.i.i.i ], [ %"#arg1.elt.i.i", %OptionalEndIf.i.i.i.i ], [ %"#arg1.elt.i.i", %list.RocList.isUnique.exit.i.i.i.i ], [ null, %Then1.i.i.i.i.i.i.i ], [ null, %Then.i.i.i.i.i.i.i ], [ null, %OptionalNonNull.i.i.i.i.i.i ], [ null, %EndIf.i1.i.i.i ], [ %"#arg1.elt.i.i", %OptionalThen4.i37.i.i.i ], [ %"#arg1.elt.i.i", %list.RocList.isUnique.exit81.i.i.i.i ], [ null, %EndIf3.i35.i.i.i ]
  %tag_alloca10 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %.repack = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca10, i64 0, i32 1, i64 0
  store i64 %load_element6, i64* %.repack, align 8
  %.repack14 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca10, i64 0, i32 1, i64 1
  %.repack16 = bitcast i64* %.repack14 to i8**
  store i8* %list_alloca.i.i.sroa.0.0, i8** %.repack16, align 8
  %44 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca10, i64 0, i32 1, i64 2
  store i64 %list_alloca.i.i.sroa.16.0, i64* %44, align 8
  %45 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca10, i64 0, i32 1, i64 3
  store i64 %list_alloca.i.i.sroa.24.0, i64* %45, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Dict_rehash_17f19c543a6f7c357f3f1e8e618519e9b5458fb1af4602cc57fe81f77596({ %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture readonly %"551", { %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value13.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value.i = alloca { [0 x i8], [1 x i8], i8, [0 x i8] }, align 8
  %result_value = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 0, i32 0
  %struct_field.unpack = load i8*, i8** %struct_field.elt, align 8
  %struct_field.elt11 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 0, i32 1
  %struct_field.unpack12 = load i64, i64* %struct_field.elt11, align 8
  %struct_field.elt13 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 0, i32 2
  %struct_field.unpack14 = load i64, i64* %struct_field.elt13, align 8
  %"cap > 0.i.not" = icmp eq i64 %struct_field.unpack14, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#inc_9.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %entry
  %1 = ptrtoint i8* %struct_field.unpack to i64
  %2 = shl i64 %struct_field.unpack14, 1
  %.not.i.i.i = icmp slt i64 %struct_field.unpack14, 0
  %3 = select i1 %.not.i.i.i, i64 %2, i64 %1
  %as_usize_ptr.i = inttoptr i64 %3 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %4 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i, label %"#Attr_#inc_9.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modification_list_block.i
  %5 = add nsw i64 %4, 1
  store i64 %5, i64* %get_rc_ptr.i, align 8
  br label %"#Attr_#inc_9.exit"

"#Attr_#inc_9.exit":                              ; preds = %entry, %modification_list_block.i, %Then.i.i
  %struct_field1.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 1, i32 0
  %struct_field1.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field1.elt16 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 1, i32 1
  %struct_field1.unpack17 = load i64, i64* %struct_field1.elt16, align 8
  %struct_field1.elt18 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 1, i32 2
  %struct_field1.unpack19 = load i64, i64* %struct_field1.elt18, align 8
  %struct_field2.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 2, i32 0
  %struct_field2.unpack = load i8*, i8** %struct_field2.elt, align 8
  %6 = insertvalue %list.RocList undef, i8* %struct_field2.unpack, 0
  %struct_field2.elt21 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 2, i32 1
  %struct_field2.unpack22 = load i64, i64* %struct_field2.elt21, align 8
  %7 = insertvalue %list.RocList %6, i64 %struct_field2.unpack22, 1
  %struct_field2.elt23 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 2, i32 2
  %struct_field2.unpack24 = load i64, i64* %struct_field2.elt23, align 8
  %struct_field225 = insertvalue %list.RocList %7, i64 %struct_field2.unpack24, 2
  %call.i = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %struct_field1.unpack17, i64 2) #11
  %has_overflowed.i = extractvalue { i64, i1 } %call.i, 1
  br i1 %has_overflowed.i, label %throw_block.i, label %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit

throw_block.i:                                    ; preds = %"#Attr_#inc_9.exit"
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit: ; preds = %"#Attr_#inc_9.exit"
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 3
  %struct_field3 = load i64, i64* %struct_field_access_record_3, align 8
  %operation_result.i = extractvalue { i64, i1 } %call.i, 0
  %.not.i.not.i.i.i = icmp eq i64 %operation_result.i, 0
  br i1 %.not.i.not.i.i.i, label %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit, label %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102

Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102: ; preds = %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit
  %8 = icmp ugt i64 %operation_result.i, 8
  %..i.i.i.i.i.i.i = select i1 %8, i64 %operation_result.i, i64 8
  %9 = shl nuw i64 %..i.i.i.i.i.i.i, 3
  %10 = or i64 %9, 8
  %11 = tail call i8* @roc_alloc(i64 %10, i32 8) #11, !noalias !403
  %12 = icmp ne i8* %11, null
  tail call void @llvm.assume(i1 %12) #11, !noalias !412
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %11 to i64*
  store i64 -9223372036854775808, i64* %14, align 8, !noalias !403
  %15 = shl nuw i64 %operation_result.i, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 0, i64 %15, i1 false) #11
  %16 = icmp ugt i64 %operation_result.i, 64
  %..i.i.i.i.i.i.i101 = select i1 %16, i64 %operation_result.i, i64 64
  %17 = add nuw i64 %..i.i.i.i.i.i.i101, 8
  %18 = tail call i8* @roc_alloc(i64 %17, i32 8) #11, !noalias !413
  %19 = icmp ne i8* %18, null
  tail call void @llvm.assume(i1 %19) #11, !noalias !422
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %18 to i64*
  store i64 -9223372036854775808, i64* %21, align 8, !noalias !413
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %20, i8 -128, i64 %operation_result.i, i1 false) #11
  br label %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit

List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit: ; preds = %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102
  %list_alloca.i.sroa.0.040.i112 = phi i8* [ %13, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102 ], [ null, %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit ]
  %list_alloca.i.sroa.6.041.i111 = phi i64 [ %..i.i.i.i.i.i.i, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102 ], [ 0, %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit ]
  %list_alloca.i.sroa.6.040.i = phi i64 [ %..i.i.i.i.i.i.i101, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102 ], [ 0, %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit ]
  %list_alloca.i.sroa.0.039.i = phi i8* [ %20, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102 ], [ null, %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit ]
  %struct_alloca = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca.repack.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 0
  store i8* %struct_field.unpack, i8** %struct_alloca.repack.repack, align 8
  %struct_alloca.repack.repack32 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 1
  store i64 %struct_field.unpack12, i64* %struct_alloca.repack.repack32, align 8
  %struct_alloca.repack.repack34 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 2
  store i64 %struct_field.unpack14, i64* %struct_alloca.repack.repack34, align 8
  %struct_alloca.repack26.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 0
  store i8* %list_alloca.i.sroa.0.040.i112, i8** %struct_alloca.repack26.repack, align 8
  %struct_alloca.repack26.repack36 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 1
  store i64 %operation_result.i, i64* %struct_alloca.repack26.repack36, align 8
  %struct_alloca.repack26.repack38 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 2
  store i64 %list_alloca.i.sroa.6.041.i111, i64* %struct_alloca.repack26.repack38, align 8
  %struct_alloca.repack28.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 0
  store i8* %list_alloca.i.sroa.0.039.i, i8** %struct_alloca.repack28.repack, align 8
  %struct_alloca.repack28.repack40 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 1
  store i64 %operation_result.i, i64* %struct_alloca.repack28.repack40, align 8
  %struct_alloca.repack28.repack42 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 2
  store i64 %list_alloca.i.sroa.6.040.i, i64* %struct_alloca.repack28.repack42, align 8
  %struct_alloca.repack30 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3
  store i64 %struct_field3, i64* %struct_alloca.repack30, align 8
  %22 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value13.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22)
  %23 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %23)
  %tag_id_ptr.i = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 2
  %get_opaque_data_ptr5.i = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 1, i64 0
  %"cap > 0.i.i.not" = icmp eq i64 %struct_field2.unpack24, 0
  %24 = ptrtoint i8* %struct_field2.unpack to i64
  %25 = shl i64 %struct_field2.unpack24, 1
  %.not.i.i.i.i = icmp slt i64 %struct_field2.unpack24, 0
  %26 = select i1 %.not.i.i.i.i, i64 %25, i64 %24
  %as_usize_ptr.i.i = inttoptr i64 %26 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %"cap > 0.i58.i.not" = icmp eq i64 %struct_field1.unpack19, 0
  %27 = ptrtoint i8* %struct_field1.unpack to i64
  %28 = shl i64 %struct_field1.unpack19, 1
  %.not.i.i.i63.i = icmp slt i64 %struct_field1.unpack19, 0
  %29 = select i1 %.not.i.i.i63.i, i64 %28, i64 %27
  %as_usize_ptr.i64.i = inttoptr i64 %29 to i64*
  %get_rc_ptr.i65.i = getelementptr inbounds i64, i64* %as_usize_ptr.i64.i, i64 -1
  %cast_basic_basic.i72.i113 = bitcast i8* %struct_field1.unpack to i64*
  %30 = bitcast i64* %get_rc_ptr.i65.i to i8*
  %31 = ptrtoint i8* %struct_field.unpack to i64
  %32 = shl i64 %struct_field.unpack14, 1
  %.not.i.i.i94.i = icmp slt i64 %struct_field.unpack14, 0
  %33 = select i1 %.not.i.i.i94.i, i64 %32, i64 %31
  %as_usize_ptr.i95.i = inttoptr i64 %33 to i64*
  %get_rc_ptr.i96.i = getelementptr inbounds i64, i64* %as_usize_ptr.i95.i, i64 -1
  %cast_basic_basic.i.i118 = bitcast i8* %struct_field.unpack to { i64, {} }*
  %34 = bitcast i64* %get_rc_ptr.i96.i to i8*
  br i1 %"cap > 0.i.i.not", label %joinpointcont.i.us.preheader, label %joinpointcont.i

joinpointcont.i.us.preheader:                     ; preds = %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit
  call fastcc void @List_get_ae171b26e9af4cb819f7344b2fd94aaffbb810fcd6bdb6fa266d41c3bc2be60(%list.RocList %struct_field225, i64 0, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i) #11
  %load_tag_id.i.us152 = load i8, i8* %tag_id_ptr.i, align 1
  %eq_u8.i.us153 = icmp eq i8 %load_tag_id.i.us152, 1
  br i1 %eq_u8.i.us153, label %then_block.i.us, label %else_block.i

then_block.i.us:                                  ; preds = %joinpointcont.i.us.preheader, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us
  %joinpointarg4.i.us155 = phi i64 [ %operation_result.i.i.us, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us ], [ 0, %joinpointcont.i.us.preheader ]
  %joinpointarg.i.us154 = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %joinpointarg7.i.us, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us ], [ %struct_alloca, %joinpointcont.i.us.preheader ]
  %load_element.i.us = load i8, i8* %get_opaque_data_ptr5.i, align 8
  %gte_int.i.i.us = icmp sgt i8 %load_element.i.us, -1
  br i1 %gte_int.i.i.us, label %then_block9.i.us, label %joinpointcont6.i.us

then_block9.i.us:                                 ; preds = %then_block.i.us
  br i1 %"cap > 0.i58.i.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split, label %modification_list_block.i67.i.us

modification_list_block.i67.i.us:                 ; preds = %then_block9.i.us
  %35 = load i64, i64* %get_rc_ptr.i65.i, align 8
  %.not.i.i66.i.us = icmp eq i64 %35, 0
  br i1 %.not.i.i66.i.us, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split, label %modification_list_block.i.i83.i.us

modification_list_block.i.i83.i.us:               ; preds = %modification_list_block.i67.i.us
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %get_rc_ptr.i65.i, align 8
  %list_get_element.i.i114.us = getelementptr inbounds i64, i64* %cast_basic_basic.i72.i113, i64 %joinpointarg4.i.us155
  %list_get_load_element.i.i115.us = load i64, i64* %list_get_element.i.i114.us, align 8
  %.not.i.i.i.i.i82.i.us = icmp eq i64 %36, 0
  %spec.store.select = select i1 %.not.i.i.i.i.i82.i.us, i64 0, i64 %35
  store i64 %spec.store.select, i64* %get_rc_ptr.i65.i, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split: ; preds = %then_block9.i.us, %modification_list_block.i67.i.us
  %list_get_element.i.i114.us130 = getelementptr inbounds i64, i64* %cast_basic_basic.i72.i113, i64 %joinpointarg4.i.us155
  %list_get_load_element.i.i115.us131 = load i64, i64* %list_get_element.i.i114.us130, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us: ; preds = %modification_list_block.i.i83.i.us, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split
  %list_get_load_element.i.i117.us = phi i64 [ %list_get_load_element.i.i115.us, %modification_list_block.i.i83.i.us ], [ %list_get_load_element.i.i115.us131, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split ]
  br i1 %"cap > 0.i.not", label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split, label %modification_list_block.i98.i.us

modification_list_block.i98.i.us:                 ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us
  %37 = load i64, i64* %get_rc_ptr.i96.i, align 8
  %.not.i.i97.i.us = icmp eq i64 %37, 0
  br i1 %.not.i.i97.i.us, label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split, label %modification_list_block.i.i.i.us

modification_list_block.i.i.i.us:                 ; preds = %modification_list_block.i98.i.us
  %38 = add nsw i64 %37, 1
  store i64 %38, i64* %get_rc_ptr.i96.i, align 8
  %list_get_load_element.elt.i.i119.us = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i.i118, i64 %list_get_load_element.i.i117.us, i32 0
  %list_get_load_element.unpack.i.i120.us = load i64, i64* %list_get_load_element.elt.i.i119.us, align 8
  %.not.i.i.i.i.i.i.us = icmp eq i64 %38, 0
  %spec.store.select158 = select i1 %.not.i.i.i.i.i.i.us, i64 0, i64 %37
  store i64 %spec.store.select158, i64* %get_rc_ptr.i96.i, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us, %modification_list_block.i98.i.us
  %list_get_load_element.elt.i.i119.us133 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i.i118, i64 %list_get_load_element.i.i117.us, i32 0
  %list_get_load_element.unpack.i.i120.us134 = load i64, i64* %list_get_load_element.elt.i.i119.us133, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us: ; preds = %modification_list_block.i.i.i.us, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split
  %list_get_load_element.unpack.i.i122.us = phi i64 [ %list_get_load_element.unpack.i.i120.us, %modification_list_block.i.i.i.us ], [ %list_get_load_element.unpack.i.i120.us134, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split ]
  call fastcc void @Dict_insertForRehash_cc195e191bb2dbefba568f76ddf0cc4b73654d7a70e7e5e04f3daf513e10582b({ %list.RocList, %list.RocList, %list.RocList, i64 }* %joinpointarg.i.us154, i64 %list_get_load_element.unpack.i.i122.us, i64 %list_get_load_element.i.i117.us, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value13.i) #11
  br label %joinpointcont6.i.us

joinpointcont6.i.us:                              ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us, %then_block.i.us
  %joinpointarg7.i.us = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %result_value13.i, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us ], [ %joinpointarg.i.us154, %then_block.i.us ]
  %call.i.i.us = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %joinpointarg4.i.us155, i64 1) #11
  %has_overflowed.i.i.us = extractvalue { i64, i1 } %call.i.i.us, 1
  br i1 %has_overflowed.i.i.us, label %throw_block.i.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us: ; preds = %joinpointcont6.i.us
  %operation_result.i.i.us = extractvalue { i64, i1 } %call.i.i.us, 0
  call fastcc void @List_get_ae171b26e9af4cb819f7344b2fd94aaffbb810fcd6bdb6fa266d41c3bc2be60(%list.RocList %struct_field225, i64 %operation_result.i.i.us, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i) #11
  %load_tag_id.i.us = load i8, i8* %tag_id_ptr.i, align 1
  %eq_u8.i.us = icmp eq i8 %load_tag_id.i.us, 1
  br i1 %eq_u8.i.us, label %then_block.i.us, label %else_block.i

joinpointcont.i:                                  ; preds = %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i
  %joinpointarg.i = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %joinpointarg7.i, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i ], [ %struct_alloca, %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit ]
  %joinpointarg4.i = phi i64 [ %operation_result.i.i, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i ], [ 0, %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit ]
  %39 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i44 = icmp eq i64 %39, 0
  br i1 %.not.i.i.i44, label %"#Attr_#inc_11.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %joinpointcont.i
  %40 = add nsw i64 %39, 1
  store i64 %40, i64* %get_rc_ptr.i.i, align 8
  br label %"#Attr_#inc_11.exit.i"

"#Attr_#inc_11.exit.i":                           ; preds = %Then.i.i.i, %joinpointcont.i
  call fastcc void @List_get_ae171b26e9af4cb819f7344b2fd94aaffbb810fcd6bdb6fa266d41c3bc2be60(%list.RocList %struct_field225, i64 %joinpointarg4.i, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i) #11
  %load_tag_id.i = load i8, i8* %tag_id_ptr.i, align 1
  %eq_u8.i = icmp eq i8 %load_tag_id.i, 1
  br i1 %eq_u8.i, label %then_block.i, label %else_block.i

then_block.i:                                     ; preds = %"#Attr_#inc_11.exit.i"
  %load_element.i = load i8, i8* %get_opaque_data_ptr5.i, align 8
  %gte_int.i.i = icmp sgt i8 %load_element.i, -1
  br i1 %gte_int.i.i, label %then_block9.i, label %joinpointcont6.i

else_block.i:                                     ; preds = %"#Attr_#inc_11.exit.i", %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us, %joinpointcont.i.us.preheader
  %joinpointarg.i.lcssa = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %struct_alloca, %joinpointcont.i.us.preheader ], [ %joinpointarg7.i.us, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us ], [ %joinpointarg.i, %"#Attr_#inc_11.exit.i" ]
  br i1 %"cap > 0.i58.i.not", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i25.i

modification_list_block.i25.i:                    ; preds = %else_block.i
  %41 = load i64, i64* %get_rc_ptr.i65.i, align 8
  %.not.i.i.i.i.i = icmp eq i64 %41, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i25.i
  %42 = add i64 %41, -1
  store i64 %42, i64* %get_rc_ptr.i65.i, align 8
  %43 = icmp eq i64 %41, -9223372036854775808
  br i1 %43, label %Then1.i.i.i.i.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %30, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %modification_list_block.i25.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %else_block.i
  br i1 %"cap > 0.i.i.not", label %"#Attr_#dec_11.exit.i", label %modification_list_block.i37.i

modification_list_block.i37.i:                    ; preds = %"#Attr_#dec_10.exit.i"
  %44 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i.i36.i = icmp eq i64 %44, 0
  br i1 %.not.i.i.i.i36.i, label %"#Attr_#dec_11.exit.i", label %Then.i.i.i.i38.i

Then.i.i.i.i38.i:                                 ; preds = %modification_list_block.i37.i
  %45 = add i64 %44, -1
  store i64 %45, i64* %get_rc_ptr.i.i, align 8
  %46 = icmp eq i64 %44, -9223372036854775808
  br i1 %46, label %Then1.i.i.i.i39.i, label %"#Attr_#dec_11.exit.i"

Then1.i.i.i.i39.i:                                ; preds = %Then.i.i.i.i38.i
  %47 = bitcast i64* %get_rc_ptr.i.i to i8*
  tail call void @roc_dealloc(i8* %47, i32 8) #11
  br label %"#Attr_#dec_11.exit.i"

"#Attr_#dec_11.exit.i":                           ; preds = %modification_list_block.i37.i, %Then.i.i.i.i38.i, %Then1.i.i.i.i39.i, %"#Attr_#dec_10.exit.i"
  br i1 %"cap > 0.i.not", label %Dict_rehashHelper_c214f73d498445ed2eb87695f272f331822dd96022348d4326c37e5a294f45.exit, label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %"#Attr_#dec_11.exit.i"
  %48 = load i64, i64* %get_rc_ptr.i96.i, align 8
  %.not.i.i.i.i51.i = icmp eq i64 %48, 0
  br i1 %.not.i.i.i.i51.i, label %Dict_rehashHelper_c214f73d498445ed2eb87695f272f331822dd96022348d4326c37e5a294f45.exit, label %Then.i.i.i.i53.i

Then.i.i.i.i53.i:                                 ; preds = %modification_list_block.i52.i
  %49 = add i64 %48, -1
  store i64 %49, i64* %get_rc_ptr.i96.i, align 8
  %50 = icmp eq i64 %48, -9223372036854775808
  br i1 %50, label %Then1.i.i.i.i54.i, label %Dict_rehashHelper_c214f73d498445ed2eb87695f272f331822dd96022348d4326c37e5a294f45.exit

Then1.i.i.i.i54.i:                                ; preds = %Then.i.i.i.i53.i
  tail call void @roc_dealloc(i8* %34, i32 8) #11
  br label %Dict_rehashHelper_c214f73d498445ed2eb87695f272f331822dd96022348d4326c37e5a294f45.exit

then_block9.i:                                    ; preds = %then_block.i
  br i1 %"cap > 0.i58.i.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split, label %modification_list_block.i67.i

modification_list_block.i67.i:                    ; preds = %then_block9.i
  %51 = load i64, i64* %get_rc_ptr.i65.i, align 8
  %.not.i.i66.i = icmp eq i64 %51, 0
  br i1 %.not.i.i66.i, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split, label %modification_list_block.i.i83.i

modification_list_block.i.i83.i:                  ; preds = %modification_list_block.i67.i
  %52 = add nsw i64 %51, 1
  store i64 %52, i64* %get_rc_ptr.i65.i, align 8
  %list_get_element.i.i114 = getelementptr inbounds i64, i64* %cast_basic_basic.i72.i113, i64 %joinpointarg4.i
  %list_get_load_element.i.i115 = load i64, i64* %list_get_element.i.i114, align 8
  %.not.i.i.i.i.i82.i = icmp eq i64 %52, 0
  %spec.store.select159 = select i1 %.not.i.i.i.i.i82.i, i64 0, i64 %51
  store i64 %spec.store.select159, i64* %get_rc_ptr.i65.i, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split: ; preds = %then_block9.i, %modification_list_block.i67.i
  %list_get_element.i.i114136 = getelementptr inbounds i64, i64* %cast_basic_basic.i72.i113, i64 %joinpointarg4.i
  %list_get_load_element.i.i115137 = load i64, i64* %list_get_element.i.i114136, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i: ; preds = %modification_list_block.i.i83.i, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split
  %list_get_load_element.i.i117 = phi i64 [ %list_get_load_element.i.i115, %modification_list_block.i.i83.i ], [ %list_get_load_element.i.i115137, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split ]
  br i1 %"cap > 0.i.not", label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split, label %modification_list_block.i98.i

modification_list_block.i98.i:                    ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i
  %53 = load i64, i64* %get_rc_ptr.i96.i, align 8
  %.not.i.i97.i = icmp eq i64 %53, 0
  br i1 %.not.i.i97.i, label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split, label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %modification_list_block.i98.i
  %54 = add nsw i64 %53, 1
  store i64 %54, i64* %get_rc_ptr.i96.i, align 8
  %list_get_load_element.elt.i.i119 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i.i118, i64 %list_get_load_element.i.i117, i32 0
  %list_get_load_element.unpack.i.i120 = load i64, i64* %list_get_load_element.elt.i.i119, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %54, 0
  %spec.store.select160 = select i1 %.not.i.i.i.i.i.i, i64 0, i64 %53
  store i64 %spec.store.select160, i64* %get_rc_ptr.i96.i, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i, %modification_list_block.i98.i
  %list_get_load_element.elt.i.i119139 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i.i118, i64 %list_get_load_element.i.i117, i32 0
  %list_get_load_element.unpack.i.i120140 = load i64, i64* %list_get_load_element.elt.i.i119139, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i: ; preds = %modification_list_block.i.i.i, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split
  %list_get_load_element.unpack.i.i122 = phi i64 [ %list_get_load_element.unpack.i.i120, %modification_list_block.i.i.i ], [ %list_get_load_element.unpack.i.i120140, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split ]
  call fastcc void @Dict_insertForRehash_cc195e191bb2dbefba568f76ddf0cc4b73654d7a70e7e5e04f3daf513e10582b({ %list.RocList, %list.RocList, %list.RocList, i64 }* %joinpointarg.i, i64 %list_get_load_element.unpack.i.i122, i64 %list_get_load_element.i.i117, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value13.i) #11
  br label %joinpointcont6.i

joinpointcont6.i:                                 ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i, %then_block.i
  %joinpointarg7.i = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %result_value13.i, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i ], [ %joinpointarg.i, %then_block.i ]
  %call.i.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %joinpointarg4.i, i64 1) #11
  %has_overflowed.i.i = extractvalue { i64, i1 } %call.i.i, 1
  br i1 %has_overflowed.i.i, label %throw_block.i.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i

throw_block.i.i:                                  ; preds = %joinpointcont6.i, %joinpointcont6.i.us
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i: ; preds = %joinpointcont6.i
  %operation_result.i.i = extractvalue { i64, i1 } %call.i.i, 0
  br label %joinpointcont.i

Dict_rehashHelper_c214f73d498445ed2eb87695f272f331822dd96022348d4326c37e5a294f45.exit: ; preds = %modification_list_block.i52.i, %Then.i.i.i.i53.i, %Then1.i.i.i.i54.i, %"#Attr_#dec_11.exit.i"
  %55 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value to i8*
  %56 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %joinpointarg.i.lcssa to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %55, i8* noundef nonnull align 8 dereferenceable(80) %56, i64 80, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23)
  %57 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %57, i8* noundef nonnull align 8 dereferenceable(80) %55, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind
define internal fastcc void @Dict_rehash_edf6d69235ca9a7dabdbc8c8ebf72afef4568da2e52ffda9b7112c25a3a6d52({ %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture readonly %"551", { %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value13.i = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value.i = alloca { [0 x i8], [1 x i8], i8, [0 x i8] }, align 8
  %result_value = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 0, i32 0
  %struct_field.unpack = load i8*, i8** %struct_field.elt, align 8
  %struct_field.elt11 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 0, i32 1
  %struct_field.unpack12 = load i64, i64* %struct_field.elt11, align 8
  %struct_field.elt13 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 0, i32 2
  %struct_field.unpack14 = load i64, i64* %struct_field.elt13, align 8
  %"cap > 0.i.not" = icmp eq i64 %struct_field.unpack14, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#inc_9.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %entry
  %1 = ptrtoint i8* %struct_field.unpack to i64
  %2 = shl i64 %struct_field.unpack14, 1
  %.not.i.i.i = icmp slt i64 %struct_field.unpack14, 0
  %3 = select i1 %.not.i.i.i, i64 %2, i64 %1
  %as_usize_ptr.i = inttoptr i64 %3 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %4 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i, label %"#Attr_#inc_9.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modification_list_block.i
  %5 = add nsw i64 %4, 1
  store i64 %5, i64* %get_rc_ptr.i, align 8
  br label %"#Attr_#inc_9.exit"

"#Attr_#inc_9.exit":                              ; preds = %entry, %modification_list_block.i, %Then.i.i
  %struct_field1.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 1, i32 0
  %struct_field1.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field1.elt16 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 1, i32 1
  %struct_field1.unpack17 = load i64, i64* %struct_field1.elt16, align 8
  %struct_field1.elt18 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 1, i32 2
  %struct_field1.unpack19 = load i64, i64* %struct_field1.elt18, align 8
  %struct_field2.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 2, i32 0
  %struct_field2.unpack = load i8*, i8** %struct_field2.elt, align 8
  %6 = insertvalue %list.RocList undef, i8* %struct_field2.unpack, 0
  %struct_field2.elt21 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 2, i32 1
  %struct_field2.unpack22 = load i64, i64* %struct_field2.elt21, align 8
  %7 = insertvalue %list.RocList %6, i64 %struct_field2.unpack22, 1
  %struct_field2.elt23 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 2, i32 2
  %struct_field2.unpack24 = load i64, i64* %struct_field2.elt23, align 8
  %struct_field225 = insertvalue %list.RocList %7, i64 %struct_field2.unpack24, 2
  %call.i = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %struct_field1.unpack17, i64 2) #11
  %has_overflowed.i = extractvalue { i64, i1 } %call.i, 1
  br i1 %has_overflowed.i, label %throw_block.i, label %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit

throw_block.i:                                    ; preds = %"#Attr_#inc_9.exit"
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit: ; preds = %"#Attr_#inc_9.exit"
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"551", i64 0, i32 3
  %struct_field3 = load i64, i64* %struct_field_access_record_3, align 8
  %operation_result.i = extractvalue { i64, i1 } %call.i, 0
  %.not.i.not.i.i.i = icmp eq i64 %operation_result.i, 0
  br i1 %.not.i.not.i.i.i, label %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit, label %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102

Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102: ; preds = %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit
  %8 = icmp ugt i64 %operation_result.i, 8
  %..i.i.i.i.i.i.i = select i1 %8, i64 %operation_result.i, i64 8
  %9 = shl nuw i64 %..i.i.i.i.i.i.i, 3
  %10 = or i64 %9, 8
  %11 = tail call i8* @roc_alloc(i64 %10, i32 8) #11, !noalias !423
  %12 = icmp ne i8* %11, null
  tail call void @llvm.assume(i1 %12) #11, !noalias !432
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %11 to i64*
  store i64 -9223372036854775808, i64* %14, align 8, !noalias !423
  %15 = shl nuw i64 %operation_result.i, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 0, i64 %15, i1 false) #11
  %16 = icmp ugt i64 %operation_result.i, 64
  %..i.i.i.i.i.i.i101 = select i1 %16, i64 %operation_result.i, i64 64
  %17 = add nuw i64 %..i.i.i.i.i.i.i101, 8
  %18 = tail call i8* @roc_alloc(i64 %17, i32 8) #11, !noalias !433
  %19 = icmp ne i8* %18, null
  tail call void @llvm.assume(i1 %19) #11, !noalias !442
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %18 to i64*
  store i64 -9223372036854775808, i64* %21, align 8, !noalias !433
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %20, i8 -128, i64 %operation_result.i, i1 false) #11
  br label %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit

List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit: ; preds = %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102
  %list_alloca.i.sroa.0.040.i112 = phi i8* [ %13, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102 ], [ null, %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit ]
  %list_alloca.i.sroa.6.041.i111 = phi i64 [ %..i.i.i.i.i.i.i, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102 ], [ 0, %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit ]
  %list_alloca.i.sroa.6.040.i = phi i64 [ %..i.i.i.i.i.i.i101, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102 ], [ 0, %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit ]
  %list_alloca.i.sroa.0.039.i = phi i8* [ %20, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit.i.preheader.i102 ], [ null, %Num_mul_956d22b7e49430483c781b0a5eba84c389c923f37f53d6137bbe47134fbc.exit ]
  %struct_alloca = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca.repack.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 0
  store i8* %struct_field.unpack, i8** %struct_alloca.repack.repack, align 8
  %struct_alloca.repack.repack32 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 1
  store i64 %struct_field.unpack12, i64* %struct_alloca.repack.repack32, align 8
  %struct_alloca.repack.repack34 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 2
  store i64 %struct_field.unpack14, i64* %struct_alloca.repack.repack34, align 8
  %struct_alloca.repack26.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 0
  store i8* %list_alloca.i.sroa.0.040.i112, i8** %struct_alloca.repack26.repack, align 8
  %struct_alloca.repack26.repack36 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 1
  store i64 %operation_result.i, i64* %struct_alloca.repack26.repack36, align 8
  %struct_alloca.repack26.repack38 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 2
  store i64 %list_alloca.i.sroa.6.041.i111, i64* %struct_alloca.repack26.repack38, align 8
  %struct_alloca.repack28.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 0
  store i8* %list_alloca.i.sroa.0.039.i, i8** %struct_alloca.repack28.repack, align 8
  %struct_alloca.repack28.repack40 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 1
  store i64 %operation_result.i, i64* %struct_alloca.repack28.repack40, align 8
  %struct_alloca.repack28.repack42 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 2
  store i64 %list_alloca.i.sroa.6.040.i, i64* %struct_alloca.repack28.repack42, align 8
  %struct_alloca.repack30 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3
  store i64 %struct_field3, i64* %struct_alloca.repack30, align 8
  %22 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value13.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22)
  %23 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %23)
  %tag_id_ptr.i = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 2
  %get_opaque_data_ptr5.i = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %result_value.i, i64 0, i32 1, i64 0
  %"cap > 0.i.i.not" = icmp eq i64 %struct_field2.unpack24, 0
  %24 = ptrtoint i8* %struct_field2.unpack to i64
  %25 = shl i64 %struct_field2.unpack24, 1
  %.not.i.i.i.i = icmp slt i64 %struct_field2.unpack24, 0
  %26 = select i1 %.not.i.i.i.i, i64 %25, i64 %24
  %as_usize_ptr.i.i = inttoptr i64 %26 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %"cap > 0.i58.i.not" = icmp eq i64 %struct_field1.unpack19, 0
  %27 = ptrtoint i8* %struct_field1.unpack to i64
  %28 = shl i64 %struct_field1.unpack19, 1
  %.not.i.i.i63.i = icmp slt i64 %struct_field1.unpack19, 0
  %29 = select i1 %.not.i.i.i63.i, i64 %28, i64 %27
  %as_usize_ptr.i64.i = inttoptr i64 %29 to i64*
  %get_rc_ptr.i65.i = getelementptr inbounds i64, i64* %as_usize_ptr.i64.i, i64 -1
  %cast_basic_basic.i72.i113 = bitcast i8* %struct_field1.unpack to i64*
  %30 = bitcast i64* %get_rc_ptr.i65.i to i8*
  %31 = ptrtoint i8* %struct_field.unpack to i64
  %32 = shl i64 %struct_field.unpack14, 1
  %.not.i.i.i94.i = icmp slt i64 %struct_field.unpack14, 0
  %33 = select i1 %.not.i.i.i94.i, i64 %32, i64 %31
  %as_usize_ptr.i95.i = inttoptr i64 %33 to i64*
  %get_rc_ptr.i96.i = getelementptr inbounds i64, i64* %as_usize_ptr.i95.i, i64 -1
  %cast_basic_basic.i.i118 = bitcast i8* %struct_field.unpack to { i64, {} }*
  %34 = bitcast i64* %get_rc_ptr.i96.i to i8*
  br i1 %"cap > 0.i.i.not", label %joinpointcont.i.us.preheader, label %joinpointcont.i

joinpointcont.i.us.preheader:                     ; preds = %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit
  call fastcc void @List_get_ae171b26e9af4cb819f7344b2fd94aaffbb810fcd6bdb6fa266d41c3bc2be60(%list.RocList %struct_field225, i64 0, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i) #11
  %load_tag_id.i.us152 = load i8, i8* %tag_id_ptr.i, align 1
  %eq_u8.i.us153 = icmp eq i8 %load_tag_id.i.us152, 1
  br i1 %eq_u8.i.us153, label %then_block.i.us, label %else_block.i

then_block.i.us:                                  ; preds = %joinpointcont.i.us.preheader, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us
  %joinpointarg4.i.us155 = phi i64 [ %operation_result.i.i.us, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us ], [ 0, %joinpointcont.i.us.preheader ]
  %joinpointarg.i.us154 = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %joinpointarg7.i.us, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us ], [ %struct_alloca, %joinpointcont.i.us.preheader ]
  %load_element.i.us = load i8, i8* %get_opaque_data_ptr5.i, align 8
  %gte_int.i.i.us = icmp sgt i8 %load_element.i.us, -1
  br i1 %gte_int.i.i.us, label %then_block9.i.us, label %joinpointcont6.i.us

then_block9.i.us:                                 ; preds = %then_block.i.us
  br i1 %"cap > 0.i58.i.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split, label %modification_list_block.i67.i.us

modification_list_block.i67.i.us:                 ; preds = %then_block9.i.us
  %35 = load i64, i64* %get_rc_ptr.i65.i, align 8
  %.not.i.i66.i.us = icmp eq i64 %35, 0
  br i1 %.not.i.i66.i.us, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split, label %modification_list_block.i.i83.i.us

modification_list_block.i.i83.i.us:               ; preds = %modification_list_block.i67.i.us
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %get_rc_ptr.i65.i, align 8
  %list_get_element.i.i114.us = getelementptr inbounds i64, i64* %cast_basic_basic.i72.i113, i64 %joinpointarg4.i.us155
  %list_get_load_element.i.i115.us = load i64, i64* %list_get_element.i.i114.us, align 8
  %.not.i.i.i.i.i82.i.us = icmp eq i64 %36, 0
  %spec.store.select = select i1 %.not.i.i.i.i.i82.i.us, i64 0, i64 %35
  store i64 %spec.store.select, i64* %get_rc_ptr.i65.i, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split: ; preds = %then_block9.i.us, %modification_list_block.i67.i.us
  %list_get_element.i.i114.us130 = getelementptr inbounds i64, i64* %cast_basic_basic.i72.i113, i64 %joinpointarg4.i.us155
  %list_get_load_element.i.i115.us131 = load i64, i64* %list_get_element.i.i114.us130, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us: ; preds = %modification_list_block.i.i83.i.us, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split
  %list_get_load_element.i.i117.us = phi i64 [ %list_get_load_element.i.i115.us, %modification_list_block.i.i83.i.us ], [ %list_get_load_element.i.i115.us131, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us.sink.split ]
  br i1 %"cap > 0.i.not", label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split, label %modification_list_block.i98.i.us

modification_list_block.i98.i.us:                 ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us
  %37 = load i64, i64* %get_rc_ptr.i96.i, align 8
  %.not.i.i97.i.us = icmp eq i64 %37, 0
  br i1 %.not.i.i97.i.us, label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split, label %modification_list_block.i.i.i.us

modification_list_block.i.i.i.us:                 ; preds = %modification_list_block.i98.i.us
  %38 = add nsw i64 %37, 1
  store i64 %38, i64* %get_rc_ptr.i96.i, align 8
  %list_get_load_element.elt.i.i119.us = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i.i118, i64 %list_get_load_element.i.i117.us, i32 0
  %list_get_load_element.unpack.i.i120.us = load i64, i64* %list_get_load_element.elt.i.i119.us, align 8
  %.not.i.i.i.i.i.i.us = icmp eq i64 %38, 0
  %spec.store.select158 = select i1 %.not.i.i.i.i.i.i.us, i64 0, i64 %37
  store i64 %spec.store.select158, i64* %get_rc_ptr.i96.i, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.us, %modification_list_block.i98.i.us
  %list_get_load_element.elt.i.i119.us133 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i.i118, i64 %list_get_load_element.i.i117.us, i32 0
  %list_get_load_element.unpack.i.i120.us134 = load i64, i64* %list_get_load_element.elt.i.i119.us133, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us: ; preds = %modification_list_block.i.i.i.us, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split
  %list_get_load_element.unpack.i.i122.us = phi i64 [ %list_get_load_element.unpack.i.i120.us, %modification_list_block.i.i.i.us ], [ %list_get_load_element.unpack.i.i120.us134, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us.sink.split ]
  call fastcc void @Dict_insertForRehash_cc195e191bb2dbefba568f76ddf0cc4b73654d7a70e7e5e04f3daf513e10582b({ %list.RocList, %list.RocList, %list.RocList, i64 }* %joinpointarg.i.us154, i64 %list_get_load_element.unpack.i.i122.us, i64 %list_get_load_element.i.i117.us, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value13.i) #11
  br label %joinpointcont6.i.us

joinpointcont6.i.us:                              ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us, %then_block.i.us
  %joinpointarg7.i.us = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %result_value13.i, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.us ], [ %joinpointarg.i.us154, %then_block.i.us ]
  %call.i.i.us = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %joinpointarg4.i.us155, i64 1) #11
  %has_overflowed.i.i.us = extractvalue { i64, i1 } %call.i.i.us, 1
  br i1 %has_overflowed.i.i.us, label %throw_block.i.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us: ; preds = %joinpointcont6.i.us
  %operation_result.i.i.us = extractvalue { i64, i1 } %call.i.i.us, 0
  call fastcc void @List_get_ae171b26e9af4cb819f7344b2fd94aaffbb810fcd6bdb6fa266d41c3bc2be60(%list.RocList %struct_field225, i64 %operation_result.i.i.us, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i) #11
  %load_tag_id.i.us = load i8, i8* %tag_id_ptr.i, align 1
  %eq_u8.i.us = icmp eq i8 %load_tag_id.i.us, 1
  br i1 %eq_u8.i.us, label %then_block.i.us, label %else_block.i

joinpointcont.i:                                  ; preds = %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i
  %joinpointarg.i = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %joinpointarg7.i, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i ], [ %struct_alloca, %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit ]
  %joinpointarg4.i = phi i64 [ %operation_result.i.i, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i ], [ 0, %List_repeat_dbe53a3114686b9846ce75bc979b3ce449fc0b2f417a6cab725afe82998fc7.exit ]
  %39 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i44 = icmp eq i64 %39, 0
  br i1 %.not.i.i.i44, label %"#Attr_#inc_11.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %joinpointcont.i
  %40 = add nsw i64 %39, 1
  store i64 %40, i64* %get_rc_ptr.i.i, align 8
  br label %"#Attr_#inc_11.exit.i"

"#Attr_#inc_11.exit.i":                           ; preds = %Then.i.i.i, %joinpointcont.i
  call fastcc void @List_get_ae171b26e9af4cb819f7344b2fd94aaffbb810fcd6bdb6fa266d41c3bc2be60(%list.RocList %struct_field225, i64 %joinpointarg4.i, { [0 x i8], [1 x i8], i8, [0 x i8] }* nonnull %result_value.i) #11
  %load_tag_id.i = load i8, i8* %tag_id_ptr.i, align 1
  %eq_u8.i = icmp eq i8 %load_tag_id.i, 1
  br i1 %eq_u8.i, label %then_block.i, label %else_block.i

then_block.i:                                     ; preds = %"#Attr_#inc_11.exit.i"
  %load_element.i = load i8, i8* %get_opaque_data_ptr5.i, align 8
  %gte_int.i.i = icmp sgt i8 %load_element.i, -1
  br i1 %gte_int.i.i, label %then_block9.i, label %joinpointcont6.i

else_block.i:                                     ; preds = %"#Attr_#inc_11.exit.i", %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us, %joinpointcont.i.us.preheader
  %joinpointarg.i.lcssa = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %struct_alloca, %joinpointcont.i.us.preheader ], [ %joinpointarg7.i.us, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.us ], [ %joinpointarg.i, %"#Attr_#inc_11.exit.i" ]
  br i1 %"cap > 0.i58.i.not", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i25.i

modification_list_block.i25.i:                    ; preds = %else_block.i
  %41 = load i64, i64* %get_rc_ptr.i65.i, align 8
  %.not.i.i.i.i.i = icmp eq i64 %41, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i25.i
  %42 = add i64 %41, -1
  store i64 %42, i64* %get_rc_ptr.i65.i, align 8
  %43 = icmp eq i64 %41, -9223372036854775808
  br i1 %43, label %Then1.i.i.i.i.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %30, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %modification_list_block.i25.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %else_block.i
  br i1 %"cap > 0.i.i.not", label %"#Attr_#dec_11.exit.i", label %modification_list_block.i37.i

modification_list_block.i37.i:                    ; preds = %"#Attr_#dec_10.exit.i"
  %44 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i.i36.i = icmp eq i64 %44, 0
  br i1 %.not.i.i.i.i36.i, label %"#Attr_#dec_11.exit.i", label %Then.i.i.i.i38.i

Then.i.i.i.i38.i:                                 ; preds = %modification_list_block.i37.i
  %45 = add i64 %44, -1
  store i64 %45, i64* %get_rc_ptr.i.i, align 8
  %46 = icmp eq i64 %44, -9223372036854775808
  br i1 %46, label %Then1.i.i.i.i39.i, label %"#Attr_#dec_11.exit.i"

Then1.i.i.i.i39.i:                                ; preds = %Then.i.i.i.i38.i
  %47 = bitcast i64* %get_rc_ptr.i.i to i8*
  tail call void @roc_dealloc(i8* %47, i32 8) #11
  br label %"#Attr_#dec_11.exit.i"

"#Attr_#dec_11.exit.i":                           ; preds = %modification_list_block.i37.i, %Then.i.i.i.i38.i, %Then1.i.i.i.i39.i, %"#Attr_#dec_10.exit.i"
  br i1 %"cap > 0.i.not", label %Dict_rehashHelper_414bad6c2db9d449ee4d70e6d1c06abce4b1dbf8b6b1ed5b0b56afa7df36.exit, label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %"#Attr_#dec_11.exit.i"
  %48 = load i64, i64* %get_rc_ptr.i96.i, align 8
  %.not.i.i.i.i51.i = icmp eq i64 %48, 0
  br i1 %.not.i.i.i.i51.i, label %Dict_rehashHelper_414bad6c2db9d449ee4d70e6d1c06abce4b1dbf8b6b1ed5b0b56afa7df36.exit, label %Then.i.i.i.i53.i

Then.i.i.i.i53.i:                                 ; preds = %modification_list_block.i52.i
  %49 = add i64 %48, -1
  store i64 %49, i64* %get_rc_ptr.i96.i, align 8
  %50 = icmp eq i64 %48, -9223372036854775808
  br i1 %50, label %Then1.i.i.i.i54.i, label %Dict_rehashHelper_414bad6c2db9d449ee4d70e6d1c06abce4b1dbf8b6b1ed5b0b56afa7df36.exit

Then1.i.i.i.i54.i:                                ; preds = %Then.i.i.i.i53.i
  tail call void @roc_dealloc(i8* %34, i32 8) #11
  br label %Dict_rehashHelper_414bad6c2db9d449ee4d70e6d1c06abce4b1dbf8b6b1ed5b0b56afa7df36.exit

then_block9.i:                                    ; preds = %then_block.i
  br i1 %"cap > 0.i58.i.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split, label %modification_list_block.i67.i

modification_list_block.i67.i:                    ; preds = %then_block9.i
  %51 = load i64, i64* %get_rc_ptr.i65.i, align 8
  %.not.i.i66.i = icmp eq i64 %51, 0
  br i1 %.not.i.i66.i, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split, label %modification_list_block.i.i83.i

modification_list_block.i.i83.i:                  ; preds = %modification_list_block.i67.i
  %52 = add nsw i64 %51, 1
  store i64 %52, i64* %get_rc_ptr.i65.i, align 8
  %list_get_element.i.i114 = getelementptr inbounds i64, i64* %cast_basic_basic.i72.i113, i64 %joinpointarg4.i
  %list_get_load_element.i.i115 = load i64, i64* %list_get_element.i.i114, align 8
  %.not.i.i.i.i.i82.i = icmp eq i64 %52, 0
  %spec.store.select159 = select i1 %.not.i.i.i.i.i82.i, i64 0, i64 %51
  store i64 %spec.store.select159, i64* %get_rc_ptr.i65.i, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split: ; preds = %then_block9.i, %modification_list_block.i67.i
  %list_get_element.i.i114136 = getelementptr inbounds i64, i64* %cast_basic_basic.i72.i113, i64 %joinpointarg4.i
  %list_get_load_element.i.i115137 = load i64, i64* %list_get_element.i.i114136, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i: ; preds = %modification_list_block.i.i83.i, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split
  %list_get_load_element.i.i117 = phi i64 [ %list_get_load_element.i.i115, %modification_list_block.i.i83.i ], [ %list_get_load_element.i.i115137, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i.sink.split ]
  br i1 %"cap > 0.i.not", label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split, label %modification_list_block.i98.i

modification_list_block.i98.i:                    ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i
  %53 = load i64, i64* %get_rc_ptr.i96.i, align 8
  %.not.i.i97.i = icmp eq i64 %53, 0
  br i1 %.not.i.i97.i, label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split, label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %modification_list_block.i98.i
  %54 = add nsw i64 %53, 1
  store i64 %54, i64* %get_rc_ptr.i96.i, align 8
  %list_get_load_element.elt.i.i119 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i.i118, i64 %list_get_load_element.i.i117, i32 0
  %list_get_load_element.unpack.i.i120 = load i64, i64* %list_get_load_element.elt.i.i119, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %54, 0
  %spec.store.select160 = select i1 %.not.i.i.i.i.i.i, i64 0, i64 %53
  store i64 %spec.store.select160, i64* %get_rc_ptr.i96.i, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.i, %modification_list_block.i98.i
  %list_get_load_element.elt.i.i119139 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i.i118, i64 %list_get_load_element.i.i117, i32 0
  %list_get_load_element.unpack.i.i120140 = load i64, i64* %list_get_load_element.elt.i.i119139, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i: ; preds = %modification_list_block.i.i.i, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split
  %list_get_load_element.unpack.i.i122 = phi i64 [ %list_get_load_element.unpack.i.i120, %modification_list_block.i.i.i ], [ %list_get_load_element.unpack.i.i120140, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i.sink.split ]
  call fastcc void @Dict_insertForRehash_cc195e191bb2dbefba568f76ddf0cc4b73654d7a70e7e5e04f3daf513e10582b({ %list.RocList, %list.RocList, %list.RocList, i64 }* %joinpointarg.i, i64 %list_get_load_element.unpack.i.i122, i64 %list_get_load_element.i.i117, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value13.i) #11
  br label %joinpointcont6.i

joinpointcont6.i:                                 ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i, %then_block.i
  %joinpointarg7.i = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %result_value13.i, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.i ], [ %joinpointarg.i, %then_block.i ]
  %call.i.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %joinpointarg4.i, i64 1) #11
  %has_overflowed.i.i = extractvalue { i64, i1 } %call.i.i, 1
  br i1 %has_overflowed.i.i, label %throw_block.i.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i

throw_block.i.i:                                  ; preds = %joinpointcont6.i, %joinpointcont6.i.us
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i: ; preds = %joinpointcont6.i
  %operation_result.i.i = extractvalue { i64, i1 } %call.i.i, 0
  br label %joinpointcont.i

Dict_rehashHelper_414bad6c2db9d449ee4d70e6d1c06abce4b1dbf8b6b1ed5b0b56afa7df36.exit: ; preds = %modification_list_block.i52.i, %Then.i.i.i.i53.i, %Then1.i.i.i.i54.i, %"#Attr_#dec_11.exit.i"
  %55 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value to i8*
  %56 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %joinpointarg.i.lcssa to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %55, i8* noundef nonnull align 8 dereferenceable(80) %56, i64 80, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23)
  %57 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %57, i8* noundef nonnull align 8 dereferenceable(80) %55, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind
define internal fastcc void @Arg_479_74fce1fbbfe434b55a561cfe3969ef959024ec82b29090eadd4899757629b87({ [0 x i64], [10 x i64], i8, [7 x i8] }* nocapture readonly %config, { [0 x i64], [10 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  switch i8 %load_tag_id, label %"#Attr_#dec_8.exit" [
    i8 0, label %then_block
    i8 1, label %tag_id_modify1.i
  ]

common.ret:                                       ; preds = %"#Attr_#dec_8.exit", %then_block
  %tag_alloca3.sink61 = phi { [0 x i64], [10 x i64], i8, [7 x i8] }* [ %tag_alloca3, %"#Attr_#dec_8.exit" ], [ %tag_alloca, %then_block ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_8.exit" ], [ 1, %then_block ]
  %tag_id_ptr6 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca3.sink61, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr6, align 8
  %1 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca3.sink61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(88) %1, i8* noundef nonnull align 8 dereferenceable(88) %2, i64 88, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %get_opaque_data_ptr = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1
  %3 = bitcast [10 x i64]* %get_opaque_data_ptr to i8*
  %tag_alloca = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %4 = bitcast [10 x i64]* %data_buffer to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %4, i8* noundef nonnull align 8 dereferenceable(80) %3, i64 80, i1 false)
  br label %common.ret

tag_id_modify1.i:                                 ; preds = %entry
  %field_ptr2.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1
  %5 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = bitcast %str.RocStr* %struct_field.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast [10 x i64]* %field_ptr2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8* noundef nonnull align 8 dereferenceable(24) %7, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.elt37 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  %load_str_to_stack.i.i.i.unpack38 = load i64, i64* %load_str_to_stack.i.i.i.elt37, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack38, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_5.exit.i"

modify_rc.i.i.i:                                  ; preds = %tag_id_modify1.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %8 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %9 = load i64, i64* %8, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %9, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_5.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %10 = add i64 %9, -1
  store i64 %10, i64* %8, align 8
  %11 = icmp eq i64 %9, -9223372036854775808
  br i1 %11, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_5.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %"#Attr_#dec_5.exit.i"

"#Attr_#dec_5.exit.i":                            ; preds = %modify_rc.i.i.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %tag_id_modify1.i
  %struct_field_access_record_1.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1, i64 3
  %12 = bitcast i64* %struct_field_access_record_1.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %12, i64 24, i1 false) #11
  %load_str_to_stack.i.elt42 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %load_str_to_stack.i.unpack43 = load i64, i64* %load_str_to_stack.i.elt42, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack43, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %"#Attr_#dec_5.exit.i"
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %13 = bitcast i8* %get_rc_ptr.i to i64*
  %14 = load i64, i64* %13, align 8
  %.not.i.i.i.i = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %15 = add i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_5.exit.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  br label %"#Attr_#dec_8.exit"

"#Attr_#dec_8.exit":                              ; preds = %entry, %"#Attr_#dec_4.exit"
  %tag_alloca3 = alloca { [0 x i64], [10 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Dict_insertForRehash_cc195e191bb2dbefba568f76ddf0cc4b73654d7a70e7e5e04f3daf513e10582b({ %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture readonly %"552", i64 %key, i64 %dataIndex, { %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 0, i32 0
  %struct_field.unpack = load i8*, i8** %struct_field.elt, align 8
  %struct_field.elt17 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 0, i32 1
  %struct_field.unpack18 = load i64, i64* %struct_field.elt17, align 8
  %struct_field.elt19 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 0, i32 2
  %struct_field.unpack20 = load i64, i64* %struct_field.elt19, align 8
  %struct_field1.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 1, i32 0
  %struct_field1.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field1.elt22 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 1, i32 1
  %struct_field1.unpack23 = load i64, i64* %struct_field1.elt22, align 8
  %struct_field1.elt24 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 1, i32 2
  %struct_field1.unpack25 = load i64, i64* %struct_field1.elt24, align 8
  %struct_field2.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 2, i32 0
  %struct_field2.unpack = load i8*, i8** %struct_field2.elt, align 8
  %struct_field2.elt27 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 2, i32 1
  %struct_field2.unpack28 = load i64, i64* %struct_field2.elt27, align 8
  %struct_field2.elt29 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 2, i32 2
  %struct_field2.unpack30 = load i64, i64* %struct_field2.elt29, align 8
  %"cap > 0.i.not" = icmp eq i64 %struct_field2.unpack30, 0
  %.pre198 = ptrtoint i8* %struct_field2.unpack to i64
  br i1 %"cap > 0.i.not", label %"#Attr_#inc_11.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %entry
  %1 = shl i64 %struct_field2.unpack30, 1
  %.not.i.i.i = icmp slt i64 %struct_field2.unpack30, 0
  %2 = select i1 %.not.i.i.i, i64 %1, i64 %.pre198
  %as_usize_ptr.i = inttoptr i64 %2 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %3 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i = icmp eq i64 %3, 0
  br i1 %.not.i.i, label %"#Attr_#inc_11.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modification_list_block.i
  %4 = add nsw i64 %3, 1
  store i64 %4, i64* %get_rc_ptr.i, align 8
  br label %"#Attr_#inc_11.exit"

"#Attr_#inc_11.exit":                             ; preds = %entry, %modification_list_block.i, %Then.i.i
  %.pre-phi200 = phi i64 [ %1, %modification_list_block.i ], [ %1, %Then.i.i ], [ 0, %entry ]
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"552", i64 0, i32 3
  %struct_field3 = load i64, i64* %struct_field_access_record_3, align 8
  %int_bitwise_or.i14.i.i = tail call i64 @llvm.fshl.i64(i64 %key, i64 %key, i64 32) #11
  %int_bitwise_xor.i.i.i.i = xor i64 %int_bitwise_or.i14.i.i, -1800455987208640293
  %inc_cast.i.i.i26.i.i.i = zext i64 %int_bitwise_xor.i.i.i.i to i128
  %int_bitwise_xor.i24.i.i.i = xor i64 %key, xor (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64), i64 -6884282663029611473)
  %inc_cast.i9.i.i27.i.i.i = zext i64 %int_bitwise_xor.i24.i.i.i to i128
  %call.i.i.i28.i.i.i = mul nuw i128 %inc_cast.i.i.i26.i.i.i, %inc_cast.i9.i.i27.i.i.i
  %call.i.i.i28.i.i.masked.i = and i128 %call.i.i.i28.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i33.i.i.i = lshr i128 %call.i.i.i28.i.i.i, 64
  %inc_cast.i9.i.i12.i.i.i = xor i128 %call.i.i.i28.i.i.masked.i, %int_shift_right_zf.i.i.i33.i.i.i
  %call.i.i.i13.i.i.i = mul nuw i128 %inc_cast.i9.i.i12.i.i.i, 16646288086500911315
  %call.i.i.i13.i.i.masked.i = and i128 %call.i.i.i13.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i18.i.i.i = lshr i128 %call.i.i.i13.i.i.i, 64
  %inc_cast.i9.i.i.i.i.i = xor i128 %call.i.i.i13.i.i.masked.i, %int_shift_right_zf.i.i.i18.i.i.i
  %call.i.i.i.i.i.i = mul nuw i128 %inc_cast.i9.i.i.i.i.i, zext (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64) to i128)
  %int_shift_right_zf.i.i.i.i.i.i = lshr i128 %call.i.i.i.i.i.i, 64
  %int_bitwise_xor.i.i.i.i3.i = xor i128 %int_shift_right_zf.i.i.i.i.i.i, %call.i.i.i.i.i.i
  %int_bitwise_xor.i.i.i.i.i = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i64
  %int_shift_right_zf.i.i = lshr i64 %int_bitwise_xor.i.i.i.i.i, 7
  %5 = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i8
  %inc_cast.i.i = and i8 %5, 127
  %int_shift_right_zf.i.i112 = lshr i64 %struct_field2.unpack28, 3
  %call.i.i = tail call i64 @llvm.usub.sat.i64(i64 %int_shift_right_zf.i.i112, i64 1) #11
  %.not.i.i.i92 = icmp slt i64 %struct_field2.unpack30, 0
  %6 = select i1 %.not.i.i.i92, i64 %.pre-phi200, i64 %.pre198
  %as_usize_ptr.i93 = inttoptr i64 %6 to i64*
  %get_rc_ptr.i94 = getelementptr inbounds i64, i64* %as_usize_ptr.i93, i64 -1
  %7 = bitcast i64* %get_rc_ptr.i94 to i8*
  br i1 %"cap > 0.i.not", label %joinpointcont.outer.i.us.preheader, label %joinpointcont.outer.i.preheader

joinpointcont.outer.i.us.preheader:               ; preds = %"#Attr_#inc_11.exit"
  %int_bitwise_and.i.i.i.pn.us233 = and i64 %int_shift_right_zf.i.i, %call.i.i
  %int_shift_left.i.i.i.us234 = shl nuw nsw i64 %int_bitwise_and.i.i.i.pn.us233, 3
  %list_get_element.i.i.us.us235 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %int_shift_left.i.i.i.us234
  %list_get_load_element.i.i.us.us236 = load i8, i8* %list_get_element.i.i.us.us235, align 1
  %lt_int.i.i163.us.us237 = icmp slt i8 %list_get_load_element.i.i.us.us236, 0
  br i1 %lt_int.i.i163.us.us237, label %"#Attr_#dec_11.exit", label %else_block.i.us.us

joinpointcont.outer.i.preheader:                  ; preds = %"#Attr_#inc_11.exit"
  %.pre = load i64, i64* %get_rc_ptr.i94, align 8
  br label %joinpointcont.outer.i

else_block.i.us.us:                               ; preds = %joinpointcont.outer.i.us.preheader, %else_block.i.us.us.7
  %int_shift_left.i.i.i.us240 = phi i64 [ %int_shift_left.i.i.i.us, %else_block.i.us.us.7 ], [ %int_shift_left.i.i.i.us234, %joinpointcont.outer.i.us.preheader ]
  %int_bitwise_and.i.i.i.pn.us239 = phi i64 [ %int_bitwise_and.i.i.i.pn.us, %else_block.i.us.us.7 ], [ %int_bitwise_and.i.i.i.pn.us233, %joinpointcont.outer.i.us.preheader ]
  %add_int_wrap.i5.i.i.pn.us238 = phi i64 [ %add_int_wrap.i5.i.i.us, %else_block.i.us.us.7 ], [ 1, %joinpointcont.outer.i.us.preheader ]
  %add_int_wrap.i13.i.us.us.1 = or i64 %int_shift_left.i.i.i.us240, 1
  %list_get_element.i.i.us.us.1 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.us.us.1
  %list_get_load_element.i.i.us.us.1 = load i8, i8* %list_get_element.i.i.us.us.1, align 1
  %lt_int.i.i163.us.us.1 = icmp slt i8 %list_get_load_element.i.i.us.us.1, 0
  br i1 %lt_int.i.i163.us.us.1, label %"#Attr_#dec_11.exit", label %else_block.i.us.us.1

joinpointcont.outer.i:                            ; preds = %joinpointcont.outer.i.preheader, %else_block.i.7
  %8 = phi i64 [ %30, %else_block.i.7 ], [ %.pre, %joinpointcont.outer.i.preheader ]
  %add_int_wrap.i5.i.i.pn = phi i64 [ %add_int_wrap.i5.i.i, %else_block.i.7 ], [ 1, %joinpointcont.outer.i.preheader ]
  %add_int_wrap.i.i.i.pn = phi i64 [ %add_int_wrap.i.i.i, %else_block.i.7 ], [ %int_shift_right_zf.i.i, %joinpointcont.outer.i.preheader ]
  %int_bitwise_and.i.i.i.pn = and i64 %add_int_wrap.i.i.i.pn, %call.i.i
  %int_shift_left.i.i.i = shl nuw i64 %int_bitwise_and.i.i.i.pn, 3
  %.not.i.i95 = icmp eq i64 %8, 0
  br i1 %.not.i.i95, label %modification_list_block.i.i.i.thread, label %modification_list_block.i.i.i

modification_list_block.i.i.i.thread:             ; preds = %joinpointcont.outer.i
  %list_get_element.i.i155201 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %int_shift_left.i.i.i
  %list_get_load_element.i.i156202 = load i8, i8* %list_get_element.i.i155201, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i

modification_list_block.i.i.i:                    ; preds = %joinpointcont.outer.i
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %get_rc_ptr.i94, align 8
  %list_get_element.i.i155 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %int_shift_left.i.i.i
  %list_get_load_element.i.i156 = load i8, i8* %list_get_element.i.i155, align 1
  %.not.i.i.i.i.i.i = icmp eq i64 %9, 0
  %spec.store.select = select i1 %.not.i.i.i.i.i.i, i64 0, i64 %8
  store i64 %spec.store.select, i64* %get_rc_ptr.i94, align 8
  %spec.select = select i1 %.not.i.i.i.i.i.i, i64 0, i64 %8
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i: ; preds = %modification_list_block.i.i.i, %modification_list_block.i.i.i.thread
  %list_get_load_element.i.i156204 = phi i8 [ %list_get_load_element.i.i156202, %modification_list_block.i.i.i.thread ], [ %list_get_load_element.i.i156, %modification_list_block.i.i.i ]
  %10 = phi i64 [ 0, %modification_list_block.i.i.i.thread ], [ %spec.select, %modification_list_block.i.i.i ]
  %lt_int.i.i = icmp slt i8 %list_get_load_element.i.i156204, 0
  br i1 %lt_int.i.i, label %modification_list_block.i110, label %else_block.i

else_block.i:                                     ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i
  %add_int_wrap.i13.i.1 = or i64 %int_shift_left.i.i.i, 1
  %.not.i.i95.1 = icmp eq i64 %10, 0
  br i1 %.not.i.i95.1, label %modification_list_block.i.i.i.1.thread, label %modification_list_block.i.i.i.1

modification_list_block.i.i.i.1.thread:           ; preds = %else_block.i
  %list_get_element.i.i155.1205 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.1
  %list_get_load_element.i.i156.1206 = load i8, i8* %list_get_element.i.i155.1205, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.1

modification_list_block.i110:                     ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.1, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.2, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.3, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.4, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.5, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.6, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.7
  %11 = phi i64 [ %10, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i ], [ %18, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.1 ], [ %20, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.2 ], [ %22, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.3 ], [ %24, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.4 ], [ %26, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.5 ], [ %28, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.6 ], [ %30, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.7 ]
  %add_int_wrap.i13.i.lcssa = phi i64 [ %int_shift_left.i.i.i, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i ], [ %add_int_wrap.i13.i.1, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.1 ], [ %add_int_wrap.i13.i.2, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.2 ], [ %add_int_wrap.i13.i.3, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.3 ], [ %add_int_wrap.i13.i.4, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.4 ], [ %add_int_wrap.i13.i.5, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.5 ], [ %add_int_wrap.i13.i.6, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.6 ], [ %add_int_wrap.i13.i.7, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.7 ]
  %.not.i.i.i.i = icmp eq i64 %11, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_11.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i110
  %12 = add i64 %11, -1
  store i64 %12, i64* %get_rc_ptr.i94, align 8
  %13 = icmp eq i64 %11, -9223372036854775808
  br i1 %13, label %Then1.i.i.i.i, label %"#Attr_#dec_11.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %7, i32 8) #11
  br label %"#Attr_#dec_11.exit"

"#Attr_#dec_11.exit":                             ; preds = %else_block.i.us.us.6, %else_block.i.us.us.5, %else_block.i.us.us.4, %else_block.i.us.us.3, %else_block.i.us.us.2, %else_block.i.us.us.1, %else_block.i.us.us, %else_block.i.us.us.7, %joinpointcont.outer.i.us.preheader, %modification_list_block.i110, %Then.i.i.i.i, %Then1.i.i.i.i
  %add_int_wrap.i13.i169 = phi i64 [ %add_int_wrap.i13.i.lcssa, %modification_list_block.i110 ], [ %add_int_wrap.i13.i.lcssa, %Then.i.i.i.i ], [ %add_int_wrap.i13.i.lcssa, %Then1.i.i.i.i ], [ %int_shift_left.i.i.i.us234, %joinpointcont.outer.i.us.preheader ], [ %int_shift_left.i.i.i.us, %else_block.i.us.us.7 ], [ %add_int_wrap.i13.i.us.us.1, %else_block.i.us.us ], [ %add_int_wrap.i13.i.us.us.2, %else_block.i.us.us.1 ], [ %add_int_wrap.i13.i.us.us.3, %else_block.i.us.us.2 ], [ %add_int_wrap.i13.i.us.us.4, %else_block.i.us.us.3 ], [ %add_int_wrap.i13.i.us.us.5, %else_block.i.us.us.4 ], [ %add_int_wrap.i13.i.us.us.6, %else_block.i.us.us.5 ], [ %add_int_wrap.i13.i.us.us.7, %else_block.i.us.us.6 ]
  %list_get_element.i.i158164166 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i169
  %lt_uint.i.i.i63 = icmp ult i64 %add_int_wrap.i13.i169, %struct_field1.unpack23
  br i1 %lt_uint.i.i.i63, label %then_block.i.i77, label %List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit

then_block.i.i77:                                 ; preds = %"#Attr_#dec_11.exit"
  %14 = shl nuw i64 %add_int_wrap.i13.i169, 3
  %15 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 %14
  %16 = bitcast i8* %15 to i64*
  store i64 %dataIndex, i64* %16, align 1
  br label %List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit

List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit: ; preds = %"#Attr_#dec_11.exit", %then_block.i.i77
  %lt_uint.i.i.i = icmp ult i64 %add_int_wrap.i13.i169, %struct_field2.unpack28
  br i1 %lt_uint.i.i.i, label %then_block.i.i, label %List_set_9ca3233050f725c3271cd648abe0ffe021e553b7d6365aba8acb1d255928.exit

then_block.i.i:                                   ; preds = %List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit
  store i8 %inc_cast.i.i, i8* %list_get_element.i.i158164166, align 1
  br label %List_set_9ca3233050f725c3271cd648abe0ffe021e553b7d6365aba8acb1d255928.exit

List_set_9ca3233050f725c3271cd648abe0ffe021e553b7d6365aba8acb1d255928.exit: ; preds = %List_set_eb8c1a70e55d473477ad88b1511769b087314c1c276952f4c355d394eee0a476.exit, %then_block.i.i
  %struct_alloca.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 0
  store i8* %struct_field.unpack, i8** %struct_alloca.sroa.0.0..sroa_idx, align 8
  %struct_alloca.sroa.2.0..sroa_idx50 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 1
  store i64 %struct_field.unpack18, i64* %struct_alloca.sroa.2.0..sroa_idx50, align 8
  %struct_alloca.sroa.3.0..sroa_idx51 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 0, i32 2
  store i64 %struct_field.unpack20, i64* %struct_alloca.sroa.3.0..sroa_idx51, align 8
  %struct_alloca.sroa.4.0..sroa_idx52 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 0
  store i8* %struct_field1.unpack, i8** %struct_alloca.sroa.4.0..sroa_idx52, align 8
  %struct_alloca.sroa.5.0..sroa_idx53 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack23, i64* %struct_alloca.sroa.5.0..sroa_idx53, align 8
  %struct_alloca.sroa.6.0..sroa_idx54 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 1, i32 2
  store i64 %struct_field1.unpack25, i64* %struct_alloca.sroa.6.0..sroa_idx54, align 8
  %struct_alloca.sroa.7.0..sroa_idx55 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 0
  store i8* %struct_field2.unpack, i8** %struct_alloca.sroa.7.0..sroa_idx55, align 8
  %struct_alloca.sroa.8.0..sroa_idx56 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack28, i64* %struct_alloca.sroa.8.0..sroa_idx56, align 8
  %struct_alloca.sroa.9.0..sroa_idx57 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 2, i32 2
  store i64 %struct_field2.unpack30, i64* %struct_alloca.sroa.9.0..sroa_idx57, align 8
  %struct_alloca.sroa.10.0..sroa_idx58 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %0, i64 0, i32 3
  store i64 %struct_field3, i64* %struct_alloca.sroa.10.0..sroa_idx58, align 8
  ret void

else_block.i.us.us.1:                             ; preds = %else_block.i.us.us
  %add_int_wrap.i13.i.us.us.2 = or i64 %int_shift_left.i.i.i.us240, 2
  %list_get_element.i.i.us.us.2 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.us.us.2
  %list_get_load_element.i.i.us.us.2 = load i8, i8* %list_get_element.i.i.us.us.2, align 1
  %lt_int.i.i163.us.us.2 = icmp slt i8 %list_get_load_element.i.i.us.us.2, 0
  br i1 %lt_int.i.i163.us.us.2, label %"#Attr_#dec_11.exit", label %else_block.i.us.us.2

else_block.i.us.us.2:                             ; preds = %else_block.i.us.us.1
  %add_int_wrap.i13.i.us.us.3 = or i64 %int_shift_left.i.i.i.us240, 3
  %list_get_element.i.i.us.us.3 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.us.us.3
  %list_get_load_element.i.i.us.us.3 = load i8, i8* %list_get_element.i.i.us.us.3, align 1
  %lt_int.i.i163.us.us.3 = icmp slt i8 %list_get_load_element.i.i.us.us.3, 0
  br i1 %lt_int.i.i163.us.us.3, label %"#Attr_#dec_11.exit", label %else_block.i.us.us.3

else_block.i.us.us.3:                             ; preds = %else_block.i.us.us.2
  %add_int_wrap.i13.i.us.us.4 = or i64 %int_shift_left.i.i.i.us240, 4
  %list_get_element.i.i.us.us.4 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.us.us.4
  %list_get_load_element.i.i.us.us.4 = load i8, i8* %list_get_element.i.i.us.us.4, align 1
  %lt_int.i.i163.us.us.4 = icmp slt i8 %list_get_load_element.i.i.us.us.4, 0
  br i1 %lt_int.i.i163.us.us.4, label %"#Attr_#dec_11.exit", label %else_block.i.us.us.4

else_block.i.us.us.4:                             ; preds = %else_block.i.us.us.3
  %add_int_wrap.i13.i.us.us.5 = or i64 %int_shift_left.i.i.i.us240, 5
  %list_get_element.i.i.us.us.5 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.us.us.5
  %list_get_load_element.i.i.us.us.5 = load i8, i8* %list_get_element.i.i.us.us.5, align 1
  %lt_int.i.i163.us.us.5 = icmp slt i8 %list_get_load_element.i.i.us.us.5, 0
  br i1 %lt_int.i.i163.us.us.5, label %"#Attr_#dec_11.exit", label %else_block.i.us.us.5

else_block.i.us.us.5:                             ; preds = %else_block.i.us.us.4
  %add_int_wrap.i13.i.us.us.6 = or i64 %int_shift_left.i.i.i.us240, 6
  %list_get_element.i.i.us.us.6 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.us.us.6
  %list_get_load_element.i.i.us.us.6 = load i8, i8* %list_get_element.i.i.us.us.6, align 1
  %lt_int.i.i163.us.us.6 = icmp slt i8 %list_get_load_element.i.i.us.us.6, 0
  br i1 %lt_int.i.i163.us.us.6, label %"#Attr_#dec_11.exit", label %else_block.i.us.us.6

else_block.i.us.us.6:                             ; preds = %else_block.i.us.us.5
  %add_int_wrap.i13.i.us.us.7 = or i64 %int_shift_left.i.i.i.us240, 7
  %list_get_element.i.i.us.us.7 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.us.us.7
  %list_get_load_element.i.i.us.us.7 = load i8, i8* %list_get_element.i.i.us.us.7, align 1
  %lt_int.i.i163.us.us.7 = icmp slt i8 %list_get_load_element.i.i.us.us.7, 0
  br i1 %lt_int.i.i163.us.us.7, label %"#Attr_#dec_11.exit", label %else_block.i.us.us.7

else_block.i.us.us.7:                             ; preds = %else_block.i.us.us.6
  %add_int_wrap.i.i.i.us = add i64 %int_bitwise_and.i.i.i.pn.us239, %add_int_wrap.i5.i.i.pn.us238
  %add_int_wrap.i5.i.i.us = add i64 %add_int_wrap.i5.i.i.pn.us238, 1
  %int_bitwise_and.i.i.i.pn.us = and i64 %add_int_wrap.i.i.i.us, %call.i.i
  %int_shift_left.i.i.i.us = shl nuw i64 %int_bitwise_and.i.i.i.pn.us, 3
  %list_get_element.i.i.us.us = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %int_shift_left.i.i.i.us
  %list_get_load_element.i.i.us.us = load i8, i8* %list_get_element.i.i.us.us, align 1
  %lt_int.i.i163.us.us = icmp slt i8 %list_get_load_element.i.i.us.us, 0
  br i1 %lt_int.i.i163.us.us, label %"#Attr_#dec_11.exit", label %else_block.i.us.us

modification_list_block.i.i.i.1:                  ; preds = %else_block.i
  %17 = add nsw i64 %10, 1
  store i64 %17, i64* %get_rc_ptr.i94, align 8
  %list_get_element.i.i155.1 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.1
  %list_get_load_element.i.i156.1 = load i8, i8* %list_get_element.i.i155.1, align 1
  %.not.i.i.i.i.i.i.1 = icmp eq i64 %17, 0
  %spec.store.select248 = select i1 %.not.i.i.i.i.i.i.1, i64 0, i64 %10
  store i64 %spec.store.select248, i64* %get_rc_ptr.i94, align 8
  %spec.select249 = select i1 %.not.i.i.i.i.i.i.1, i64 0, i64 %10
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.1

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.1: ; preds = %modification_list_block.i.i.i.1, %modification_list_block.i.i.i.1.thread
  %list_get_load_element.i.i156.1208 = phi i8 [ %list_get_load_element.i.i156.1206, %modification_list_block.i.i.i.1.thread ], [ %list_get_load_element.i.i156.1, %modification_list_block.i.i.i.1 ]
  %18 = phi i64 [ 0, %modification_list_block.i.i.i.1.thread ], [ %spec.select249, %modification_list_block.i.i.i.1 ]
  %lt_int.i.i.1 = icmp slt i8 %list_get_load_element.i.i156.1208, 0
  br i1 %lt_int.i.i.1, label %modification_list_block.i110, label %else_block.i.1

else_block.i.1:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.1
  %add_int_wrap.i13.i.2 = or i64 %int_shift_left.i.i.i, 2
  %.not.i.i95.2 = icmp eq i64 %18, 0
  br i1 %.not.i.i95.2, label %modification_list_block.i.i.i.2.thread, label %modification_list_block.i.i.i.2

modification_list_block.i.i.i.2.thread:           ; preds = %else_block.i.1
  %list_get_element.i.i155.2209 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.2
  %list_get_load_element.i.i156.2210 = load i8, i8* %list_get_element.i.i155.2209, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.2

modification_list_block.i.i.i.2:                  ; preds = %else_block.i.1
  %19 = add nsw i64 %18, 1
  store i64 %19, i64* %get_rc_ptr.i94, align 8
  %list_get_element.i.i155.2 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.2
  %list_get_load_element.i.i156.2 = load i8, i8* %list_get_element.i.i155.2, align 1
  %.not.i.i.i.i.i.i.2 = icmp eq i64 %19, 0
  %spec.store.select250 = select i1 %.not.i.i.i.i.i.i.2, i64 0, i64 %18
  store i64 %spec.store.select250, i64* %get_rc_ptr.i94, align 8
  %spec.select251 = select i1 %.not.i.i.i.i.i.i.2, i64 0, i64 %18
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.2

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.2: ; preds = %modification_list_block.i.i.i.2, %modification_list_block.i.i.i.2.thread
  %list_get_load_element.i.i156.2212 = phi i8 [ %list_get_load_element.i.i156.2210, %modification_list_block.i.i.i.2.thread ], [ %list_get_load_element.i.i156.2, %modification_list_block.i.i.i.2 ]
  %20 = phi i64 [ 0, %modification_list_block.i.i.i.2.thread ], [ %spec.select251, %modification_list_block.i.i.i.2 ]
  %lt_int.i.i.2 = icmp slt i8 %list_get_load_element.i.i156.2212, 0
  br i1 %lt_int.i.i.2, label %modification_list_block.i110, label %else_block.i.2

else_block.i.2:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.2
  %add_int_wrap.i13.i.3 = or i64 %int_shift_left.i.i.i, 3
  %.not.i.i95.3 = icmp eq i64 %20, 0
  br i1 %.not.i.i95.3, label %modification_list_block.i.i.i.3.thread, label %modification_list_block.i.i.i.3

modification_list_block.i.i.i.3.thread:           ; preds = %else_block.i.2
  %list_get_element.i.i155.3213 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.3
  %list_get_load_element.i.i156.3214 = load i8, i8* %list_get_element.i.i155.3213, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.3

modification_list_block.i.i.i.3:                  ; preds = %else_block.i.2
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %get_rc_ptr.i94, align 8
  %list_get_element.i.i155.3 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.3
  %list_get_load_element.i.i156.3 = load i8, i8* %list_get_element.i.i155.3, align 1
  %.not.i.i.i.i.i.i.3 = icmp eq i64 %21, 0
  %spec.store.select252 = select i1 %.not.i.i.i.i.i.i.3, i64 0, i64 %20
  store i64 %spec.store.select252, i64* %get_rc_ptr.i94, align 8
  %spec.select253 = select i1 %.not.i.i.i.i.i.i.3, i64 0, i64 %20
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.3

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.3: ; preds = %modification_list_block.i.i.i.3, %modification_list_block.i.i.i.3.thread
  %list_get_load_element.i.i156.3216 = phi i8 [ %list_get_load_element.i.i156.3214, %modification_list_block.i.i.i.3.thread ], [ %list_get_load_element.i.i156.3, %modification_list_block.i.i.i.3 ]
  %22 = phi i64 [ 0, %modification_list_block.i.i.i.3.thread ], [ %spec.select253, %modification_list_block.i.i.i.3 ]
  %lt_int.i.i.3 = icmp slt i8 %list_get_load_element.i.i156.3216, 0
  br i1 %lt_int.i.i.3, label %modification_list_block.i110, label %else_block.i.3

else_block.i.3:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.3
  %add_int_wrap.i13.i.4 = or i64 %int_shift_left.i.i.i, 4
  %.not.i.i95.4 = icmp eq i64 %22, 0
  br i1 %.not.i.i95.4, label %modification_list_block.i.i.i.4.thread, label %modification_list_block.i.i.i.4

modification_list_block.i.i.i.4.thread:           ; preds = %else_block.i.3
  %list_get_element.i.i155.4217 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.4
  %list_get_load_element.i.i156.4218 = load i8, i8* %list_get_element.i.i155.4217, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.4

modification_list_block.i.i.i.4:                  ; preds = %else_block.i.3
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %get_rc_ptr.i94, align 8
  %list_get_element.i.i155.4 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.4
  %list_get_load_element.i.i156.4 = load i8, i8* %list_get_element.i.i155.4, align 1
  %.not.i.i.i.i.i.i.4 = icmp eq i64 %23, 0
  %spec.store.select254 = select i1 %.not.i.i.i.i.i.i.4, i64 0, i64 %22
  store i64 %spec.store.select254, i64* %get_rc_ptr.i94, align 8
  %spec.select255 = select i1 %.not.i.i.i.i.i.i.4, i64 0, i64 %22
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.4

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.4: ; preds = %modification_list_block.i.i.i.4, %modification_list_block.i.i.i.4.thread
  %list_get_load_element.i.i156.4220 = phi i8 [ %list_get_load_element.i.i156.4218, %modification_list_block.i.i.i.4.thread ], [ %list_get_load_element.i.i156.4, %modification_list_block.i.i.i.4 ]
  %24 = phi i64 [ 0, %modification_list_block.i.i.i.4.thread ], [ %spec.select255, %modification_list_block.i.i.i.4 ]
  %lt_int.i.i.4 = icmp slt i8 %list_get_load_element.i.i156.4220, 0
  br i1 %lt_int.i.i.4, label %modification_list_block.i110, label %else_block.i.4

else_block.i.4:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.4
  %add_int_wrap.i13.i.5 = or i64 %int_shift_left.i.i.i, 5
  %.not.i.i95.5 = icmp eq i64 %24, 0
  br i1 %.not.i.i95.5, label %modification_list_block.i.i.i.5.thread, label %modification_list_block.i.i.i.5

modification_list_block.i.i.i.5.thread:           ; preds = %else_block.i.4
  %list_get_element.i.i155.5221 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.5
  %list_get_load_element.i.i156.5222 = load i8, i8* %list_get_element.i.i155.5221, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.5

modification_list_block.i.i.i.5:                  ; preds = %else_block.i.4
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %get_rc_ptr.i94, align 8
  %list_get_element.i.i155.5 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.5
  %list_get_load_element.i.i156.5 = load i8, i8* %list_get_element.i.i155.5, align 1
  %.not.i.i.i.i.i.i.5 = icmp eq i64 %25, 0
  %spec.store.select256 = select i1 %.not.i.i.i.i.i.i.5, i64 0, i64 %24
  store i64 %spec.store.select256, i64* %get_rc_ptr.i94, align 8
  %spec.select257 = select i1 %.not.i.i.i.i.i.i.5, i64 0, i64 %24
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.5

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.5: ; preds = %modification_list_block.i.i.i.5, %modification_list_block.i.i.i.5.thread
  %list_get_load_element.i.i156.5224 = phi i8 [ %list_get_load_element.i.i156.5222, %modification_list_block.i.i.i.5.thread ], [ %list_get_load_element.i.i156.5, %modification_list_block.i.i.i.5 ]
  %26 = phi i64 [ 0, %modification_list_block.i.i.i.5.thread ], [ %spec.select257, %modification_list_block.i.i.i.5 ]
  %lt_int.i.i.5 = icmp slt i8 %list_get_load_element.i.i156.5224, 0
  br i1 %lt_int.i.i.5, label %modification_list_block.i110, label %else_block.i.5

else_block.i.5:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.5
  %add_int_wrap.i13.i.6 = or i64 %int_shift_left.i.i.i, 6
  %.not.i.i95.6 = icmp eq i64 %26, 0
  br i1 %.not.i.i95.6, label %modification_list_block.i.i.i.6.thread, label %modification_list_block.i.i.i.6

modification_list_block.i.i.i.6.thread:           ; preds = %else_block.i.5
  %list_get_element.i.i155.6225 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.6
  %list_get_load_element.i.i156.6226 = load i8, i8* %list_get_element.i.i155.6225, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.6

modification_list_block.i.i.i.6:                  ; preds = %else_block.i.5
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* %get_rc_ptr.i94, align 8
  %list_get_element.i.i155.6 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.6
  %list_get_load_element.i.i156.6 = load i8, i8* %list_get_element.i.i155.6, align 1
  %.not.i.i.i.i.i.i.6 = icmp eq i64 %27, 0
  %spec.store.select258 = select i1 %.not.i.i.i.i.i.i.6, i64 0, i64 %26
  store i64 %spec.store.select258, i64* %get_rc_ptr.i94, align 8
  %spec.select259 = select i1 %.not.i.i.i.i.i.i.6, i64 0, i64 %26
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.6

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.6: ; preds = %modification_list_block.i.i.i.6, %modification_list_block.i.i.i.6.thread
  %list_get_load_element.i.i156.6228 = phi i8 [ %list_get_load_element.i.i156.6226, %modification_list_block.i.i.i.6.thread ], [ %list_get_load_element.i.i156.6, %modification_list_block.i.i.i.6 ]
  %28 = phi i64 [ 0, %modification_list_block.i.i.i.6.thread ], [ %spec.select259, %modification_list_block.i.i.i.6 ]
  %lt_int.i.i.6 = icmp slt i8 %list_get_load_element.i.i156.6228, 0
  br i1 %lt_int.i.i.6, label %modification_list_block.i110, label %else_block.i.6

else_block.i.6:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.6
  %add_int_wrap.i13.i.7 = or i64 %int_shift_left.i.i.i, 7
  %.not.i.i95.7 = icmp eq i64 %28, 0
  br i1 %.not.i.i95.7, label %modification_list_block.i.i.i.7.thread, label %modification_list_block.i.i.i.7

modification_list_block.i.i.i.7.thread:           ; preds = %else_block.i.6
  %list_get_element.i.i155.7229 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.7
  %list_get_load_element.i.i156.7230 = load i8, i8* %list_get_element.i.i155.7229, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.7

modification_list_block.i.i.i.7:                  ; preds = %else_block.i.6
  %29 = add nsw i64 %28, 1
  store i64 %29, i64* %get_rc_ptr.i94, align 8
  %list_get_element.i.i155.7 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 %add_int_wrap.i13.i.7
  %list_get_load_element.i.i156.7 = load i8, i8* %list_get_element.i.i155.7, align 1
  %.not.i.i.i.i.i.i.7 = icmp eq i64 %29, 0
  %spec.store.select260 = select i1 %.not.i.i.i.i.i.i.7, i64 0, i64 %28
  store i64 %spec.store.select260, i64* %get_rc_ptr.i94, align 8
  %spec.select261 = select i1 %.not.i.i.i.i.i.i.7, i64 0, i64 %28
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.7

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.7: ; preds = %modification_list_block.i.i.i.7, %modification_list_block.i.i.i.7.thread
  %list_get_load_element.i.i156.7232 = phi i8 [ %list_get_load_element.i.i156.7230, %modification_list_block.i.i.i.7.thread ], [ %list_get_load_element.i.i156.7, %modification_list_block.i.i.i.7 ]
  %30 = phi i64 [ 0, %modification_list_block.i.i.i.7.thread ], [ %spec.select261, %modification_list_block.i.i.i.7 ]
  %lt_int.i.i.7 = icmp slt i8 %list_get_load_element.i.i156.7232, 0
  br i1 %lt_int.i.i.7, label %modification_list_block.i110, label %else_block.i.7

else_block.i.7:                                   ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit.i.7
  %add_int_wrap.i.i.i = add i64 %int_bitwise_and.i.i.i.pn, %add_int_wrap.i5.i.i.pn
  %add_int_wrap.i5.i.i = add i64 %add_int_wrap.i5.i.i.pn, 1
  br label %joinpointcont.outer.i
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn
define internal fastcc void @Result_map_90b3fe129c388e5d6dcedb8e3da106e44c6f17686c9c54922c20c8b7ff65b0({ [0 x i64], [3 x i64], i8, [7 x i8] }* nocapture readonly %result, i64 %transform, { [0 x i64], [4 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #13 {
entry:
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %else_block, %then_block
  %tag_alloca8.sink22 = phi { [0 x i64], [4 x i64], i8, [7 x i8] }* [ %tag_alloca8, %else_block ], [ %tag_alloca, %then_block ]
  %.sink = phi i8 [ 0, %else_block ], [ 1, %then_block ]
  %tag_id_ptr11 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca8.sink22, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr11, align 8
  %1 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca8.sink22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %1, i8* noundef nonnull align 8 dereferenceable(40) %2, i64 40, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_element.sroa.0.0..sroa_cast = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result to i8**
  %load_element.sroa.0.0.copyload = load i8*, i8** %load_element.sroa.0.0..sroa_cast, align 8
  %load_element.sroa.2.0..sroa_idx19 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element.sroa.2.0.copyload = load i64, i64* %load_element.sroa.2.0..sroa_idx19, align 8
  %load_element.sroa.3.0..sroa_idx20 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.sroa.3.0.copyload = load i64, i64* %load_element.sroa.3.0..sroa_idx20, align 8
  %tag_alloca = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %.repack = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 0
  store i64 %transform, i64* %.repack, align 8
  %.repack12 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  %.repack14 = bitcast i64* %.repack12 to i8**
  store i8* %load_element.sroa.0.0.copyload, i8** %.repack14, align 8
  %3 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_element.sroa.2.0.copyload, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 3
  store i64 %load_element.sroa.3.0.copyload, i64* %4, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %tag_alloca8 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Str_fromUtf8_698af71e682dce72e1b119d817a61329283ecf2354d63fc9f9be62aa47c3(%list.RocList %bytes, { [0 x i64], [3 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %load_decode_from_utf8_result.i = alloca { i64, %str.RocStr, i1, i8 }, align 8
  %list_alloca.i = alloca %list.RocList, align 8
  %struct_field5 = alloca %str.RocStr, align 8
  %list_len.i = extractvalue %list.RocList %bytes, 1
  %1 = bitcast { i64, %str.RocStr, i1, i8 }* %load_decode_from_utf8_result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1)
  %2 = bitcast %list.RocList* %list_alloca.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  %list_alloca.repack.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i, i64 0, i32 0
  %"#arg1.elt.i" = extractvalue %list.RocList %bytes, 0
  store i8* %"#arg1.elt.i", i8** %list_alloca.repack.i, align 8
  %list_alloca.repack1.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i, i64 0, i32 1
  store i64 %list_len.i, i64* %list_alloca.repack1.i, align 8
  %list_alloca.repack3.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i, i64 0, i32 2
  %"#arg1.elt4.i" = extractvalue %list.RocList %bytes, 2
  store i64 %"#arg1.elt4.i", i64* %list_alloca.repack3.i, align 8
  %load_decode_from_utf8_result5.i = bitcast { i64, %str.RocStr, i1, i8 }* %load_decode_from_utf8_result.i to %str.FromUtf8Result*
  call fastcc void @roc_builtins.str.from_utf8_range(%str.FromUtf8Result* nocapture nonnull %load_decode_from_utf8_result5.i, %list.RocList* nocapture nonnull readonly %list_alloca.i, i64 %list_len.i) #11
  %result_value.sroa.0.0..sroa_idx = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, { i64, %str.RocStr, i1, i8 }* %load_decode_from_utf8_result.i, i64 0, i32 0
  %result_value.sroa.0.0.copyload = load i64, i64* %result_value.sroa.0.0..sroa_idx, align 8
  %result_value.sroa.2.0..sroa_idx29 = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, { i64, %str.RocStr, i1, i8 }* %load_decode_from_utf8_result.i, i64 0, i32 1, i32 0
  %result_value.sroa.2.0.copyload = load i8*, i8** %result_value.sroa.2.0..sroa_idx29, align 8
  %result_value.sroa.4.0..sroa_idx30 = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, { i64, %str.RocStr, i1, i8 }* %load_decode_from_utf8_result.i, i64 0, i32 1, i32 1
  %result_value.sroa.4.0.copyload = load i64, i64* %result_value.sroa.4.0..sroa_idx30, align 8
  %result_value.sroa.5.0..sroa_idx32 = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, { i64, %str.RocStr, i1, i8 }* %load_decode_from_utf8_result.i, i64 0, i32 1, i32 2
  %result_value.sroa.5.0.copyload = load i64, i64* %result_value.sroa.5.0..sroa_idx32, align 8
  %result_value.sroa.6.0..sroa_idx34 = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, { i64, %str.RocStr, i1, i8 }* %load_decode_from_utf8_result.i, i64 0, i32 2
  %result_value.sroa.6.0.copyload = load i1, i1* %result_value.sroa.6.0..sroa_idx34, align 8
  %result_value.sroa.7.0..sroa_idx = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, { i64, %str.RocStr, i1, i8 }* %load_decode_from_utf8_result.i, i64 0, i32 3
  %result_value.sroa.7.0.copyload = load i8, i8* %result_value.sroa.7.0..sroa_idx, align 1
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2)
  br i1 %result_value.sroa.6.0.copyload, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_4.exit", %then_block
  %tag_alloca9.sink36 = phi { [0 x i64], [3 x i64], i8, [7 x i8] }* [ %tag_alloca9, %"#Attr_#dec_4.exit" ], [ %tag_alloca, %then_block ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_4.exit" ], [ 1, %then_block ]
  %tag_id_ptr12 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink36, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr12, align 8
  %3 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %0 to i8*
  %4 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9.sink36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3, i8* noundef nonnull align 8 dereferenceable(32) %4, i64 32, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %tag_alloca = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %.repack = bitcast [3 x i64]* %data_buffer to i8**
  store i8* %result_value.sroa.2.0.copyload, i8** %.repack, align 8
  %5 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  store i64 %result_value.sroa.4.0.copyload, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %result_value.sroa.5.0.copyload, i64* %6, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %result_value.sroa.2.8..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field5, i64 0, i32 0
  store i8* %result_value.sroa.2.0.copyload, i8** %result_value.sroa.2.8..sroa_idx, align 8
  %result_value.sroa.4.8..sroa_idx31 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field5, i64 0, i32 1
  store i64 %result_value.sroa.4.0.copyload, i64* %result_value.sroa.4.8..sroa_idx31, align 8
  %result_value.sroa.5.8..sroa_idx33 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field5, i64 0, i32 2
  store i64 %result_value.sroa.5.0.copyload, i64* %result_value.sroa.5.8..sroa_idx33, align 8
  %is_big_str.i = icmp sgt i64 %result_value.sroa.5.0.copyload, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %else_block
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field5) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %7 = bitcast i8* %get_rc_ptr.i to i64*
  %8 = load i64, i64* %7, align 8
  %.not.i.i.i.i = icmp eq i64 %8, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %9 = add i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %8, -9223372036854775808
  br i1 %10, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %else_block
  %insert_record_field6 = insertvalue { i64, i8 } zeroinitializer, i64 %result_value.sroa.0.0.copyload, 0
  %insert_record_field7 = insertvalue { i64, i8 } %insert_record_field6, i8 %result_value.sroa.7.0.copyload, 1
  %tag_alloca9 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %data_buffer10 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 1
  %11 = bitcast [3 x i64]* %data_buffer10 to { i64, i8 }*
  store { i64, i8 } %insert_record_field7, { i64, i8 }* %11, align 8
  br label %common.ret
}

; Function Attrs: noreturn nounwind
define internal fastcc void @_80_7e13231c7e5113e2af88c7f84a596e9bb0c45bbe895fd55aa638a82cdd5bce({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nocapture readonly %"82") unnamed_addr #14 {
entry:
  %const_str_store = alloca %str.RocStr, align 8
  tail call fastcc void @"#Attr_#dec_16"({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"82")
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store.repack, align 8
  %const_str_store.repack1 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 73, i64* %const_str_store.repack1, align 8
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 73, i64* %const_str_store.repack2, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 0)
  unreachable
}

; Function Attrs: nounwind
define internal fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nocapture readonly %"102", i8 %char, { i64, %list.RocList, %list.RocList }* nocapture %0) unnamed_addr #11 {
entry:
  %element_to_pass_as_opaque.i.i812 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %element_to_pass_as_opaque.i.i750 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %element_to_pass_as_opaque.i.i688 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %element_to_pass_as_opaque.i.i626 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %element_to_pass_as_opaque.i.i564 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %element_to_pass_as_opaque.i.i502 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %element_to_pass_as_opaque.i.i440 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %element_to_pass_as_opaque.i.i410 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %result_value2.i = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %result_value.i = alloca { [0 x i64], [2 x i64], i8, [7 x i8] }, align 8
  %const_str_store114 = alloca %str.RocStr, align 8
  %result_value113 = alloca %str.RocStr, align 8
  %result_value112 = alloca %str.RocStr, align 8
  %const_str_store111 = alloca %str.RocStr, align 8
  %const_str_store110 = alloca %str.RocStr, align 8
  %load_element109 = alloca %str.RocStr, align 8
  %result_value99 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %result_value = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field_access_record_0 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %"102", i64 0, i32 0
  %struct_field = load i64, i64* %struct_field_access_record_0, align 8
  %struct_field1.elt = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %"102", i64 0, i32 1, i32 0
  %struct_field1.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field1.elt115 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %"102", i64 0, i32 1, i32 1
  %struct_field1.unpack116 = load i64, i64* %struct_field1.elt115, align 8
  %struct_field1.elt117 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %"102", i64 0, i32 1, i32 2
  %struct_field1.unpack118 = load i64, i64* %struct_field1.elt117, align 8
  %struct_field2.elt = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %"102", i64 0, i32 2, i32 0
  %struct_field2.unpack = load i8*, i8** %struct_field2.elt, align 8
  %struct_field2.elt120 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %"102", i64 0, i32 2, i32 1
  %struct_field2.unpack121 = load i64, i64* %struct_field2.elt120, align 8
  %struct_field2.elt122 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %"102", i64 0, i32 2, i32 2
  %struct_field2.unpack123 = load i64, i64* %struct_field2.elt122, align 8
  switch i8 %char, label %default [
    i8 62, label %branch62
    i8 60, label %branch60
    i8 43, label %branch43
    i8 45, label %branch45
    i8 46, label %branch46
    i8 44, label %branch44
    i8 91, label %branch91
    i8 93, label %branch93
    i8 32, label %branch32
    i8 10, label %branch10
    i8 9, label %branch9
  ]

default:                                          ; preds = %entry
  %"cap > 0.i.not" = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#dec_12.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %default
  %1 = ptrtoint i8* %struct_field1.unpack to i64
  %2 = shl i64 %struct_field1.unpack118, 1
  %.not.i.i.i = icmp slt i64 %struct_field1.unpack118, 0
  %3 = select i1 %.not.i.i.i, i64 %2, i64 %1
  %as_usize_ptr.i = inttoptr i64 %3 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %4 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_12.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %5 = add i64 %4, -1
  store i64 %5, i64* %get_rc_ptr.i, align 8
  %6 = icmp eq i64 %4, -9223372036854775808
  br i1 %6, label %Then1.i.i.i.i, label %"#Attr_#dec_12.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %7 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %7, i32 8) #11
  br label %"#Attr_#dec_12.exit"

"#Attr_#dec_12.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %default
  %"cap > 0.i274.not" = icmp eq i64 %struct_field2.unpack123, 0
  br i1 %"cap > 0.i274.not", label %"#Attr_#dec_10.exit", label %modification_list_block.i283

modification_list_block.i283:                     ; preds = %"#Attr_#dec_12.exit"
  %8 = ptrtoint i8* %struct_field2.unpack to i64
  %9 = shl i64 %struct_field2.unpack123, 1
  %.not.i.i.i279 = icmp slt i64 %struct_field2.unpack123, 0
  %10 = select i1 %.not.i.i.i279, i64 %9, i64 %8
  %as_usize_ptr.i280 = inttoptr i64 %10 to i64*
  %get_rc_ptr.i281 = getelementptr inbounds i64, i64* %as_usize_ptr.i280, i64 -1
  %11 = load i64, i64* %get_rc_ptr.i281, align 8
  %.not.i.i.i.i282 = icmp eq i64 %11, 0
  br i1 %.not.i.i.i.i282, label %"#Attr_#dec_10.exit", label %Then.i.i.i.i284

Then.i.i.i.i284:                                  ; preds = %modification_list_block.i283
  %12 = add i64 %11, -1
  store i64 %12, i64* %get_rc_ptr.i281, align 8
  %13 = icmp eq i64 %11, -9223372036854775808
  br i1 %13, label %Then1.i.i.i.i285, label %"#Attr_#dec_10.exit"

Then1.i.i.i.i285:                                 ; preds = %Then.i.i.i.i284
  %14 = bitcast i64* %get_rc_ptr.i281 to i8*
  tail call void @roc_dealloc(i8* %14, i32 8) #11
  br label %"#Attr_#dec_10.exit"

"#Attr_#dec_10.exit":                             ; preds = %modification_list_block.i283, %Then.i.i.i.i284, %Then1.i.i.i.i285, %"#Attr_#dec_12.exit"
  %call_builtin = tail call fastcc i8* @roc_builtins.utils.allocate_with_refcount(i64 1)
  store i8 %char, i8* %call_builtin, align 1
  %insert_record_field96 = insertvalue %list.RocList zeroinitializer, i8* %call_builtin, 0
  %insert_record_field97 = insertvalue %list.RocList %insert_record_field96, i64 1, 1
  %insert_record_field98 = insertvalue %list.RocList %insert_record_field97, i64 1, 2
  call fastcc void @Str_fromUtf8_698af71e682dce72e1b119d817a61329283ecf2354d63fc9f9be62aa47c3(%list.RocList %insert_record_field98, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value99)
  %tag_id_ptr100 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value99, i64 0, i32 2
  %load_tag_id101 = load i8, i8* %tag_id_ptr100, align 8
  %eq_u8102 = icmp eq i8 %load_tag_id101, 1
  br i1 %eq_u8102, label %then_block104, label %else_block105

common.ret:                                       ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342, %branch9, %branch10, %branch32, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit
  %struct_alloca83.sink963 = phi { i64, %list.RocList, %list.RocList }* [ %struct_alloca83, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342 ], [ %struct_alloca95, %branch9 ], [ %struct_alloca91, %branch10 ], [ %struct_alloca87, %branch32 ], [ %struct_alloca66, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320 ], [ %struct_alloca55, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311 ], [ %struct_alloca45, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306 ], [ %struct_alloca35, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301 ], [ %struct_alloca25, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296 ], [ %struct_alloca15, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291 ], [ %struct_alloca, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %list_alloca.i.sroa.0.040.i867.sink = phi i8* [ %list_alloca.i.sroa.0.040.i867, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342 ], [ %struct_field1.unpack, %branch9 ], [ %struct_field1.unpack, %branch10 ], [ %struct_field1.unpack, %branch32 ], [ %list_alloca.i.sroa.0.040.i805, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320 ], [ %list_alloca.i.sroa.0.040.i743, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311 ], [ %list_alloca.i.sroa.0.040.i681, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306 ], [ %list_alloca.i.sroa.0.040.i619, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301 ], [ %list_alloca.i.sroa.0.040.i557, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296 ], [ %list_alloca.i.sroa.0.040.i495, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291 ], [ %list_alloca.i.sroa.0.040.i, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %.sink = phi i64 [ %492, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342 ], [ %struct_field1.unpack116, %branch9 ], [ %struct_field1.unpack116, %branch10 ], [ %struct_field1.unpack116, %branch32 ], [ %381, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320 ], [ %328, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311 ], [ %276, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306 ], [ %224, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301 ], [ %172, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296 ], [ %120, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291 ], [ %68, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %list_alloca.i.sroa.6.038.i868.sink = phi i64 [ %list_alloca.i.sroa.6.038.i868, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342 ], [ %struct_field1.unpack118, %branch9 ], [ %struct_field1.unpack118, %branch10 ], [ %struct_field1.unpack118, %branch32 ], [ %list_alloca.i.sroa.6.038.i806, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320 ], [ %list_alloca.i.sroa.6.038.i744, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311 ], [ %list_alloca.i.sroa.6.038.i682, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306 ], [ %list_alloca.i.sroa.6.038.i620, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301 ], [ %list_alloca.i.sroa.6.038.i558, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296 ], [ %list_alloca.i.sroa.6.038.i496, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291 ], [ %list_alloca.i.sroa.6.038.i, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %load_element.unpack162.unpack.sink = phi i8* [ %load_element.unpack162.unpack, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342 ], [ %struct_field2.unpack, %branch9 ], [ %struct_field2.unpack, %branch10 ], [ %struct_field2.unpack, %branch32 ], [ %list_alloca.i.i.sroa.0.0936, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320 ], [ %struct_field2.unpack, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311 ], [ %struct_field2.unpack, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306 ], [ %struct_field2.unpack, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301 ], [ %struct_field2.unpack, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296 ], [ %struct_field2.unpack, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291 ], [ %struct_field2.unpack, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %load_element.unpack162.unpack165.sink = phi i64 [ %load_element.unpack162.unpack165, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342 ], [ %struct_field2.unpack121, %branch9 ], [ %struct_field2.unpack121, %branch10 ], [ %struct_field2.unpack121, %branch32 ], [ %383, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320 ], [ %struct_field2.unpack121, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311 ], [ %struct_field2.unpack121, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306 ], [ %struct_field2.unpack121, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301 ], [ %struct_field2.unpack121, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296 ], [ %struct_field2.unpack121, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291 ], [ %struct_field2.unpack121, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %load_element.unpack162.unpack167.sink = phi i64 [ %load_element.unpack162.unpack167, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342 ], [ %struct_field2.unpack123, %branch9 ], [ %struct_field2.unpack123, %branch10 ], [ %struct_field2.unpack123, %branch32 ], [ %list_alloca.i.i.sroa.6.0934, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320 ], [ %struct_field2.unpack123, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311 ], [ %struct_field2.unpack123, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306 ], [ %struct_field2.unpack123, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301 ], [ %struct_field2.unpack123, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296 ], [ %struct_field2.unpack123, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291 ], [ %struct_field2.unpack123, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit ]
  %struct_alloca83.repack169.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca83.sink963, i64 0, i32 1, i32 0
  store i8* %list_alloca.i.sroa.0.040.i867.sink, i8** %struct_alloca83.repack169.repack, align 8
  %struct_alloca83.repack169.repack173 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca83.sink963, i64 0, i32 1, i32 1
  store i64 %.sink, i64* %struct_alloca83.repack169.repack173, align 8
  %struct_alloca83.repack169.repack175 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca83.sink963, i64 0, i32 1, i32 2
  store i64 %list_alloca.i.sroa.6.038.i868.sink, i64* %struct_alloca83.repack169.repack175, align 8
  %struct_alloca83.repack171.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca83.sink963, i64 0, i32 2, i32 0
  store i8* %load_element.unpack162.unpack.sink, i8** %struct_alloca83.repack171.repack, align 8
  %struct_alloca83.repack171.repack177 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca83.sink963, i64 0, i32 2, i32 1
  store i64 %load_element.unpack162.unpack165.sink, i64* %struct_alloca83.repack171.repack177, align 8
  %struct_alloca83.repack171.repack179 = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca83.sink963, i64 0, i32 2, i32 2
  store i64 %load_element.unpack162.unpack167.sink, i64* %struct_alloca83.repack171.repack179, align 8
  %15 = bitcast { i64, %list.RocList, %list.RocList }* %0 to i8*
  %16 = bitcast { i64, %list.RocList, %list.RocList }* %struct_alloca83.sink963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %15, i8* noundef nonnull align 8 dereferenceable(56) %16, i64 56, i1 false)
  ret void

branch62:                                         ; preds = %entry
  %tag_alloca = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 5, i8* %tag_id_ptr, align 8
  %.not.i.i.i.i.i.i = icmp slt i64 %struct_field1.unpack118, 0
  %17 = select i1 %.not.i.i.i.i.i.i, i64 %struct_field1.unpack116, i64 %struct_field1.unpack118
  %18 = icmp ne i64 %17, 0
  %19 = or i1 %.not.i.i.i.i.i.i, %18
  br i1 %19, label %list.RocList.isUnique.exit.i.i.i, label %BoolAndTrue.i.i.i

list.RocList.isUnique.exit.i.i.i:                 ; preds = %branch62
  %20 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !443
  %phi.cmp.i.i.i.i = icmp eq i64 %22, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i, label %BoolAndTrue.i.i.i, label %list.RocList.isUnique.exit.i.i.i.thread.i

list.RocList.isUnique.exit.i.i.i.thread.i:        ; preds = %list.RocList.isUnique.exit.i.i.i
  %.pre-phi.i.i27.i = add nuw i64 %struct_field1.unpack116, 1
  br label %OptionalEndIf.i.i.i.i.i432

BoolAndTrue.i.i.i:                                ; preds = %list.RocList.isUnique.exit.i.i.i, %branch62
  %.not.i.i.not.i = icmp ugt i64 %17, %struct_field1.unpack116
  br i1 %.not.i.i.not.i, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i, label %Else.i.i.i412

Else.i.i.i412:                                    ; preds = %BoolAndTrue.i.i.i
  %.pre-phi.i.i.i = add nuw i64 %struct_field1.unpack116, 1
  %.not.i1.i.i.i411 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i1.i.i.i411, label %OptionalEndIf.i.i.i.i, label %OptionalThen.i.i.i.i413

OptionalThen.i.i.i.i413:                          ; preds = %Else.i.i.i412
  br i1 %19, label %list.RocList.isUnique.exit.i.i.i.i416, label %Then.i.i.i.i417

list.RocList.isUnique.exit.i.i.i.i416:            ; preds = %OptionalThen.i.i.i.i413
  %.phi.trans.insert.i = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %.phi.trans.insert46.i = bitcast i8* %.phi.trans.insert.i to i64*
  %.pre.i = load i64, i64* %.phi.trans.insert46.i, align 8, !noalias !446
  %phi.cmp.i.i.i.i.i414 = icmp eq i64 %.pre.i, -9223372036854775808
  %23 = xor i1 %.not.i.i.i.i.i.i, true
  %or.cond.i.i.i.i415 = select i1 %phi.cmp.i.i.i.i.i414, i1 %23, i1 false
  br i1 %or.cond.i.i.i.i415, label %Then.i.i.i.i417, label %OptionalEndIf.i.i.i.i.i432

Then.i.i.i.i417:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i416, %OptionalThen.i.i.i.i413
  %.not21.i.i.i.not.i = icmp ugt i64 %struct_field1.unpack118, %struct_field1.unpack116
  br i1 %.not21.i.i.i.not.i, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i, label %Else.i.i.i.i418

Else.i.i.i.i418:                                  ; preds = %Then.i.i.i.i417
  %24 = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %24, label %EndIf9.i.i.i.i.i427, label %Else1.i.i.i.i.i419

Else1.i.i.i.i.i419:                               ; preds = %Else.i.i.i.i418
  %25 = icmp ult i64 %struct_field1.unpack118, 256
  br i1 %25, label %Then4.i.i.i.i.i421, label %Else2.i.i.i.i.i420

Else2.i.i.i.i.i420:                               ; preds = %Else1.i.i.i.i.i419
  %26 = icmp ugt i64 %struct_field1.unpack118, 8192
  br i1 %26, label %Then5.i.i.i.i.i422, label %Else6.i.i.i.i.i423

Then4.i.i.i.i.i421:                               ; preds = %Else1.i.i.i.i.i419
  %27 = shl nuw nsw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i427

Then5.i.i.i.i.i422:                               ; preds = %Else2.i.i.i.i.i420
  %28 = shl nuw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i427

Else6.i.i.i.i.i423:                               ; preds = %Else2.i.i.i.i.i420
  %29 = mul nuw nsw i64 %struct_field1.unpack118, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = lshr i64 %30, 1
  br label %EndIf9.i.i.i.i.i427

EndIf9.i.i.i.i.i427:                              ; preds = %Else6.i.i.i.i.i423, %Then5.i.i.i.i.i422, %Then4.i.i.i.i.i421, %Else.i.i.i.i418
  %new_capacity.0.i.i.i.i.i424 = phi i64 [ %27, %Then4.i.i.i.i.i421 ], [ %28, %Then5.i.i.i.i.i422 ], [ %31, %Else6.i.i.i.i.i423 ], [ 4, %Else.i.i.i.i418 ]
  %32 = icmp ugt i64 %new_capacity.0.i.i.i.i.i424, %.pre-phi.i.i.i
  %..i.i.i.i.i.i425 = select i1 %32, i64 %new_capacity.0.i.i.i.i.i424, i64 %.pre-phi.i.i.i
  %33 = shl nuw i64 %struct_field1.unpack118, 4
  %34 = shl nuw i64 %..i.i.i.i.i.i425, 4
  %.not.i.i.i.i.i426 = icmp ult i64 %33, %34
  br i1 %.not.i.i.i.i.i426, label %EndIf.i.i.i.i.i428, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i

EndIf.i.i.i.i.i428:                               ; preds = %EndIf9.i.i.i.i.i427
  %35 = or i64 %34, 8
  %36 = or i64 %33, 8
  %37 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %38 = tail call i8* @roc_realloc(i8* %37, i64 %35, i64 %36, i32 8) #11, !noalias !446
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i

OptionalEndIf.i.i.i.i.i432:                       ; preds = %list.RocList.isUnique.exit.i.i.i.i416, %list.RocList.isUnique.exit.i.i.i.thread.i
  %.pre-phi.i.i293250.i = phi i64 [ %.pre-phi.i.i27.i, %list.RocList.isUnique.exit.i.i.i.thread.i ], [ %.pre-phi.i.i.i, %list.RocList.isUnique.exit.i.i.i.i416 ]
  %.inv.i = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i.i429 = select i1 %.inv.i, i64 4, i64 %.pre-phi.i.i293250.i
  %40 = shl nuw i64 %..i.i.i.i.i.i.i.i429, 4
  %41 = or i64 %40, 8
  %42 = tail call i8* @roc_alloc(i64 %41, i32 8) #11, !noalias !449
  %43 = icmp ne i8* %42, null
  tail call void @llvm.assume(i1 %43) #11
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %42 to i64*
  store i64 -9223372036854775808, i64* %45, align 8, !noalias !449
  %46 = shl nuw i64 %struct_field1.unpack116, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* nonnull align 1 %struct_field1.unpack, i64 %46, i1 false) #11, !noalias !454
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %47, i8 0, i64 16, i1 false) #11, !noalias !454
  %phi.cast.i.i.i.i.i430 = ptrtoint i8* %struct_field1.unpack to i64
  %48 = shl i64 %struct_field1.unpack118, 1
  %49 = select i1 %.not.i.i.i.i.i.i, i64 %48, i64 %phi.cast.i.i.i.i.i430
  %50 = icmp ne i64 %struct_field1.unpack118, 0
  %51 = icmp ne i64 %49, 0
  %or.cond.i.i.i.i.i.i.i431 = select i1 %50, i1 %51, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i431, label %OptionalNonNull.i.i.i.i.i.i.i434, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i

OptionalNonNull.i.i.i.i.i.i.i434:                 ; preds = %OptionalEndIf.i.i.i.i.i432
  %52 = inttoptr i64 %49 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 -8
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !454
  %.not.i.i.i.i.i.i.i.i433 = icmp eq i64 %55, 0
  br i1 %.not.i.i.i.i.i.i.i.i433, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i, label %Then.i.i.i.i.i.i.i.i435

Then.i.i.i.i.i.i.i.i435:                          ; preds = %OptionalNonNull.i.i.i.i.i.i.i434
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8, !noalias !454
  %57 = icmp eq i64 %55, -9223372036854775808
  br i1 %57, label %Then1.i.i.i.i.i.i.i.i436, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i

Then1.i.i.i.i.i.i.i.i436:                         ; preds = %Then.i.i.i.i.i.i.i.i435
  tail call void @roc_dealloc(i8* %53, i32 8) #11, !noalias !454
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i

OptionalEndIf.i.i.i.i:                            ; preds = %Else.i.i.i412
  %.inv5.i = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i437 = select i1 %.inv5.i, i64 4, i64 %.pre-phi.i.i.i
  %58 = shl nuw i64 %..i.i.i.i.i.i.i437, 4
  %59 = or i64 %58, 8
  %60 = tail call i8* @roc_alloc(i64 %59, i32 8) #11, !noalias !455
  %61 = icmp ne i8* %60, null
  tail call void @llvm.assume(i1 %61) #11
  %62 = getelementptr inbounds i8, i8* %60, i64 8
  %63 = bitcast i8* %60 to i64*
  store i64 -9223372036854775808, i64* %63, align 8, !noalias !455
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i: ; preds = %OptionalEndIf.i.i.i.i, %Then1.i.i.i.i.i.i.i.i436, %Then.i.i.i.i.i.i.i.i435, %OptionalNonNull.i.i.i.i.i.i.i434, %OptionalEndIf.i.i.i.i.i432, %EndIf.i.i.i.i.i428, %EndIf9.i.i.i.i.i427, %Then.i.i.i.i417
  %list_alloca.i.sroa.6.0.ph.i = phi i64 [ %..i.i.i.i.i.i.i.i429, %OptionalEndIf.i.i.i.i.i432 ], [ %..i.i.i.i.i.i.i.i429, %OptionalNonNull.i.i.i.i.i.i.i434 ], [ %..i.i.i.i.i.i.i.i429, %Then.i.i.i.i.i.i.i.i435 ], [ %..i.i.i.i.i.i.i.i429, %Then1.i.i.i.i.i.i.i.i436 ], [ %..i.i.i.i.i.i425, %EndIf9.i.i.i.i.i427 ], [ %..i.i.i.i.i.i425, %EndIf.i.i.i.i.i428 ], [ %struct_field1.unpack118, %Then.i.i.i.i417 ], [ %..i.i.i.i.i.i.i437, %OptionalEndIf.i.i.i.i ]
  %list_alloca.i.sroa.0.0.ph.i = phi i8* [ %44, %OptionalEndIf.i.i.i.i.i432 ], [ %44, %OptionalNonNull.i.i.i.i.i.i.i434 ], [ %44, %Then.i.i.i.i.i.i.i.i435 ], [ %44, %Then1.i.i.i.i.i.i.i.i436 ], [ %struct_field1.unpack, %EndIf9.i.i.i.i.i427 ], [ %39, %EndIf.i.i.i.i.i428 ], [ %struct_field1.unpack, %Then.i.i.i.i417 ], [ %62, %OptionalEndIf.i.i.i.i ]
  %element_to_pass_as_opaque.i.0.sroa_cast35.i = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i410 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast35.i)
  %64 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast35.i, i8* noundef nonnull align 8 dereferenceable(16) %64, i64 16, i1 false) #11
  br label %OptionalThen1.i.i.i439

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i: ; preds = %BoolAndTrue.i.i.i
  %element_to_pass_as_opaque.i.0.sroa_cast.i = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i410 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast.i)
  %65 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast.i, i8* noundef nonnull align 8 dereferenceable(16) %65, i64 16, i1 false) #11
  %.not.i.i7.i438 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i.i7.i438, label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit, label %OptionalThen1.i.i.i439

OptionalThen1.i.i.i439:                           ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i
  %list_alloca.i.sroa.0.039.i = phi i8* [ %list_alloca.i.sroa.0.0.ph.i, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i ], [ %struct_field1.unpack, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i ]
  %list_alloca.i.sroa.6.037.i = phi i64 [ %list_alloca.i.sroa.6.0.ph.i, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i ], [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i ]
  %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i410 to i8*
  %66 = shl nuw i64 %struct_field1.unpack116, 4
  %67 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.039.i, i64 %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %67, i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i.pre-phi, i64 16, i1 false) #11, !noalias !458
  br label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit

List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit: ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i, %OptionalThen1.i.i.i439
  %list_alloca.i.sroa.0.040.i = phi i8* [ null, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i ], [ %list_alloca.i.sroa.0.039.i, %OptionalThen1.i.i.i439 ]
  %list_alloca.i.sroa.6.038.i = phi i64 [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i ], [ %list_alloca.i.sroa.6.037.i, %OptionalThen1.i.i.i439 ]
  %element_to_pass_as_opaque.i.i410.0.sroa_cast942.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i410 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.i410.0.sroa_cast942.pre-phi)
  %call.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field, i64 1) #11
  %has_overflowed.i = extractvalue { i64, i1 } %call.i, 1
  br i1 %has_overflowed.i, label %throw_block.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit

throw_block.i:                                    ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit: ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit
  %68 = add nuw i64 %struct_field1.unpack116, 1
  %operation_result.i = extractvalue { i64, i1 } %call.i, 0
  %struct_alloca = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca, i64 0, i32 0
  store i64 %operation_result.i, i64* %struct_alloca.repack, align 8
  br label %common.ret

branch60:                                         ; preds = %entry
  %tag_alloca6 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr9 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca6, i64 0, i32 2
  store i8 7, i8* %tag_id_ptr9, align 8
  %.not.i.i.i.i.i.i441 = icmp slt i64 %struct_field1.unpack118, 0
  %69 = select i1 %.not.i.i.i.i.i.i441, i64 %struct_field1.unpack116, i64 %struct_field1.unpack118
  %70 = icmp ne i64 %69, 0
  %71 = or i1 %.not.i.i.i.i.i.i441, %70
  br i1 %71, label %list.RocList.isUnique.exit.i.i.i443, label %BoolAndTrue.i.i.i447

list.RocList.isUnique.exit.i.i.i443:              ; preds = %branch60
  %72 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8, !noalias !461
  %phi.cmp.i.i.i.i442 = icmp eq i64 %74, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i442, label %BoolAndTrue.i.i.i447, label %list.RocList.isUnique.exit.i.i.i.thread.i445

list.RocList.isUnique.exit.i.i.i.thread.i445:     ; preds = %list.RocList.isUnique.exit.i.i.i443
  %.pre-phi.i.i27.i444 = add nuw i64 %struct_field1.unpack116, 1
  br label %OptionalEndIf.i.i.i.i.i476

BoolAndTrue.i.i.i447:                             ; preds = %list.RocList.isUnique.exit.i.i.i443, %branch60
  %.not.i.i.not.i446 = icmp ugt i64 %69, %struct_field1.unpack116
  br i1 %.not.i.i.not.i446, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i490, label %Else.i.i.i450

Else.i.i.i450:                                    ; preds = %BoolAndTrue.i.i.i447
  %.pre-phi.i.i.i448 = add nuw i64 %struct_field1.unpack116, 1
  %.not.i1.i.i.i449 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i1.i.i.i449, label %OptionalEndIf.i.i.i.i483, label %OptionalThen.i.i.i.i451

OptionalThen.i.i.i.i451:                          ; preds = %Else.i.i.i450
  br i1 %71, label %list.RocList.isUnique.exit.i.i.i.i457, label %Then.i.i.i.i459

list.RocList.isUnique.exit.i.i.i.i457:            ; preds = %OptionalThen.i.i.i.i451
  %.phi.trans.insert.i452 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %.phi.trans.insert46.i453 = bitcast i8* %.phi.trans.insert.i452 to i64*
  %.pre.i454 = load i64, i64* %.phi.trans.insert46.i453, align 8, !noalias !464
  %phi.cmp.i.i.i.i.i455 = icmp eq i64 %.pre.i454, -9223372036854775808
  %75 = xor i1 %.not.i.i.i.i.i.i441, true
  %or.cond.i.i.i.i456 = select i1 %phi.cmp.i.i.i.i.i455, i1 %75, i1 false
  br i1 %or.cond.i.i.i.i456, label %Then.i.i.i.i459, label %OptionalEndIf.i.i.i.i.i476

Then.i.i.i.i459:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i457, %OptionalThen.i.i.i.i451
  %.not21.i.i.i.not.i458 = icmp ugt i64 %struct_field1.unpack118, %struct_field1.unpack116
  br i1 %.not21.i.i.i.not.i458, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487, label %Else.i.i.i.i460

Else.i.i.i.i460:                                  ; preds = %Then.i.i.i.i459
  %76 = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %76, label %EndIf9.i.i.i.i.i469, label %Else1.i.i.i.i.i461

Else1.i.i.i.i.i461:                               ; preds = %Else.i.i.i.i460
  %77 = icmp ult i64 %struct_field1.unpack118, 256
  br i1 %77, label %Then4.i.i.i.i.i463, label %Else2.i.i.i.i.i462

Else2.i.i.i.i.i462:                               ; preds = %Else1.i.i.i.i.i461
  %78 = icmp ugt i64 %struct_field1.unpack118, 8192
  br i1 %78, label %Then5.i.i.i.i.i464, label %Else6.i.i.i.i.i465

Then4.i.i.i.i.i463:                               ; preds = %Else1.i.i.i.i.i461
  %79 = shl nuw nsw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i469

Then5.i.i.i.i.i464:                               ; preds = %Else2.i.i.i.i.i462
  %80 = shl nuw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i469

Else6.i.i.i.i.i465:                               ; preds = %Else2.i.i.i.i.i462
  %81 = mul nuw nsw i64 %struct_field1.unpack118, 3
  %82 = add nuw nsw i64 %81, 1
  %83 = lshr i64 %82, 1
  br label %EndIf9.i.i.i.i.i469

EndIf9.i.i.i.i.i469:                              ; preds = %Else6.i.i.i.i.i465, %Then5.i.i.i.i.i464, %Then4.i.i.i.i.i463, %Else.i.i.i.i460
  %new_capacity.0.i.i.i.i.i466 = phi i64 [ %79, %Then4.i.i.i.i.i463 ], [ %80, %Then5.i.i.i.i.i464 ], [ %83, %Else6.i.i.i.i.i465 ], [ 4, %Else.i.i.i.i460 ]
  %84 = icmp ugt i64 %new_capacity.0.i.i.i.i.i466, %.pre-phi.i.i.i448
  %..i.i.i.i.i.i467 = select i1 %84, i64 %new_capacity.0.i.i.i.i.i466, i64 %.pre-phi.i.i.i448
  %85 = shl nuw i64 %struct_field1.unpack118, 4
  %86 = shl nuw i64 %..i.i.i.i.i.i467, 4
  %.not.i.i.i.i.i468 = icmp ult i64 %85, %86
  br i1 %.not.i.i.i.i.i468, label %EndIf.i.i.i.i.i470, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487

EndIf.i.i.i.i.i470:                               ; preds = %EndIf9.i.i.i.i.i469
  %87 = or i64 %86, 8
  %88 = or i64 %85, 8
  %89 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %90 = tail call i8* @roc_realloc(i8* %89, i64 %87, i64 %88, i32 8) #11, !noalias !464
  %91 = getelementptr inbounds i8, i8* %90, i64 8
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487

OptionalEndIf.i.i.i.i.i476:                       ; preds = %list.RocList.isUnique.exit.i.i.i.i457, %list.RocList.isUnique.exit.i.i.i.thread.i445
  %.pre-phi.i.i293250.i471 = phi i64 [ %.pre-phi.i.i27.i444, %list.RocList.isUnique.exit.i.i.i.thread.i445 ], [ %.pre-phi.i.i.i448, %list.RocList.isUnique.exit.i.i.i.i457 ]
  %.inv.i472 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i.i473 = select i1 %.inv.i472, i64 4, i64 %.pre-phi.i.i293250.i471
  %92 = shl nuw i64 %..i.i.i.i.i.i.i.i473, 4
  %93 = or i64 %92, 8
  %94 = tail call i8* @roc_alloc(i64 %93, i32 8) #11, !noalias !467
  %95 = icmp ne i8* %94, null
  tail call void @llvm.assume(i1 %95) #11
  %96 = getelementptr inbounds i8, i8* %94, i64 8
  %97 = bitcast i8* %94 to i64*
  store i64 -9223372036854775808, i64* %97, align 8, !noalias !467
  %98 = shl nuw i64 %struct_field1.unpack116, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %96, i8* nonnull align 1 %struct_field1.unpack, i64 %98, i1 false) #11, !noalias !472
  %99 = getelementptr inbounds i8, i8* %96, i64 %98
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %99, i8 0, i64 16, i1 false) #11, !noalias !472
  %phi.cast.i.i.i.i.i474 = ptrtoint i8* %struct_field1.unpack to i64
  %100 = shl i64 %struct_field1.unpack118, 1
  %101 = select i1 %.not.i.i.i.i.i.i441, i64 %100, i64 %phi.cast.i.i.i.i.i474
  %102 = icmp ne i64 %struct_field1.unpack118, 0
  %103 = icmp ne i64 %101, 0
  %or.cond.i.i.i.i.i.i.i475 = select i1 %102, i1 %103, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i475, label %OptionalNonNull.i.i.i.i.i.i.i478, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487

OptionalNonNull.i.i.i.i.i.i.i478:                 ; preds = %OptionalEndIf.i.i.i.i.i476
  %104 = inttoptr i64 %101 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 -8
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 8, !noalias !472
  %.not.i.i.i.i.i.i.i.i477 = icmp eq i64 %107, 0
  br i1 %.not.i.i.i.i.i.i.i.i477, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487, label %Then.i.i.i.i.i.i.i.i479

Then.i.i.i.i.i.i.i.i479:                          ; preds = %OptionalNonNull.i.i.i.i.i.i.i478
  %108 = add i64 %107, -1
  store i64 %108, i64* %106, align 8, !noalias !472
  %109 = icmp eq i64 %107, -9223372036854775808
  br i1 %109, label %Then1.i.i.i.i.i.i.i.i480, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487

Then1.i.i.i.i.i.i.i.i480:                         ; preds = %Then.i.i.i.i.i.i.i.i479
  tail call void @roc_dealloc(i8* %105, i32 8) #11, !noalias !472
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487

OptionalEndIf.i.i.i.i483:                         ; preds = %Else.i.i.i450
  %.inv5.i481 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i482 = select i1 %.inv5.i481, i64 4, i64 %.pre-phi.i.i.i448
  %110 = shl nuw i64 %..i.i.i.i.i.i.i482, 4
  %111 = or i64 %110, 8
  %112 = tail call i8* @roc_alloc(i64 %111, i32 8) #11, !noalias !473
  %113 = icmp ne i8* %112, null
  tail call void @llvm.assume(i1 %113) #11
  %114 = getelementptr inbounds i8, i8* %112, i64 8
  %115 = bitcast i8* %112 to i64*
  store i64 -9223372036854775808, i64* %115, align 8, !noalias !473
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487: ; preds = %OptionalEndIf.i.i.i.i483, %Then1.i.i.i.i.i.i.i.i480, %Then.i.i.i.i.i.i.i.i479, %OptionalNonNull.i.i.i.i.i.i.i478, %OptionalEndIf.i.i.i.i.i476, %EndIf.i.i.i.i.i470, %EndIf9.i.i.i.i.i469, %Then.i.i.i.i459
  %list_alloca.i.sroa.6.0.ph.i484 = phi i64 [ %..i.i.i.i.i.i.i.i473, %OptionalEndIf.i.i.i.i.i476 ], [ %..i.i.i.i.i.i.i.i473, %OptionalNonNull.i.i.i.i.i.i.i478 ], [ %..i.i.i.i.i.i.i.i473, %Then.i.i.i.i.i.i.i.i479 ], [ %..i.i.i.i.i.i.i.i473, %Then1.i.i.i.i.i.i.i.i480 ], [ %..i.i.i.i.i.i467, %EndIf9.i.i.i.i.i469 ], [ %..i.i.i.i.i.i467, %EndIf.i.i.i.i.i470 ], [ %struct_field1.unpack118, %Then.i.i.i.i459 ], [ %..i.i.i.i.i.i.i482, %OptionalEndIf.i.i.i.i483 ]
  %list_alloca.i.sroa.0.0.ph.i485 = phi i8* [ %96, %OptionalEndIf.i.i.i.i.i476 ], [ %96, %OptionalNonNull.i.i.i.i.i.i.i478 ], [ %96, %Then.i.i.i.i.i.i.i.i479 ], [ %96, %Then1.i.i.i.i.i.i.i.i480 ], [ %struct_field1.unpack, %EndIf9.i.i.i.i.i469 ], [ %91, %EndIf.i.i.i.i.i470 ], [ %struct_field1.unpack, %Then.i.i.i.i459 ], [ %114, %OptionalEndIf.i.i.i.i483 ]
  %element_to_pass_as_opaque.i.0.sroa_cast35.i486 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i440 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast35.i486)
  %116 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast35.i486, i8* noundef nonnull align 8 dereferenceable(16) %116, i64 16, i1 false) #11
  br label %OptionalThen1.i.i.i494

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i490: ; preds = %BoolAndTrue.i.i.i447
  %element_to_pass_as_opaque.i.0.sroa_cast.i488 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i440 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast.i488)
  %117 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast.i488, i8* noundef nonnull align 8 dereferenceable(16) %117, i64 16, i1 false) #11
  %.not.i.i7.i489 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i.i7.i489, label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit501, label %OptionalThen1.i.i.i494

OptionalThen1.i.i.i494:                           ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i490, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487
  %list_alloca.i.sroa.0.039.i491 = phi i8* [ %list_alloca.i.sroa.0.0.ph.i485, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487 ], [ %struct_field1.unpack, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i490 ]
  %list_alloca.i.sroa.6.037.i492 = phi i64 [ %list_alloca.i.sroa.6.0.ph.i484, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i487 ], [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i490 ]
  %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i493.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i440 to i8*
  %118 = shl nuw i64 %struct_field1.unpack116, 4
  %119 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.039.i491, i64 %118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %119, i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i493.pre-phi, i64 16, i1 false) #11, !noalias !476
  br label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit501

List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit501: ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i490, %OptionalThen1.i.i.i494
  %list_alloca.i.sroa.0.040.i495 = phi i8* [ null, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i490 ], [ %list_alloca.i.sroa.0.039.i491, %OptionalThen1.i.i.i494 ]
  %list_alloca.i.sroa.6.038.i496 = phi i64 [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i490 ], [ %list_alloca.i.sroa.6.037.i492, %OptionalThen1.i.i.i494 ]
  %element_to_pass_as_opaque.i.i440.0.sroa_cast944.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i440 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.i440.0.sroa_cast944.pre-phi)
  %call.i287 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field, i64 1) #11
  %has_overflowed.i288 = extractvalue { i64, i1 } %call.i287, 1
  br i1 %has_overflowed.i288, label %throw_block.i290, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291

throw_block.i290:                                 ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit501
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit291: ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit501
  %120 = add nuw i64 %struct_field1.unpack116, 1
  %operation_result.i289 = extractvalue { i64, i1 } %call.i287, 0
  %struct_alloca15 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca15.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca15, i64 0, i32 0
  store i64 %operation_result.i289, i64* %struct_alloca15.repack, align 8
  br label %common.ret

branch43:                                         ; preds = %entry
  %tag_alloca16 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr19 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca16, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr19, align 8
  %.not.i.i.i.i.i.i503 = icmp slt i64 %struct_field1.unpack118, 0
  %121 = select i1 %.not.i.i.i.i.i.i503, i64 %struct_field1.unpack116, i64 %struct_field1.unpack118
  %122 = icmp ne i64 %121, 0
  %123 = or i1 %.not.i.i.i.i.i.i503, %122
  br i1 %123, label %list.RocList.isUnique.exit.i.i.i505, label %BoolAndTrue.i.i.i509

list.RocList.isUnique.exit.i.i.i505:              ; preds = %branch43
  %124 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8, !noalias !479
  %phi.cmp.i.i.i.i504 = icmp eq i64 %126, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i504, label %BoolAndTrue.i.i.i509, label %list.RocList.isUnique.exit.i.i.i.thread.i507

list.RocList.isUnique.exit.i.i.i.thread.i507:     ; preds = %list.RocList.isUnique.exit.i.i.i505
  %.pre-phi.i.i27.i506 = add nuw i64 %struct_field1.unpack116, 1
  br label %OptionalEndIf.i.i.i.i.i538

BoolAndTrue.i.i.i509:                             ; preds = %list.RocList.isUnique.exit.i.i.i505, %branch43
  %.not.i.i.not.i508 = icmp ugt i64 %121, %struct_field1.unpack116
  br i1 %.not.i.i.not.i508, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i552, label %Else.i.i.i512

Else.i.i.i512:                                    ; preds = %BoolAndTrue.i.i.i509
  %.pre-phi.i.i.i510 = add nuw i64 %struct_field1.unpack116, 1
  %.not.i1.i.i.i511 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i1.i.i.i511, label %OptionalEndIf.i.i.i.i545, label %OptionalThen.i.i.i.i513

OptionalThen.i.i.i.i513:                          ; preds = %Else.i.i.i512
  br i1 %123, label %list.RocList.isUnique.exit.i.i.i.i519, label %Then.i.i.i.i521

list.RocList.isUnique.exit.i.i.i.i519:            ; preds = %OptionalThen.i.i.i.i513
  %.phi.trans.insert.i514 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %.phi.trans.insert46.i515 = bitcast i8* %.phi.trans.insert.i514 to i64*
  %.pre.i516 = load i64, i64* %.phi.trans.insert46.i515, align 8, !noalias !482
  %phi.cmp.i.i.i.i.i517 = icmp eq i64 %.pre.i516, -9223372036854775808
  %127 = xor i1 %.not.i.i.i.i.i.i503, true
  %or.cond.i.i.i.i518 = select i1 %phi.cmp.i.i.i.i.i517, i1 %127, i1 false
  br i1 %or.cond.i.i.i.i518, label %Then.i.i.i.i521, label %OptionalEndIf.i.i.i.i.i538

Then.i.i.i.i521:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i519, %OptionalThen.i.i.i.i513
  %.not21.i.i.i.not.i520 = icmp ugt i64 %struct_field1.unpack118, %struct_field1.unpack116
  br i1 %.not21.i.i.i.not.i520, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549, label %Else.i.i.i.i522

Else.i.i.i.i522:                                  ; preds = %Then.i.i.i.i521
  %128 = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %128, label %EndIf9.i.i.i.i.i531, label %Else1.i.i.i.i.i523

Else1.i.i.i.i.i523:                               ; preds = %Else.i.i.i.i522
  %129 = icmp ult i64 %struct_field1.unpack118, 256
  br i1 %129, label %Then4.i.i.i.i.i525, label %Else2.i.i.i.i.i524

Else2.i.i.i.i.i524:                               ; preds = %Else1.i.i.i.i.i523
  %130 = icmp ugt i64 %struct_field1.unpack118, 8192
  br i1 %130, label %Then5.i.i.i.i.i526, label %Else6.i.i.i.i.i527

Then4.i.i.i.i.i525:                               ; preds = %Else1.i.i.i.i.i523
  %131 = shl nuw nsw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i531

Then5.i.i.i.i.i526:                               ; preds = %Else2.i.i.i.i.i524
  %132 = shl nuw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i531

Else6.i.i.i.i.i527:                               ; preds = %Else2.i.i.i.i.i524
  %133 = mul nuw nsw i64 %struct_field1.unpack118, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = lshr i64 %134, 1
  br label %EndIf9.i.i.i.i.i531

EndIf9.i.i.i.i.i531:                              ; preds = %Else6.i.i.i.i.i527, %Then5.i.i.i.i.i526, %Then4.i.i.i.i.i525, %Else.i.i.i.i522
  %new_capacity.0.i.i.i.i.i528 = phi i64 [ %131, %Then4.i.i.i.i.i525 ], [ %132, %Then5.i.i.i.i.i526 ], [ %135, %Else6.i.i.i.i.i527 ], [ 4, %Else.i.i.i.i522 ]
  %136 = icmp ugt i64 %new_capacity.0.i.i.i.i.i528, %.pre-phi.i.i.i510
  %..i.i.i.i.i.i529 = select i1 %136, i64 %new_capacity.0.i.i.i.i.i528, i64 %.pre-phi.i.i.i510
  %137 = shl nuw i64 %struct_field1.unpack118, 4
  %138 = shl nuw i64 %..i.i.i.i.i.i529, 4
  %.not.i.i.i.i.i530 = icmp ult i64 %137, %138
  br i1 %.not.i.i.i.i.i530, label %EndIf.i.i.i.i.i532, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549

EndIf.i.i.i.i.i532:                               ; preds = %EndIf9.i.i.i.i.i531
  %139 = or i64 %138, 8
  %140 = or i64 %137, 8
  %141 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %142 = tail call i8* @roc_realloc(i8* %141, i64 %139, i64 %140, i32 8) #11, !noalias !482
  %143 = getelementptr inbounds i8, i8* %142, i64 8
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549

OptionalEndIf.i.i.i.i.i538:                       ; preds = %list.RocList.isUnique.exit.i.i.i.i519, %list.RocList.isUnique.exit.i.i.i.thread.i507
  %.pre-phi.i.i293250.i533 = phi i64 [ %.pre-phi.i.i27.i506, %list.RocList.isUnique.exit.i.i.i.thread.i507 ], [ %.pre-phi.i.i.i510, %list.RocList.isUnique.exit.i.i.i.i519 ]
  %.inv.i534 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i.i535 = select i1 %.inv.i534, i64 4, i64 %.pre-phi.i.i293250.i533
  %144 = shl nuw i64 %..i.i.i.i.i.i.i.i535, 4
  %145 = or i64 %144, 8
  %146 = tail call i8* @roc_alloc(i64 %145, i32 8) #11, !noalias !485
  %147 = icmp ne i8* %146, null
  tail call void @llvm.assume(i1 %147) #11
  %148 = getelementptr inbounds i8, i8* %146, i64 8
  %149 = bitcast i8* %146 to i64*
  store i64 -9223372036854775808, i64* %149, align 8, !noalias !485
  %150 = shl nuw i64 %struct_field1.unpack116, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %148, i8* nonnull align 1 %struct_field1.unpack, i64 %150, i1 false) #11, !noalias !490
  %151 = getelementptr inbounds i8, i8* %148, i64 %150
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %151, i8 0, i64 16, i1 false) #11, !noalias !490
  %phi.cast.i.i.i.i.i536 = ptrtoint i8* %struct_field1.unpack to i64
  %152 = shl i64 %struct_field1.unpack118, 1
  %153 = select i1 %.not.i.i.i.i.i.i503, i64 %152, i64 %phi.cast.i.i.i.i.i536
  %154 = icmp ne i64 %struct_field1.unpack118, 0
  %155 = icmp ne i64 %153, 0
  %or.cond.i.i.i.i.i.i.i537 = select i1 %154, i1 %155, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i537, label %OptionalNonNull.i.i.i.i.i.i.i540, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549

OptionalNonNull.i.i.i.i.i.i.i540:                 ; preds = %OptionalEndIf.i.i.i.i.i538
  %156 = inttoptr i64 %153 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 -8
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8, !noalias !490
  %.not.i.i.i.i.i.i.i.i539 = icmp eq i64 %159, 0
  br i1 %.not.i.i.i.i.i.i.i.i539, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549, label %Then.i.i.i.i.i.i.i.i541

Then.i.i.i.i.i.i.i.i541:                          ; preds = %OptionalNonNull.i.i.i.i.i.i.i540
  %160 = add i64 %159, -1
  store i64 %160, i64* %158, align 8, !noalias !490
  %161 = icmp eq i64 %159, -9223372036854775808
  br i1 %161, label %Then1.i.i.i.i.i.i.i.i542, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549

Then1.i.i.i.i.i.i.i.i542:                         ; preds = %Then.i.i.i.i.i.i.i.i541
  tail call void @roc_dealloc(i8* %157, i32 8) #11, !noalias !490
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549

OptionalEndIf.i.i.i.i545:                         ; preds = %Else.i.i.i512
  %.inv5.i543 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i544 = select i1 %.inv5.i543, i64 4, i64 %.pre-phi.i.i.i510
  %162 = shl nuw i64 %..i.i.i.i.i.i.i544, 4
  %163 = or i64 %162, 8
  %164 = tail call i8* @roc_alloc(i64 %163, i32 8) #11, !noalias !491
  %165 = icmp ne i8* %164, null
  tail call void @llvm.assume(i1 %165) #11
  %166 = getelementptr inbounds i8, i8* %164, i64 8
  %167 = bitcast i8* %164 to i64*
  store i64 -9223372036854775808, i64* %167, align 8, !noalias !491
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549: ; preds = %OptionalEndIf.i.i.i.i545, %Then1.i.i.i.i.i.i.i.i542, %Then.i.i.i.i.i.i.i.i541, %OptionalNonNull.i.i.i.i.i.i.i540, %OptionalEndIf.i.i.i.i.i538, %EndIf.i.i.i.i.i532, %EndIf9.i.i.i.i.i531, %Then.i.i.i.i521
  %list_alloca.i.sroa.6.0.ph.i546 = phi i64 [ %..i.i.i.i.i.i.i.i535, %OptionalEndIf.i.i.i.i.i538 ], [ %..i.i.i.i.i.i.i.i535, %OptionalNonNull.i.i.i.i.i.i.i540 ], [ %..i.i.i.i.i.i.i.i535, %Then.i.i.i.i.i.i.i.i541 ], [ %..i.i.i.i.i.i.i.i535, %Then1.i.i.i.i.i.i.i.i542 ], [ %..i.i.i.i.i.i529, %EndIf9.i.i.i.i.i531 ], [ %..i.i.i.i.i.i529, %EndIf.i.i.i.i.i532 ], [ %struct_field1.unpack118, %Then.i.i.i.i521 ], [ %..i.i.i.i.i.i.i544, %OptionalEndIf.i.i.i.i545 ]
  %list_alloca.i.sroa.0.0.ph.i547 = phi i8* [ %148, %OptionalEndIf.i.i.i.i.i538 ], [ %148, %OptionalNonNull.i.i.i.i.i.i.i540 ], [ %148, %Then.i.i.i.i.i.i.i.i541 ], [ %148, %Then1.i.i.i.i.i.i.i.i542 ], [ %struct_field1.unpack, %EndIf9.i.i.i.i.i531 ], [ %143, %EndIf.i.i.i.i.i532 ], [ %struct_field1.unpack, %Then.i.i.i.i521 ], [ %166, %OptionalEndIf.i.i.i.i545 ]
  %element_to_pass_as_opaque.i.0.sroa_cast35.i548 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i502 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast35.i548)
  %168 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast35.i548, i8* noundef nonnull align 8 dereferenceable(16) %168, i64 16, i1 false) #11
  br label %OptionalThen1.i.i.i556

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i552: ; preds = %BoolAndTrue.i.i.i509
  %element_to_pass_as_opaque.i.0.sroa_cast.i550 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i502 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast.i550)
  %169 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast.i550, i8* noundef nonnull align 8 dereferenceable(16) %169, i64 16, i1 false) #11
  %.not.i.i7.i551 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i.i7.i551, label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit563, label %OptionalThen1.i.i.i556

OptionalThen1.i.i.i556:                           ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i552, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549
  %list_alloca.i.sroa.0.039.i553 = phi i8* [ %list_alloca.i.sroa.0.0.ph.i547, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549 ], [ %struct_field1.unpack, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i552 ]
  %list_alloca.i.sroa.6.037.i554 = phi i64 [ %list_alloca.i.sroa.6.0.ph.i546, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i549 ], [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i552 ]
  %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i555.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i502 to i8*
  %170 = shl nuw i64 %struct_field1.unpack116, 4
  %171 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.039.i553, i64 %170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %171, i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i555.pre-phi, i64 16, i1 false) #11, !noalias !494
  br label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit563

List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit563: ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i552, %OptionalThen1.i.i.i556
  %list_alloca.i.sroa.0.040.i557 = phi i8* [ null, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i552 ], [ %list_alloca.i.sroa.0.039.i553, %OptionalThen1.i.i.i556 ]
  %list_alloca.i.sroa.6.038.i558 = phi i64 [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i552 ], [ %list_alloca.i.sroa.6.037.i554, %OptionalThen1.i.i.i556 ]
  %element_to_pass_as_opaque.i.i502.0.sroa_cast946.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i502 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.i502.0.sroa_cast946.pre-phi)
  %call.i292 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field, i64 1) #11
  %has_overflowed.i293 = extractvalue { i64, i1 } %call.i292, 1
  br i1 %has_overflowed.i293, label %throw_block.i295, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296

throw_block.i295:                                 ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit563
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit296: ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit563
  %172 = add nuw i64 %struct_field1.unpack116, 1
  %operation_result.i294 = extractvalue { i64, i1 } %call.i292, 0
  %struct_alloca25 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca25.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca25, i64 0, i32 0
  store i64 %operation_result.i294, i64* %struct_alloca25.repack, align 8
  br label %common.ret

branch45:                                         ; preds = %entry
  %tag_alloca26 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr29 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca26, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr29, align 8
  %.not.i.i.i.i.i.i565 = icmp slt i64 %struct_field1.unpack118, 0
  %173 = select i1 %.not.i.i.i.i.i.i565, i64 %struct_field1.unpack116, i64 %struct_field1.unpack118
  %174 = icmp ne i64 %173, 0
  %175 = or i1 %.not.i.i.i.i.i.i565, %174
  br i1 %175, label %list.RocList.isUnique.exit.i.i.i567, label %BoolAndTrue.i.i.i571

list.RocList.isUnique.exit.i.i.i567:              ; preds = %branch45
  %176 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %177 = bitcast i8* %176 to i64*
  %178 = load i64, i64* %177, align 8, !noalias !497
  %phi.cmp.i.i.i.i566 = icmp eq i64 %178, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i566, label %BoolAndTrue.i.i.i571, label %list.RocList.isUnique.exit.i.i.i.thread.i569

list.RocList.isUnique.exit.i.i.i.thread.i569:     ; preds = %list.RocList.isUnique.exit.i.i.i567
  %.pre-phi.i.i27.i568 = add nuw i64 %struct_field1.unpack116, 1
  br label %OptionalEndIf.i.i.i.i.i600

BoolAndTrue.i.i.i571:                             ; preds = %list.RocList.isUnique.exit.i.i.i567, %branch45
  %.not.i.i.not.i570 = icmp ugt i64 %173, %struct_field1.unpack116
  br i1 %.not.i.i.not.i570, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i614, label %Else.i.i.i574

Else.i.i.i574:                                    ; preds = %BoolAndTrue.i.i.i571
  %.pre-phi.i.i.i572 = add nuw i64 %struct_field1.unpack116, 1
  %.not.i1.i.i.i573 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i1.i.i.i573, label %OptionalEndIf.i.i.i.i607, label %OptionalThen.i.i.i.i575

OptionalThen.i.i.i.i575:                          ; preds = %Else.i.i.i574
  br i1 %175, label %list.RocList.isUnique.exit.i.i.i.i581, label %Then.i.i.i.i583

list.RocList.isUnique.exit.i.i.i.i581:            ; preds = %OptionalThen.i.i.i.i575
  %.phi.trans.insert.i576 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %.phi.trans.insert46.i577 = bitcast i8* %.phi.trans.insert.i576 to i64*
  %.pre.i578 = load i64, i64* %.phi.trans.insert46.i577, align 8, !noalias !500
  %phi.cmp.i.i.i.i.i579 = icmp eq i64 %.pre.i578, -9223372036854775808
  %179 = xor i1 %.not.i.i.i.i.i.i565, true
  %or.cond.i.i.i.i580 = select i1 %phi.cmp.i.i.i.i.i579, i1 %179, i1 false
  br i1 %or.cond.i.i.i.i580, label %Then.i.i.i.i583, label %OptionalEndIf.i.i.i.i.i600

Then.i.i.i.i583:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i581, %OptionalThen.i.i.i.i575
  %.not21.i.i.i.not.i582 = icmp ugt i64 %struct_field1.unpack118, %struct_field1.unpack116
  br i1 %.not21.i.i.i.not.i582, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611, label %Else.i.i.i.i584

Else.i.i.i.i584:                                  ; preds = %Then.i.i.i.i583
  %180 = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %180, label %EndIf9.i.i.i.i.i593, label %Else1.i.i.i.i.i585

Else1.i.i.i.i.i585:                               ; preds = %Else.i.i.i.i584
  %181 = icmp ult i64 %struct_field1.unpack118, 256
  br i1 %181, label %Then4.i.i.i.i.i587, label %Else2.i.i.i.i.i586

Else2.i.i.i.i.i586:                               ; preds = %Else1.i.i.i.i.i585
  %182 = icmp ugt i64 %struct_field1.unpack118, 8192
  br i1 %182, label %Then5.i.i.i.i.i588, label %Else6.i.i.i.i.i589

Then4.i.i.i.i.i587:                               ; preds = %Else1.i.i.i.i.i585
  %183 = shl nuw nsw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i593

Then5.i.i.i.i.i588:                               ; preds = %Else2.i.i.i.i.i586
  %184 = shl nuw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i593

Else6.i.i.i.i.i589:                               ; preds = %Else2.i.i.i.i.i586
  %185 = mul nuw nsw i64 %struct_field1.unpack118, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = lshr i64 %186, 1
  br label %EndIf9.i.i.i.i.i593

EndIf9.i.i.i.i.i593:                              ; preds = %Else6.i.i.i.i.i589, %Then5.i.i.i.i.i588, %Then4.i.i.i.i.i587, %Else.i.i.i.i584
  %new_capacity.0.i.i.i.i.i590 = phi i64 [ %183, %Then4.i.i.i.i.i587 ], [ %184, %Then5.i.i.i.i.i588 ], [ %187, %Else6.i.i.i.i.i589 ], [ 4, %Else.i.i.i.i584 ]
  %188 = icmp ugt i64 %new_capacity.0.i.i.i.i.i590, %.pre-phi.i.i.i572
  %..i.i.i.i.i.i591 = select i1 %188, i64 %new_capacity.0.i.i.i.i.i590, i64 %.pre-phi.i.i.i572
  %189 = shl nuw i64 %struct_field1.unpack118, 4
  %190 = shl nuw i64 %..i.i.i.i.i.i591, 4
  %.not.i.i.i.i.i592 = icmp ult i64 %189, %190
  br i1 %.not.i.i.i.i.i592, label %EndIf.i.i.i.i.i594, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611

EndIf.i.i.i.i.i594:                               ; preds = %EndIf9.i.i.i.i.i593
  %191 = or i64 %190, 8
  %192 = or i64 %189, 8
  %193 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %194 = tail call i8* @roc_realloc(i8* %193, i64 %191, i64 %192, i32 8) #11, !noalias !500
  %195 = getelementptr inbounds i8, i8* %194, i64 8
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611

OptionalEndIf.i.i.i.i.i600:                       ; preds = %list.RocList.isUnique.exit.i.i.i.i581, %list.RocList.isUnique.exit.i.i.i.thread.i569
  %.pre-phi.i.i293250.i595 = phi i64 [ %.pre-phi.i.i27.i568, %list.RocList.isUnique.exit.i.i.i.thread.i569 ], [ %.pre-phi.i.i.i572, %list.RocList.isUnique.exit.i.i.i.i581 ]
  %.inv.i596 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i.i597 = select i1 %.inv.i596, i64 4, i64 %.pre-phi.i.i293250.i595
  %196 = shl nuw i64 %..i.i.i.i.i.i.i.i597, 4
  %197 = or i64 %196, 8
  %198 = tail call i8* @roc_alloc(i64 %197, i32 8) #11, !noalias !503
  %199 = icmp ne i8* %198, null
  tail call void @llvm.assume(i1 %199) #11
  %200 = getelementptr inbounds i8, i8* %198, i64 8
  %201 = bitcast i8* %198 to i64*
  store i64 -9223372036854775808, i64* %201, align 8, !noalias !503
  %202 = shl nuw i64 %struct_field1.unpack116, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %200, i8* nonnull align 1 %struct_field1.unpack, i64 %202, i1 false) #11, !noalias !508
  %203 = getelementptr inbounds i8, i8* %200, i64 %202
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %203, i8 0, i64 16, i1 false) #11, !noalias !508
  %phi.cast.i.i.i.i.i598 = ptrtoint i8* %struct_field1.unpack to i64
  %204 = shl i64 %struct_field1.unpack118, 1
  %205 = select i1 %.not.i.i.i.i.i.i565, i64 %204, i64 %phi.cast.i.i.i.i.i598
  %206 = icmp ne i64 %struct_field1.unpack118, 0
  %207 = icmp ne i64 %205, 0
  %or.cond.i.i.i.i.i.i.i599 = select i1 %206, i1 %207, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i599, label %OptionalNonNull.i.i.i.i.i.i.i602, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611

OptionalNonNull.i.i.i.i.i.i.i602:                 ; preds = %OptionalEndIf.i.i.i.i.i600
  %208 = inttoptr i64 %205 to i8*
  %209 = getelementptr inbounds i8, i8* %208, i64 -8
  %210 = bitcast i8* %209 to i64*
  %211 = load i64, i64* %210, align 8, !noalias !508
  %.not.i.i.i.i.i.i.i.i601 = icmp eq i64 %211, 0
  br i1 %.not.i.i.i.i.i.i.i.i601, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611, label %Then.i.i.i.i.i.i.i.i603

Then.i.i.i.i.i.i.i.i603:                          ; preds = %OptionalNonNull.i.i.i.i.i.i.i602
  %212 = add i64 %211, -1
  store i64 %212, i64* %210, align 8, !noalias !508
  %213 = icmp eq i64 %211, -9223372036854775808
  br i1 %213, label %Then1.i.i.i.i.i.i.i.i604, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611

Then1.i.i.i.i.i.i.i.i604:                         ; preds = %Then.i.i.i.i.i.i.i.i603
  tail call void @roc_dealloc(i8* %209, i32 8) #11, !noalias !508
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611

OptionalEndIf.i.i.i.i607:                         ; preds = %Else.i.i.i574
  %.inv5.i605 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i606 = select i1 %.inv5.i605, i64 4, i64 %.pre-phi.i.i.i572
  %214 = shl nuw i64 %..i.i.i.i.i.i.i606, 4
  %215 = or i64 %214, 8
  %216 = tail call i8* @roc_alloc(i64 %215, i32 8) #11, !noalias !509
  %217 = icmp ne i8* %216, null
  tail call void @llvm.assume(i1 %217) #11
  %218 = getelementptr inbounds i8, i8* %216, i64 8
  %219 = bitcast i8* %216 to i64*
  store i64 -9223372036854775808, i64* %219, align 8, !noalias !509
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611: ; preds = %OptionalEndIf.i.i.i.i607, %Then1.i.i.i.i.i.i.i.i604, %Then.i.i.i.i.i.i.i.i603, %OptionalNonNull.i.i.i.i.i.i.i602, %OptionalEndIf.i.i.i.i.i600, %EndIf.i.i.i.i.i594, %EndIf9.i.i.i.i.i593, %Then.i.i.i.i583
  %list_alloca.i.sroa.6.0.ph.i608 = phi i64 [ %..i.i.i.i.i.i.i.i597, %OptionalEndIf.i.i.i.i.i600 ], [ %..i.i.i.i.i.i.i.i597, %OptionalNonNull.i.i.i.i.i.i.i602 ], [ %..i.i.i.i.i.i.i.i597, %Then.i.i.i.i.i.i.i.i603 ], [ %..i.i.i.i.i.i.i.i597, %Then1.i.i.i.i.i.i.i.i604 ], [ %..i.i.i.i.i.i591, %EndIf9.i.i.i.i.i593 ], [ %..i.i.i.i.i.i591, %EndIf.i.i.i.i.i594 ], [ %struct_field1.unpack118, %Then.i.i.i.i583 ], [ %..i.i.i.i.i.i.i606, %OptionalEndIf.i.i.i.i607 ]
  %list_alloca.i.sroa.0.0.ph.i609 = phi i8* [ %200, %OptionalEndIf.i.i.i.i.i600 ], [ %200, %OptionalNonNull.i.i.i.i.i.i.i602 ], [ %200, %Then.i.i.i.i.i.i.i.i603 ], [ %200, %Then1.i.i.i.i.i.i.i.i604 ], [ %struct_field1.unpack, %EndIf9.i.i.i.i.i593 ], [ %195, %EndIf.i.i.i.i.i594 ], [ %struct_field1.unpack, %Then.i.i.i.i583 ], [ %218, %OptionalEndIf.i.i.i.i607 ]
  %element_to_pass_as_opaque.i.0.sroa_cast35.i610 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i564 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast35.i610)
  %220 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast35.i610, i8* noundef nonnull align 8 dereferenceable(16) %220, i64 16, i1 false) #11
  br label %OptionalThen1.i.i.i618

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i614: ; preds = %BoolAndTrue.i.i.i571
  %element_to_pass_as_opaque.i.0.sroa_cast.i612 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i564 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast.i612)
  %221 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast.i612, i8* noundef nonnull align 8 dereferenceable(16) %221, i64 16, i1 false) #11
  %.not.i.i7.i613 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i.i7.i613, label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit625, label %OptionalThen1.i.i.i618

OptionalThen1.i.i.i618:                           ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i614, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611
  %list_alloca.i.sroa.0.039.i615 = phi i8* [ %list_alloca.i.sroa.0.0.ph.i609, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611 ], [ %struct_field1.unpack, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i614 ]
  %list_alloca.i.sroa.6.037.i616 = phi i64 [ %list_alloca.i.sroa.6.0.ph.i608, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i611 ], [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i614 ]
  %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i617.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i564 to i8*
  %222 = shl nuw i64 %struct_field1.unpack116, 4
  %223 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.039.i615, i64 %222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %223, i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i617.pre-phi, i64 16, i1 false) #11, !noalias !512
  br label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit625

List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit625: ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i614, %OptionalThen1.i.i.i618
  %list_alloca.i.sroa.0.040.i619 = phi i8* [ null, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i614 ], [ %list_alloca.i.sroa.0.039.i615, %OptionalThen1.i.i.i618 ]
  %list_alloca.i.sroa.6.038.i620 = phi i64 [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i614 ], [ %list_alloca.i.sroa.6.037.i616, %OptionalThen1.i.i.i618 ]
  %element_to_pass_as_opaque.i.i564.0.sroa_cast948.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i564 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.i564.0.sroa_cast948.pre-phi)
  %call.i297 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field, i64 1) #11
  %has_overflowed.i298 = extractvalue { i64, i1 } %call.i297, 1
  br i1 %has_overflowed.i298, label %throw_block.i300, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301

throw_block.i300:                                 ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit625
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit301: ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit625
  %224 = add nuw i64 %struct_field1.unpack116, 1
  %operation_result.i299 = extractvalue { i64, i1 } %call.i297, 0
  %struct_alloca35 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca35.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca35, i64 0, i32 0
  store i64 %operation_result.i299, i64* %struct_alloca35.repack, align 8
  br label %common.ret

branch46:                                         ; preds = %entry
  %tag_alloca36 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr39 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca36, i64 0, i32 2
  store i8 6, i8* %tag_id_ptr39, align 8
  %.not.i.i.i.i.i.i627 = icmp slt i64 %struct_field1.unpack118, 0
  %225 = select i1 %.not.i.i.i.i.i.i627, i64 %struct_field1.unpack116, i64 %struct_field1.unpack118
  %226 = icmp ne i64 %225, 0
  %227 = or i1 %.not.i.i.i.i.i.i627, %226
  br i1 %227, label %list.RocList.isUnique.exit.i.i.i629, label %BoolAndTrue.i.i.i633

list.RocList.isUnique.exit.i.i.i629:              ; preds = %branch46
  %228 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %229 = bitcast i8* %228 to i64*
  %230 = load i64, i64* %229, align 8, !noalias !515
  %phi.cmp.i.i.i.i628 = icmp eq i64 %230, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i628, label %BoolAndTrue.i.i.i633, label %list.RocList.isUnique.exit.i.i.i.thread.i631

list.RocList.isUnique.exit.i.i.i.thread.i631:     ; preds = %list.RocList.isUnique.exit.i.i.i629
  %.pre-phi.i.i27.i630 = add nuw i64 %struct_field1.unpack116, 1
  br label %OptionalEndIf.i.i.i.i.i662

BoolAndTrue.i.i.i633:                             ; preds = %list.RocList.isUnique.exit.i.i.i629, %branch46
  %.not.i.i.not.i632 = icmp ugt i64 %225, %struct_field1.unpack116
  br i1 %.not.i.i.not.i632, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i676, label %Else.i.i.i636

Else.i.i.i636:                                    ; preds = %BoolAndTrue.i.i.i633
  %.pre-phi.i.i.i634 = add nuw i64 %struct_field1.unpack116, 1
  %.not.i1.i.i.i635 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i1.i.i.i635, label %OptionalEndIf.i.i.i.i669, label %OptionalThen.i.i.i.i637

OptionalThen.i.i.i.i637:                          ; preds = %Else.i.i.i636
  br i1 %227, label %list.RocList.isUnique.exit.i.i.i.i643, label %Then.i.i.i.i645

list.RocList.isUnique.exit.i.i.i.i643:            ; preds = %OptionalThen.i.i.i.i637
  %.phi.trans.insert.i638 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %.phi.trans.insert46.i639 = bitcast i8* %.phi.trans.insert.i638 to i64*
  %.pre.i640 = load i64, i64* %.phi.trans.insert46.i639, align 8, !noalias !518
  %phi.cmp.i.i.i.i.i641 = icmp eq i64 %.pre.i640, -9223372036854775808
  %231 = xor i1 %.not.i.i.i.i.i.i627, true
  %or.cond.i.i.i.i642 = select i1 %phi.cmp.i.i.i.i.i641, i1 %231, i1 false
  br i1 %or.cond.i.i.i.i642, label %Then.i.i.i.i645, label %OptionalEndIf.i.i.i.i.i662

Then.i.i.i.i645:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i643, %OptionalThen.i.i.i.i637
  %.not21.i.i.i.not.i644 = icmp ugt i64 %struct_field1.unpack118, %struct_field1.unpack116
  br i1 %.not21.i.i.i.not.i644, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673, label %Else.i.i.i.i646

Else.i.i.i.i646:                                  ; preds = %Then.i.i.i.i645
  %232 = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %232, label %EndIf9.i.i.i.i.i655, label %Else1.i.i.i.i.i647

Else1.i.i.i.i.i647:                               ; preds = %Else.i.i.i.i646
  %233 = icmp ult i64 %struct_field1.unpack118, 256
  br i1 %233, label %Then4.i.i.i.i.i649, label %Else2.i.i.i.i.i648

Else2.i.i.i.i.i648:                               ; preds = %Else1.i.i.i.i.i647
  %234 = icmp ugt i64 %struct_field1.unpack118, 8192
  br i1 %234, label %Then5.i.i.i.i.i650, label %Else6.i.i.i.i.i651

Then4.i.i.i.i.i649:                               ; preds = %Else1.i.i.i.i.i647
  %235 = shl nuw nsw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i655

Then5.i.i.i.i.i650:                               ; preds = %Else2.i.i.i.i.i648
  %236 = shl nuw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i655

Else6.i.i.i.i.i651:                               ; preds = %Else2.i.i.i.i.i648
  %237 = mul nuw nsw i64 %struct_field1.unpack118, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = lshr i64 %238, 1
  br label %EndIf9.i.i.i.i.i655

EndIf9.i.i.i.i.i655:                              ; preds = %Else6.i.i.i.i.i651, %Then5.i.i.i.i.i650, %Then4.i.i.i.i.i649, %Else.i.i.i.i646
  %new_capacity.0.i.i.i.i.i652 = phi i64 [ %235, %Then4.i.i.i.i.i649 ], [ %236, %Then5.i.i.i.i.i650 ], [ %239, %Else6.i.i.i.i.i651 ], [ 4, %Else.i.i.i.i646 ]
  %240 = icmp ugt i64 %new_capacity.0.i.i.i.i.i652, %.pre-phi.i.i.i634
  %..i.i.i.i.i.i653 = select i1 %240, i64 %new_capacity.0.i.i.i.i.i652, i64 %.pre-phi.i.i.i634
  %241 = shl nuw i64 %struct_field1.unpack118, 4
  %242 = shl nuw i64 %..i.i.i.i.i.i653, 4
  %.not.i.i.i.i.i654 = icmp ult i64 %241, %242
  br i1 %.not.i.i.i.i.i654, label %EndIf.i.i.i.i.i656, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673

EndIf.i.i.i.i.i656:                               ; preds = %EndIf9.i.i.i.i.i655
  %243 = or i64 %242, 8
  %244 = or i64 %241, 8
  %245 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %246 = tail call i8* @roc_realloc(i8* %245, i64 %243, i64 %244, i32 8) #11, !noalias !518
  %247 = getelementptr inbounds i8, i8* %246, i64 8
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673

OptionalEndIf.i.i.i.i.i662:                       ; preds = %list.RocList.isUnique.exit.i.i.i.i643, %list.RocList.isUnique.exit.i.i.i.thread.i631
  %.pre-phi.i.i293250.i657 = phi i64 [ %.pre-phi.i.i27.i630, %list.RocList.isUnique.exit.i.i.i.thread.i631 ], [ %.pre-phi.i.i.i634, %list.RocList.isUnique.exit.i.i.i.i643 ]
  %.inv.i658 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i.i659 = select i1 %.inv.i658, i64 4, i64 %.pre-phi.i.i293250.i657
  %248 = shl nuw i64 %..i.i.i.i.i.i.i.i659, 4
  %249 = or i64 %248, 8
  %250 = tail call i8* @roc_alloc(i64 %249, i32 8) #11, !noalias !521
  %251 = icmp ne i8* %250, null
  tail call void @llvm.assume(i1 %251) #11
  %252 = getelementptr inbounds i8, i8* %250, i64 8
  %253 = bitcast i8* %250 to i64*
  store i64 -9223372036854775808, i64* %253, align 8, !noalias !521
  %254 = shl nuw i64 %struct_field1.unpack116, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %252, i8* nonnull align 1 %struct_field1.unpack, i64 %254, i1 false) #11, !noalias !526
  %255 = getelementptr inbounds i8, i8* %252, i64 %254
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %255, i8 0, i64 16, i1 false) #11, !noalias !526
  %phi.cast.i.i.i.i.i660 = ptrtoint i8* %struct_field1.unpack to i64
  %256 = shl i64 %struct_field1.unpack118, 1
  %257 = select i1 %.not.i.i.i.i.i.i627, i64 %256, i64 %phi.cast.i.i.i.i.i660
  %258 = icmp ne i64 %struct_field1.unpack118, 0
  %259 = icmp ne i64 %257, 0
  %or.cond.i.i.i.i.i.i.i661 = select i1 %258, i1 %259, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i661, label %OptionalNonNull.i.i.i.i.i.i.i664, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673

OptionalNonNull.i.i.i.i.i.i.i664:                 ; preds = %OptionalEndIf.i.i.i.i.i662
  %260 = inttoptr i64 %257 to i8*
  %261 = getelementptr inbounds i8, i8* %260, i64 -8
  %262 = bitcast i8* %261 to i64*
  %263 = load i64, i64* %262, align 8, !noalias !526
  %.not.i.i.i.i.i.i.i.i663 = icmp eq i64 %263, 0
  br i1 %.not.i.i.i.i.i.i.i.i663, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673, label %Then.i.i.i.i.i.i.i.i665

Then.i.i.i.i.i.i.i.i665:                          ; preds = %OptionalNonNull.i.i.i.i.i.i.i664
  %264 = add i64 %263, -1
  store i64 %264, i64* %262, align 8, !noalias !526
  %265 = icmp eq i64 %263, -9223372036854775808
  br i1 %265, label %Then1.i.i.i.i.i.i.i.i666, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673

Then1.i.i.i.i.i.i.i.i666:                         ; preds = %Then.i.i.i.i.i.i.i.i665
  tail call void @roc_dealloc(i8* %261, i32 8) #11, !noalias !526
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673

OptionalEndIf.i.i.i.i669:                         ; preds = %Else.i.i.i636
  %.inv5.i667 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i668 = select i1 %.inv5.i667, i64 4, i64 %.pre-phi.i.i.i634
  %266 = shl nuw i64 %..i.i.i.i.i.i.i668, 4
  %267 = or i64 %266, 8
  %268 = tail call i8* @roc_alloc(i64 %267, i32 8) #11, !noalias !527
  %269 = icmp ne i8* %268, null
  tail call void @llvm.assume(i1 %269) #11
  %270 = getelementptr inbounds i8, i8* %268, i64 8
  %271 = bitcast i8* %268 to i64*
  store i64 -9223372036854775808, i64* %271, align 8, !noalias !527
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673: ; preds = %OptionalEndIf.i.i.i.i669, %Then1.i.i.i.i.i.i.i.i666, %Then.i.i.i.i.i.i.i.i665, %OptionalNonNull.i.i.i.i.i.i.i664, %OptionalEndIf.i.i.i.i.i662, %EndIf.i.i.i.i.i656, %EndIf9.i.i.i.i.i655, %Then.i.i.i.i645
  %list_alloca.i.sroa.6.0.ph.i670 = phi i64 [ %..i.i.i.i.i.i.i.i659, %OptionalEndIf.i.i.i.i.i662 ], [ %..i.i.i.i.i.i.i.i659, %OptionalNonNull.i.i.i.i.i.i.i664 ], [ %..i.i.i.i.i.i.i.i659, %Then.i.i.i.i.i.i.i.i665 ], [ %..i.i.i.i.i.i.i.i659, %Then1.i.i.i.i.i.i.i.i666 ], [ %..i.i.i.i.i.i653, %EndIf9.i.i.i.i.i655 ], [ %..i.i.i.i.i.i653, %EndIf.i.i.i.i.i656 ], [ %struct_field1.unpack118, %Then.i.i.i.i645 ], [ %..i.i.i.i.i.i.i668, %OptionalEndIf.i.i.i.i669 ]
  %list_alloca.i.sroa.0.0.ph.i671 = phi i8* [ %252, %OptionalEndIf.i.i.i.i.i662 ], [ %252, %OptionalNonNull.i.i.i.i.i.i.i664 ], [ %252, %Then.i.i.i.i.i.i.i.i665 ], [ %252, %Then1.i.i.i.i.i.i.i.i666 ], [ %struct_field1.unpack, %EndIf9.i.i.i.i.i655 ], [ %247, %EndIf.i.i.i.i.i656 ], [ %struct_field1.unpack, %Then.i.i.i.i645 ], [ %270, %OptionalEndIf.i.i.i.i669 ]
  %element_to_pass_as_opaque.i.0.sroa_cast35.i672 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i626 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast35.i672)
  %272 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast35.i672, i8* noundef nonnull align 8 dereferenceable(16) %272, i64 16, i1 false) #11
  br label %OptionalThen1.i.i.i680

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i676: ; preds = %BoolAndTrue.i.i.i633
  %element_to_pass_as_opaque.i.0.sroa_cast.i674 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i626 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast.i674)
  %273 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast.i674, i8* noundef nonnull align 8 dereferenceable(16) %273, i64 16, i1 false) #11
  %.not.i.i7.i675 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i.i7.i675, label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit687, label %OptionalThen1.i.i.i680

OptionalThen1.i.i.i680:                           ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i676, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673
  %list_alloca.i.sroa.0.039.i677 = phi i8* [ %list_alloca.i.sroa.0.0.ph.i671, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673 ], [ %struct_field1.unpack, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i676 ]
  %list_alloca.i.sroa.6.037.i678 = phi i64 [ %list_alloca.i.sroa.6.0.ph.i670, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i673 ], [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i676 ]
  %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i679.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i626 to i8*
  %274 = shl nuw i64 %struct_field1.unpack116, 4
  %275 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.039.i677, i64 %274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %275, i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i679.pre-phi, i64 16, i1 false) #11, !noalias !530
  br label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit687

List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit687: ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i676, %OptionalThen1.i.i.i680
  %list_alloca.i.sroa.0.040.i681 = phi i8* [ null, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i676 ], [ %list_alloca.i.sroa.0.039.i677, %OptionalThen1.i.i.i680 ]
  %list_alloca.i.sroa.6.038.i682 = phi i64 [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i676 ], [ %list_alloca.i.sroa.6.037.i678, %OptionalThen1.i.i.i680 ]
  %element_to_pass_as_opaque.i.i626.0.sroa_cast950.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i626 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.i626.0.sroa_cast950.pre-phi)
  %call.i302 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field, i64 1) #11
  %has_overflowed.i303 = extractvalue { i64, i1 } %call.i302, 1
  br i1 %has_overflowed.i303, label %throw_block.i305, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306

throw_block.i305:                                 ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit687
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit306: ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit687
  %276 = add nuw i64 %struct_field1.unpack116, 1
  %operation_result.i304 = extractvalue { i64, i1 } %call.i302, 0
  %struct_alloca45 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca45.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca45, i64 0, i32 0
  store i64 %operation_result.i304, i64* %struct_alloca45.repack, align 8
  br label %common.ret

branch44:                                         ; preds = %entry
  %tag_alloca46 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr49 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca46, i64 0, i32 2
  store i8 2, i8* %tag_id_ptr49, align 8
  %.not.i.i.i.i.i.i689 = icmp slt i64 %struct_field1.unpack118, 0
  %277 = select i1 %.not.i.i.i.i.i.i689, i64 %struct_field1.unpack116, i64 %struct_field1.unpack118
  %278 = icmp ne i64 %277, 0
  %279 = or i1 %.not.i.i.i.i.i.i689, %278
  br i1 %279, label %list.RocList.isUnique.exit.i.i.i691, label %BoolAndTrue.i.i.i695

list.RocList.isUnique.exit.i.i.i691:              ; preds = %branch44
  %280 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %281 = bitcast i8* %280 to i64*
  %282 = load i64, i64* %281, align 8, !noalias !533
  %phi.cmp.i.i.i.i690 = icmp eq i64 %282, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i690, label %BoolAndTrue.i.i.i695, label %list.RocList.isUnique.exit.i.i.i.thread.i693

list.RocList.isUnique.exit.i.i.i.thread.i693:     ; preds = %list.RocList.isUnique.exit.i.i.i691
  %.pre-phi.i.i27.i692 = add nuw i64 %struct_field1.unpack116, 1
  br label %OptionalEndIf.i.i.i.i.i724

BoolAndTrue.i.i.i695:                             ; preds = %list.RocList.isUnique.exit.i.i.i691, %branch44
  %.not.i.i.not.i694 = icmp ugt i64 %277, %struct_field1.unpack116
  br i1 %.not.i.i.not.i694, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i738, label %Else.i.i.i698

Else.i.i.i698:                                    ; preds = %BoolAndTrue.i.i.i695
  %.pre-phi.i.i.i696 = add nuw i64 %struct_field1.unpack116, 1
  %.not.i1.i.i.i697 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i1.i.i.i697, label %OptionalEndIf.i.i.i.i731, label %OptionalThen.i.i.i.i699

OptionalThen.i.i.i.i699:                          ; preds = %Else.i.i.i698
  br i1 %279, label %list.RocList.isUnique.exit.i.i.i.i705, label %Then.i.i.i.i707

list.RocList.isUnique.exit.i.i.i.i705:            ; preds = %OptionalThen.i.i.i.i699
  %.phi.trans.insert.i700 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %.phi.trans.insert46.i701 = bitcast i8* %.phi.trans.insert.i700 to i64*
  %.pre.i702 = load i64, i64* %.phi.trans.insert46.i701, align 8, !noalias !536
  %phi.cmp.i.i.i.i.i703 = icmp eq i64 %.pre.i702, -9223372036854775808
  %283 = xor i1 %.not.i.i.i.i.i.i689, true
  %or.cond.i.i.i.i704 = select i1 %phi.cmp.i.i.i.i.i703, i1 %283, i1 false
  br i1 %or.cond.i.i.i.i704, label %Then.i.i.i.i707, label %OptionalEndIf.i.i.i.i.i724

Then.i.i.i.i707:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i705, %OptionalThen.i.i.i.i699
  %.not21.i.i.i.not.i706 = icmp ugt i64 %struct_field1.unpack118, %struct_field1.unpack116
  br i1 %.not21.i.i.i.not.i706, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735, label %Else.i.i.i.i708

Else.i.i.i.i708:                                  ; preds = %Then.i.i.i.i707
  %284 = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %284, label %EndIf9.i.i.i.i.i717, label %Else1.i.i.i.i.i709

Else1.i.i.i.i.i709:                               ; preds = %Else.i.i.i.i708
  %285 = icmp ult i64 %struct_field1.unpack118, 256
  br i1 %285, label %Then4.i.i.i.i.i711, label %Else2.i.i.i.i.i710

Else2.i.i.i.i.i710:                               ; preds = %Else1.i.i.i.i.i709
  %286 = icmp ugt i64 %struct_field1.unpack118, 8192
  br i1 %286, label %Then5.i.i.i.i.i712, label %Else6.i.i.i.i.i713

Then4.i.i.i.i.i711:                               ; preds = %Else1.i.i.i.i.i709
  %287 = shl nuw nsw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i717

Then5.i.i.i.i.i712:                               ; preds = %Else2.i.i.i.i.i710
  %288 = shl nuw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i717

Else6.i.i.i.i.i713:                               ; preds = %Else2.i.i.i.i.i710
  %289 = mul nuw nsw i64 %struct_field1.unpack118, 3
  %290 = add nuw nsw i64 %289, 1
  %291 = lshr i64 %290, 1
  br label %EndIf9.i.i.i.i.i717

EndIf9.i.i.i.i.i717:                              ; preds = %Else6.i.i.i.i.i713, %Then5.i.i.i.i.i712, %Then4.i.i.i.i.i711, %Else.i.i.i.i708
  %new_capacity.0.i.i.i.i.i714 = phi i64 [ %287, %Then4.i.i.i.i.i711 ], [ %288, %Then5.i.i.i.i.i712 ], [ %291, %Else6.i.i.i.i.i713 ], [ 4, %Else.i.i.i.i708 ]
  %292 = icmp ugt i64 %new_capacity.0.i.i.i.i.i714, %.pre-phi.i.i.i696
  %..i.i.i.i.i.i715 = select i1 %292, i64 %new_capacity.0.i.i.i.i.i714, i64 %.pre-phi.i.i.i696
  %293 = shl nuw i64 %struct_field1.unpack118, 4
  %294 = shl nuw i64 %..i.i.i.i.i.i715, 4
  %.not.i.i.i.i.i716 = icmp ult i64 %293, %294
  br i1 %.not.i.i.i.i.i716, label %EndIf.i.i.i.i.i718, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735

EndIf.i.i.i.i.i718:                               ; preds = %EndIf9.i.i.i.i.i717
  %295 = or i64 %294, 8
  %296 = or i64 %293, 8
  %297 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %298 = tail call i8* @roc_realloc(i8* %297, i64 %295, i64 %296, i32 8) #11, !noalias !536
  %299 = getelementptr inbounds i8, i8* %298, i64 8
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735

OptionalEndIf.i.i.i.i.i724:                       ; preds = %list.RocList.isUnique.exit.i.i.i.i705, %list.RocList.isUnique.exit.i.i.i.thread.i693
  %.pre-phi.i.i293250.i719 = phi i64 [ %.pre-phi.i.i27.i692, %list.RocList.isUnique.exit.i.i.i.thread.i693 ], [ %.pre-phi.i.i.i696, %list.RocList.isUnique.exit.i.i.i.i705 ]
  %.inv.i720 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i.i721 = select i1 %.inv.i720, i64 4, i64 %.pre-phi.i.i293250.i719
  %300 = shl nuw i64 %..i.i.i.i.i.i.i.i721, 4
  %301 = or i64 %300, 8
  %302 = tail call i8* @roc_alloc(i64 %301, i32 8) #11, !noalias !539
  %303 = icmp ne i8* %302, null
  tail call void @llvm.assume(i1 %303) #11
  %304 = getelementptr inbounds i8, i8* %302, i64 8
  %305 = bitcast i8* %302 to i64*
  store i64 -9223372036854775808, i64* %305, align 8, !noalias !539
  %306 = shl nuw i64 %struct_field1.unpack116, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %304, i8* nonnull align 1 %struct_field1.unpack, i64 %306, i1 false) #11, !noalias !544
  %307 = getelementptr inbounds i8, i8* %304, i64 %306
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %307, i8 0, i64 16, i1 false) #11, !noalias !544
  %phi.cast.i.i.i.i.i722 = ptrtoint i8* %struct_field1.unpack to i64
  %308 = shl i64 %struct_field1.unpack118, 1
  %309 = select i1 %.not.i.i.i.i.i.i689, i64 %308, i64 %phi.cast.i.i.i.i.i722
  %310 = icmp ne i64 %struct_field1.unpack118, 0
  %311 = icmp ne i64 %309, 0
  %or.cond.i.i.i.i.i.i.i723 = select i1 %310, i1 %311, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i723, label %OptionalNonNull.i.i.i.i.i.i.i726, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735

OptionalNonNull.i.i.i.i.i.i.i726:                 ; preds = %OptionalEndIf.i.i.i.i.i724
  %312 = inttoptr i64 %309 to i8*
  %313 = getelementptr inbounds i8, i8* %312, i64 -8
  %314 = bitcast i8* %313 to i64*
  %315 = load i64, i64* %314, align 8, !noalias !544
  %.not.i.i.i.i.i.i.i.i725 = icmp eq i64 %315, 0
  br i1 %.not.i.i.i.i.i.i.i.i725, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735, label %Then.i.i.i.i.i.i.i.i727

Then.i.i.i.i.i.i.i.i727:                          ; preds = %OptionalNonNull.i.i.i.i.i.i.i726
  %316 = add i64 %315, -1
  store i64 %316, i64* %314, align 8, !noalias !544
  %317 = icmp eq i64 %315, -9223372036854775808
  br i1 %317, label %Then1.i.i.i.i.i.i.i.i728, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735

Then1.i.i.i.i.i.i.i.i728:                         ; preds = %Then.i.i.i.i.i.i.i.i727
  tail call void @roc_dealloc(i8* %313, i32 8) #11, !noalias !544
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735

OptionalEndIf.i.i.i.i731:                         ; preds = %Else.i.i.i698
  %.inv5.i729 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i730 = select i1 %.inv5.i729, i64 4, i64 %.pre-phi.i.i.i696
  %318 = shl nuw i64 %..i.i.i.i.i.i.i730, 4
  %319 = or i64 %318, 8
  %320 = tail call i8* @roc_alloc(i64 %319, i32 8) #11, !noalias !545
  %321 = icmp ne i8* %320, null
  tail call void @llvm.assume(i1 %321) #11
  %322 = getelementptr inbounds i8, i8* %320, i64 8
  %323 = bitcast i8* %320 to i64*
  store i64 -9223372036854775808, i64* %323, align 8, !noalias !545
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735: ; preds = %OptionalEndIf.i.i.i.i731, %Then1.i.i.i.i.i.i.i.i728, %Then.i.i.i.i.i.i.i.i727, %OptionalNonNull.i.i.i.i.i.i.i726, %OptionalEndIf.i.i.i.i.i724, %EndIf.i.i.i.i.i718, %EndIf9.i.i.i.i.i717, %Then.i.i.i.i707
  %list_alloca.i.sroa.6.0.ph.i732 = phi i64 [ %..i.i.i.i.i.i.i.i721, %OptionalEndIf.i.i.i.i.i724 ], [ %..i.i.i.i.i.i.i.i721, %OptionalNonNull.i.i.i.i.i.i.i726 ], [ %..i.i.i.i.i.i.i.i721, %Then.i.i.i.i.i.i.i.i727 ], [ %..i.i.i.i.i.i.i.i721, %Then1.i.i.i.i.i.i.i.i728 ], [ %..i.i.i.i.i.i715, %EndIf9.i.i.i.i.i717 ], [ %..i.i.i.i.i.i715, %EndIf.i.i.i.i.i718 ], [ %struct_field1.unpack118, %Then.i.i.i.i707 ], [ %..i.i.i.i.i.i.i730, %OptionalEndIf.i.i.i.i731 ]
  %list_alloca.i.sroa.0.0.ph.i733 = phi i8* [ %304, %OptionalEndIf.i.i.i.i.i724 ], [ %304, %OptionalNonNull.i.i.i.i.i.i.i726 ], [ %304, %Then.i.i.i.i.i.i.i.i727 ], [ %304, %Then1.i.i.i.i.i.i.i.i728 ], [ %struct_field1.unpack, %EndIf9.i.i.i.i.i717 ], [ %299, %EndIf.i.i.i.i.i718 ], [ %struct_field1.unpack, %Then.i.i.i.i707 ], [ %322, %OptionalEndIf.i.i.i.i731 ]
  %element_to_pass_as_opaque.i.0.sroa_cast35.i734 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i688 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast35.i734)
  %324 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast35.i734, i8* noundef nonnull align 8 dereferenceable(16) %324, i64 16, i1 false) #11
  br label %OptionalThen1.i.i.i742

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i738: ; preds = %BoolAndTrue.i.i.i695
  %element_to_pass_as_opaque.i.0.sroa_cast.i736 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i688 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast.i736)
  %325 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast.i736, i8* noundef nonnull align 8 dereferenceable(16) %325, i64 16, i1 false) #11
  %.not.i.i7.i737 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i.i7.i737, label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit749, label %OptionalThen1.i.i.i742

OptionalThen1.i.i.i742:                           ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i738, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735
  %list_alloca.i.sroa.0.039.i739 = phi i8* [ %list_alloca.i.sroa.0.0.ph.i733, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735 ], [ %struct_field1.unpack, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i738 ]
  %list_alloca.i.sroa.6.037.i740 = phi i64 [ %list_alloca.i.sroa.6.0.ph.i732, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i735 ], [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i738 ]
  %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i741.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i688 to i8*
  %326 = shl nuw i64 %struct_field1.unpack116, 4
  %327 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.039.i739, i64 %326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %327, i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i741.pre-phi, i64 16, i1 false) #11, !noalias !548
  br label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit749

List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit749: ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i738, %OptionalThen1.i.i.i742
  %list_alloca.i.sroa.0.040.i743 = phi i8* [ null, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i738 ], [ %list_alloca.i.sroa.0.039.i739, %OptionalThen1.i.i.i742 ]
  %list_alloca.i.sroa.6.038.i744 = phi i64 [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i738 ], [ %list_alloca.i.sroa.6.037.i740, %OptionalThen1.i.i.i742 ]
  %element_to_pass_as_opaque.i.i688.0.sroa_cast952.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i688 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.i688.0.sroa_cast952.pre-phi)
  %call.i307 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field, i64 1) #11
  %has_overflowed.i308 = extractvalue { i64, i1 } %call.i307, 1
  br i1 %has_overflowed.i308, label %throw_block.i310, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311

throw_block.i310:                                 ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit749
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit311: ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit749
  %328 = add nuw i64 %struct_field1.unpack116, 1
  %operation_result.i309 = extractvalue { i64, i1 } %call.i307, 0
  %struct_alloca55 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca55.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca55, i64 0, i32 0
  store i64 %operation_result.i309, i64* %struct_alloca55.repack, align 8
  br label %common.ret

branch91:                                         ; preds = %entry
  %tag_alloca56 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %329 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca56, i64 0, i32 1, i64 0
  store i64 0, i64* %329, align 8
  %tag_id_ptr59 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca56, i64 0, i32 2
  store i8 4, i8* %tag_id_ptr59, align 8
  %.not.i.i.i.i.i.i751 = icmp slt i64 %struct_field1.unpack118, 0
  %330 = select i1 %.not.i.i.i.i.i.i751, i64 %struct_field1.unpack116, i64 %struct_field1.unpack118
  %331 = icmp ne i64 %330, 0
  %332 = or i1 %.not.i.i.i.i.i.i751, %331
  br i1 %332, label %list.RocList.isUnique.exit.i.i.i753, label %BoolAndTrue.i.i.i757

list.RocList.isUnique.exit.i.i.i753:              ; preds = %branch91
  %333 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %334 = bitcast i8* %333 to i64*
  %335 = load i64, i64* %334, align 8, !noalias !551
  %phi.cmp.i.i.i.i752 = icmp eq i64 %335, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i752, label %BoolAndTrue.i.i.i757, label %list.RocList.isUnique.exit.i.i.i.thread.i755

list.RocList.isUnique.exit.i.i.i.thread.i755:     ; preds = %list.RocList.isUnique.exit.i.i.i753
  %.pre-phi.i.i27.i754 = add nuw i64 %struct_field1.unpack116, 1
  br label %OptionalEndIf.i.i.i.i.i786

BoolAndTrue.i.i.i757:                             ; preds = %list.RocList.isUnique.exit.i.i.i753, %branch91
  %.not.i.i.not.i756 = icmp ugt i64 %330, %struct_field1.unpack116
  br i1 %.not.i.i.not.i756, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i800, label %Else.i.i.i760

Else.i.i.i760:                                    ; preds = %BoolAndTrue.i.i.i757
  %.pre-phi.i.i.i758 = add nuw i64 %struct_field1.unpack116, 1
  %.not.i1.i.i.i759 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i1.i.i.i759, label %OptionalEndIf.i.i.i.i793, label %OptionalThen.i.i.i.i761

OptionalThen.i.i.i.i761:                          ; preds = %Else.i.i.i760
  br i1 %332, label %list.RocList.isUnique.exit.i.i.i.i767, label %Then.i.i.i.i769

list.RocList.isUnique.exit.i.i.i.i767:            ; preds = %OptionalThen.i.i.i.i761
  %.phi.trans.insert.i762 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %.phi.trans.insert46.i763 = bitcast i8* %.phi.trans.insert.i762 to i64*
  %.pre.i764 = load i64, i64* %.phi.trans.insert46.i763, align 8, !noalias !554
  %phi.cmp.i.i.i.i.i765 = icmp eq i64 %.pre.i764, -9223372036854775808
  %336 = xor i1 %.not.i.i.i.i.i.i751, true
  %or.cond.i.i.i.i766 = select i1 %phi.cmp.i.i.i.i.i765, i1 %336, i1 false
  br i1 %or.cond.i.i.i.i766, label %Then.i.i.i.i769, label %OptionalEndIf.i.i.i.i.i786

Then.i.i.i.i769:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i767, %OptionalThen.i.i.i.i761
  %.not21.i.i.i.not.i768 = icmp ugt i64 %struct_field1.unpack118, %struct_field1.unpack116
  br i1 %.not21.i.i.i.not.i768, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797, label %Else.i.i.i.i770

Else.i.i.i.i770:                                  ; preds = %Then.i.i.i.i769
  %337 = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %337, label %EndIf9.i.i.i.i.i779, label %Else1.i.i.i.i.i771

Else1.i.i.i.i.i771:                               ; preds = %Else.i.i.i.i770
  %338 = icmp ult i64 %struct_field1.unpack118, 256
  br i1 %338, label %Then4.i.i.i.i.i773, label %Else2.i.i.i.i.i772

Else2.i.i.i.i.i772:                               ; preds = %Else1.i.i.i.i.i771
  %339 = icmp ugt i64 %struct_field1.unpack118, 8192
  br i1 %339, label %Then5.i.i.i.i.i774, label %Else6.i.i.i.i.i775

Then4.i.i.i.i.i773:                               ; preds = %Else1.i.i.i.i.i771
  %340 = shl nuw nsw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i779

Then5.i.i.i.i.i774:                               ; preds = %Else2.i.i.i.i.i772
  %341 = shl nuw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i779

Else6.i.i.i.i.i775:                               ; preds = %Else2.i.i.i.i.i772
  %342 = mul nuw nsw i64 %struct_field1.unpack118, 3
  %343 = add nuw nsw i64 %342, 1
  %344 = lshr i64 %343, 1
  br label %EndIf9.i.i.i.i.i779

EndIf9.i.i.i.i.i779:                              ; preds = %Else6.i.i.i.i.i775, %Then5.i.i.i.i.i774, %Then4.i.i.i.i.i773, %Else.i.i.i.i770
  %new_capacity.0.i.i.i.i.i776 = phi i64 [ %340, %Then4.i.i.i.i.i773 ], [ %341, %Then5.i.i.i.i.i774 ], [ %344, %Else6.i.i.i.i.i775 ], [ 4, %Else.i.i.i.i770 ]
  %345 = icmp ugt i64 %new_capacity.0.i.i.i.i.i776, %.pre-phi.i.i.i758
  %..i.i.i.i.i.i777 = select i1 %345, i64 %new_capacity.0.i.i.i.i.i776, i64 %.pre-phi.i.i.i758
  %346 = shl nuw i64 %struct_field1.unpack118, 4
  %347 = shl nuw i64 %..i.i.i.i.i.i777, 4
  %.not.i.i.i.i.i778 = icmp ult i64 %346, %347
  br i1 %.not.i.i.i.i.i778, label %EndIf.i.i.i.i.i780, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797

EndIf.i.i.i.i.i780:                               ; preds = %EndIf9.i.i.i.i.i779
  %348 = or i64 %347, 8
  %349 = or i64 %346, 8
  %350 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %351 = tail call i8* @roc_realloc(i8* %350, i64 %348, i64 %349, i32 8) #11, !noalias !554
  %352 = getelementptr inbounds i8, i8* %351, i64 8
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797

OptionalEndIf.i.i.i.i.i786:                       ; preds = %list.RocList.isUnique.exit.i.i.i.i767, %list.RocList.isUnique.exit.i.i.i.thread.i755
  %.pre-phi.i.i293250.i781 = phi i64 [ %.pre-phi.i.i27.i754, %list.RocList.isUnique.exit.i.i.i.thread.i755 ], [ %.pre-phi.i.i.i758, %list.RocList.isUnique.exit.i.i.i.i767 ]
  %.inv.i782 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i.i783 = select i1 %.inv.i782, i64 4, i64 %.pre-phi.i.i293250.i781
  %353 = shl nuw i64 %..i.i.i.i.i.i.i.i783, 4
  %354 = or i64 %353, 8
  %355 = tail call i8* @roc_alloc(i64 %354, i32 8) #11, !noalias !557
  %356 = icmp ne i8* %355, null
  tail call void @llvm.assume(i1 %356) #11
  %357 = getelementptr inbounds i8, i8* %355, i64 8
  %358 = bitcast i8* %355 to i64*
  store i64 -9223372036854775808, i64* %358, align 8, !noalias !557
  %359 = shl nuw i64 %struct_field1.unpack116, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %357, i8* nonnull align 1 %struct_field1.unpack, i64 %359, i1 false) #11, !noalias !562
  %360 = getelementptr inbounds i8, i8* %357, i64 %359
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %360, i8 0, i64 16, i1 false) #11, !noalias !562
  %phi.cast.i.i.i.i.i784 = ptrtoint i8* %struct_field1.unpack to i64
  %361 = shl i64 %struct_field1.unpack118, 1
  %362 = select i1 %.not.i.i.i.i.i.i751, i64 %361, i64 %phi.cast.i.i.i.i.i784
  %363 = icmp ne i64 %struct_field1.unpack118, 0
  %364 = icmp ne i64 %362, 0
  %or.cond.i.i.i.i.i.i.i785 = select i1 %363, i1 %364, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i785, label %OptionalNonNull.i.i.i.i.i.i.i788, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797

OptionalNonNull.i.i.i.i.i.i.i788:                 ; preds = %OptionalEndIf.i.i.i.i.i786
  %365 = inttoptr i64 %362 to i8*
  %366 = getelementptr inbounds i8, i8* %365, i64 -8
  %367 = bitcast i8* %366 to i64*
  %368 = load i64, i64* %367, align 8, !noalias !562
  %.not.i.i.i.i.i.i.i.i787 = icmp eq i64 %368, 0
  br i1 %.not.i.i.i.i.i.i.i.i787, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797, label %Then.i.i.i.i.i.i.i.i789

Then.i.i.i.i.i.i.i.i789:                          ; preds = %OptionalNonNull.i.i.i.i.i.i.i788
  %369 = add i64 %368, -1
  store i64 %369, i64* %367, align 8, !noalias !562
  %370 = icmp eq i64 %368, -9223372036854775808
  br i1 %370, label %Then1.i.i.i.i.i.i.i.i790, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797

Then1.i.i.i.i.i.i.i.i790:                         ; preds = %Then.i.i.i.i.i.i.i.i789
  tail call void @roc_dealloc(i8* %366, i32 8) #11, !noalias !562
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797

OptionalEndIf.i.i.i.i793:                         ; preds = %Else.i.i.i760
  %.inv5.i791 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i792 = select i1 %.inv5.i791, i64 4, i64 %.pre-phi.i.i.i758
  %371 = shl nuw i64 %..i.i.i.i.i.i.i792, 4
  %372 = or i64 %371, 8
  %373 = tail call i8* @roc_alloc(i64 %372, i32 8) #11, !noalias !563
  %374 = icmp ne i8* %373, null
  tail call void @llvm.assume(i1 %374) #11
  %375 = getelementptr inbounds i8, i8* %373, i64 8
  %376 = bitcast i8* %373 to i64*
  store i64 -9223372036854775808, i64* %376, align 8, !noalias !563
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797: ; preds = %OptionalEndIf.i.i.i.i793, %Then1.i.i.i.i.i.i.i.i790, %Then.i.i.i.i.i.i.i.i789, %OptionalNonNull.i.i.i.i.i.i.i788, %OptionalEndIf.i.i.i.i.i786, %EndIf.i.i.i.i.i780, %EndIf9.i.i.i.i.i779, %Then.i.i.i.i769
  %list_alloca.i.sroa.6.0.ph.i794 = phi i64 [ %..i.i.i.i.i.i.i.i783, %OptionalEndIf.i.i.i.i.i786 ], [ %..i.i.i.i.i.i.i.i783, %OptionalNonNull.i.i.i.i.i.i.i788 ], [ %..i.i.i.i.i.i.i.i783, %Then.i.i.i.i.i.i.i.i789 ], [ %..i.i.i.i.i.i.i.i783, %Then1.i.i.i.i.i.i.i.i790 ], [ %..i.i.i.i.i.i777, %EndIf9.i.i.i.i.i779 ], [ %..i.i.i.i.i.i777, %EndIf.i.i.i.i.i780 ], [ %struct_field1.unpack118, %Then.i.i.i.i769 ], [ %..i.i.i.i.i.i.i792, %OptionalEndIf.i.i.i.i793 ]
  %list_alloca.i.sroa.0.0.ph.i795 = phi i8* [ %357, %OptionalEndIf.i.i.i.i.i786 ], [ %357, %OptionalNonNull.i.i.i.i.i.i.i788 ], [ %357, %Then.i.i.i.i.i.i.i.i789 ], [ %357, %Then1.i.i.i.i.i.i.i.i790 ], [ %struct_field1.unpack, %EndIf9.i.i.i.i.i779 ], [ %352, %EndIf.i.i.i.i.i780 ], [ %struct_field1.unpack, %Then.i.i.i.i769 ], [ %375, %OptionalEndIf.i.i.i.i793 ]
  %element_to_pass_as_opaque.i.0.sroa_cast35.i796 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i750 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast35.i796)
  %377 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast35.i796, i8* noundef nonnull align 8 dereferenceable(16) %377, i64 16, i1 false) #11
  br label %OptionalThen1.i.i.i804

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i800: ; preds = %BoolAndTrue.i.i.i757
  %element_to_pass_as_opaque.i.0.sroa_cast.i798 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i750 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast.i798)
  %378 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast.i798, i8* noundef nonnull align 8 dereferenceable(16) %378, i64 16, i1 false) #11
  %.not.i.i7.i799 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i.i7.i799, label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit811, label %OptionalThen1.i.i.i804

OptionalThen1.i.i.i804:                           ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i800, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797
  %list_alloca.i.sroa.0.039.i801 = phi i8* [ %list_alloca.i.sroa.0.0.ph.i795, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797 ], [ %struct_field1.unpack, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i800 ]
  %list_alloca.i.sroa.6.037.i802 = phi i64 [ %list_alloca.i.sroa.6.0.ph.i794, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i797 ], [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i800 ]
  %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i803.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i750 to i8*
  %379 = shl nuw i64 %struct_field1.unpack116, 4
  %380 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.039.i801, i64 %379
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %380, i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i803.pre-phi, i64 16, i1 false) #11, !noalias !566
  br label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit811

List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit811: ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i800, %OptionalThen1.i.i.i804
  %list_alloca.i.sroa.0.040.i805 = phi i8* [ null, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i800 ], [ %list_alloca.i.sroa.0.039.i801, %OptionalThen1.i.i.i804 ]
  %list_alloca.i.sroa.6.038.i806 = phi i64 [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i800 ], [ %list_alloca.i.sroa.6.037.i802, %OptionalThen1.i.i.i804 ]
  %element_to_pass_as_opaque.i.i750.0.sroa_cast954.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i750 to i8*
  %381 = add nuw i64 %struct_field1.unpack116, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.i750.0.sroa_cast954.pre-phi)
  %.not.i.i.i.i312 = icmp slt i64 %struct_field2.unpack123, 0
  %382 = select i1 %.not.i.i.i.i312, i64 %struct_field2.unpack121, i64 %struct_field2.unpack123
  %383 = add nuw i64 %struct_field2.unpack121, 1
  %.not.i.i.i313.not = icmp ugt i64 %382, %struct_field2.unpack121
  %.not.i.i7.i = icmp eq i8* %struct_field2.unpack, null
  br i1 %.not.i.i.i313.not, label %List_reserve_93f8ee11f87bfca2bfbbef6a7665f7d159b31523331cfe125c50fbe6cfad11.exit.i, label %Else.i.i.i

Else.i.i.i:                                       ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit811
  br i1 %.not.i.i7.i, label %EndIf.i27.i.i.i.i, label %OptionalThen.i.i.i.i

OptionalThen.i.i.i.i:                             ; preds = %Else.i.i.i
  %384 = icmp ne i64 %382, 0
  %385 = or i1 %.not.i.i.i.i312, %384
  br i1 %385, label %list.RocList.isUnique.exit.i.i.i.i, label %Then.i.i.i.i314

list.RocList.isUnique.exit.i.i.i.i:               ; preds = %OptionalThen.i.i.i.i
  %386 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 -8
  %387 = bitcast i8* %386 to i64*
  %388 = load i64, i64* %387, align 8, !noalias !569
  %phi.cmp.i.i.i.i.i = icmp eq i64 %388, -9223372036854775808
  %389 = xor i1 %.not.i.i.i.i312, true
  %or.cond.i.i.i.i = select i1 %phi.cmp.i.i.i.i.i, i1 %389, i1 false
  br i1 %or.cond.i.i.i.i, label %Then.i.i.i.i314, label %OptionalEndIf.i.i.i.i.i

Then.i.i.i.i314:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i, %OptionalThen.i.i.i.i
  %.not21.i.i.i.i.not = icmp ugt i64 %struct_field2.unpack123, %struct_field2.unpack121
  br i1 %.not21.i.i.i.i.not, label %OptionalThen1.i.i.i, label %Else.i.i.i.i

Else.i.i.i.i:                                     ; preds = %Then.i.i.i.i314
  %390 = icmp eq i64 %struct_field2.unpack123, 0
  br i1 %390, label %EndIf9.i.i.i.i.i, label %Else1.i.i.i.i.i

Else1.i.i.i.i.i:                                  ; preds = %Else.i.i.i.i
  %391 = icmp ult i64 %struct_field2.unpack123, 512
  br i1 %391, label %Then4.i.i.i.i.i, label %Else2.i.i.i.i.i

Else2.i.i.i.i.i:                                  ; preds = %Else1.i.i.i.i.i
  %392 = icmp ugt i64 %struct_field2.unpack123, 16384
  br i1 %392, label %Then5.i.i.i.i.i, label %Else6.i.i.i.i.i

Then4.i.i.i.i.i:                                  ; preds = %Else1.i.i.i.i.i
  %393 = shl nuw nsw i64 %struct_field2.unpack123, 1
  br label %EndIf9.i.i.i.i.i

Then5.i.i.i.i.i:                                  ; preds = %Else2.i.i.i.i.i
  %394 = shl nuw i64 %struct_field2.unpack123, 1
  br label %EndIf9.i.i.i.i.i

Else6.i.i.i.i.i:                                  ; preds = %Else2.i.i.i.i.i
  %395 = mul nuw nsw i64 %struct_field2.unpack123, 3
  %396 = add nuw nsw i64 %395, 1
  %397 = lshr i64 %396, 1
  br label %EndIf9.i.i.i.i.i

EndIf9.i.i.i.i.i:                                 ; preds = %Else6.i.i.i.i.i, %Then5.i.i.i.i.i, %Then4.i.i.i.i.i, %Else.i.i.i.i
  %new_capacity.0.i.i.i.i.i = phi i64 [ %393, %Then4.i.i.i.i.i ], [ %394, %Then5.i.i.i.i.i ], [ %397, %Else6.i.i.i.i.i ], [ 8, %Else.i.i.i.i ]
  %398 = icmp ugt i64 %new_capacity.0.i.i.i.i.i, %383
  %..i.i.i.i.i.i = select i1 %398, i64 %new_capacity.0.i.i.i.i.i, i64 %383
  %399 = shl nuw i64 %struct_field2.unpack123, 3
  %400 = shl nuw i64 %..i.i.i.i.i.i, 3
  %.not.i.i.i.i.i = icmp ult i64 %399, %400
  br i1 %.not.i.i.i.i.i, label %EndIf.i.i.i.i.i, label %OptionalThen1.i.i.i

EndIf.i.i.i.i.i:                                  ; preds = %EndIf9.i.i.i.i.i
  %401 = add nuw i64 %400, 8
  %402 = add nuw i64 %399, 8
  %403 = getelementptr inbounds i8, i8* %struct_field2.unpack, i64 -8
  %404 = tail call i8* @roc_realloc(i8* %403, i64 %401, i64 %402, i32 8) #11, !noalias !569
  %405 = getelementptr inbounds i8, i8* %404, i64 8
  br label %OptionalThen1.i.i.i

OptionalEndIf.i.i.i.i.i:                          ; preds = %list.RocList.isUnique.exit.i.i.i.i
  %.inv = icmp ult i64 %struct_field2.unpack121, 8
  %..i.i.i.i.i.i.i.i = select i1 %.inv, i64 8, i64 %383
  %406 = shl nuw i64 %..i.i.i.i.i.i.i.i, 3
  %407 = add nuw i64 %406, 8
  %408 = tail call i8* @roc_alloc(i64 %407, i32 8) #11, !noalias !574
  %409 = icmp ne i8* %408, null
  tail call void @llvm.assume(i1 %409) #11
  %410 = getelementptr inbounds i8, i8* %408, i64 8
  %411 = bitcast i8* %408 to i64*
  store i64 -9223372036854775808, i64* %411, align 8, !noalias !574
  %412 = shl nuw i64 %struct_field2.unpack121, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %410, i8* nonnull align 1 %struct_field2.unpack, i64 %412, i1 false) #11, !noalias !579
  %413 = getelementptr inbounds i8, i8* %410, i64 %412
  %414 = bitcast i8* %413 to i64*
  store i64 0, i64* %414, align 1
  %phi.cast.i.i.i.i.i = ptrtoint i8* %struct_field2.unpack to i64
  %415 = shl i64 %struct_field2.unpack123, 1
  %416 = select i1 %.not.i.i.i.i312, i64 %415, i64 %phi.cast.i.i.i.i.i
  %417 = icmp ne i64 %struct_field2.unpack123, 0
  %418 = icmp ne i64 %416, 0
  %or.cond.i.i.i.i.i.i.i = select i1 %417, i1 %418, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i, label %OptionalNonNull.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i

OptionalNonNull.i.i.i.i.i.i.i:                    ; preds = %OptionalEndIf.i.i.i.i.i
  %419 = inttoptr i64 %416 to i8*
  %420 = getelementptr inbounds i8, i8* %419, i64 -8
  %421 = bitcast i8* %420 to i64*
  %422 = load i64, i64* %421, align 8, !noalias !579
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %422, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %OptionalNonNull.i.i.i.i.i.i.i
  %423 = add i64 %422, -1
  store i64 %423, i64* %421, align 8, !noalias !579
  %424 = icmp eq i64 %422, -9223372036854775808
  br i1 %424, label %Then1.i.i.i.i.i.i.i.i, label %OptionalThen1.i.i.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %420, i32 8) #11, !noalias !579
  br label %OptionalThen1.i.i.i

EndIf.i27.i.i.i.i:                                ; preds = %Else.i.i.i
  %.inv401 = icmp ult i64 %struct_field2.unpack121, 8
  %..i.i.i.i.i.i.i = select i1 %.inv401, i64 8, i64 %383
  %425 = shl nuw i64 %..i.i.i.i.i.i.i, 3
  %426 = add nuw i64 %425, 8
  %427 = tail call i8* @roc_alloc(i64 %426, i32 8) #11, !noalias !580
  %428 = icmp ne i8* %427, null
  tail call void @llvm.assume(i1 %428) #11
  %429 = getelementptr inbounds i8, i8* %427, i64 8
  %430 = bitcast i8* %427 to i64*
  store i64 -9223372036854775808, i64* %430, align 8, !noalias !580
  br label %OptionalThen1.i.i.i

List_reserve_93f8ee11f87bfca2bfbbef6a7665f7d159b31523331cfe125c50fbe6cfad11.exit.i: ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit811
  br i1 %.not.i.i7.i, label %List_append_1fede835e28bed4b7540d549dbb83fe89bc531724813bc0d44fa979a515.exit, label %OptionalThen1.i.i.i

OptionalThen1.i.i.i:                              ; preds = %OptionalEndIf.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i, %EndIf9.i.i.i.i.i, %EndIf.i.i.i.i.i, %Then.i.i.i.i314, %EndIf.i27.i.i.i.i, %List_reserve_93f8ee11f87bfca2bfbbef6a7665f7d159b31523331cfe125c50fbe6cfad11.exit.i
  %list_alloca.i.i.sroa.0.0935 = phi i8* [ %struct_field2.unpack, %List_reserve_93f8ee11f87bfca2bfbbef6a7665f7d159b31523331cfe125c50fbe6cfad11.exit.i ], [ %410, %OptionalEndIf.i.i.i.i.i ], [ %410, %OptionalNonNull.i.i.i.i.i.i.i ], [ %410, %Then.i.i.i.i.i.i.i.i ], [ %410, %Then1.i.i.i.i.i.i.i.i ], [ %struct_field2.unpack, %EndIf9.i.i.i.i.i ], [ %405, %EndIf.i.i.i.i.i ], [ %struct_field2.unpack, %Then.i.i.i.i314 ], [ %429, %EndIf.i27.i.i.i.i ]
  %list_alloca.i.i.sroa.6.0933 = phi i64 [ %struct_field2.unpack123, %List_reserve_93f8ee11f87bfca2bfbbef6a7665f7d159b31523331cfe125c50fbe6cfad11.exit.i ], [ %..i.i.i.i.i.i.i.i, %OptionalEndIf.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i, %OptionalNonNull.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i ], [ %..i.i.i.i.i.i, %EndIf9.i.i.i.i.i ], [ %..i.i.i.i.i.i, %EndIf.i.i.i.i.i ], [ %struct_field2.unpack123, %Then.i.i.i.i314 ], [ %..i.i.i.i.i.i.i, %EndIf.i27.i.i.i.i ]
  %431 = shl nuw i64 %struct_field2.unpack121, 3
  %432 = getelementptr inbounds i8, i8* %list_alloca.i.i.sroa.0.0935, i64 %431
  %433 = bitcast i8* %432 to i64*
  store i64 %struct_field, i64* %433, align 1
  br label %List_append_1fede835e28bed4b7540d549dbb83fe89bc531724813bc0d44fa979a515.exit

List_append_1fede835e28bed4b7540d549dbb83fe89bc531724813bc0d44fa979a515.exit: ; preds = %List_reserve_93f8ee11f87bfca2bfbbef6a7665f7d159b31523331cfe125c50fbe6cfad11.exit.i, %OptionalThen1.i.i.i
  %list_alloca.i.i.sroa.0.0936 = phi i8* [ null, %List_reserve_93f8ee11f87bfca2bfbbef6a7665f7d159b31523331cfe125c50fbe6cfad11.exit.i ], [ %list_alloca.i.i.sroa.0.0935, %OptionalThen1.i.i.i ]
  %list_alloca.i.i.sroa.6.0934 = phi i64 [ %struct_field2.unpack123, %List_reserve_93f8ee11f87bfca2bfbbef6a7665f7d159b31523331cfe125c50fbe6cfad11.exit.i ], [ %list_alloca.i.i.sroa.6.0933, %OptionalThen1.i.i.i ]
  %call.i316 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field, i64 1) #11
  %has_overflowed.i317 = extractvalue { i64, i1 } %call.i316, 1
  br i1 %has_overflowed.i317, label %throw_block.i319, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320

throw_block.i319:                                 ; preds = %List_append_1fede835e28bed4b7540d549dbb83fe89bc531724813bc0d44fa979a515.exit
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit320: ; preds = %List_append_1fede835e28bed4b7540d549dbb83fe89bc531724813bc0d44fa979a515.exit
  %operation_result.i318 = extractvalue { i64, i1 } %call.i316, 0
  %struct_alloca66 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca66.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca66, i64 0, i32 0
  store i64 %operation_result.i318, i64* %struct_alloca66.repack, align 8
  br label %common.ret

branch93:                                         ; preds = %entry
  %434 = insertvalue %list.RocList undef, i8* %struct_field2.unpack, 0
  %435 = insertvalue %list.RocList %434, i64 %struct_field2.unpack121, 1
  %struct_field2124 = insertvalue %list.RocList %435, i64 %struct_field2.unpack123, 2
  call fastcc void @"#UserApp_pop_1de0e1a82673e5dc4437c2257b54db19301b3a371fda01e9d225d2fb820ec98"(%list.RocList %struct_field2124, { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value)
  %tag_id_ptr67 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr67, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 0
  br i1 %eq_u8, label %then_block, label %else_block

branch32:                                         ; preds = %entry
  %struct_alloca87 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca87.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca87, i64 0, i32 0
  store i64 %struct_field, i64* %struct_alloca87.repack, align 8
  br label %common.ret

branch10:                                         ; preds = %entry
  %struct_alloca91 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca91.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca91, i64 0, i32 0
  store i64 %struct_field, i64* %struct_alloca91.repack, align 8
  br label %common.ret

branch9:                                          ; preds = %entry
  %struct_alloca95 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca95.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca95, i64 0, i32 0
  store i64 %struct_field, i64* %struct_alloca95.repack, align 8
  br label %common.ret

then_block:                                       ; preds = %branch93
  %436 = insertvalue %list.RocList undef, i8* %struct_field1.unpack, 0
  %437 = insertvalue %list.RocList %436, i64 %struct_field1.unpack116, 1
  %struct_field1119 = insertvalue %list.RocList %437, i64 %struct_field1.unpack118, 2
  call fastcc void @"#Attr_#dec_33"({ [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value)
  tail call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field1119)
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* inttoptr (i64 7308623593077498189 to i8*), i8** %const_str_store.repack, align 8
  %const_str_store.repack181 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 8030604369475018852, i64* %const_str_store.repack181, align 8
  %const_str_store.repack182 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 -7782220154261114265, i64* %const_str_store.repack182, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 1)
  unreachable

else_block:                                       ; preds = %branch93
  %load_element.elt = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt161 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 1
  %load_element.unpack162.elt = bitcast i64* %load_element.elt161 to i8**
  %load_element.unpack162.unpack = load i8*, i8** %load_element.unpack162.elt, align 8
  %438 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 2
  %load_element.unpack162.unpack165 = load i64, i64* %438, align 8
  %439 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 3
  %load_element.unpack162.unpack167 = load i64, i64* %439, align 8
  %tag_alloca73 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %440 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca73, i64 0, i32 1, i64 0
  store i64 %load_element.unpack, i64* %440, align 8
  %tag_id_ptr76 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca73, i64 0, i32 2
  store i8 3, i8* %tag_id_ptr76, align 8
  %.not.i.i.i.i.i.i813 = icmp slt i64 %struct_field1.unpack118, 0
  %441 = select i1 %.not.i.i.i.i.i.i813, i64 %struct_field1.unpack116, i64 %struct_field1.unpack118
  %442 = icmp ne i64 %441, 0
  %443 = or i1 %.not.i.i.i.i.i.i813, %442
  br i1 %443, label %list.RocList.isUnique.exit.i.i.i815, label %BoolAndTrue.i.i.i819

list.RocList.isUnique.exit.i.i.i815:              ; preds = %else_block
  %444 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %445 = bitcast i8* %444 to i64*
  %446 = load i64, i64* %445, align 8, !noalias !583
  %phi.cmp.i.i.i.i814 = icmp eq i64 %446, -9223372036854775808
  br i1 %phi.cmp.i.i.i.i814, label %BoolAndTrue.i.i.i819, label %list.RocList.isUnique.exit.i.i.i.thread.i817

list.RocList.isUnique.exit.i.i.i.thread.i817:     ; preds = %list.RocList.isUnique.exit.i.i.i815
  %.pre-phi.i.i27.i816 = add nuw i64 %struct_field1.unpack116, 1
  br label %OptionalEndIf.i.i.i.i.i848

BoolAndTrue.i.i.i819:                             ; preds = %list.RocList.isUnique.exit.i.i.i815, %else_block
  %.not.i.i.not.i818 = icmp ugt i64 %441, %struct_field1.unpack116
  br i1 %.not.i.i.not.i818, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i862, label %Else.i.i.i822

Else.i.i.i822:                                    ; preds = %BoolAndTrue.i.i.i819
  %.pre-phi.i.i.i820 = add nuw i64 %struct_field1.unpack116, 1
  %.not.i1.i.i.i821 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i1.i.i.i821, label %OptionalEndIf.i.i.i.i855, label %OptionalThen.i.i.i.i823

OptionalThen.i.i.i.i823:                          ; preds = %Else.i.i.i822
  br i1 %443, label %list.RocList.isUnique.exit.i.i.i.i829, label %Then.i.i.i.i831

list.RocList.isUnique.exit.i.i.i.i829:            ; preds = %OptionalThen.i.i.i.i823
  %.phi.trans.insert.i824 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %.phi.trans.insert46.i825 = bitcast i8* %.phi.trans.insert.i824 to i64*
  %.pre.i826 = load i64, i64* %.phi.trans.insert46.i825, align 8, !noalias !586
  %phi.cmp.i.i.i.i.i827 = icmp eq i64 %.pre.i826, -9223372036854775808
  %447 = xor i1 %.not.i.i.i.i.i.i813, true
  %or.cond.i.i.i.i828 = select i1 %phi.cmp.i.i.i.i.i827, i1 %447, i1 false
  br i1 %or.cond.i.i.i.i828, label %Then.i.i.i.i831, label %OptionalEndIf.i.i.i.i.i848

Then.i.i.i.i831:                                  ; preds = %list.RocList.isUnique.exit.i.i.i.i829, %OptionalThen.i.i.i.i823
  %.not21.i.i.i.not.i830 = icmp ugt i64 %struct_field1.unpack118, %struct_field1.unpack116
  br i1 %.not21.i.i.i.not.i830, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859, label %Else.i.i.i.i832

Else.i.i.i.i832:                                  ; preds = %Then.i.i.i.i831
  %448 = icmp eq i64 %struct_field1.unpack118, 0
  br i1 %448, label %EndIf9.i.i.i.i.i841, label %Else1.i.i.i.i.i833

Else1.i.i.i.i.i833:                               ; preds = %Else.i.i.i.i832
  %449 = icmp ult i64 %struct_field1.unpack118, 256
  br i1 %449, label %Then4.i.i.i.i.i835, label %Else2.i.i.i.i.i834

Else2.i.i.i.i.i834:                               ; preds = %Else1.i.i.i.i.i833
  %450 = icmp ugt i64 %struct_field1.unpack118, 8192
  br i1 %450, label %Then5.i.i.i.i.i836, label %Else6.i.i.i.i.i837

Then4.i.i.i.i.i835:                               ; preds = %Else1.i.i.i.i.i833
  %451 = shl nuw nsw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i841

Then5.i.i.i.i.i836:                               ; preds = %Else2.i.i.i.i.i834
  %452 = shl nuw i64 %struct_field1.unpack118, 1
  br label %EndIf9.i.i.i.i.i841

Else6.i.i.i.i.i837:                               ; preds = %Else2.i.i.i.i.i834
  %453 = mul nuw nsw i64 %struct_field1.unpack118, 3
  %454 = add nuw nsw i64 %453, 1
  %455 = lshr i64 %454, 1
  br label %EndIf9.i.i.i.i.i841

EndIf9.i.i.i.i.i841:                              ; preds = %Else6.i.i.i.i.i837, %Then5.i.i.i.i.i836, %Then4.i.i.i.i.i835, %Else.i.i.i.i832
  %new_capacity.0.i.i.i.i.i838 = phi i64 [ %451, %Then4.i.i.i.i.i835 ], [ %452, %Then5.i.i.i.i.i836 ], [ %455, %Else6.i.i.i.i.i837 ], [ 4, %Else.i.i.i.i832 ]
  %456 = icmp ugt i64 %new_capacity.0.i.i.i.i.i838, %.pre-phi.i.i.i820
  %..i.i.i.i.i.i839 = select i1 %456, i64 %new_capacity.0.i.i.i.i.i838, i64 %.pre-phi.i.i.i820
  %457 = shl nuw i64 %struct_field1.unpack118, 4
  %458 = shl nuw i64 %..i.i.i.i.i.i839, 4
  %.not.i.i.i.i.i840 = icmp ult i64 %457, %458
  br i1 %.not.i.i.i.i.i840, label %EndIf.i.i.i.i.i842, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859

EndIf.i.i.i.i.i842:                               ; preds = %EndIf9.i.i.i.i.i841
  %459 = or i64 %458, 8
  %460 = or i64 %457, 8
  %461 = getelementptr inbounds i8, i8* %struct_field1.unpack, i64 -8
  %462 = tail call i8* @roc_realloc(i8* %461, i64 %459, i64 %460, i32 8) #11, !noalias !586
  %463 = getelementptr inbounds i8, i8* %462, i64 8
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859

OptionalEndIf.i.i.i.i.i848:                       ; preds = %list.RocList.isUnique.exit.i.i.i.i829, %list.RocList.isUnique.exit.i.i.i.thread.i817
  %.pre-phi.i.i293250.i843 = phi i64 [ %.pre-phi.i.i27.i816, %list.RocList.isUnique.exit.i.i.i.thread.i817 ], [ %.pre-phi.i.i.i820, %list.RocList.isUnique.exit.i.i.i.i829 ]
  %.inv.i844 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i.i845 = select i1 %.inv.i844, i64 4, i64 %.pre-phi.i.i293250.i843
  %464 = shl nuw i64 %..i.i.i.i.i.i.i.i845, 4
  %465 = or i64 %464, 8
  %466 = tail call i8* @roc_alloc(i64 %465, i32 8) #11, !noalias !589
  %467 = icmp ne i8* %466, null
  tail call void @llvm.assume(i1 %467) #11
  %468 = getelementptr inbounds i8, i8* %466, i64 8
  %469 = bitcast i8* %466 to i64*
  store i64 -9223372036854775808, i64* %469, align 8, !noalias !589
  %470 = shl nuw i64 %struct_field1.unpack116, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %468, i8* nonnull align 1 %struct_field1.unpack, i64 %470, i1 false) #11, !noalias !594
  %471 = getelementptr inbounds i8, i8* %468, i64 %470
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %471, i8 0, i64 16, i1 false) #11, !noalias !594
  %phi.cast.i.i.i.i.i846 = ptrtoint i8* %struct_field1.unpack to i64
  %472 = shl i64 %struct_field1.unpack118, 1
  %473 = select i1 %.not.i.i.i.i.i.i813, i64 %472, i64 %phi.cast.i.i.i.i.i846
  %474 = icmp ne i64 %struct_field1.unpack118, 0
  %475 = icmp ne i64 %473, 0
  %or.cond.i.i.i.i.i.i.i847 = select i1 %474, i1 %475, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i847, label %OptionalNonNull.i.i.i.i.i.i.i850, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859

OptionalNonNull.i.i.i.i.i.i.i850:                 ; preds = %OptionalEndIf.i.i.i.i.i848
  %476 = inttoptr i64 %473 to i8*
  %477 = getelementptr inbounds i8, i8* %476, i64 -8
  %478 = bitcast i8* %477 to i64*
  %479 = load i64, i64* %478, align 8, !noalias !594
  %.not.i.i.i.i.i.i.i.i849 = icmp eq i64 %479, 0
  br i1 %.not.i.i.i.i.i.i.i.i849, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859, label %Then.i.i.i.i.i.i.i.i851

Then.i.i.i.i.i.i.i.i851:                          ; preds = %OptionalNonNull.i.i.i.i.i.i.i850
  %480 = add i64 %479, -1
  store i64 %480, i64* %478, align 8, !noalias !594
  %481 = icmp eq i64 %479, -9223372036854775808
  br i1 %481, label %Then1.i.i.i.i.i.i.i.i852, label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859

Then1.i.i.i.i.i.i.i.i852:                         ; preds = %Then.i.i.i.i.i.i.i.i851
  tail call void @roc_dealloc(i8* %477, i32 8) #11, !noalias !594
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859

OptionalEndIf.i.i.i.i855:                         ; preds = %Else.i.i.i822
  %.inv5.i853 = icmp ult i64 %struct_field1.unpack116, 4
  %..i.i.i.i.i.i.i854 = select i1 %.inv5.i853, i64 4, i64 %.pre-phi.i.i.i820
  %482 = shl nuw i64 %..i.i.i.i.i.i.i854, 4
  %483 = or i64 %482, 8
  %484 = tail call i8* @roc_alloc(i64 %483, i32 8) #11, !noalias !595
  %485 = icmp ne i8* %484, null
  tail call void @llvm.assume(i1 %485) #11
  %486 = getelementptr inbounds i8, i8* %484, i64 8
  %487 = bitcast i8* %484 to i64*
  store i64 -9223372036854775808, i64* %487, align 8, !noalias !595
  br label %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859: ; preds = %OptionalEndIf.i.i.i.i855, %Then1.i.i.i.i.i.i.i.i852, %Then.i.i.i.i.i.i.i.i851, %OptionalNonNull.i.i.i.i.i.i.i850, %OptionalEndIf.i.i.i.i.i848, %EndIf.i.i.i.i.i842, %EndIf9.i.i.i.i.i841, %Then.i.i.i.i831
  %list_alloca.i.sroa.6.0.ph.i856 = phi i64 [ %..i.i.i.i.i.i.i.i845, %OptionalEndIf.i.i.i.i.i848 ], [ %..i.i.i.i.i.i.i.i845, %OptionalNonNull.i.i.i.i.i.i.i850 ], [ %..i.i.i.i.i.i.i.i845, %Then.i.i.i.i.i.i.i.i851 ], [ %..i.i.i.i.i.i.i.i845, %Then1.i.i.i.i.i.i.i.i852 ], [ %..i.i.i.i.i.i839, %EndIf9.i.i.i.i.i841 ], [ %..i.i.i.i.i.i839, %EndIf.i.i.i.i.i842 ], [ %struct_field1.unpack118, %Then.i.i.i.i831 ], [ %..i.i.i.i.i.i.i854, %OptionalEndIf.i.i.i.i855 ]
  %list_alloca.i.sroa.0.0.ph.i857 = phi i8* [ %468, %OptionalEndIf.i.i.i.i.i848 ], [ %468, %OptionalNonNull.i.i.i.i.i.i.i850 ], [ %468, %Then.i.i.i.i.i.i.i.i851 ], [ %468, %Then1.i.i.i.i.i.i.i.i852 ], [ %struct_field1.unpack, %EndIf9.i.i.i.i.i841 ], [ %463, %EndIf.i.i.i.i.i842 ], [ %struct_field1.unpack, %Then.i.i.i.i831 ], [ %486, %OptionalEndIf.i.i.i.i855 ]
  %element_to_pass_as_opaque.i.0.sroa_cast35.i858 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i812 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast35.i858)
  %488 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast35.i858, i8* noundef nonnull align 8 dereferenceable(16) %488, i64 16, i1 false) #11
  br label %OptionalThen1.i.i.i866

List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i862: ; preds = %BoolAndTrue.i.i.i819
  %element_to_pass_as_opaque.i.0.sroa_cast.i860 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i812 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.0.sroa_cast.i860)
  %489 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast.i860, i8* noundef nonnull align 8 dereferenceable(16) %489, i64 16, i1 false) #11
  %.not.i.i7.i861 = icmp eq i8* %struct_field1.unpack, null
  br i1 %.not.i.i7.i861, label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit873, label %OptionalThen1.i.i.i866

OptionalThen1.i.i.i866:                           ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i862, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859
  %list_alloca.i.sroa.0.039.i863 = phi i8* [ %list_alloca.i.sroa.0.0.ph.i857, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859 ], [ %struct_field1.unpack, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i862 ]
  %list_alloca.i.sroa.6.037.i864 = phi i64 [ %list_alloca.i.sroa.6.0.ph.i856, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.thread.i859 ], [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i862 ]
  %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i865.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i812 to i8*
  %490 = shl nuw i64 %struct_field1.unpack116, 4
  %491 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.039.i863, i64 %490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %491, i8* noundef nonnull align 8 dereferenceable(16) %element_to_pass_as_opaque.i.0.sroa_cast41.pre-phi.i865.pre-phi, i64 16, i1 false) #11, !noalias !598
  br label %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit873

List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit873: ; preds = %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i862, %OptionalThen1.i.i.i866
  %list_alloca.i.sroa.0.040.i867 = phi i8* [ null, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i862 ], [ %list_alloca.i.sroa.0.039.i863, %OptionalThen1.i.i.i866 ]
  %list_alloca.i.sroa.6.038.i868 = phi i64 [ %struct_field1.unpack118, %List_reserve_40ff541285f60aa6c175e5e663474d0245ec624d5c7aaab9965fa9995cc861.exit.i862 ], [ %list_alloca.i.sroa.6.037.i864, %OptionalThen1.i.i.i866 ]
  %element_to_pass_as_opaque.i.i812.0.sroa_cast956.pre-phi = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %element_to_pass_as_opaque.i.i812 to i8*
  %492 = add nuw i64 %struct_field1.unpack116, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %element_to_pass_as_opaque.i.i812.0.sroa_cast956.pre-phi)
  %oldret = insertvalue %list.RocList undef, i8* %list_alloca.i.sroa.0.040.i867, 0
  %oldret352 = insertvalue %list.RocList %oldret, i64 %492, 1
  %oldret354 = insertvalue %list.RocList %oldret352, i64 %list_alloca.i.sroa.6.038.i868, 2
  %result_value2.i.0.sroa_cast = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %result_value2.i.0.sroa_cast)
  %493 = bitcast { [0 x i64], [2 x i64], i8, [7 x i8] }* %result_value.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %493)
  %"cap > 0.i.i.not" = icmp eq i64 %list_alloca.i.sroa.6.038.i868, 0
  br i1 %"cap > 0.i.i.not", label %"#Attr_#inc_12.exit.i", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit873
  %494 = ptrtoint i8* %list_alloca.i.sroa.0.040.i867 to i64
  %495 = shl i64 %list_alloca.i.sroa.6.038.i868, 1
  %.not.i.i.i.i326 = icmp slt i64 %list_alloca.i.sroa.6.038.i868, 0
  %496 = select i1 %.not.i.i.i.i326, i64 %495, i64 %494
  %as_usize_ptr.i.i = inttoptr i64 %496 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %497 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i327 = icmp eq i64 %497, 0
  br i1 %.not.i.i.i327, label %"#Attr_#inc_12.exit.i", label %Then.i.i.i328

Then.i.i.i328:                                    ; preds = %modification_list_block.i.i
  %498 = add nsw i64 %497, 1
  store i64 %498, i64* %get_rc_ptr.i.i, align 8
  br label %"#Attr_#inc_12.exit.i"

"#Attr_#inc_12.exit.i":                           ; preds = %Then.i.i.i328, %modification_list_block.i.i, %List_append_342daed8bef15de6d971c2d51e4f1451a2b3239a17db7b238cce597074b826.exit873
  call fastcc void @List_get_bb335968d023ed6df8f24236716c2f1839a6e4296eba11d250838e1f82b750(%list.RocList %oldret354, i64 %load_element.unpack, { [0 x i64], [2 x i64], i8, [7 x i8] }* nonnull %result_value.i) #11
  %tag_id_ptr.i = getelementptr inbounds { [0 x i64], [2 x i64], i8, [7 x i8] }, { [0 x i64], [2 x i64], i8, [7 x i8] }* %result_value.i, i64 0, i32 2
  %load_tag_id.i = load i8, i8* %tag_id_ptr.i, align 8
  %eq_u8.i = icmp eq i8 %load_tag_id.i, 0
  br i1 %eq_u8.i, label %List_update_c5b9c4f13049f3c8b69f9d6eaa7ebdc19a8d74f5156413edcdab3dcb4654f13.exit, label %else_block.i

else_block.i:                                     ; preds = %"#Attr_#inc_12.exit.i"
  %load_element.i.sroa.3.0..sroa_idx = getelementptr inbounds { [0 x i64], [2 x i64], i8, [7 x i8] }, { [0 x i64], [2 x i64], i8, [7 x i8] }* %result_value.i, i64 0, i32 1, i64 1
  %load_element.i.sroa.3.0..sroa_cast = bitcast i64* %load_element.i.sroa.3.0..sroa_idx to i8*
  %load_element.i.sroa.3.0.copyload = load i8, i8* %load_element.i.sroa.3.0..sroa_cast, align 8
  call fastcc void @"#UserApp_patchJump_a8395ed6274ac80f31cda02a1978e69ee977a6ea011ce8eedb84a7acc8eac"(i64 %struct_field, i8 %load_element.i.sroa.3.0.copyload, { [0 x i64], [1 x i64], i8, [7 x i8] }* nonnull %result_value2.i) #11
  %499 = shl nuw i64 %load_element.unpack, 4
  %500 = getelementptr inbounds i8, i8* %list_alloca.i.sroa.0.040.i867, i64 %499
  call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(16) %500, i8* noundef nonnull align 8 dereferenceable(16) %result_value2.i.0.sroa_cast, i64 16, i1 false)
  br label %List_update_c5b9c4f13049f3c8b69f9d6eaa7ebdc19a8d74f5156413edcdab3dcb4654f13.exit

List_update_c5b9c4f13049f3c8b69f9d6eaa7ebdc19a8d74f5156413edcdab3dcb4654f13.exit: ; preds = %"#Attr_#inc_12.exit.i", %else_block.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %result_value2.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %493)
  %call.i338 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %struct_field, i64 1) #11
  %has_overflowed.i339 = extractvalue { i64, i1 } %call.i338, 1
  br i1 %has_overflowed.i339, label %throw_block.i341, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342

throw_block.i341:                                 ; preds = %List_update_c5b9c4f13049f3c8b69f9d6eaa7ebdc19a8d74f5156413edcdab3dcb4654f13.exit
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit342: ; preds = %List_update_c5b9c4f13049f3c8b69f9d6eaa7ebdc19a8d74f5156413edcdab3dcb4654f13.exit
  %operation_result.i340 = extractvalue { i64, i1 } %call.i338, 0
  %struct_alloca83 = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca83.repack = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %struct_alloca83, i64 0, i32 0
  store i64 %operation_result.i340, i64* %struct_alloca83.repack, align 8
  br label %common.ret

then_block104:                                    ; preds = %"#Attr_#dec_10.exit"
  %get_opaque_data_ptr106 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value99, i64 0, i32 1
  %501 = bitcast %str.RocStr* %load_element109 to i8*
  %502 = bitcast [3 x i64]* %get_opaque_data_ptr106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %501, i8* noundef nonnull align 8 dereferenceable(24) %502, i64 24, i1 false)
  %const_str_store110.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store110, i64 0, i32 0
  store i8* inttoptr (i64 8386658464824651381 to i8*), i8** %const_str_store110.repack, align 8
  %const_str_store110.repack269 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store110, i64 0, i32 1
  store i64 7021781869991584869, i64* %const_str_store110.repack269, align 8
  %const_str_store110.repack270 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store110, i64 0, i32 2
  store i64 -7555034414491274141, i64* %const_str_store110.repack270, align 8
  %const_str_store111.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store111, i64 0, i32 0
  store i8* inttoptr (i64 39 to i8*), i8** %const_str_store111.repack, align 8
  %const_str_store111.repack271 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store111, i64 0, i32 1
  store i64 0, i64* %const_str_store111.repack271, align 8
  %const_str_store111.repack272 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store111, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store111.repack272, align 8
  call fastcc void @Str_concat_d77833c102eda14a840828118bc87384d40b7741c1075c7a34448b284a1667(%str.RocStr* nonnull %load_element109, %str.RocStr* nonnull %const_str_store111, %str.RocStr* nonnull %result_value112)
  call fastcc void @"#Attr_#dec_4"(%str.RocStr* nonnull %const_str_store111)
  call fastcc void @Str_concat_ed7a5dacca91de9232ab8944f865755faef8bde8c489d724d326bd8c369ec0(%str.RocStr* nonnull %const_str_store110, %str.RocStr* nonnull %result_value112, %str.RocStr* nonnull %result_value113)
  call fastcc void @"#Attr_#dec_4"(%str.RocStr* nonnull %result_value112)
  call void @roc_panic(%str.RocStr* %result_value113, i32 1)
  unreachable

else_block105:                                    ; preds = %"#Attr_#dec_10.exit"
  call fastcc void @"#Attr_#dec_31"({ [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value99)
  %const_str_store114.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store114, i64 0, i32 0
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_str_literal_8788308771532261956, i64 0, i64 8), i8** %const_str_store114.repack, align 8
  %const_str_store114.repack267 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store114, i64 0, i32 1
  store i64 29, i64* %const_str_store114.repack267, align 8
  %const_str_store114.repack268 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store114, i64 0, i32 2
  store i64 29, i64* %const_str_store114.repack268, align 8
  call void @roc_panic(%str.RocStr* %const_str_store114, i32 1)
  unreachable
}

; Function Attrs: nounwind
define internal fastcc void @Arg_484_51f5202c4ff764f167d1887b2771e51c62f41e78a7115f87d012f3fe7912bd({ [0 x i64], [10 x i64], i8, [7 x i8] }* nocapture readonly %config, { [0 x i64], [6 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field2.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  switch i8 %load_tag_id, label %"#Attr_#dec_8.exit" [
    i8 1, label %then_block
    i8 0, label %tag_id_modify.i
  ]

common.ret:                                       ; preds = %"#Attr_#dec_8.exit", %then_block
  %tag_alloca3.sink89 = phi { [0 x i64], [6 x i64], i8, [7 x i8] }* [ %tag_alloca3, %"#Attr_#dec_8.exit" ], [ %tag_alloca, %then_block ]
  %.sink = phi i8 [ 0, %"#Attr_#dec_8.exit" ], [ 1, %then_block ]
  %tag_id_ptr6 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca3.sink89, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr6, align 8
  %1 = bitcast { [0 x i64], [6 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca3.sink89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %1, i8* noundef nonnull align 8 dereferenceable(56) %2, i64 56, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_element.sroa.0.0..sroa_cast = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %config to i8**
  %load_element.sroa.0.0.copyload = load i8*, i8** %load_element.sroa.0.0..sroa_cast, align 8
  %load_element.sroa.2.0..sroa_idx30 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1, i64 1
  %load_element.sroa.2.0.copyload = load i64, i64* %load_element.sroa.2.0..sroa_idx30, align 8
  %load_element.sroa.3.0..sroa_idx31 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1, i64 2
  %load_element.sroa.3.0.copyload = load i64, i64* %load_element.sroa.3.0..sroa_idx31, align 8
  %load_element.sroa.4.0..sroa_idx32 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1, i64 3
  %load_element.sroa.4.0..sroa_cast = bitcast i64* %load_element.sroa.4.0..sroa_idx32 to i8**
  %load_element.sroa.4.0.copyload = load i8*, i8** %load_element.sroa.4.0..sroa_cast, align 8
  %load_element.sroa.5.0..sroa_idx33 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1, i64 4
  %load_element.sroa.5.0.copyload = load i64, i64* %load_element.sroa.5.0..sroa_idx33, align 8
  %load_element.sroa.6.0..sroa_idx34 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1, i64 5
  %load_element.sroa.6.0.copyload = load i64, i64* %load_element.sroa.6.0..sroa_idx34, align 8
  %struct_alloca = alloca { { %str.RocStr, %str.RocStr } }, align 8
  %.repack.repack = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 0
  store i8* %load_element.sroa.0.0.copyload, i8** %.repack.repack, align 8
  %.repack.repack22 = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 1
  store i64 %load_element.sroa.2.0.copyload, i64* %.repack.repack22, align 8
  %.repack.repack24 = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 0, i32 2
  store i64 %load_element.sroa.3.0.copyload, i64* %.repack.repack24, align 8
  %.repack20.repack = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 0
  store i8* %load_element.sroa.4.0.copyload, i8** %.repack20.repack, align 8
  %.repack20.repack26 = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 1
  store i64 %load_element.sroa.5.0.copyload, i64* %.repack20.repack26, align 8
  %.repack20.repack28 = getelementptr inbounds { { %str.RocStr, %str.RocStr } }, { { %str.RocStr, %str.RocStr } }* %struct_alloca, i64 0, i32 0, i32 1, i32 2
  store i64 %load_element.sroa.6.0.copyload, i64* %.repack20.repack28, align 8
  %tag_alloca = alloca { [0 x i64], [6 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %3 = bitcast [6 x i64]* %data_buffer to i8*
  %4 = bitcast { { %str.RocStr, %str.RocStr } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %3, i8* noundef nonnull align 8 dereferenceable(48) %4, i64 48, i1 false)
  br label %common.ret

tag_id_modify.i:                                  ; preds = %entry
  %field_ptr.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1
  %5 = bitcast %str.RocStr* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %8 = bitcast [10 x i64]* %field_ptr.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8* noundef nonnull align 8 dereferenceable(24) %8, i64 24, i1 false) #11
  %load_str_to_stack.i.i.elt75 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack76 = load i64, i64* %load_str_to_stack.i.i.elt75, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack76, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_3.exit"

modify_rc.i.i:                                    ; preds = %tag_id_modify.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %9 = bitcast i8* %get_rc_ptr.i.i to i64*
  %10 = load i64, i64* %9, align 8
  %.not.i.i.i.i.i = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_3.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i.i, label %"#Attr_#dec_3.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_3.exit"

"#Attr_#dec_3.exit":                              ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %tag_id_modify.i
  %struct_field_access_record_1.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1, i64 3
  %13 = bitcast i64* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %6, i8* noundef nonnull align 8 dereferenceable(24) %13, i64 24, i1 false) #11
  %load_str_to_stack.i35.elt80 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i35.unpack81 = load i64, i64* %load_str_to_stack.i35.elt80, align 8
  %is_big_str.i37 = icmp sgt i64 %load_str_to_stack.i35.unpack81, 0
  br i1 %is_big_str.i37, label %modify_rc.i42, label %"#Attr_#dec_4.exit46"

modify_rc.i42:                                    ; preds = %"#Attr_#dec_3.exit"
  %call_builtin.i38 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i40 = getelementptr inbounds i8, i8* %call_builtin.i38, i64 -8
  %14 = bitcast i8* %get_rc_ptr.i40 to i64*
  %15 = load i64, i64* %14, align 8
  %.not.i.i.i.i41 = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i41, label %"#Attr_#dec_4.exit46", label %Then.i.i.i.i43

Then.i.i.i.i43:                                   ; preds = %modify_rc.i42
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %15, -9223372036854775808
  br i1 %17, label %Then1.i.i.i.i44, label %"#Attr_#dec_4.exit46"

Then1.i.i.i.i44:                                  ; preds = %Then.i.i.i.i43
  tail call void @roc_dealloc(i8* %get_rc_ptr.i40, i32 8) #11
  br label %"#Attr_#dec_4.exit46"

"#Attr_#dec_4.exit46":                            ; preds = %modify_rc.i42, %Then.i.i.i.i43, %Then1.i.i.i.i44, %"#Attr_#dec_3.exit"
  %struct_field_access_record_2.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %config, i64 0, i32 1, i64 6
  %18 = bitcast i64* %struct_field_access_record_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %18, i64 24, i1 false) #11
  %load_str_to_stack.i47.elt85 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i, i64 0, i32 2
  %load_str_to_stack.i47.unpack86 = load i64, i64* %load_str_to_stack.i47.elt85, align 8
  %is_big_str.i49 = icmp sgt i64 %load_str_to_stack.i47.unpack86, 0
  br i1 %is_big_str.i49, label %modify_rc.i54, label %"#Attr_#dec_4.exit58"

modify_rc.i54:                                    ; preds = %"#Attr_#dec_4.exit46"
  %call_builtin.i50 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i) #11
  %get_rc_ptr.i52 = getelementptr inbounds i8, i8* %call_builtin.i50, i64 -8
  %19 = bitcast i8* %get_rc_ptr.i52 to i64*
  %20 = load i64, i64* %19, align 8
  %.not.i.i.i.i53 = icmp eq i64 %20, 0
  br i1 %.not.i.i.i.i53, label %"#Attr_#dec_4.exit58", label %Then.i.i.i.i55

Then.i.i.i.i55:                                   ; preds = %modify_rc.i54
  %21 = add i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %20, -9223372036854775808
  br i1 %22, label %Then1.i.i.i.i56, label %"#Attr_#dec_4.exit58"

Then1.i.i.i.i56:                                  ; preds = %Then.i.i.i.i55
  tail call void @roc_dealloc(i8* %get_rc_ptr.i52, i32 8) #11
  br label %"#Attr_#dec_4.exit58"

"#Attr_#dec_4.exit58":                            ; preds = %modify_rc.i54, %Then.i.i.i.i55, %Then1.i.i.i.i56, %"#Attr_#dec_4.exit46"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  br label %"#Attr_#dec_8.exit"

"#Attr_#dec_8.exit":                              ; preds = %entry, %"#Attr_#dec_4.exit58"
  %tag_alloca3 = alloca { [0 x i64], [6 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nocapture readonly %marked, { [0 x i64], [4 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value.i.i.i = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %result_value.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %1 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1)
  %struct_field.i.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 0, i32 0
  %struct_field.i.sroa.6.0..sroa_idx61 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 0, i32 1
  %struct_field.i.sroa.7.0..sroa_idx63 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 0, i32 2
  %struct_field.i.sroa.10.0..sroa_idx65 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 1, i32 0
  %struct_field.i.sroa.13.0..sroa_idx67 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 1, i32 1
  %struct_field.i.sroa.14.0..sroa_idx69 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 1, i32 2
  %struct_field.i.sroa.17.0..sroa_idx71 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 2, i32 0
  %struct_field.i.sroa.20.0..sroa_idx73 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 2, i32 1
  %struct_field.i.sroa.21.0..sroa_idx75 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 1, i32 2, i32 2
  %2 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value.i.i.i to i8*
  %tag_id_ptr10.i.i.i = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value.i.i.i, i64 0, i32 2
  br label %joinpointcont.i

joinpointcont.i:                                  ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i, %entry
  %joinpointarg.i = phi i64 [ 0, %entry ], [ %operation_result.i.i, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i ]
  %struct_field.i.sroa.0.0.copyload = load i8*, i8** %struct_field.i.sroa.0.0..sroa_idx, align 8
  %struct_field.i.sroa.6.0.copyload = load i64, i64* %struct_field.i.sroa.6.0..sroa_idx61, align 8
  %struct_field.i.sroa.7.0.copyload = load i64, i64* %struct_field.i.sroa.7.0..sroa_idx63, align 8
  %struct_field.i.sroa.10.0.copyload = load i8*, i8** %struct_field.i.sroa.10.0..sroa_idx65, align 8
  %struct_field.i.sroa.13.0.copyload = load i64, i64* %struct_field.i.sroa.13.0..sroa_idx67, align 8
  %struct_field.i.sroa.14.0.copyload = load i64, i64* %struct_field.i.sroa.14.0..sroa_idx69, align 8
  %struct_field.i.sroa.17.0.copyload = load i8*, i8** %struct_field.i.sroa.17.0..sroa_idx71, align 8
  %struct_field.i.sroa.20.0.copyload = load i64, i64* %struct_field.i.sroa.20.0..sroa_idx73, align 8
  %struct_field.i.sroa.21.0.copyload = load i64, i64* %struct_field.i.sroa.21.0..sroa_idx75, align 8
  %"cap > 0.i.i.i.not" = icmp eq i64 %struct_field.i.sroa.7.0.copyload, 0
  br i1 %"cap > 0.i.i.i.not", label %"#Attr_#inc_9.exit.i.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %joinpointcont.i
  %3 = ptrtoint i8* %struct_field.i.sroa.0.0.copyload to i64
  %4 = shl i64 %struct_field.i.sroa.7.0.copyload, 1
  %.not.i.i.i.i.i = icmp slt i64 %struct_field.i.sroa.7.0.copyload, 0
  %5 = select i1 %.not.i.i.i.i.i, i64 %4, i64 %3
  %as_usize_ptr.i.i.i = inttoptr i64 %5 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %6 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#inc_9.exit.i.i", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i.i.i
  %7 = add nsw i64 %6, 1
  store i64 %7, i64* %get_rc_ptr.i.i.i, align 8
  br label %"#Attr_#inc_9.exit.i.i"

"#Attr_#inc_9.exit.i.i":                          ; preds = %Then.i.i.i.i, %modification_list_block.i.i.i, %joinpointcont.i
  %"cap > 0.i18.i.i.not" = icmp eq i64 %struct_field.i.sroa.14.0.copyload, 0
  br i1 %"cap > 0.i18.i.i.not", label %"#Attr_#inc_10.exit.i.i", label %modification_list_block.i27.i.i

modification_list_block.i27.i.i:                  ; preds = %"#Attr_#inc_9.exit.i.i"
  %8 = ptrtoint i8* %struct_field.i.sroa.10.0.copyload to i64
  %9 = shl i64 %struct_field.i.sroa.14.0.copyload, 1
  %.not.i.i.i23.i.i = icmp slt i64 %struct_field.i.sroa.14.0.copyload, 0
  %10 = select i1 %.not.i.i.i23.i.i, i64 %9, i64 %8
  %as_usize_ptr.i24.i.i = inttoptr i64 %10 to i64*
  %get_rc_ptr.i25.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i, i64 -1
  %11 = load i64, i64* %get_rc_ptr.i25.i.i, align 8
  %.not.i.i26.i.i = icmp eq i64 %11, 0
  br i1 %.not.i.i26.i.i, label %"#Attr_#inc_10.exit.i.i", label %Then.i.i28.i.i

Then.i.i28.i.i:                                   ; preds = %modification_list_block.i27.i.i
  %12 = add nsw i64 %11, 1
  store i64 %12, i64* %get_rc_ptr.i25.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i"

"#Attr_#inc_10.exit.i.i":                         ; preds = %Then.i.i28.i.i, %modification_list_block.i27.i.i, %"#Attr_#inc_9.exit.i.i"
  %"cap > 0.i5.i.i.not" = icmp eq i64 %struct_field.i.sroa.21.0.copyload, 0
  br i1 %"cap > 0.i5.i.i.not", label %"#Attr_#inc_18.exit.i", label %modification_list_block.i14.i.i

modification_list_block.i14.i.i:                  ; preds = %"#Attr_#inc_10.exit.i.i"
  %13 = ptrtoint i8* %struct_field.i.sroa.17.0.copyload to i64
  %14 = shl i64 %struct_field.i.sroa.21.0.copyload, 1
  %.not.i.i.i10.i.i = icmp slt i64 %struct_field.i.sroa.21.0.copyload, 0
  %15 = select i1 %.not.i.i.i10.i.i, i64 %14, i64 %13
  %as_usize_ptr.i11.i.i = inttoptr i64 %15 to i64*
  %get_rc_ptr.i12.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i, i64 -1
  %16 = load i64, i64* %get_rc_ptr.i12.i.i, align 8
  %.not.i.i13.i.i = icmp eq i64 %16, 0
  br i1 %.not.i.i13.i.i, label %"#Attr_#inc_18.exit.i", label %Then.i.i15.i.i

Then.i.i15.i.i:                                   ; preds = %modification_list_block.i14.i.i
  %17 = add nsw i64 %16, 1
  store i64 %17, i64* %get_rc_ptr.i12.i.i, align 8
  br label %"#Attr_#inc_18.exit.i"

"#Attr_#inc_18.exit.i":                           ; preds = %Then.i.i15.i.i, %modification_list_block.i14.i.i, %"#Attr_#inc_10.exit.i.i"
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #11
  %18 = insertvalue %list.RocList undef, i8* %struct_field.i.sroa.0.0.copyload, 0
  %19 = insertvalue %list.RocList %18, i64 %struct_field.i.sroa.6.0.copyload, 1
  %struct_field17.i.i.i = insertvalue %list.RocList %19, i64 %struct_field.i.sroa.7.0.copyload, 2
  %20 = insertvalue %list.RocList undef, i8* %struct_field.i.sroa.10.0.copyload, 0
  %21 = insertvalue %list.RocList %20, i64 %struct_field.i.sroa.13.0.copyload, 1
  %struct_field122.i.i.i = insertvalue %list.RocList %21, i64 %struct_field.i.sroa.14.0.copyload, 2
  %22 = insertvalue %list.RocList undef, i8* %struct_field.i.sroa.17.0.copyload, 0
  %23 = insertvalue %list.RocList %22, i64 %struct_field.i.sroa.20.0.copyload, 1
  %struct_field227.i.i.i = insertvalue %list.RocList %23, i64 %struct_field.i.sroa.21.0.copyload, 2
  %int_bitwise_or.i14.i.i = tail call i64 @llvm.fshl.i64(i64 %joinpointarg.i, i64 %joinpointarg.i, i64 32) #11
  %int_bitwise_xor.i.i.i.i = xor i64 %int_bitwise_or.i14.i.i, -1800455987208640293
  %inc_cast.i.i.i26.i.i.i = zext i64 %int_bitwise_xor.i.i.i.i to i128
  %int_bitwise_xor.i24.i.i.i = xor i64 %joinpointarg.i, xor (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64), i64 -6884282663029611473)
  %inc_cast.i9.i.i27.i.i.i = zext i64 %int_bitwise_xor.i24.i.i.i to i128
  %call.i.i.i28.i.i.i = mul nuw i128 %inc_cast.i.i.i26.i.i.i, %inc_cast.i9.i.i27.i.i.i
  %call.i.i.i28.i.i.masked.i = and i128 %call.i.i.i28.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i33.i.i.i = lshr i128 %call.i.i.i28.i.i.i, 64
  %inc_cast.i9.i.i12.i.i.i = xor i128 %call.i.i.i28.i.i.masked.i, %int_shift_right_zf.i.i.i33.i.i.i
  %call.i.i.i13.i.i.i = mul nuw i128 %inc_cast.i9.i.i12.i.i.i, 16646288086500911315
  %call.i.i.i13.i.i.masked.i = and i128 %call.i.i.i13.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i18.i.i.i = lshr i128 %call.i.i.i13.i.i.i, 64
  %inc_cast.i9.i.i.i.i.i = xor i128 %call.i.i.i13.i.i.masked.i, %int_shift_right_zf.i.i.i18.i.i.i
  %call.i.i.i.i.i.i = mul nuw i128 %inc_cast.i9.i.i.i.i.i, zext (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64) to i128)
  %int_shift_right_zf.i.i.i.i.i.i = lshr i128 %call.i.i.i.i.i.i, 64
  %int_bitwise_xor.i.i.i.i3.i = xor i128 %int_shift_right_zf.i.i.i.i.i.i, %call.i.i.i.i.i.i
  %int_bitwise_xor.i.i.i.i.i = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i64
  %int_shift_right_zf.i.i.i.i.i = lshr i64 %int_bitwise_xor.i.i.i.i.i, 7
  %24 = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i8
  %inc_cast.i.i.i.i.i = and i8 %24, 127
  %int_shift_right_zf.i.i29.i.i.i = lshr i64 %struct_field.i.sroa.20.0.copyload, 3
  %call.i.i.i.i.i = tail call i64 @llvm.usub.sat.i64(i64 %int_shift_right_zf.i.i29.i.i.i, i64 1) #11
  %int_bitwise_and.i.i.i.i.i = and i64 %int_shift_right_zf.i.i.i.i.i, %call.i.i.i.i.i
  %insert_record_field.i28.i.i.i = insertvalue { i64, i64, i64 } zeroinitializer, i64 %call.i.i.i.i.i, 0
  %insert_record_field3.i.i.i.i = insertvalue { i64, i64, i64 } %insert_record_field.i28.i.i.i, i64 1, 1
  %insert_record_field4.i.i.i.i = insertvalue { i64, i64, i64 } %insert_record_field3.i.i.i.i, i64 %int_bitwise_and.i.i.i.i.i, 2
  call fastcc void @Dict_findIndexHelper_ed169764ca9d337498c6be1dfb74e7ca1e917efa1f3a396b19453fd5d3901cc1(%list.RocList %struct_field227.i.i.i, %list.RocList %struct_field122.i.i.i, %list.RocList %struct_field17.i.i.i, i8 %inc_cast.i.i.i.i.i, i64 %joinpointarg.i, { i64, i64, i64 } %insert_record_field4.i.i.i.i, { [0 x i64], [1 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i) #11
  %load_tag_id.i.i.i = load i8, i8* %tag_id_ptr10.i.i.i, align 8
  %eq_u8.i.i.i = icmp eq i8 %load_tag_id.i.i.i, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #11
  br i1 %eq_u8.i.i.i, label %then_block.i, label %else_block.i

then_block.i:                                     ; preds = %"#Attr_#inc_18.exit.i"
  %call.i.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %joinpointarg.i, i64 1) #11
  %has_overflowed.i.i = extractvalue { i64, i1 } %call.i.i, 1
  br i1 %has_overflowed.i.i, label %throw_block.i.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i

throw_block.i.i:                                  ; preds = %then_block.i
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i: ; preds = %then_block.i
  %operation_result.i.i = extractvalue { i64, i1 } %call.i.i, 0
  br label %joinpointcont.i

else_block.i:                                     ; preds = %"#Attr_#inc_18.exit.i"
  %struct_field3.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 0, i32 0
  %struct_field3.unpack.i = load i8*, i8** %struct_field3.elt.i, align 8
  %struct_field3.elt5.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 0, i32 1
  %struct_field3.unpack6.i = load i64, i64* %struct_field3.elt5.i, align 8
  %struct_field3.elt7.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %marked, i64 0, i32 0, i32 2
  %struct_field3.unpack8.i = load i64, i64* %struct_field3.elt7.i, align 8
  br i1 %"cap > 0.i.i.i.not", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i22.i

modification_list_block.i.i22.i:                  ; preds = %else_block.i
  %25 = ptrtoint i8* %struct_field.i.sroa.0.0.copyload to i64
  %26 = shl i64 %struct_field.i.sroa.7.0.copyload, 1
  %.not.i.i.i.i19.i = icmp slt i64 %struct_field.i.sroa.7.0.copyload, 0
  %27 = select i1 %.not.i.i.i.i19.i, i64 %26, i64 %25
  %as_usize_ptr.i.i20.i = inttoptr i64 %27 to i64*
  %get_rc_ptr.i.i21.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i20.i, i64 -1
  %28 = load i64, i64* %get_rc_ptr.i.i21.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %28, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i22.i
  %29 = add i64 %28, -1
  store i64 %29, i64* %get_rc_ptr.i.i21.i, align 8
  %30 = icmp eq i64 %28, -9223372036854775808
  br i1 %30, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %31 = bitcast i64* %get_rc_ptr.i.i21.i to i8*
  tail call void @roc_dealloc(i8* %31, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %modification_list_block.i.i22.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %else_block.i
  br i1 %"cap > 0.i18.i.i.not", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i40.i

modification_list_block.i40.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %32 = ptrtoint i8* %struct_field.i.sroa.10.0.copyload to i64
  %33 = shl i64 %struct_field.i.sroa.14.0.copyload, 1
  %.not.i.i.i36.i = icmp slt i64 %struct_field.i.sroa.14.0.copyload, 0
  %34 = select i1 %.not.i.i.i36.i, i64 %33, i64 %32
  %as_usize_ptr.i37.i = inttoptr i64 %34 to i64*
  %get_rc_ptr.i38.i = getelementptr inbounds i64, i64* %as_usize_ptr.i37.i, i64 -1
  %35 = load i64, i64* %get_rc_ptr.i38.i, align 8
  %.not.i.i.i.i39.i = icmp eq i64 %35, 0
  br i1 %.not.i.i.i.i39.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i41.i

Then.i.i.i.i41.i:                                 ; preds = %modification_list_block.i40.i
  %36 = add i64 %35, -1
  store i64 %36, i64* %get_rc_ptr.i38.i, align 8
  %37 = icmp eq i64 %35, -9223372036854775808
  br i1 %37, label %Then1.i.i.i.i42.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i42.i:                                ; preds = %Then.i.i.i.i41.i
  %38 = bitcast i64* %get_rc_ptr.i38.i to i8*
  tail call void @roc_dealloc(i8* %38, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %modification_list_block.i40.i, %Then.i.i.i.i41.i, %Then1.i.i.i.i42.i, %"#Attr_#dec_18.exit.i"
  br i1 %"cap > 0.i5.i.i.not", label %Arg_help_d9979e6c4e53f345b21445534e3024a4d9b1f357f33be24df26d7199bf286.exit, label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %39 = ptrtoint i8* %struct_field.i.sroa.17.0.copyload to i64
  %40 = shl i64 %struct_field.i.sroa.21.0.copyload, 1
  %.not.i.i.i27.i = icmp slt i64 %struct_field.i.sroa.21.0.copyload, 0
  %41 = select i1 %.not.i.i.i27.i, i64 %40, i64 %39
  %as_usize_ptr.i.i = inttoptr i64 %41 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %42 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i.i28.i = icmp eq i64 %42, 0
  br i1 %.not.i.i.i.i28.i, label %Arg_help_d9979e6c4e53f345b21445534e3024a4d9b1f357f33be24df26d7199bf286.exit, label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i.i
  %43 = add i64 %42, -1
  store i64 %43, i64* %get_rc_ptr.i.i, align 8
  %44 = icmp eq i64 %42, -9223372036854775808
  br i1 %44, label %Then1.i.i.i.i.i, label %Arg_help_d9979e6c4e53f345b21445534e3024a4d9b1f357f33be24df26d7199bf286.exit

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  %45 = bitcast i64* %get_rc_ptr.i.i to i8*
  tail call void @roc_dealloc(i8* %45, i32 8) #11
  br label %Arg_help_d9979e6c4e53f345b21445534e3024a4d9b1f357f33be24df26d7199bf286.exit

Arg_help_d9979e6c4e53f345b21445534e3024a4d9b1f357f33be24df26d7199bf286.exit: ; preds = %modification_list_block.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %"#Attr_#dec_10.exit.i"
  %46 = insertvalue %list.RocList undef, i8* %struct_field3.unpack.i, 0
  %47 = insertvalue %list.RocList %46, i64 %struct_field3.unpack6.i, 1
  %struct_field39.i = insertvalue %list.RocList %47, i64 %struct_field3.unpack8.i, 2
  call fastcc void @List_get_bda8b2e07052b2efc66a1e9f03e76f797cb87da45d821543a55583177338ade(%list.RocList %struct_field39.i, i64 %joinpointarg.i, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value.i) #11
  call fastcc void @Result_map_90b3fe129c388e5d6dcedb8e3da106e44c6f17686c9c54922c20c8b7ff65b0({ [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value.i, i64 %joinpointarg.i, { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value) #11
  %48 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1)
  %49 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %49, i8* noundef nonnull align 8 dereferenceable(40) %48, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind
define internal fastcc void @Result_map_8aa359bd749b8effde17d95d39df5dd5cfceb675b455e8288a857540333415({ [0 x i64], [13 x i64], i8, [7 x i8] }* nocapture readonly %result, { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %else_block, %Arg_357_ffa1bb4256f93f1430c7ec63a74b40dccac35d9bf695df066f27668fbb872.exit
  %tag_alloca9.sink72 = phi { [0 x i64], [7 x i64], i8, [7 x i8] }* [ %tag_alloca9, %else_block ], [ %tag_alloca, %Arg_357_ffa1bb4256f93f1430c7ec63a74b40dccac35d9bf695df066f27668fbb872.exit ]
  %.sink = phi i8 [ 0, %else_block ], [ 1, %Arg_357_ffa1bb4256f93f1430c7ec63a74b40dccac35d9bf695df066f27668fbb872.exit ]
  %tag_id_ptr12 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca9.sink72, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr12, align 8
  %1 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca9.sink72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %1, i8* noundef nonnull align 8 dereferenceable(64) %2, i64 64, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %load_element.sroa.0.sroa.3.0.load_element.sroa.0.0..sroa_cast.sroa_idx63 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element.sroa.0.sroa.3.0.copyload = load i64, i64* %load_element.sroa.0.sroa.3.0.load_element.sroa.0.0..sroa_cast.sroa_idx63, align 8
  %load_element.sroa.0.sroa.4.0.load_element.sroa.0.0..sroa_cast.sroa_idx64 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element.sroa.0.sroa.4.0.load_element.sroa.0.0..sroa_cast.sroa_cast = bitcast i64* %load_element.sroa.0.sroa.4.0.load_element.sroa.0.0..sroa_cast.sroa_idx64 to i8**
  %load_element.sroa.0.sroa.4.0.copyload = load i8*, i8** %load_element.sroa.0.sroa.4.0.load_element.sroa.0.0..sroa_cast.sroa_cast, align 8
  %load_element.sroa.0.sroa.6.0.load_element.sroa.0.0..sroa_cast.sroa_idx66 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 5
  %load_element.sroa.0.sroa.6.0.copyload = load i64, i64* %load_element.sroa.0.sroa.6.0.load_element.sroa.0.0..sroa_cast.sroa_idx66, align 8
  %load_element.sroa.0.sroa.7.0.load_element.sroa.0.0..sroa_cast.sroa_idx67 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element.sroa.0.sroa.7.0.load_element.sroa.0.0..sroa_cast.sroa_cast = bitcast i64* %load_element.sroa.0.sroa.7.0.load_element.sroa.0.0..sroa_cast.sroa_idx67 to i8**
  %load_element.sroa.0.sroa.7.0.copyload = load i8*, i8** %load_element.sroa.0.sroa.7.0.load_element.sroa.0.0..sroa_cast.sroa_cast, align 8
  %load_element.sroa.0.sroa.9.0.load_element.sroa.0.0..sroa_cast.sroa_idx69 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 8
  %load_element.sroa.0.sroa.9.0.copyload = load i64, i64* %load_element.sroa.0.sroa.9.0.load_element.sroa.0.0..sroa_cast.sroa_idx69, align 8
  %load_element.sroa.2.0..sroa_idx37 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 10
  %load_element.sroa.2.0..sroa_cast = bitcast i64* %load_element.sroa.2.0..sroa_idx37 to i8**
  %load_element.sroa.2.0.copyload = load i8*, i8** %load_element.sroa.2.0..sroa_cast, align 8
  %load_element.sroa.3.0..sroa_idx38 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 11
  %load_element.sroa.3.0.copyload = load i64, i64* %load_element.sroa.3.0..sroa_idx38, align 8
  %load_element.sroa.4.0..sroa_idx39 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 12
  %load_element.sroa.4.0.copyload = load i64, i64* %load_element.sroa.4.0..sroa_idx39, align 8
  %"cap > 0.i.i.i.not" = icmp eq i64 %load_element.sroa.0.sroa.3.0.copyload, 0
  br i1 %"cap > 0.i.i.i.not", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %then_block
  %load_element.sroa.0.sroa.0.0.load_element.sroa.0.0..sroa_cast.sroa_cast = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %result to i8**
  %load_element.sroa.0.sroa.0.0.copyload = load i8*, i8** %load_element.sroa.0.sroa.0.0.load_element.sroa.0.0..sroa_cast.sroa_cast, align 8
  %3 = ptrtoint i8* %load_element.sroa.0.sroa.0.0.copyload to i64
  %4 = shl i64 %load_element.sroa.0.sroa.3.0.copyload, 1
  %.not.i.i.i.i.i = icmp slt i64 %load_element.sroa.0.sroa.3.0.copyload, 0
  %5 = select i1 %.not.i.i.i.i.i, i64 %4, i64 %3
  %as_usize_ptr.i.i.i = inttoptr i64 %5 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %6 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %7 = add i64 %6, -1
  store i64 %7, i64* %get_rc_ptr.i.i.i, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %9 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  tail call void @roc_dealloc(i8* %9, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %modification_list_block.i.i.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %then_block
  %"cap > 0.i5.i.not" = icmp eq i64 %load_element.sroa.0.sroa.6.0.copyload, 0
  br i1 %"cap > 0.i5.i.not", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %10 = ptrtoint i8* %load_element.sroa.0.sroa.4.0.copyload to i64
  %11 = shl i64 %load_element.sroa.0.sroa.6.0.copyload, 1
  %.not.i.i.i10.i = icmp slt i64 %load_element.sroa.0.sroa.6.0.copyload, 0
  %12 = select i1 %.not.i.i.i10.i, i64 %11, i64 %10
  %as_usize_ptr.i11.i = inttoptr i64 %12 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %13 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %13, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %14 = add i64 %13, -1
  store i64 %14, i64* %get_rc_ptr.i12.i, align 8
  %15 = icmp eq i64 %13, -9223372036854775808
  br i1 %15, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %16 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %16, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %modification_list_block.i14.i, %Then.i.i.i.i15.i, %Then1.i.i.i.i16.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.i.not" = icmp eq i64 %load_element.sroa.0.sroa.9.0.copyload, 0
  br i1 %"cap > 0.i.i.not", label %Arg_357_ffa1bb4256f93f1430c7ec63a74b40dccac35d9bf695df066f27668fbb872.exit, label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %17 = ptrtoint i8* %load_element.sroa.0.sroa.7.0.copyload to i64
  %18 = shl i64 %load_element.sroa.0.sroa.9.0.copyload, 1
  %.not.i.i.i.i = icmp slt i64 %load_element.sroa.0.sroa.9.0.copyload, 0
  %19 = select i1 %.not.i.i.i.i, i64 %18, i64 %17
  %as_usize_ptr.i.i = inttoptr i64 %19 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %20 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %20, 0
  br i1 %.not.i.i.i.i2.i, label %Arg_357_ffa1bb4256f93f1430c7ec63a74b40dccac35d9bf695df066f27668fbb872.exit, label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i.i
  %21 = add i64 %20, -1
  store i64 %21, i64* %get_rc_ptr.i.i, align 8
  %22 = icmp eq i64 %20, -9223372036854775808
  br i1 %22, label %Then1.i.i.i.i.i, label %Arg_357_ffa1bb4256f93f1430c7ec63a74b40dccac35d9bf695df066f27668fbb872.exit

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  %23 = bitcast i64* %get_rc_ptr.i.i to i8*
  tail call void @roc_dealloc(i8* %23, i32 8) #11
  br label %Arg_357_ffa1bb4256f93f1430c7ec63a74b40dccac35d9bf695df066f27668fbb872.exit

Arg_357_ffa1bb4256f93f1430c7ec63a74b40dccac35d9bf695df066f27668fbb872.exit: ; preds = %modification_list_block.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %"#Attr_#dec_10.exit.i"
  %tag_alloca = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %.repack = bitcast [7 x i64]* %data_buffer to i8**
  store i8* %load_element.sroa.2.0.copyload, i8** %.repack, align 8
  %24 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  store i64 %load_element.sroa.3.0.copyload, i64* %24, align 8
  %25 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_element.sroa.4.0.copyload, i64* %25, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %load_element6.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 0, i64 0
  %load_element6.sroa.0.0.copyload = load i64, i64* %load_element6.sroa.0.0..sroa_idx, align 8
  %load_element6.sroa.2.0..sroa_idx81 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 1
  %load_element6.sroa.2.0.copyload = load i64, i64* %load_element6.sroa.2.0..sroa_idx81, align 8
  %load_element6.sroa.3.0..sroa_idx82 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 2
  %load_element6.sroa.3.0.copyload = load i64, i64* %load_element6.sroa.3.0..sroa_idx82, align 8
  %load_element6.sroa.4.0..sroa_idx83 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 3
  %load_element6.sroa.4.0.copyload = load i64, i64* %load_element6.sroa.4.0..sroa_idx83, align 8
  %load_element6.sroa.5.0..sroa_idx84 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 4
  %load_element6.sroa.5.0.copyload = load i64, i64* %load_element6.sroa.5.0..sroa_idx84, align 8
  %load_element6.sroa.6.0..sroa_idx85 = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 5
  %load_element6.sroa.6.0.copyload = load i64, i64* %load_element6.sroa.6.0..sroa_idx85, align 8
  %load_element6.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [13 x i64], i8, [7 x i8] }, { [0 x i64], [13 x i64], i8, [7 x i8] }* %result, i64 0, i32 1, i64 6
  %load_element6.sroa.7.0..sroa_cast = bitcast i64* %load_element6.sroa.7.0..sroa_idx to i8*
  %load_element6.sroa.7.0.copyload = load i8, i8* %load_element6.sroa.7.0..sroa_cast, align 8
  %load_element6.sroa.8.0..sroa_raw_cast = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %result to i8*
  %load_element6.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 49
  %load_element6.sroa.8.0.copyload = load i8, i8* %load_element6.sroa.8.0..sroa_raw_idx, align 1
  %load_element6.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 50
  %load_element6.sroa.9.0.copyload = load i8, i8* %load_element6.sroa.9.0..sroa_raw_idx, align 2
  %load_element6.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 51
  %load_element6.sroa.10.0.copyload = load i8, i8* %load_element6.sroa.10.0..sroa_raw_idx, align 1
  %load_element6.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 52
  %load_element6.sroa.11.0.copyload = load i8, i8* %load_element6.sroa.11.0..sroa_raw_idx, align 4
  %load_element6.sroa.12.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 53
  %load_element6.sroa.12.0.copyload = load i8, i8* %load_element6.sroa.12.0..sroa_raw_idx, align 1
  %load_element6.sroa.13.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 54
  %load_element6.sroa.13.0.copyload = load i8, i8* %load_element6.sroa.13.0..sroa_raw_idx, align 2
  %load_element6.sroa.14.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.sroa.8.0..sroa_raw_cast, i64 55
  %load_element6.sroa.14.0.copyload = load i8, i8* %load_element6.sroa.14.0..sroa_raw_idx, align 1
  %struct_alloca = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack44.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %load_element6.sroa.0.0.copyload, i64* %.repack44.repack, align 8
  %.repack44.repack50 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %load_element6.sroa.2.0.copyload, i64* %.repack44.repack50, align 8
  %.repack44.repack52 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %load_element6.sroa.3.0.copyload, i64* %.repack44.repack52, align 8
  %.repack44.repack54 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 3
  store i64 %load_element6.sroa.4.0.copyload, i64* %.repack44.repack54, align 8
  %.repack44.repack56 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 4
  store i64 %load_element6.sroa.5.0.copyload, i64* %.repack44.repack56, align 8
  %.repack44.repack58 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 5
  store i64 %load_element6.sroa.6.0.copyload, i64* %.repack44.repack58, align 8
  %.repack46 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 %load_element6.sroa.7.0.copyload, i8* %.repack46, align 8
  %.repack48.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 0
  store i8 %load_element6.sroa.8.0.copyload, i8* %.repack48.repack, align 1
  %.repack48.repack60 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 1
  store i8 %load_element6.sroa.9.0.copyload, i8* %.repack48.repack60, align 2
  %.repack48.repack62 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 2
  store i8 %load_element6.sroa.10.0.copyload, i8* %.repack48.repack62, align 1
  %.repack48.repack64 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 3
  store i8 %load_element6.sroa.11.0.copyload, i8* %.repack48.repack64, align 4
  %.repack48.repack66 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 4
  store i8 %load_element6.sroa.12.0.copyload, i8* %.repack48.repack66, align 1
  %.repack48.repack68 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 5
  store i8 %load_element6.sroa.13.0.copyload, i8* %.repack48.repack68, align 2
  %.repack48.repack70 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 6
  store i8 %load_element6.sroa.14.0.copyload, i8* %.repack48.repack70, align 1
  %tag_alloca9 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer10 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca9, i64 0, i32 1
  %26 = bitcast [7 x i64]* %data_buffer10 to i8*
  %27 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %26, i8* noundef nonnull align 8 dereferenceable(56) %27, i64 56, i1 false)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc { i8*, i64, i64 } @"#UserApp_run_cd9485bcd826cd7441fe8b77ca3d11f7f6c7eccd1a861b4655c321fceb12"({ %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* readonly %"68") unnamed_addr #11 {
entry:
  %result_value = alloca { [0 x i64], [12 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %load_element.sroa.0.0..sroa_cast = bitcast { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value to i8**
  %load_element.sroa.2.0..sroa_idx75 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 1
  %load_element.sroa.3.0..sroa_idx76 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 2
  %load_element.sroa.4.0..sroa_idx77 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 3
  %load_element.sroa.5.0..sroa_idx78 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 4
  %load_element.sroa.6.0..sroa_idx79 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 5
  %load_element.sroa.6.0..sroa_cast = bitcast i64* %load_element.sroa.6.0..sroa_idx79 to i8**
  %load_element.sroa.7.0..sroa_idx80 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 6
  %load_element.sroa.8.0..sroa_idx81 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 7
  %load_element.sroa.9.0..sroa_idx82 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 8
  %load_element.sroa.9.0..sroa_cast = bitcast i64* %load_element.sroa.9.0..sroa_idx82 to i8**
  %load_element.sroa.10.0..sroa_idx83 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 9
  %load_element.sroa.11.0..sroa_idx84 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 10
  %load_element.sroa.12.0..sroa_idx85 = getelementptr inbounds { [0 x i64], [12 x i64], i8, [7 x i8] }, { [0 x i64], [12 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 11
  call fastcc void @"#UserApp_runOne_8260e92f9a2d24d9b2660f165db8dae572caf38c10eae7fd35fcf473904457"({ %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %"68", { [0 x i64], [12 x i64], i8, [7 x i8] }* nonnull %result_value)
  %load_tag_id13 = load i8, i8* %tag_id_ptr, align 8
  %eq_u814 = icmp eq i8 %load_tag_id13, 1
  br i1 %eq_u814, label %then_block, label %else_block

then_block:                                       ; preds = %entry, %then_block
  %load_element.sroa.0.0.copyload = load i8*, i8** %load_element.sroa.0.0..sroa_cast, align 8
  %load_element.sroa.2.0.copyload = load i64, i64* %load_element.sroa.2.0..sroa_idx75, align 8
  %load_element.sroa.3.0.copyload = load i64, i64* %load_element.sroa.3.0..sroa_idx76, align 8
  %load_element.sroa.4.0.copyload = load i64, i64* %load_element.sroa.4.0..sroa_idx77, align 8
  %load_element.sroa.5.0.copyload = load i64, i64* %load_element.sroa.5.0..sroa_idx78, align 8
  %load_element.sroa.6.0.copyload = load i8*, i8** %load_element.sroa.6.0..sroa_cast, align 8
  %load_element.sroa.7.0.copyload = load i64, i64* %load_element.sroa.7.0..sroa_idx80, align 8
  %load_element.sroa.8.0.copyload = load i64, i64* %load_element.sroa.8.0..sroa_idx81, align 8
  %load_element.sroa.9.0.copyload = load i8*, i8** %load_element.sroa.9.0..sroa_cast, align 8
  %load_element.sroa.10.0.copyload = load i64, i64* %load_element.sroa.10.0..sroa_idx83, align 8
  %load_element.sroa.11.0.copyload = load i64, i64* %load_element.sroa.11.0..sroa_idx84, align 8
  %load_element.sroa.12.0.copyload = load i64, i64* %load_element.sroa.12.0..sroa_idx85, align 8
  %add_int_wrap.i = add i64 %load_element.sroa.12.0.copyload, 1
  %add_int_wrap.i96 = add i64 %load_element.sroa.5.0.copyload, 1
  %struct_alloca = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca.repack.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 0
  store i8* %load_element.sroa.0.0.copyload, i8** %struct_alloca.repack.repack, align 8
  %struct_alloca.repack.repack63 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 1
  store i64 %load_element.sroa.2.0.copyload, i64* %struct_alloca.repack.repack63, align 8
  %struct_alloca.repack.repack65 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 2
  store i64 %load_element.sroa.3.0.copyload, i64* %struct_alloca.repack.repack65, align 8
  %struct_alloca.repack53 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1
  store i64 %load_element.sroa.4.0.copyload, i64* %struct_alloca.repack53, align 8
  %struct_alloca.repack55 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2
  store i64 %add_int_wrap.i96, i64* %struct_alloca.repack55, align 8
  %struct_alloca.repack57.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3, i32 0
  store i8* %load_element.sroa.6.0.copyload, i8** %struct_alloca.repack57.repack, align 8
  %struct_alloca.repack57.repack67 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3, i32 1
  store i64 %load_element.sroa.7.0.copyload, i64* %struct_alloca.repack57.repack67, align 8
  %struct_alloca.repack57.repack69 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3, i32 2
  store i64 %load_element.sroa.8.0.copyload, i64* %struct_alloca.repack57.repack69, align 8
  %struct_alloca.repack59.repack = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 4, i32 0
  store i8* %load_element.sroa.9.0.copyload, i8** %struct_alloca.repack59.repack, align 8
  %struct_alloca.repack59.repack71 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 4, i32 1
  store i64 %load_element.sroa.10.0.copyload, i64* %struct_alloca.repack59.repack71, align 8
  %struct_alloca.repack59.repack73 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 4, i32 2
  store i64 %load_element.sroa.11.0.copyload, i64* %struct_alloca.repack59.repack73, align 8
  %struct_alloca.repack61 = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 5
  store i64 %add_int_wrap.i, i64* %struct_alloca.repack61, align 8
  call fastcc void @"#UserApp_runOne_8260e92f9a2d24d9b2660f165db8dae572caf38c10eae7fd35fcf473904457"({ %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* nonnull %struct_alloca, { [0 x i64], [12 x i64], i8, [7 x i8] }* nonnull %result_value)
  %load_tag_id = load i8, i8* %tag_id_ptr, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

else_block:                                       ; preds = %then_block, %entry
  %load_element16.sroa.3.0.copyload = load i64, i64* %load_element.sroa.3.0..sroa_idx76, align 8
  %load_element16.sroa.488.0.copyload = load i8*, i8** %load_element.sroa.6.0..sroa_cast, align 8
  %load_element16.sroa.5.0.copyload = load i64, i64* %load_element.sroa.7.0..sroa_idx80, align 8
  %load_element16.sroa.6.0.copyload = load i64, i64* %load_element.sroa.8.0..sroa_idx81, align 8
  %load_element16.sroa.7.0.copyload = load i8*, i8** %load_element.sroa.9.0..sroa_cast, align 8
  %load_element16.sroa.9.0.copyload = load i64, i64* %load_element.sroa.11.0..sroa_idx84, align 8
  %"cap > 0.i98.not" = icmp eq i64 %load_element16.sroa.3.0.copyload, 0
  br i1 %"cap > 0.i98.not", label %"#Attr_#dec_29.exit", label %modification_list_block.i107

modification_list_block.i107:                     ; preds = %else_block
  %load_element16.sroa.0.0.copyload = load i8*, i8** %load_element.sroa.0.0..sroa_cast, align 8
  %0 = ptrtoint i8* %load_element16.sroa.0.0.copyload to i64
  %1 = shl i64 %load_element16.sroa.3.0.copyload, 1
  %.not.i.i.i103 = icmp slt i64 %load_element16.sroa.3.0.copyload, 0
  %2 = select i1 %.not.i.i.i103, i64 %1, i64 %0
  %as_usize_ptr.i104 = inttoptr i64 %2 to i64*
  %get_rc_ptr.i105 = getelementptr inbounds i64, i64* %as_usize_ptr.i104, i64 -1
  %3 = load i64, i64* %get_rc_ptr.i105, align 8
  %.not.i.i.i.i106 = icmp eq i64 %3, 0
  br i1 %.not.i.i.i.i106, label %"#Attr_#dec_29.exit", label %Then.i.i.i.i108

Then.i.i.i.i108:                                  ; preds = %modification_list_block.i107
  %4 = add i64 %3, -1
  store i64 %4, i64* %get_rc_ptr.i105, align 8
  %5 = icmp eq i64 %3, -9223372036854775808
  br i1 %5, label %Then1.i.i.i.i109, label %"#Attr_#dec_29.exit"

Then1.i.i.i.i109:                                 ; preds = %Then.i.i.i.i108
  %6 = bitcast i64* %get_rc_ptr.i105 to i8*
  call void @roc_dealloc(i8* %6, i32 8) #11
  br label %"#Attr_#dec_29.exit"

"#Attr_#dec_29.exit":                             ; preds = %modification_list_block.i107, %Then.i.i.i.i108, %Then1.i.i.i.i109, %else_block
  %"cap > 0.i.not" = icmp eq i64 %load_element16.sroa.9.0.copyload, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#dec_12.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %"#Attr_#dec_29.exit"
  %7 = ptrtoint i8* %load_element16.sroa.7.0.copyload to i64
  %8 = shl i64 %load_element16.sroa.9.0.copyload, 1
  %.not.i.i.i = icmp slt i64 %load_element16.sroa.9.0.copyload, 0
  %9 = select i1 %.not.i.i.i, i64 %8, i64 %7
  %as_usize_ptr.i = inttoptr i64 %9 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %10 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_12.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %11 = add i64 %10, -1
  store i64 %11, i64* %get_rc_ptr.i, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i, label %"#Attr_#dec_12.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %13 = bitcast i64* %get_rc_ptr.i to i8*
  call void @roc_dealloc(i8* %13, i32 8) #11
  br label %"#Attr_#dec_12.exit"

"#Attr_#dec_12.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_29.exit"
  %newret = insertvalue { i8*, i64, i64 } undef, i8* %load_element16.sroa.488.0.copyload, 0
  %newret2 = insertvalue { i8*, i64, i64 } %newret, i64 %load_element16.sroa.5.0.copyload, 1
  %newret4 = insertvalue { i8*, i64, i64 } %newret2, i64 %load_element16.sroa.6.0.copyload, 2
  ret { i8*, i64, i64 } %newret4
}

; Function Attrs: nounwind
define internal fastcc void @Arg_365_4bbf4393e0e015a5e3bdae1945b63cf04b4ae282c0e74329c9ee6ff02ce9db8b({ [0 x i64], [8 x i64], i8, [7 x i8] }* nocapture readonly %st, { %str.RocStr, { [0 x i64], [12 x i64] }* } %"955", { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* nocapture readonly %"#arg_closure", { [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %result_value = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %struct_field3 = alloca %str.RocStr, align 8
  %struct_field1 = alloca %str.RocStr, align 8
  %struct_field = alloca { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, align 8
  %struct_field_access_record_1 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"#arg_closure", i64 0, i32 1
  %1 = bitcast { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field to i8*
  %2 = bitcast { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field_access_record_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(104) %1, i8* noundef nonnull align 8 dereferenceable(104) %2, i64 104, i1 false)
  %3 = bitcast %str.RocStr* %struct_field1 to i8*
  %4 = bitcast { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"#arg_closure" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false)
  %struct_field_access_record_02 = extractvalue { %str.RocStr, { [0 x i64], [12 x i64] }* } %"955", 0
  %struct_field3.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field3, i64 0, i32 0
  %struct_field_access_record_02.elt = extractvalue %str.RocStr %struct_field_access_record_02, 0
  store i8* %struct_field_access_record_02.elt, i8** %struct_field3.repack, align 8
  %struct_field3.repack19 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field3, i64 0, i32 1
  %struct_field_access_record_02.elt20 = extractvalue %str.RocStr %struct_field_access_record_02, 1
  store i64 %struct_field_access_record_02.elt20, i64* %struct_field3.repack19, align 8
  %struct_field3.repack21 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field3, i64 0, i32 2
  %struct_field_access_record_02.elt22 = extractvalue %str.RocStr %struct_field_access_record_02, 2
  store i64 %struct_field_access_record_02.elt22, i64* %struct_field3.repack21, align 8
  %struct_field_access_record_14 = extractvalue { %str.RocStr, { [0 x i64], [12 x i64] }* } %"955", 1
  %call_builtin.i = call fastcc i1 @roc_builtins.str.equal(%str.RocStr* nocapture nonnull readonly %struct_field1, %str.RocStr* nocapture nonnull readonly %struct_field3) #11
  %is_big_str.i = icmp sgt i64 %struct_field_access_record_02.elt22, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %entry
  %call_builtin.i220 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field3) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i220, i64 -8
  %5 = bitcast i8* %get_rc_ptr.i to i64*
  %6 = load i64, i64* %5, align 8
  %.not.i.i.i.i = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %entry
  %load_str_to_stack.i221.elt241 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1, i64 0, i32 2
  %load_str_to_stack.i221.unpack242 = load i64, i64* %load_str_to_stack.i221.elt241, align 8
  %is_big_str.i223 = icmp sgt i64 %load_str_to_stack.i221.unpack242, 0
  br i1 %is_big_str.i223, label %modify_rc.i228, label %"#Attr_#dec_4.exit232"

modify_rc.i228:                                   ; preds = %"#Attr_#dec_4.exit"
  %call_builtin.i224 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1) #11
  %get_rc_ptr.i226 = getelementptr inbounds i8, i8* %call_builtin.i224, i64 -8
  %9 = bitcast i8* %get_rc_ptr.i226 to i64*
  %10 = load i64, i64* %9, align 8
  %.not.i.i.i.i227 = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i227, label %"#Attr_#dec_4.exit232", label %Then.i.i.i.i229

Then.i.i.i.i229:                                  ; preds = %modify_rc.i228
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i230, label %"#Attr_#dec_4.exit232"

Then1.i.i.i.i230:                                 ; preds = %Then.i.i.i.i229
  tail call void @roc_dealloc(i8* %get_rc_ptr.i226, i32 8) #11
  br label %"#Attr_#dec_4.exit232"

"#Attr_#dec_4.exit232":                           ; preds = %modify_rc.i228, %Then.i.i.i.i229, %Then1.i.i.i.i230, %"#Attr_#dec_4.exit"
  br i1 %call_builtin.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_16.exit", %then_block
  %tag_alloca15.sink249 = phi { [0 x i64], [9 x i64], i8, [7 x i8] }* [ %tag_alloca15, %"#Attr_#dec_16.exit" ], [ %tag_alloca8, %then_block ]
  %struct_alloca14.sink = phi { { [0 x i64], [8 x i64], i8, [7 x i8] } }* [ %struct_alloca14, %"#Attr_#dec_16.exit" ], [ %struct_alloca7, %then_block ]
  %.sink = phi i8 [ 1, %"#Attr_#dec_16.exit" ], [ 0, %then_block ]
  %data_buffer16 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca15.sink249, i64 0, i32 1
  %13 = bitcast [9 x i64]* %data_buffer16 to i8*
  %14 = bitcast { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %13, i8* noundef nonnull align 8 dereferenceable(72) %14, i64 72, i1 false)
  %tag_id_ptr18 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca15.sink249, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr18, align 8
  %15 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %0 to i8*
  %16 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca15.sink249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %15, i8* noundef nonnull align 8 dereferenceable(80) %16, i64 80, i1 false)
  ret void

then_block:                                       ; preds = %"#Attr_#dec_4.exit232"
  tail call fastcc void @"#Attr_#dec_35"({ [0 x i64], [8 x i64], i8, [7 x i8] }* %st)
  call fastcc void @Arg_parseHelp_2e57dcc641b9a7d02216f11efe915059803794c6e2bfaeace3f979127cf29e24({ [0 x i64], [12 x i64] }* %struct_field_access_record_14, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %struct_field, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value)
  %load_tag_to_put_in_struct.unpack91.elt = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct.unpack91.unpack = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt, align 8
  %load_tag_to_put_in_struct.unpack91.elt97 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct.unpack91.unpack98 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt97, align 8
  %load_tag_to_put_in_struct.unpack91.elt99 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct.unpack91.unpack100 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt99, align 8
  %load_tag_to_put_in_struct.unpack91.elt101 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct.unpack91.unpack102 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt101, align 8
  %load_tag_to_put_in_struct.unpack91.elt103 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct.unpack91.unpack104 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt103, align 8
  %load_tag_to_put_in_struct.unpack91.elt105 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct.unpack91.unpack106 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt105, align 8
  %load_tag_to_put_in_struct.unpack91.elt107 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 6
  %load_tag_to_put_in_struct.unpack91.unpack108 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt107, align 8
  %load_tag_to_put_in_struct.elt92 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack93 = load i8, i8* %load_tag_to_put_in_struct.elt92, align 8
  %load_tag_to_put_in_struct.unpack95.elt = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct.unpack95.unpack = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt, align 1
  %load_tag_to_put_in_struct.unpack95.elt110 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct.unpack95.unpack111 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt110, align 2
  %load_tag_to_put_in_struct.unpack95.elt112 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct.unpack95.unpack113 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt112, align 1
  %load_tag_to_put_in_struct.unpack95.elt114 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct.unpack95.unpack115 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt114, align 4
  %load_tag_to_put_in_struct.unpack95.elt116 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct.unpack95.unpack117 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt116, align 1
  %load_tag_to_put_in_struct.unpack95.elt118 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct.unpack95.unpack119 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt118, align 2
  %load_tag_to_put_in_struct.unpack95.elt120 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct.unpack95.unpack121 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt120, align 1
  %struct_alloca = alloca { { [0 x i64], [7 x i64], i8, [7 x i8] } }, align 8
  %.repack123.repack = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct.unpack91.unpack, i64* %.repack123.repack, align 8
  %.repack123.repack129 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack91.unpack98, i64* %.repack123.repack129, align 8
  %.repack123.repack131 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack91.unpack100, i64* %.repack123.repack131, align 8
  %.repack123.repack133 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct.unpack91.unpack102, i64* %.repack123.repack133, align 8
  %.repack123.repack135 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct.unpack91.unpack104, i64* %.repack123.repack135, align 8
  %.repack123.repack137 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct.unpack91.unpack106, i64* %.repack123.repack137, align 8
  %.repack123.repack139 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 6
  store i64 %load_tag_to_put_in_struct.unpack91.unpack108, i64* %.repack123.repack139, align 8
  %.repack125 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 %load_tag_to_put_in_struct.unpack93, i8* %.repack125, align 8
  %.repack127.repack = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct.unpack95.unpack, i8* %.repack127.repack, align 1
  %.repack127.repack141 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct.unpack95.unpack111, i8* %.repack127.repack141, align 2
  %.repack127.repack143 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct.unpack95.unpack113, i8* %.repack127.repack143, align 1
  %.repack127.repack145 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct.unpack95.unpack115, i8* %.repack127.repack145, align 4
  %.repack127.repack147 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct.unpack95.unpack117, i8* %.repack127.repack147, align 1
  %.repack127.repack149 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct.unpack95.unpack119, i8* %.repack127.repack149, align 2
  %.repack127.repack151 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct.unpack95.unpack121, i8* %.repack127.repack151, align 1
  %tag_alloca = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %17 = bitcast [8 x i64]* %data_buffer to i8*
  %18 = bitcast { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %17, i8* noundef nonnull align 8 dereferenceable(64) %18, i64 64, i1 false)
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr, align 8
  %load_tag_to_put_in_struct5.unpack154.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct5.unpack154.unpack = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt, align 8
  %load_tag_to_put_in_struct5.unpack154.elt160 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct5.unpack154.unpack161 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt160, align 8
  %load_tag_to_put_in_struct5.unpack154.elt162 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct5.unpack154.unpack163 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt162, align 8
  %load_tag_to_put_in_struct5.unpack154.elt164 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct5.unpack154.unpack165 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt164, align 8
  %load_tag_to_put_in_struct5.unpack154.elt166 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct5.unpack154.unpack167 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt166, align 8
  %load_tag_to_put_in_struct5.unpack154.elt168 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct5.unpack154.unpack169 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt168, align 8
  %load_tag_to_put_in_struct5.unpack154.elt170 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 6
  %load_tag_to_put_in_struct5.unpack154.unpack171 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt170, align 8
  %load_tag_to_put_in_struct5.unpack154.elt172 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 7
  %load_tag_to_put_in_struct5.unpack154.unpack173 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt172, align 8
  %struct_alloca7 = alloca { { [0 x i64], [8 x i64], i8, [7 x i8] } }, align 8
  %.repack188.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack, i64* %.repack188.repack, align 8
  %.repack188.repack194 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack161, i64* %.repack188.repack194, align 8
  %.repack188.repack196 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack163, i64* %.repack188.repack196, align 8
  %.repack188.repack198 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack165, i64* %.repack188.repack198, align 8
  %.repack188.repack200 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack167, i64* %.repack188.repack200, align 8
  %.repack188.repack202 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack169, i64* %.repack188.repack202, align 8
  %.repack188.repack204 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 6
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack171, i64* %.repack188.repack204, align 8
  %.repack188.repack206 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 7
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack173, i64* %.repack188.repack206, align 8
  %.repack190 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 2
  store i8 1, i8* %.repack190, align 8
  %tag_alloca8 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

else_block:                                       ; preds = %"#Attr_#dec_4.exit232"
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %struct_field_access_record_14)
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %19 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %else_block
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %20 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %19, i8* noundef nonnull align 8 dereferenceable(24) %20, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %loop.i.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %21 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %22 = load i64, i64* %21, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %22, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i
  %23 = add i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %22, -9223372036854775808
  br i1 %24, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %25 = ptrtoint i8* %struct_field.unpack.i to i64
  %26 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %27 = select i1 %.not.i.i.i57.i, i64 %26, i64 %25
  %as_usize_ptr.i58.i = inttoptr i64 %27 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %28 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %28, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %29 = add i64 %28, -1
  store i64 %29, i64* %get_rc_ptr.i59.i, align 8
  %30 = icmp eq i64 %28, -9223372036854775808
  br i1 %30, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %31 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %31, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %else_block
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %32 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %33 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %34 = select i1 %.not.i.i.i.i.i, i64 %33, i64 %32
  %as_usize_ptr.i.i.i = inttoptr i64 %34 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %35 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %35, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %36 = add i64 %35, -1
  store i64 %36, i64* %get_rc_ptr.i.i.i, align 8
  %37 = icmp eq i64 %35, -9223372036854775808
  br i1 %37, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %38 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  tail call void @roc_dealloc(i8* %38, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %39 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %40 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %41 = select i1 %.not.i.i.i10.i, i64 %40, i64 %39
  %as_usize_ptr.i11.i = inttoptr i64 %41 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %42 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %42, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %43 = add i64 %42, -1
  store i64 %43, i64* %get_rc_ptr.i12.i, align 8
  %44 = icmp eq i64 %42, -9223372036854775808
  br i1 %44, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %45 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %45, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %46 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %47 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i244 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %48 = select i1 %.not.i.i.i.i244, i64 %47, i64 %46
  %as_usize_ptr.i.i = inttoptr i64 %48 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %49 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %49, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i.i
  %50 = add i64 %49, -1
  store i64 %50, i64* %get_rc_ptr.i.i, align 8
  %51 = icmp eq i64 %49, -9223372036854775808
  br i1 %51, label %Then1.i.i.i.i.i, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  %52 = bitcast i64* %get_rc_ptr.i.i to i8*
  tail call void @roc_dealloc(i8* %52, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i
  %load_tag_to_put_in_struct12.unpack24.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct12.unpack24.unpack = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt, align 8
  %load_tag_to_put_in_struct12.unpack24.elt30 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct12.unpack24.unpack31 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt30, align 8
  %load_tag_to_put_in_struct12.unpack24.elt32 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct12.unpack24.unpack33 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt32, align 8
  %load_tag_to_put_in_struct12.unpack24.elt34 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct12.unpack24.unpack35 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt34, align 8
  %load_tag_to_put_in_struct12.unpack24.elt36 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct12.unpack24.unpack37 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt36, align 8
  %load_tag_to_put_in_struct12.unpack24.elt38 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct12.unpack24.unpack39 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt38, align 8
  %load_tag_to_put_in_struct12.unpack24.elt40 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 6
  %load_tag_to_put_in_struct12.unpack24.unpack41 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt40, align 8
  %load_tag_to_put_in_struct12.unpack24.elt42 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 7
  %load_tag_to_put_in_struct12.unpack24.unpack43 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt42, align 8
  %load_tag_to_put_in_struct12.elt25 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 2
  %load_tag_to_put_in_struct12.unpack26 = load i8, i8* %load_tag_to_put_in_struct12.elt25, align 8
  %load_tag_to_put_in_struct12.unpack28.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct12.unpack28.unpack = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt, align 1
  %load_tag_to_put_in_struct12.unpack28.elt45 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct12.unpack28.unpack46 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt45, align 1
  %load_tag_to_put_in_struct12.unpack28.elt47 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct12.unpack28.unpack48 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt47, align 1
  %load_tag_to_put_in_struct12.unpack28.elt49 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct12.unpack28.unpack50 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt49, align 1
  %load_tag_to_put_in_struct12.unpack28.elt51 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct12.unpack28.unpack52 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt51, align 1
  %load_tag_to_put_in_struct12.unpack28.elt53 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct12.unpack28.unpack54 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt53, align 1
  %load_tag_to_put_in_struct12.unpack28.elt55 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct12.unpack28.unpack56 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt55, align 1
  %struct_alloca14 = alloca { { [0 x i64], [8 x i64], i8, [7 x i8] } }, align 8
  %.repack58.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack, i64* %.repack58.repack, align 8
  %.repack58.repack64 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack31, i64* %.repack58.repack64, align 8
  %.repack58.repack66 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack33, i64* %.repack58.repack66, align 8
  %.repack58.repack68 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack35, i64* %.repack58.repack68, align 8
  %.repack58.repack70 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack37, i64* %.repack58.repack70, align 8
  %.repack58.repack72 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack39, i64* %.repack58.repack72, align 8
  %.repack58.repack74 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 6
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack41, i64* %.repack58.repack74, align 8
  %.repack58.repack76 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 7
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack43, i64* %.repack58.repack76, align 8
  %.repack60 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 2
  store i8 %load_tag_to_put_in_struct12.unpack26, i8* %.repack60, align 8
  %.repack62.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack, i8* %.repack62.repack, align 1
  %.repack62.repack78 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack46, i8* %.repack62.repack78, align 2
  %.repack62.repack80 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack48, i8* %.repack62.repack80, align 1
  %.repack62.repack82 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack50, i8* %.repack62.repack82, align 4
  %.repack62.repack84 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack52, i8* %.repack62.repack84, align 1
  %.repack62.repack86 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack54, i8* %.repack62.repack86, align 2
  %.repack62.repack88 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack56, i8* %.repack62.repack88, align 1
  %tag_alloca15 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Arg_365_6c94439abdaea430396893132b7081a321bebeec28b791482b74cab7e6c1ab({ [0 x i64], [8 x i64], i8, [7 x i8] }* nocapture readonly %st, { %str.RocStr, { [0 x i64], [12 x i64] }* } %"955", { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* nocapture readonly %"#arg_closure", { [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %result_value = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %struct_field3 = alloca %str.RocStr, align 8
  %struct_field1 = alloca %str.RocStr, align 8
  %struct_field = alloca { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, align 8
  %struct_field_access_record_1 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"#arg_closure", i64 0, i32 1
  %1 = bitcast { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field to i8*
  %2 = bitcast { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field_access_record_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(104) %1, i8* noundef nonnull align 8 dereferenceable(104) %2, i64 104, i1 false)
  %3 = bitcast %str.RocStr* %struct_field1 to i8*
  %4 = bitcast { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %"#arg_closure" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false)
  %struct_field_access_record_02 = extractvalue { %str.RocStr, { [0 x i64], [12 x i64] }* } %"955", 0
  %struct_field3.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field3, i64 0, i32 0
  %struct_field_access_record_02.elt = extractvalue %str.RocStr %struct_field_access_record_02, 0
  store i8* %struct_field_access_record_02.elt, i8** %struct_field3.repack, align 8
  %struct_field3.repack19 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field3, i64 0, i32 1
  %struct_field_access_record_02.elt20 = extractvalue %str.RocStr %struct_field_access_record_02, 1
  store i64 %struct_field_access_record_02.elt20, i64* %struct_field3.repack19, align 8
  %struct_field3.repack21 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field3, i64 0, i32 2
  %struct_field_access_record_02.elt22 = extractvalue %str.RocStr %struct_field_access_record_02, 2
  store i64 %struct_field_access_record_02.elt22, i64* %struct_field3.repack21, align 8
  %struct_field_access_record_14 = extractvalue { %str.RocStr, { [0 x i64], [12 x i64] }* } %"955", 1
  %call_builtin.i = call fastcc i1 @roc_builtins.str.equal(%str.RocStr* nocapture nonnull readonly %struct_field1, %str.RocStr* nocapture nonnull readonly %struct_field3) #11
  %is_big_str.i = icmp sgt i64 %struct_field_access_record_02.elt22, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %entry
  %call_builtin.i220 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field3) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i220, i64 -8
  %5 = bitcast i8* %get_rc_ptr.i to i64*
  %6 = load i64, i64* %5, align 8
  %.not.i.i.i.i = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %entry
  %load_str_to_stack.i221.elt241 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1, i64 0, i32 2
  %load_str_to_stack.i221.unpack242 = load i64, i64* %load_str_to_stack.i221.elt241, align 8
  %is_big_str.i223 = icmp sgt i64 %load_str_to_stack.i221.unpack242, 0
  br i1 %is_big_str.i223, label %modify_rc.i228, label %"#Attr_#dec_4.exit232"

modify_rc.i228:                                   ; preds = %"#Attr_#dec_4.exit"
  %call_builtin.i224 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1) #11
  %get_rc_ptr.i226 = getelementptr inbounds i8, i8* %call_builtin.i224, i64 -8
  %9 = bitcast i8* %get_rc_ptr.i226 to i64*
  %10 = load i64, i64* %9, align 8
  %.not.i.i.i.i227 = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i227, label %"#Attr_#dec_4.exit232", label %Then.i.i.i.i229

Then.i.i.i.i229:                                  ; preds = %modify_rc.i228
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i230, label %"#Attr_#dec_4.exit232"

Then1.i.i.i.i230:                                 ; preds = %Then.i.i.i.i229
  tail call void @roc_dealloc(i8* %get_rc_ptr.i226, i32 8) #11
  br label %"#Attr_#dec_4.exit232"

"#Attr_#dec_4.exit232":                           ; preds = %modify_rc.i228, %Then.i.i.i.i229, %Then1.i.i.i.i230, %"#Attr_#dec_4.exit"
  br i1 %call_builtin.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_16.exit", %then_block
  %tag_alloca15.sink249 = phi { [0 x i64], [9 x i64], i8, [7 x i8] }* [ %tag_alloca15, %"#Attr_#dec_16.exit" ], [ %tag_alloca8, %then_block ]
  %struct_alloca14.sink = phi { { [0 x i64], [8 x i64], i8, [7 x i8] } }* [ %struct_alloca14, %"#Attr_#dec_16.exit" ], [ %struct_alloca7, %then_block ]
  %.sink = phi i8 [ 1, %"#Attr_#dec_16.exit" ], [ 0, %then_block ]
  %data_buffer16 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca15.sink249, i64 0, i32 1
  %13 = bitcast [9 x i64]* %data_buffer16 to i8*
  %14 = bitcast { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %13, i8* noundef nonnull align 8 dereferenceable(72) %14, i64 72, i1 false)
  %tag_id_ptr18 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca15.sink249, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr18, align 8
  %15 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %0 to i8*
  %16 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %tag_alloca15.sink249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %15, i8* noundef nonnull align 8 dereferenceable(80) %16, i64 80, i1 false)
  ret void

then_block:                                       ; preds = %"#Attr_#dec_4.exit232"
  tail call fastcc void @"#Attr_#dec_35"({ [0 x i64], [8 x i64], i8, [7 x i8] }* %st)
  call fastcc void @Arg_parseHelp_c72b902eda39bb917aa07692563fa619ede178030f0bf29603dcc1a9e69ba2({ [0 x i64], [12 x i64] }* %struct_field_access_record_14, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %struct_field, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value)
  %load_tag_to_put_in_struct.unpack91.elt = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct.unpack91.unpack = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt, align 8
  %load_tag_to_put_in_struct.unpack91.elt97 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct.unpack91.unpack98 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt97, align 8
  %load_tag_to_put_in_struct.unpack91.elt99 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct.unpack91.unpack100 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt99, align 8
  %load_tag_to_put_in_struct.unpack91.elt101 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct.unpack91.unpack102 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt101, align 8
  %load_tag_to_put_in_struct.unpack91.elt103 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct.unpack91.unpack104 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt103, align 8
  %load_tag_to_put_in_struct.unpack91.elt105 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct.unpack91.unpack106 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt105, align 8
  %load_tag_to_put_in_struct.unpack91.elt107 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 6
  %load_tag_to_put_in_struct.unpack91.unpack108 = load i64, i64* %load_tag_to_put_in_struct.unpack91.elt107, align 8
  %load_tag_to_put_in_struct.elt92 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack93 = load i8, i8* %load_tag_to_put_in_struct.elt92, align 8
  %load_tag_to_put_in_struct.unpack95.elt = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct.unpack95.unpack = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt, align 1
  %load_tag_to_put_in_struct.unpack95.elt110 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct.unpack95.unpack111 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt110, align 2
  %load_tag_to_put_in_struct.unpack95.elt112 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct.unpack95.unpack113 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt112, align 1
  %load_tag_to_put_in_struct.unpack95.elt114 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct.unpack95.unpack115 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt114, align 4
  %load_tag_to_put_in_struct.unpack95.elt116 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct.unpack95.unpack117 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt116, align 1
  %load_tag_to_put_in_struct.unpack95.elt118 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct.unpack95.unpack119 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt118, align 2
  %load_tag_to_put_in_struct.unpack95.elt120 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct.unpack95.unpack121 = load i8, i8* %load_tag_to_put_in_struct.unpack95.elt120, align 1
  %struct_alloca = alloca { { [0 x i64], [7 x i64], i8, [7 x i8] } }, align 8
  %.repack123.repack = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct.unpack91.unpack, i64* %.repack123.repack, align 8
  %.repack123.repack129 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack91.unpack98, i64* %.repack123.repack129, align 8
  %.repack123.repack131 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack91.unpack100, i64* %.repack123.repack131, align 8
  %.repack123.repack133 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct.unpack91.unpack102, i64* %.repack123.repack133, align 8
  %.repack123.repack135 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct.unpack91.unpack104, i64* %.repack123.repack135, align 8
  %.repack123.repack137 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct.unpack91.unpack106, i64* %.repack123.repack137, align 8
  %.repack123.repack139 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 1, i64 6
  store i64 %load_tag_to_put_in_struct.unpack91.unpack108, i64* %.repack123.repack139, align 8
  %.repack125 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 2
  store i8 %load_tag_to_put_in_struct.unpack93, i8* %.repack125, align 8
  %.repack127.repack = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct.unpack95.unpack, i8* %.repack127.repack, align 1
  %.repack127.repack141 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct.unpack95.unpack111, i8* %.repack127.repack141, align 2
  %.repack127.repack143 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct.unpack95.unpack113, i8* %.repack127.repack143, align 1
  %.repack127.repack145 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct.unpack95.unpack115, i8* %.repack127.repack145, align 4
  %.repack127.repack147 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct.unpack95.unpack117, i8* %.repack127.repack147, align 1
  %.repack127.repack149 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct.unpack95.unpack119, i8* %.repack127.repack149, align 2
  %.repack127.repack151 = getelementptr inbounds { { [0 x i64], [7 x i64], i8, [7 x i8] } }, { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca, i64 0, i32 0, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct.unpack95.unpack121, i8* %.repack127.repack151, align 1
  %tag_alloca = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %17 = bitcast [8 x i64]* %data_buffer to i8*
  %18 = bitcast { { [0 x i64], [7 x i64], i8, [7 x i8] } }* %struct_alloca to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %17, i8* noundef nonnull align 8 dereferenceable(64) %18, i64 64, i1 false)
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr, align 8
  %load_tag_to_put_in_struct5.unpack154.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct5.unpack154.unpack = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt, align 8
  %load_tag_to_put_in_struct5.unpack154.elt160 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct5.unpack154.unpack161 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt160, align 8
  %load_tag_to_put_in_struct5.unpack154.elt162 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct5.unpack154.unpack163 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt162, align 8
  %load_tag_to_put_in_struct5.unpack154.elt164 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct5.unpack154.unpack165 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt164, align 8
  %load_tag_to_put_in_struct5.unpack154.elt166 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct5.unpack154.unpack167 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt166, align 8
  %load_tag_to_put_in_struct5.unpack154.elt168 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct5.unpack154.unpack169 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt168, align 8
  %load_tag_to_put_in_struct5.unpack154.elt170 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 6
  %load_tag_to_put_in_struct5.unpack154.unpack171 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt170, align 8
  %load_tag_to_put_in_struct5.unpack154.elt172 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 7
  %load_tag_to_put_in_struct5.unpack154.unpack173 = load i64, i64* %load_tag_to_put_in_struct5.unpack154.elt172, align 8
  %struct_alloca7 = alloca { { [0 x i64], [8 x i64], i8, [7 x i8] } }, align 8
  %.repack188.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack, i64* %.repack188.repack, align 8
  %.repack188.repack194 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack161, i64* %.repack188.repack194, align 8
  %.repack188.repack196 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack163, i64* %.repack188.repack196, align 8
  %.repack188.repack198 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack165, i64* %.repack188.repack198, align 8
  %.repack188.repack200 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack167, i64* %.repack188.repack200, align 8
  %.repack188.repack202 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack169, i64* %.repack188.repack202, align 8
  %.repack188.repack204 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 6
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack171, i64* %.repack188.repack204, align 8
  %.repack188.repack206 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 1, i64 7
  store i64 %load_tag_to_put_in_struct5.unpack154.unpack173, i64* %.repack188.repack206, align 8
  %.repack190 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca7, i64 0, i32 0, i32 2
  store i8 1, i8* %.repack190, align 8
  %tag_alloca8 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

else_block:                                       ; preds = %"#Attr_#dec_4.exit232"
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %struct_field_access_record_14)
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %19 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %else_block
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %20 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %19, i8* noundef nonnull align 8 dereferenceable(24) %20, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %loop.i.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %21 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %22 = load i64, i64* %21, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %22, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i
  %23 = add i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %22, -9223372036854775808
  br i1 %24, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %25 = ptrtoint i8* %struct_field.unpack.i to i64
  %26 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %27 = select i1 %.not.i.i.i57.i, i64 %26, i64 %25
  %as_usize_ptr.i58.i = inttoptr i64 %27 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %28 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %28, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %29 = add i64 %28, -1
  store i64 %29, i64* %get_rc_ptr.i59.i, align 8
  %30 = icmp eq i64 %28, -9223372036854775808
  br i1 %30, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %31 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %31, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %else_block
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %struct_field, i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %32 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %33 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %34 = select i1 %.not.i.i.i.i.i, i64 %33, i64 %32
  %as_usize_ptr.i.i.i = inttoptr i64 %34 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %35 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %35, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %36 = add i64 %35, -1
  store i64 %36, i64* %get_rc_ptr.i.i.i, align 8
  %37 = icmp eq i64 %35, -9223372036854775808
  br i1 %37, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %38 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  tail call void @roc_dealloc(i8* %38, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %39 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %40 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %41 = select i1 %.not.i.i.i10.i, i64 %40, i64 %39
  %as_usize_ptr.i11.i = inttoptr i64 %41 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %42 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %42, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %43 = add i64 %42, -1
  store i64 %43, i64* %get_rc_ptr.i12.i, align 8
  %44 = icmp eq i64 %42, -9223372036854775808
  br i1 %44, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %45 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %45, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %46 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %47 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i244 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %48 = select i1 %.not.i.i.i.i244, i64 %47, i64 %46
  %as_usize_ptr.i.i = inttoptr i64 %48 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %49 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %49, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i.i
  %50 = add i64 %49, -1
  store i64 %50, i64* %get_rc_ptr.i.i, align 8
  %51 = icmp eq i64 %49, -9223372036854775808
  br i1 %51, label %Then1.i.i.i.i.i, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  %52 = bitcast i64* %get_rc_ptr.i.i to i8*
  tail call void @roc_dealloc(i8* %52, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i
  %load_tag_to_put_in_struct12.unpack24.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct12.unpack24.unpack = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt, align 8
  %load_tag_to_put_in_struct12.unpack24.elt30 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct12.unpack24.unpack31 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt30, align 8
  %load_tag_to_put_in_struct12.unpack24.elt32 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct12.unpack24.unpack33 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt32, align 8
  %load_tag_to_put_in_struct12.unpack24.elt34 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct12.unpack24.unpack35 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt34, align 8
  %load_tag_to_put_in_struct12.unpack24.elt36 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct12.unpack24.unpack37 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt36, align 8
  %load_tag_to_put_in_struct12.unpack24.elt38 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct12.unpack24.unpack39 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt38, align 8
  %load_tag_to_put_in_struct12.unpack24.elt40 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 6
  %load_tag_to_put_in_struct12.unpack24.unpack41 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt40, align 8
  %load_tag_to_put_in_struct12.unpack24.elt42 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 1, i64 7
  %load_tag_to_put_in_struct12.unpack24.unpack43 = load i64, i64* %load_tag_to_put_in_struct12.unpack24.elt42, align 8
  %load_tag_to_put_in_struct12.elt25 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 2
  %load_tag_to_put_in_struct12.unpack26 = load i8, i8* %load_tag_to_put_in_struct12.elt25, align 8
  %load_tag_to_put_in_struct12.unpack28.elt = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct12.unpack28.unpack = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt, align 1
  %load_tag_to_put_in_struct12.unpack28.elt45 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct12.unpack28.unpack46 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt45, align 1
  %load_tag_to_put_in_struct12.unpack28.elt47 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct12.unpack28.unpack48 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt47, align 1
  %load_tag_to_put_in_struct12.unpack28.elt49 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct12.unpack28.unpack50 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt49, align 1
  %load_tag_to_put_in_struct12.unpack28.elt51 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct12.unpack28.unpack52 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt51, align 1
  %load_tag_to_put_in_struct12.unpack28.elt53 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct12.unpack28.unpack54 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt53, align 1
  %load_tag_to_put_in_struct12.unpack28.elt55 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %st, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct12.unpack28.unpack56 = load i8, i8* %load_tag_to_put_in_struct12.unpack28.elt55, align 1
  %struct_alloca14 = alloca { { [0 x i64], [8 x i64], i8, [7 x i8] } }, align 8
  %.repack58.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack, i64* %.repack58.repack, align 8
  %.repack58.repack64 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack31, i64* %.repack58.repack64, align 8
  %.repack58.repack66 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack33, i64* %.repack58.repack66, align 8
  %.repack58.repack68 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack35, i64* %.repack58.repack68, align 8
  %.repack58.repack70 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack37, i64* %.repack58.repack70, align 8
  %.repack58.repack72 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack39, i64* %.repack58.repack72, align 8
  %.repack58.repack74 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 6
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack41, i64* %.repack58.repack74, align 8
  %.repack58.repack76 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 1, i64 7
  store i64 %load_tag_to_put_in_struct12.unpack24.unpack43, i64* %.repack58.repack76, align 8
  %.repack60 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 2
  store i8 %load_tag_to_put_in_struct12.unpack26, i8* %.repack60, align 8
  %.repack62.repack = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack, i8* %.repack62.repack, align 1
  %.repack62.repack78 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack46, i8* %.repack62.repack78, align 2
  %.repack62.repack80 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack48, i8* %.repack62.repack80, align 1
  %.repack62.repack82 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack50, i8* %.repack62.repack82, align 4
  %.repack62.repack84 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack52, i8* %.repack62.repack84, align 1
  %.repack62.repack86 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack54, i8* %.repack62.repack86, align 2
  %.repack62.repack88 = getelementptr inbounds { { [0 x i64], [8 x i64], i8, [7 x i8] } }, { { [0 x i64], [8 x i64], i8, [7 x i8] } }* %struct_alloca14, i64 0, i32 0, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct12.unpack28.unpack56, i8* %.repack62.repack88, align 1
  %tag_alloca15 = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Arg_parseHelp_2e57dcc641b9a7d02216f11efe915059803794c6e2bfaeace3f979127cf29e24({ [0 x i64], [12 x i64] }* %"74", { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* readonly %"75", { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field.i.i1329 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1251 = alloca %str.RocStr, align 8
  %struct_field.i.i1208 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1139 = alloca %str.RocStr, align 8
  %struct_field.i.i1127 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1096 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1022 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i948 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %struct_field2.i764 = alloca %str.RocStr, align 8
  %struct_field1.i765 = alloca %str.RocStr, align 8
  %struct_field.i766 = alloca %str.RocStr, align 8
  %result_value.i.i = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %result_value.i725.sroa.0 = alloca [9 x i64], align 8
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i698 = alloca %str.RocStr, align 8
  %result_value.i686 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value1.i = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value.i = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field1.i643 = alloca %str.RocStr, align 8
  %struct_field.i644 = alloca %str.RocStr, align 8
  %struct_field2.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %load_at_index_ptr_old304.sroa.0 = alloca [10 x i64], align 8
  %const_str_store274 = alloca %str.RocStr, align 8
  %result_value191 = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %struct_field177 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field = alloca %str.RocStr, align 8
  %result_value168 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %result_value126 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %load_at_index_ptr_old106 = alloca { %str.RocStr, %str.RocStr }, align 8
  %load_at_index_ptr_old84 = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %load_at_index_ptr_old56 = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %load_at_index_ptr_old = alloca %str.RocStr, align 8
  %load_at_index_ptr_old304.sroa.0.0.sroa_cast = bitcast [10 x i64]* %load_at_index_ptr_old304.sroa.0 to i8*
  %1 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  %2 = bitcast %str.RocStr* %struct_field.i.i698 to i8*
  %load_str_to_stack.i.i.i705.elt913 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i698, i64 0, i32 2
  %load_at_index_ptr_old304.sroa.0.24.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old304.sroa.0, i64 0, i64 3
  %load_at_index_ptr_old304.sroa.0.24.sroa_cast = bitcast i64* %load_at_index_ptr_old304.sroa.0.24.sroa_idx to i8*
  %load_str_to_stack.i782.elt918 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %3 = bitcast %str.RocStr* %struct_field2.i764 to i8*
  %4 = bitcast %str.RocStr* %struct_field1.i765 to i8*
  %5 = bitcast %str.RocStr* %struct_field.i766 to i8*
  %load_str_to_stack.i.i768.elt923 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i766, i64 0, i32 2
  %load_str_to_stack.i794.elt928 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i765, i64 0, i32 2
  %load_at_index_ptr_old304.sroa.0.48.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old304.sroa.0, i64 0, i64 6
  %load_at_index_ptr_old304.sroa.0.48.sroa_cast = bitcast i64* %load_at_index_ptr_old304.sroa.0.48.sroa_idx to i8*
  %load_str_to_stack.i806.elt933 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i764, i64 0, i32 2
  br label %joinpointcont

joinpointcont:                                    ; preds = %joinpointcont.backedge, %entry
  %joinpointarg = phi { [0 x i64], [12 x i64] }* [ %"74", %entry ], [ %load_at_index_ptr_old283634, %joinpointcont.backedge ]
  %to_int = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %6 = trunc i64 %to_int to i3
  switch i3 %6, label %default [
    i3 -4, label %branch4
    i3 1, label %branch1
    i3 2, label %branch2
    i3 3, label %branch3
    i3 0, label %branch0
  ]

default:                                          ; preds = %joinpointcont
  %masked276 = and i64 %to_int, 7
  %index277 = sub nsw i64 0, %masked276
  %cast_to_i8_ptr278 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr279 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %index277
  %7 = bitcast i8* %new_ptr279 to { [0 x i64], [12 x i64] }**
  %load_at_index_ptr_old283634 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %7, align 8
  %get_rc_ptr290.idx = sub nuw nsw i64 -8, %masked276
  %get_rc_ptr290 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %get_rc_ptr290.idx
  %8 = bitcast i8* %get_rc_ptr290 to i64*
  %get_refcount291 = load i64, i64* %8, align 8
  %is_one292 = icmp eq i64 %get_refcount291, -9223372036854775808
  br i1 %is_one292, label %then_block294, label %done320

branch4:                                          ; preds = %joinpointcont
  %to_int.le1460 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %9 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %branch4
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %10 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8* noundef nonnull align 8 dereferenceable(24) %10, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i936 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i936, label %modify_rc.i.i.i938, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i938:                               ; preds = %loop.i.i
  %call_builtin.i.i.i937 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i937, i64 -8
  %11 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %12 = load i64, i64* %11, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %12, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i938
  %13 = add i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %12, -9223372036854775808
  br i1 %14, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i938, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %15 = ptrtoint i8* %struct_field.unpack.i to i64
  %16 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %17 = select i1 %.not.i.i.i57.i, i64 %16, i64 %15
  %as_usize_ptr.i58.i = inttoptr i64 %17 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %18 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %19 = add i64 %18, -1
  store i64 %19, i64* %get_rc_ptr.i59.i, align 8
  %20 = icmp eq i64 %18, -9223372036854775808
  br i1 %20, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %21 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %21, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %branch4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %22 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %23 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i939 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %24 = select i1 %.not.i.i.i.i.i939, i64 %23, i64 %22
  %as_usize_ptr.i.i.i = inttoptr i64 %24 to i64*
  %get_rc_ptr.i.i.i940 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %25 = load i64, i64* %get_rc_ptr.i.i.i940, align 8
  %.not.i.i.i.i.i.i941 = icmp eq i64 %25, 0
  br i1 %.not.i.i.i.i.i.i941, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i942

Then.i.i.i.i.i.i942:                              ; preds = %modification_list_block.i.i.i
  %26 = add i64 %25, -1
  store i64 %26, i64* %get_rc_ptr.i.i.i940, align 8
  %27 = icmp eq i64 %25, -9223372036854775808
  br i1 %27, label %Then1.i.i.i.i.i.i943, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i943:                             ; preds = %Then.i.i.i.i.i.i942
  %28 = bitcast i64* %get_rc_ptr.i.i.i940 to i8*
  tail call void @roc_dealloc(i8* %28, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i943, %Then.i.i.i.i.i.i942, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %29 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %30 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %31 = select i1 %.not.i.i.i10.i, i64 %30, i64 %29
  %as_usize_ptr.i11.i = inttoptr i64 %31 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %33 = add i64 %32, -1
  store i64 %33, i64* %get_rc_ptr.i12.i, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %35 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %35, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %36 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %37 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i944 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %38 = select i1 %.not.i.i.i.i944, i64 %37, i64 %36
  %as_usize_ptr.i.i = inttoptr i64 %38 to i64*
  %get_rc_ptr.i.i945 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %39 = load i64, i64* %get_rc_ptr.i.i945, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %39, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i946

Then.i.i.i.i.i946:                                ; preds = %modification_list_block.i.i
  %40 = add i64 %39, -1
  store i64 %40, i64* %get_rc_ptr.i.i945, align 8
  %41 = icmp eq i64 %39, -9223372036854775808
  br i1 %41, label %Then1.i.i.i.i.i947, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i947:                               ; preds = %Then.i.i.i.i.i946
  %42 = bitcast i64* %get_rc_ptr.i.i945 to i8*
  tail call void @roc_dealloc(i8* %42, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i946, %Then1.i.i.i.i.i947
  %masked = and i64 %to_int.le1460, 7
  %index = sub nsw i64 0, %masked
  %cast_to_i8_ptr = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %index
  %43 = bitcast %str.RocStr* %load_at_index_ptr_old to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %43, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr, i64 24, i1 false)
  %get_rc_ptr.idx = sub nuw nsw i64 -8, %masked
  %get_rc_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %get_rc_ptr.idx
  %44 = bitcast i8* %get_rc_ptr to i64*
  %get_refcount = load i64, i64* %44, align 8
  %is_one = icmp eq i64 %get_refcount, -9223372036854775808
  br i1 %is_one, label %then_block, label %then

branch1:                                          ; preds = %joinpointcont
  %to_int.le1458 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i949 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i950 = load i8*, i8** %struct_field.elt.i949, align 8
  %struct_field.elt20.i951 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i952 = load i64, i64* %struct_field.elt20.i951, align 8
  %struct_field.elt22.i953 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i954 = load i64, i64* %struct_field.elt22.i953, align 8
  %45 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i948 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %"cap > 0.not.i.i955" = icmp eq i64 %struct_field.unpack23.i954, 0
  br i1 %"cap > 0.not.i.i955", label %"#Attr_#dec_17.exit.i993", label %modification_list_block.i52.i958

modification_list_block.i52.i958:                 ; preds = %branch1
  %cast_basic_basic.i.i956 = bitcast i8* %struct_field.unpack.i950 to %str.RocStr*
  %bounds_check.not.i.i957 = icmp eq i64 %struct_field.unpack21.i952, 0
  br i1 %bounds_check.not.i.i957, label %after_loop.i.i979, label %loop.preheader.i.i960

loop.preheader.i.i960:                            ; preds = %modification_list_block.i52.i958
  %load_str_to_stack.i.elt9.i.i959 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i948, i64 0, i32 2
  br label %loop.i.i966

loop.i.i966:                                      ; preds = %"#Attr_#dec_4.exit.i.i974", %loop.preheader.i.i960
  %next_index12.i.i961 = phi i64 [ 0, %loop.preheader.i.i960 ], [ %next_index.i.i962, %"#Attr_#dec_4.exit.i.i974" ]
  %next_index.i.i962 = add nuw i64 %next_index12.i.i961, 1
  %load_index.i.i963 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i956, i64 %next_index12.i.i961
  %46 = bitcast %str.RocStr* %load_index.i.i963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8* noundef nonnull align 8 dereferenceable(24) %46, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i964 = load i64, i64* %load_str_to_stack.i.elt9.i.i959, align 8
  %is_big_str.i.i.i965 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i964, 0
  br i1 %is_big_str.i.i.i965, label %modify_rc.i.i.i970, label %"#Attr_#dec_4.exit.i.i974"

modify_rc.i.i.i970:                               ; preds = %loop.i.i966
  %call_builtin.i.i.i967 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i948) #11
  %get_rc_ptr.i.i53.i968 = getelementptr inbounds i8, i8* %call_builtin.i.i.i967, i64 -8
  %47 = bitcast i8* %get_rc_ptr.i.i53.i968 to i64*
  %48 = load i64, i64* %47, align 8
  %.not.i.i.i.i.i54.i969 = icmp eq i64 %48, 0
  br i1 %.not.i.i.i.i.i54.i969, label %"#Attr_#dec_4.exit.i.i974", label %Then.i.i.i.i.i55.i971

Then.i.i.i.i.i55.i971:                            ; preds = %modify_rc.i.i.i970
  %49 = add i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp eq i64 %48, -9223372036854775808
  br i1 %50, label %Then1.i.i.i.i.i56.i972, label %"#Attr_#dec_4.exit.i.i974"

Then1.i.i.i.i.i56.i972:                           ; preds = %Then.i.i.i.i.i55.i971
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i968, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i974"

"#Attr_#dec_4.exit.i.i974":                       ; preds = %Then1.i.i.i.i.i56.i972, %Then.i.i.i.i.i55.i971, %modify_rc.i.i.i970, %loop.i.i966
  %exitcond.not.i973 = icmp eq i64 %next_index.i.i962, %struct_field.unpack21.i952
  br i1 %exitcond.not.i973, label %after_loop.i.i979, label %loop.i.i966

after_loop.i.i979:                                ; preds = %"#Attr_#dec_4.exit.i.i974", %modification_list_block.i52.i958
  %51 = ptrtoint i8* %struct_field.unpack.i950 to i64
  %52 = shl i64 %struct_field.unpack23.i954, 1
  %.not.i.i.i57.i975 = icmp slt i64 %struct_field.unpack23.i954, 0
  %53 = select i1 %.not.i.i.i57.i975, i64 %52, i64 %51
  %as_usize_ptr.i58.i976 = inttoptr i64 %53 to i64*
  %get_rc_ptr.i59.i977 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i976, i64 -1
  %54 = load i64, i64* %get_rc_ptr.i59.i977, align 8
  %.not.i.i.i.i60.i978 = icmp eq i64 %54, 0
  br i1 %.not.i.i.i.i60.i978, label %"#Attr_#dec_17.exit.i993", label %Then.i.i.i.i61.i980

Then.i.i.i.i61.i980:                              ; preds = %after_loop.i.i979
  %55 = add i64 %54, -1
  store i64 %55, i64* %get_rc_ptr.i59.i977, align 8
  %56 = icmp eq i64 %54, -9223372036854775808
  br i1 %56, label %Then1.i.i.i.i62.i981, label %"#Attr_#dec_17.exit.i993"

Then1.i.i.i.i62.i981:                             ; preds = %Then.i.i.i.i61.i980
  %57 = bitcast i64* %get_rc_ptr.i59.i977 to i8*
  tail call void @roc_dealloc(i8* %57, i32 8) #11
  br label %"#Attr_#dec_17.exit.i993"

"#Attr_#dec_17.exit.i993":                        ; preds = %Then1.i.i.i.i62.i981, %Then.i.i.i.i61.i980, %after_loop.i.i979, %branch1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  %struct_field1.sroa.264.0..sroa_idx65.i982 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i983 = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i982, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i984 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i985 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i984, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i986 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i987 = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i986, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i988 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i989 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i988, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i990 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i991 = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i990, align 8
  %"cap > 0.i.i.not.i992" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i983, 0
  br i1 %"cap > 0.i.i.not.i992", label %"#Attr_#dec_18.exit.i1004", label %modification_list_block.i.i.i1000

modification_list_block.i.i.i1000:                ; preds = %"#Attr_#dec_17.exit.i993"
  %struct_field1.sroa.0.0..sroa_idx.i994 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i995 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i994, align 8
  %58 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i995 to i64
  %59 = shl i64 %struct_field1.sroa.264.0.copyload.i983, 1
  %.not.i.i.i.i.i996 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i983, 0
  %60 = select i1 %.not.i.i.i.i.i996, i64 %59, i64 %58
  %as_usize_ptr.i.i.i997 = inttoptr i64 %60 to i64*
  %get_rc_ptr.i.i.i998 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i997, i64 -1
  %61 = load i64, i64* %get_rc_ptr.i.i.i998, align 8
  %.not.i.i.i.i.i.i999 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i.i.i999, label %"#Attr_#dec_18.exit.i1004", label %Then.i.i.i.i.i.i1001

Then.i.i.i.i.i.i1001:                             ; preds = %modification_list_block.i.i.i1000
  %62 = add i64 %61, -1
  store i64 %62, i64* %get_rc_ptr.i.i.i998, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i.i.i1002, label %"#Attr_#dec_18.exit.i1004"

Then1.i.i.i.i.i.i1002:                            ; preds = %Then.i.i.i.i.i.i1001
  %64 = bitcast i64* %get_rc_ptr.i.i.i998 to i8*
  tail call void @roc_dealloc(i8* %64, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1004"

"#Attr_#dec_18.exit.i1004":                       ; preds = %Then1.i.i.i.i.i.i1002, %Then.i.i.i.i.i.i1001, %modification_list_block.i.i.i1000, %"#Attr_#dec_17.exit.i993"
  %"cap > 0.i5.not.i1003" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i987, 0
  br i1 %"cap > 0.i5.not.i1003", label %"#Attr_#dec_10.exit.i1013", label %modification_list_block.i14.i1009

modification_list_block.i14.i1009:                ; preds = %"#Attr_#dec_18.exit.i1004"
  %65 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i985 to i64
  %66 = shl i64 %struct_field1.sroa.468.0.copyload.i987, 1
  %.not.i.i.i10.i1005 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i987, 0
  %67 = select i1 %.not.i.i.i10.i1005, i64 %66, i64 %65
  %as_usize_ptr.i11.i1006 = inttoptr i64 %67 to i64*
  %get_rc_ptr.i12.i1007 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1006, i64 -1
  %68 = load i64, i64* %get_rc_ptr.i12.i1007, align 8
  %.not.i.i.i.i13.i1008 = icmp eq i64 %68, 0
  br i1 %.not.i.i.i.i13.i1008, label %"#Attr_#dec_10.exit.i1013", label %Then.i.i.i.i15.i1010

Then.i.i.i.i15.i1010:                             ; preds = %modification_list_block.i14.i1009
  %69 = add i64 %68, -1
  store i64 %69, i64* %get_rc_ptr.i12.i1007, align 8
  %70 = icmp eq i64 %68, -9223372036854775808
  br i1 %70, label %Then1.i.i.i.i16.i1011, label %"#Attr_#dec_10.exit.i1013"

Then1.i.i.i.i16.i1011:                            ; preds = %Then.i.i.i.i15.i1010
  %71 = bitcast i64* %get_rc_ptr.i12.i1007 to i8*
  tail call void @roc_dealloc(i8* %71, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1013"

"#Attr_#dec_10.exit.i1013":                       ; preds = %Then1.i.i.i.i16.i1011, %Then.i.i.i.i15.i1010, %modification_list_block.i14.i1009, %"#Attr_#dec_18.exit.i1004"
  %"cap > 0.i.not.i1012" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i991, 0
  br i1 %"cap > 0.i.not.i1012", label %"#Attr_#dec_16.exit1021", label %modification_list_block.i.i1018

modification_list_block.i.i1018:                  ; preds = %"#Attr_#dec_10.exit.i1013"
  %72 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i989 to i64
  %73 = shl i64 %struct_field1.sroa.672.0.copyload.i991, 1
  %.not.i.i.i.i1014 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i991, 0
  %74 = select i1 %.not.i.i.i.i1014, i64 %73, i64 %72
  %as_usize_ptr.i.i1015 = inttoptr i64 %74 to i64*
  %get_rc_ptr.i.i1016 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1015, i64 -1
  %75 = load i64, i64* %get_rc_ptr.i.i1016, align 8
  %.not.i.i.i.i2.i1017 = icmp eq i64 %75, 0
  br i1 %.not.i.i.i.i2.i1017, label %"#Attr_#dec_16.exit1021", label %Then.i.i.i.i.i1019

Then.i.i.i.i.i1019:                               ; preds = %modification_list_block.i.i1018
  %76 = add i64 %75, -1
  store i64 %76, i64* %get_rc_ptr.i.i1016, align 8
  %77 = icmp eq i64 %75, -9223372036854775808
  br i1 %77, label %Then1.i.i.i.i.i1020, label %"#Attr_#dec_16.exit1021"

Then1.i.i.i.i.i1020:                              ; preds = %Then.i.i.i.i.i1019
  %78 = bitcast i64* %get_rc_ptr.i.i1016 to i8*
  tail call void @roc_dealloc(i8* %78, i32 8) #11
  br label %"#Attr_#dec_16.exit1021"

"#Attr_#dec_16.exit1021":                         ; preds = %"#Attr_#dec_10.exit.i1013", %modification_list_block.i.i1018, %Then.i.i.i.i.i1019, %Then1.i.i.i.i.i1020
  %cast_to_i8_ptr36 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %masked38 = and i64 %to_int.le1458, 7
  %get_rc_ptr42.idx = sub nuw nsw i64 -8, %masked38
  %get_rc_ptr42 = getelementptr inbounds i8, i8* %cast_to_i8_ptr36, i64 %get_rc_ptr42.idx
  %79 = bitcast i8* %get_rc_ptr42 to i64*
  %get_refcount43 = load i64, i64* %79, align 8
  switch i64 %get_refcount43, label %Then.i.i.i640 [
    i64 -9223372036854775808, label %then_block46
    i64 0, label %joinpointcont35
  ]

branch2:                                          ; preds = %joinpointcont
  %to_int.le1456 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked77 = and i64 %to_int.le1456, 7
  %cast_to_i8_ptr79 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %at_index_struct_gep_data83.idx = sub nuw nsw i64 48, %masked77
  %at_index_struct_gep_data83 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %at_index_struct_gep_data83.idx
  %80 = bitcast %str.RocStr* %load_at_index_ptr_old84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %80, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data83, i64 24, i1 false)
  %get_rc_ptr92.idx = sub nuw nsw i64 -8, %masked77
  %get_rc_ptr92 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %get_rc_ptr92.idx
  %81 = bitcast i8* %get_rc_ptr92 to i64*
  %get_refcount93 = load i64, i64* %81, align 8
  %is_one94 = icmp eq i64 %get_refcount93, -9223372036854775808
  br i1 %is_one94, label %then_block96, label %then121

branch3:                                          ; preds = %joinpointcont
  %to_int.le1454 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked128 = and i64 %to_int.le1454, 7
  %index129 = sub nsw i64 0, %masked128
  %cast_to_i8_ptr130 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr131 = getelementptr inbounds i8, i8* %cast_to_i8_ptr130, i64 %index129
  %load_at_index_ptr_old135.elt = bitcast i8* %new_ptr131 to i8**
  %load_at_index_ptr_old135.unpack = load i8*, i8** %load_at_index_ptr_old135.elt, align 8
  %82 = insertvalue %list.RocList undef, i8* %load_at_index_ptr_old135.unpack, 0
  %load_at_index_ptr_old135.elt326 = getelementptr inbounds i8, i8* %new_ptr131, i64 8
  %83 = bitcast i8* %load_at_index_ptr_old135.elt326 to i64*
  %load_at_index_ptr_old135.unpack327 = load i64, i64* %83, align 8
  %84 = insertvalue %list.RocList %82, i64 %load_at_index_ptr_old135.unpack327, 1
  %load_at_index_ptr_old135.elt328 = getelementptr inbounds i8, i8* %new_ptr131, i64 16
  %85 = bitcast i8* %load_at_index_ptr_old135.elt328 to i64*
  %load_at_index_ptr_old135.unpack329 = load i64, i64* %85, align 8
  %load_at_index_ptr_old135330 = insertvalue %list.RocList %84, i64 %load_at_index_ptr_old135.unpack329, 2
  %get_rc_ptr143.idx = sub nuw nsw i64 -8, %masked128
  %get_rc_ptr143 = getelementptr inbounds i8, i8* %cast_to_i8_ptr130, i64 %get_rc_ptr143.idx
  %86 = bitcast i8* %get_rc_ptr143 to i64*
  %get_refcount144 = load i64, i64* %86, align 8
  %is_one145 = icmp eq i64 %get_refcount144, -9223372036854775808
  br i1 %is_one145, label %then_block147, label %then163

branch0:                                          ; preds = %joinpointcont
  %to_int.le = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i1023 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1024 = load i8*, i8** %struct_field.elt.i1023, align 8
  %struct_field.elt20.i1025 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i1026 = load i64, i64* %struct_field.elt20.i1025, align 8
  %struct_field.elt22.i1027 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i1028 = load i64, i64* %struct_field.elt22.i1027, align 8
  %87 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1022 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %"cap > 0.not.i.i1029" = icmp eq i64 %struct_field.unpack23.i1028, 0
  br i1 %"cap > 0.not.i.i1029", label %"#Attr_#dec_17.exit.i1067", label %modification_list_block.i52.i1032

modification_list_block.i52.i1032:                ; preds = %branch0
  %cast_basic_basic.i.i1030 = bitcast i8* %struct_field.unpack.i1024 to %str.RocStr*
  %bounds_check.not.i.i1031 = icmp eq i64 %struct_field.unpack21.i1026, 0
  br i1 %bounds_check.not.i.i1031, label %after_loop.i.i1053, label %loop.preheader.i.i1034

loop.preheader.i.i1034:                           ; preds = %modification_list_block.i52.i1032
  %load_str_to_stack.i.elt9.i.i1033 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1022, i64 0, i32 2
  br label %loop.i.i1040

loop.i.i1040:                                     ; preds = %"#Attr_#dec_4.exit.i.i1048", %loop.preheader.i.i1034
  %next_index12.i.i1035 = phi i64 [ 0, %loop.preheader.i.i1034 ], [ %next_index.i.i1036, %"#Attr_#dec_4.exit.i.i1048" ]
  %next_index.i.i1036 = add nuw i64 %next_index12.i.i1035, 1
  %load_index.i.i1037 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1030, i64 %next_index12.i.i1035
  %88 = bitcast %str.RocStr* %load_index.i.i1037 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %87, i8* noundef nonnull align 8 dereferenceable(24) %88, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i1038 = load i64, i64* %load_str_to_stack.i.elt9.i.i1033, align 8
  %is_big_str.i.i.i1039 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i1038, 0
  br i1 %is_big_str.i.i.i1039, label %modify_rc.i.i.i1044, label %"#Attr_#dec_4.exit.i.i1048"

modify_rc.i.i.i1044:                              ; preds = %loop.i.i1040
  %call_builtin.i.i.i1041 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1022) #11
  %get_rc_ptr.i.i53.i1042 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1041, i64 -8
  %89 = bitcast i8* %get_rc_ptr.i.i53.i1042 to i64*
  %90 = load i64, i64* %89, align 8
  %.not.i.i.i.i.i54.i1043 = icmp eq i64 %90, 0
  br i1 %.not.i.i.i.i.i54.i1043, label %"#Attr_#dec_4.exit.i.i1048", label %Then.i.i.i.i.i55.i1045

Then.i.i.i.i.i55.i1045:                           ; preds = %modify_rc.i.i.i1044
  %91 = add i64 %90, -1
  store i64 %91, i64* %89, align 8
  %92 = icmp eq i64 %90, -9223372036854775808
  br i1 %92, label %Then1.i.i.i.i.i56.i1046, label %"#Attr_#dec_4.exit.i.i1048"

Then1.i.i.i.i.i56.i1046:                          ; preds = %Then.i.i.i.i.i55.i1045
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i1042, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i1048"

"#Attr_#dec_4.exit.i.i1048":                      ; preds = %Then1.i.i.i.i.i56.i1046, %Then.i.i.i.i.i55.i1045, %modify_rc.i.i.i1044, %loop.i.i1040
  %exitcond.not.i1047 = icmp eq i64 %next_index.i.i1036, %struct_field.unpack21.i1026
  br i1 %exitcond.not.i1047, label %after_loop.i.i1053, label %loop.i.i1040

after_loop.i.i1053:                               ; preds = %"#Attr_#dec_4.exit.i.i1048", %modification_list_block.i52.i1032
  %93 = ptrtoint i8* %struct_field.unpack.i1024 to i64
  %94 = shl i64 %struct_field.unpack23.i1028, 1
  %.not.i.i.i57.i1049 = icmp slt i64 %struct_field.unpack23.i1028, 0
  %95 = select i1 %.not.i.i.i57.i1049, i64 %94, i64 %93
  %as_usize_ptr.i58.i1050 = inttoptr i64 %95 to i64*
  %get_rc_ptr.i59.i1051 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i1050, i64 -1
  %96 = load i64, i64* %get_rc_ptr.i59.i1051, align 8
  %.not.i.i.i.i60.i1052 = icmp eq i64 %96, 0
  br i1 %.not.i.i.i.i60.i1052, label %"#Attr_#dec_17.exit.i1067", label %Then.i.i.i.i61.i1054

Then.i.i.i.i61.i1054:                             ; preds = %after_loop.i.i1053
  %97 = add i64 %96, -1
  store i64 %97, i64* %get_rc_ptr.i59.i1051, align 8
  %98 = icmp eq i64 %96, -9223372036854775808
  br i1 %98, label %Then1.i.i.i.i62.i1055, label %"#Attr_#dec_17.exit.i1067"

Then1.i.i.i.i62.i1055:                            ; preds = %Then.i.i.i.i61.i1054
  %99 = bitcast i64* %get_rc_ptr.i59.i1051 to i8*
  tail call void @roc_dealloc(i8* %99, i32 8) #11
  br label %"#Attr_#dec_17.exit.i1067"

"#Attr_#dec_17.exit.i1067":                       ; preds = %Then1.i.i.i.i62.i1055, %Then.i.i.i.i61.i1054, %after_loop.i.i1053, %branch0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  %struct_field1.sroa.264.0..sroa_idx65.i1056 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i1057 = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i1056, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i1058 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1059 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i1058, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i1060 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i1061 = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i1060, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i1062 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1063 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i1062, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i1064 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i1065 = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i1064, align 8
  %"cap > 0.i.i.not.i1066" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i1057, 0
  br i1 %"cap > 0.i.i.not.i1066", label %"#Attr_#dec_18.exit.i1078", label %modification_list_block.i.i.i1074

modification_list_block.i.i.i1074:                ; preds = %"#Attr_#dec_17.exit.i1067"
  %struct_field1.sroa.0.0..sroa_idx.i1068 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1069 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1068, align 8
  %100 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1069 to i64
  %101 = shl i64 %struct_field1.sroa.264.0.copyload.i1057, 1
  %.not.i.i.i.i.i1070 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i1057, 0
  %102 = select i1 %.not.i.i.i.i.i1070, i64 %101, i64 %100
  %as_usize_ptr.i.i.i1071 = inttoptr i64 %102 to i64*
  %get_rc_ptr.i.i.i1072 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1071, i64 -1
  %103 = load i64, i64* %get_rc_ptr.i.i.i1072, align 8
  %.not.i.i.i.i.i.i1073 = icmp eq i64 %103, 0
  br i1 %.not.i.i.i.i.i.i1073, label %"#Attr_#dec_18.exit.i1078", label %Then.i.i.i.i.i.i1075

Then.i.i.i.i.i.i1075:                             ; preds = %modification_list_block.i.i.i1074
  %104 = add i64 %103, -1
  store i64 %104, i64* %get_rc_ptr.i.i.i1072, align 8
  %105 = icmp eq i64 %103, -9223372036854775808
  br i1 %105, label %Then1.i.i.i.i.i.i1076, label %"#Attr_#dec_18.exit.i1078"

Then1.i.i.i.i.i.i1076:                            ; preds = %Then.i.i.i.i.i.i1075
  %106 = bitcast i64* %get_rc_ptr.i.i.i1072 to i8*
  tail call void @roc_dealloc(i8* %106, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1078"

"#Attr_#dec_18.exit.i1078":                       ; preds = %Then1.i.i.i.i.i.i1076, %Then.i.i.i.i.i.i1075, %modification_list_block.i.i.i1074, %"#Attr_#dec_17.exit.i1067"
  %"cap > 0.i5.not.i1077" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i1061, 0
  br i1 %"cap > 0.i5.not.i1077", label %"#Attr_#dec_10.exit.i1087", label %modification_list_block.i14.i1083

modification_list_block.i14.i1083:                ; preds = %"#Attr_#dec_18.exit.i1078"
  %107 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1059 to i64
  %108 = shl i64 %struct_field1.sroa.468.0.copyload.i1061, 1
  %.not.i.i.i10.i1079 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i1061, 0
  %109 = select i1 %.not.i.i.i10.i1079, i64 %108, i64 %107
  %as_usize_ptr.i11.i1080 = inttoptr i64 %109 to i64*
  %get_rc_ptr.i12.i1081 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1080, i64 -1
  %110 = load i64, i64* %get_rc_ptr.i12.i1081, align 8
  %.not.i.i.i.i13.i1082 = icmp eq i64 %110, 0
  br i1 %.not.i.i.i.i13.i1082, label %"#Attr_#dec_10.exit.i1087", label %Then.i.i.i.i15.i1084

Then.i.i.i.i15.i1084:                             ; preds = %modification_list_block.i14.i1083
  %111 = add i64 %110, -1
  store i64 %111, i64* %get_rc_ptr.i12.i1081, align 8
  %112 = icmp eq i64 %110, -9223372036854775808
  br i1 %112, label %Then1.i.i.i.i16.i1085, label %"#Attr_#dec_10.exit.i1087"

Then1.i.i.i.i16.i1085:                            ; preds = %Then.i.i.i.i15.i1084
  %113 = bitcast i64* %get_rc_ptr.i12.i1081 to i8*
  tail call void @roc_dealloc(i8* %113, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1087"

"#Attr_#dec_10.exit.i1087":                       ; preds = %Then1.i.i.i.i16.i1085, %Then.i.i.i.i15.i1084, %modification_list_block.i14.i1083, %"#Attr_#dec_18.exit.i1078"
  %"cap > 0.i.not.i1086" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i1065, 0
  br i1 %"cap > 0.i.not.i1086", label %"#Attr_#dec_16.exit1095", label %modification_list_block.i.i1092

modification_list_block.i.i1092:                  ; preds = %"#Attr_#dec_10.exit.i1087"
  %114 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1063 to i64
  %115 = shl i64 %struct_field1.sroa.672.0.copyload.i1065, 1
  %.not.i.i.i.i1088 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i1065, 0
  %116 = select i1 %.not.i.i.i.i1088, i64 %115, i64 %114
  %as_usize_ptr.i.i1089 = inttoptr i64 %116 to i64*
  %get_rc_ptr.i.i1090 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1089, i64 -1
  %117 = load i64, i64* %get_rc_ptr.i.i1090, align 8
  %.not.i.i.i.i2.i1091 = icmp eq i64 %117, 0
  br i1 %.not.i.i.i.i2.i1091, label %"#Attr_#dec_16.exit1095", label %Then.i.i.i.i.i1093

Then.i.i.i.i.i1093:                               ; preds = %modification_list_block.i.i1092
  %118 = add i64 %117, -1
  store i64 %118, i64* %get_rc_ptr.i.i1090, align 8
  %119 = icmp eq i64 %117, -9223372036854775808
  br i1 %119, label %Then1.i.i.i.i.i1094, label %"#Attr_#dec_16.exit1095"

Then1.i.i.i.i.i1094:                              ; preds = %Then.i.i.i.i.i1093
  %120 = bitcast i64* %get_rc_ptr.i.i1090 to i8*
  tail call void @roc_dealloc(i8* %120, i32 8) #11
  br label %"#Attr_#dec_16.exit1095"

"#Attr_#dec_16.exit1095":                         ; preds = %"#Attr_#dec_10.exit.i1087", %modification_list_block.i.i1092, %Then.i.i.i.i.i1093, %Then1.i.i.i.i.i1094
  %cast_to_i8_ptr243 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %masked245 = and i64 %to_int.le, 7
  %get_rc_ptr249.idx = sub nuw nsw i64 -8, %masked245
  %get_rc_ptr249 = getelementptr inbounds i8, i8* %cast_to_i8_ptr243, i64 %get_rc_ptr249.idx
  %121 = bitcast i8* %get_rc_ptr249 to i64*
  %get_refcount250 = load i64, i64* %121, align 8
  switch i64 %get_refcount250, label %Then.i.i.i695 [
    i64 -9223372036854775808, label %then_block253
    i64 0, label %joinpointcont242
  ]

then_block:                                       ; preds = %"#Attr_#dec_16.exit"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %44)
  %load_tag_to_put_in_struct.elt626.phi.trans.insert = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack627.pre = load i64, i64* %load_tag_to_put_in_struct.elt626.phi.trans.insert, align 8
  br label %joinpointcont3

then:                                             ; preds = %"#Attr_#dec_16.exit"
  %load_str_to_stack.i.elt908 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 2
  %load_str_to_stack.i.unpack909 = load i64, i64* %load_str_to_stack.i.elt908, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack909, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#inc_4.exit"

modify_rc.i:                                      ; preds = %then
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %122 = bitcast i8* %get_rc_ptr.i to i64*
  %123 = load i64, i64* %122, align 8
  %.not.i.i = icmp eq i64 %123, 0
  br i1 %.not.i.i, label %"#Attr_#inc_4.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modify_rc.i
  %124 = add nsw i64 %123, 1
  store i64 %124, i64* %122, align 8
  %.pre1442 = load i64, i64* %44, align 8
  br label %"#Attr_#inc_4.exit"

"#Attr_#inc_4.exit":                              ; preds = %then, %modify_rc.i, %Then.i.i
  %125 = phi i64 [ %get_refcount, %then ], [ %get_refcount, %modify_rc.i ], [ %.pre1442, %Then.i.i ]
  %.not.i.i.i = icmp eq i64 %125, 0
  br i1 %.not.i.i.i, label %joinpointcont3, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %"#Attr_#inc_4.exit"
  %126 = add i64 %125, -1
  store i64 %126, i64* %44, align 8
  %127 = icmp eq i64 %125, -9223372036854775808
  br i1 %127, label %Then1.i.i.i, label %joinpointcont3

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  br label %joinpointcont3

common.ret:                                       ; preds = %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit, %"#Attr_#dec_19.exit", %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, %"#Attr_#inc_16.exit", %joinpointcont3
  %.sink1462 = phi i8* [ %365, %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit ], [ %335, %"#Attr_#dec_19.exit" ], [ %318, %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit ], [ %195, %"#Attr_#inc_16.exit" ], [ %130, %joinpointcont3 ]
  %.sink = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %.sink, i8* noundef nonnull align 8 dereferenceable(64) %.sink1462, i64 64, i1 false)
  ret void

joinpointcont3:                                   ; preds = %Then1.i.i.i, %Then.i.i.i, %"#Attr_#inc_4.exit", %then_block
  %load_tag_to_put_in_struct.unpack627 = phi i64 [ %load_str_to_stack.i.unpack909, %Then1.i.i.i ], [ %load_str_to_stack.i.unpack909, %Then.i.i.i ], [ %load_str_to_stack.i.unpack909, %"#Attr_#inc_4.exit" ], [ %load_tag_to_put_in_struct.unpack627.pre, %then_block ]
  %load_tag_to_put_in_struct.elt = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 0
  %load_tag_to_put_in_struct.unpack = load i8*, i8** %load_tag_to_put_in_struct.elt, align 8
  %load_tag_to_put_in_struct.elt624 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 1
  %load_tag_to_put_in_struct.unpack625 = load i64, i64* %load_tag_to_put_in_struct.elt624, align 8
  %tag_alloca = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %.repack629 = bitcast [7 x i64]* %data_buffer to i8**
  store i8* %load_tag_to_put_in_struct.unpack, i8** %.repack629, align 8
  %128 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack625, i64* %128, align 8
  %129 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack627, i64* %129, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr, align 8
  %130 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  br label %common.ret

then_block46:                                     ; preds = %"#Attr_#dec_16.exit1021"
  %index50 = sub nsw i64 0, %masked38
  %new_ptr52 = getelementptr inbounds i8, i8* %cast_to_i8_ptr36, i64 %index50
  %131 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %131, i8* noundef nonnull align 8 dereferenceable(80) %new_ptr52, i64 80, i1 false)
  %132 = bitcast %str.RocStr* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132)
  %133 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133)
  %134 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %134, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr52, i64 24, i1 false)
  %load_str_to_stack.i.i.elt893 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack894 = load i64, i64* %load_str_to_stack.i.i.elt893, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack894, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_3.exit"

modify_rc.i.i:                                    ; preds = %then_block46
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %135 = bitcast i8* %get_rc_ptr.i.i to i64*
  %136 = load i64, i64* %135, align 8
  %.not.i.i.i.i.i = icmp eq i64 %136, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_3.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %137 = add i64 %136, -1
  store i64 %137, i64* %135, align 8
  %138 = icmp eq i64 %136, -9223372036854775808
  br i1 %138, label %Then1.i.i.i.i.i, label %"#Attr_#dec_3.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_3.exit"

"#Attr_#dec_3.exit":                              ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %then_block46
  %struct_field_access_record_1.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56, i64 0, i32 1
  %139 = bitcast %str.RocStr* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %133, i8* noundef nonnull align 8 dereferenceable(24) %139, i64 24, i1 false) #11
  %load_str_to_stack.i728.elt898 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i728.unpack899 = load i64, i64* %load_str_to_stack.i728.elt898, align 8
  %is_big_str.i730 = icmp sgt i64 %load_str_to_stack.i728.unpack899, 0
  br i1 %is_big_str.i730, label %modify_rc.i735, label %"#Attr_#dec_4.exit739"

modify_rc.i735:                                   ; preds = %"#Attr_#dec_3.exit"
  %call_builtin.i731 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i733 = getelementptr inbounds i8, i8* %call_builtin.i731, i64 -8
  %140 = bitcast i8* %get_rc_ptr.i733 to i64*
  %141 = load i64, i64* %140, align 8
  %.not.i.i.i.i734 = icmp eq i64 %141, 0
  br i1 %.not.i.i.i.i734, label %"#Attr_#dec_4.exit739", label %Then.i.i.i.i736

Then.i.i.i.i736:                                  ; preds = %modify_rc.i735
  %142 = add i64 %141, -1
  store i64 %142, i64* %140, align 8
  %143 = icmp eq i64 %141, -9223372036854775808
  br i1 %143, label %Then1.i.i.i.i737, label %"#Attr_#dec_4.exit739"

Then1.i.i.i.i737:                                 ; preds = %Then.i.i.i.i736
  tail call void @roc_dealloc(i8* %get_rc_ptr.i733, i32 8) #11
  br label %"#Attr_#dec_4.exit739"

"#Attr_#dec_4.exit739":                           ; preds = %modify_rc.i735, %Then.i.i.i.i736, %Then1.i.i.i.i737, %"#Attr_#dec_3.exit"
  %struct_field_access_record_2.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56, i64 0, i32 2
  %144 = bitcast %str.RocStr* %struct_field_access_record_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %132, i8* noundef nonnull align 8 dereferenceable(24) %144, i64 24, i1 false) #11
  %load_str_to_stack.i740.elt903 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i, i64 0, i32 2
  %load_str_to_stack.i740.unpack904 = load i64, i64* %load_str_to_stack.i740.elt903, align 8
  %is_big_str.i742 = icmp sgt i64 %load_str_to_stack.i740.unpack904, 0
  br i1 %is_big_str.i742, label %modify_rc.i747, label %"#Attr_#dec_4.exit751"

modify_rc.i747:                                   ; preds = %"#Attr_#dec_4.exit739"
  %call_builtin.i743 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i) #11
  %get_rc_ptr.i745 = getelementptr inbounds i8, i8* %call_builtin.i743, i64 -8
  %145 = bitcast i8* %get_rc_ptr.i745 to i64*
  %146 = load i64, i64* %145, align 8
  %.not.i.i.i.i746 = icmp eq i64 %146, 0
  br i1 %.not.i.i.i.i746, label %"#Attr_#dec_4.exit751", label %Then.i.i.i.i748

Then.i.i.i.i748:                                  ; preds = %modify_rc.i747
  %147 = add i64 %146, -1
  store i64 %147, i64* %145, align 8
  %148 = icmp eq i64 %146, -9223372036854775808
  br i1 %148, label %Then1.i.i.i.i749, label %"#Attr_#dec_4.exit751"

Then1.i.i.i.i749:                                 ; preds = %Then.i.i.i.i748
  tail call void @roc_dealloc(i8* %get_rc_ptr.i745, i32 8) #11
  br label %"#Attr_#dec_4.exit751"

"#Attr_#dec_4.exit751":                           ; preds = %modify_rc.i747, %Then.i.i.i.i748, %Then1.i.i.i.i749, %"#Attr_#dec_4.exit739"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134)
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %79)
  br label %joinpointcont35

Then.i.i.i640:                                    ; preds = %"#Attr_#dec_16.exit1021"
  %149 = add nsw i64 %get_refcount43, -1
  store i64 %149, i64* %79, align 8
  br label %joinpointcont35

joinpointcont35:                                  ; preds = %"#Attr_#dec_16.exit1021", %Then.i.i.i640, %"#Attr_#dec_4.exit751"
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store.repack, align 8
  %const_str_store.repack622 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 73, i64* %const_str_store.repack622, align 8
  %const_str_store.repack623 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 73, i64* %const_str_store.repack623, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 0)
  unreachable

then_block96:                                     ; preds = %branch2
  %index100 = sub nsw i64 0, %masked77
  %new_ptr102 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %index100
  %150 = bitcast { %str.RocStr, %str.RocStr }* %load_at_index_ptr_old106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %150, i8* noundef nonnull align 8 dereferenceable(48) %new_ptr102, i64 48, i1 false)
  %151 = bitcast %str.RocStr* %struct_field1.i643 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151)
  %152 = bitcast %str.RocStr* %struct_field.i644 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %152, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr102, i64 24, i1 false)
  %load_str_to_stack.i.i646.elt883 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i644, i64 0, i32 2
  %load_str_to_stack.i.i646.unpack884 = load i64, i64* %load_str_to_stack.i.i646.elt883, align 8
  %is_big_str.i.i648 = icmp sgt i64 %load_str_to_stack.i.i646.unpack884, 0
  br i1 %is_big_str.i.i648, label %modify_rc.i.i653, label %"#Attr_#dec_5.exit"

modify_rc.i.i653:                                 ; preds = %then_block96
  %call_builtin.i.i649 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i644) #11
  %get_rc_ptr.i.i651 = getelementptr inbounds i8, i8* %call_builtin.i.i649, i64 -8
  %153 = bitcast i8* %get_rc_ptr.i.i651 to i64*
  %154 = load i64, i64* %153, align 8
  %.not.i.i.i.i.i652 = icmp eq i64 %154, 0
  br i1 %.not.i.i.i.i.i652, label %"#Attr_#dec_5.exit", label %Then.i.i.i.i.i654

Then.i.i.i.i.i654:                                ; preds = %modify_rc.i.i653
  %155 = add i64 %154, -1
  store i64 %155, i64* %153, align 8
  %156 = icmp eq i64 %154, -9223372036854775808
  br i1 %156, label %Then1.i.i.i.i.i655, label %"#Attr_#dec_5.exit"

Then1.i.i.i.i.i655:                               ; preds = %Then.i.i.i.i.i654
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i651, i32 8) #11
  br label %"#Attr_#dec_5.exit"

"#Attr_#dec_5.exit":                              ; preds = %modify_rc.i.i653, %Then.i.i.i.i.i654, %Then1.i.i.i.i.i655, %then_block96
  %struct_field_access_record_1.i657 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %load_at_index_ptr_old106, i64 0, i32 1
  %157 = bitcast %str.RocStr* %struct_field_access_record_1.i657 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %151, i8* noundef nonnull align 8 dereferenceable(24) %157, i64 24, i1 false) #11
  %load_str_to_stack.i752.elt888 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i643, i64 0, i32 2
  %load_str_to_stack.i752.unpack889 = load i64, i64* %load_str_to_stack.i752.elt888, align 8
  %is_big_str.i754 = icmp sgt i64 %load_str_to_stack.i752.unpack889, 0
  br i1 %is_big_str.i754, label %modify_rc.i759, label %"#Attr_#dec_4.exit763"

modify_rc.i759:                                   ; preds = %"#Attr_#dec_5.exit"
  %call_builtin.i755 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i643) #11
  %get_rc_ptr.i757 = getelementptr inbounds i8, i8* %call_builtin.i755, i64 -8
  %158 = bitcast i8* %get_rc_ptr.i757 to i64*
  %159 = load i64, i64* %158, align 8
  %.not.i.i.i.i758 = icmp eq i64 %159, 0
  br i1 %.not.i.i.i.i758, label %"#Attr_#dec_4.exit763", label %Then.i.i.i.i760

Then.i.i.i.i760:                                  ; preds = %modify_rc.i759
  %160 = add i64 %159, -1
  store i64 %160, i64* %158, align 8
  %161 = icmp eq i64 %159, -9223372036854775808
  br i1 %161, label %Then1.i.i.i.i761, label %"#Attr_#dec_4.exit763"

Then1.i.i.i.i761:                                 ; preds = %Then.i.i.i.i760
  tail call void @roc_dealloc(i8* %get_rc_ptr.i757, i32 8) #11
  br label %"#Attr_#dec_4.exit763"

"#Attr_#dec_4.exit763":                           ; preds = %modify_rc.i759, %Then.i.i.i.i760, %Then1.i.i.i.i761, %"#Attr_#dec_5.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152)
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %81)
  br label %joinpointcont85

then121:                                          ; preds = %branch2
  %load_str_to_stack.i658.elt878 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old84, i64 0, i32 2
  %load_str_to_stack.i658.unpack879 = load i64, i64* %load_str_to_stack.i658.elt878, align 8
  %is_big_str.i660 = icmp sgt i64 %load_str_to_stack.i658.unpack879, 0
  br i1 %is_big_str.i660, label %modify_rc.i665, label %"#Attr_#inc_4.exit667"

modify_rc.i665:                                   ; preds = %then121
  %call_builtin.i661 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old84) #11
  %get_rc_ptr.i663 = getelementptr inbounds i8, i8* %call_builtin.i661, i64 -8
  %162 = bitcast i8* %get_rc_ptr.i663 to i64*
  %163 = load i64, i64* %162, align 8
  %.not.i.i664 = icmp eq i64 %163, 0
  br i1 %.not.i.i664, label %"#Attr_#inc_4.exit667", label %Then.i.i666

Then.i.i666:                                      ; preds = %modify_rc.i665
  %164 = add nsw i64 %163, 1
  store i64 %164, i64* %162, align 8
  %.pre = load i64, i64* %81, align 8
  br label %"#Attr_#inc_4.exit667"

"#Attr_#inc_4.exit667":                           ; preds = %then121, %modify_rc.i665, %Then.i.i666
  %165 = phi i64 [ %get_refcount93, %then121 ], [ %get_refcount93, %modify_rc.i665 ], [ %.pre, %Then.i.i666 ]
  %.not.i.i.i668 = icmp eq i64 %165, 0
  br i1 %.not.i.i.i668, label %joinpointcont85, label %Then.i.i.i669

Then.i.i.i669:                                    ; preds = %"#Attr_#inc_4.exit667"
  %166 = add i64 %165, -1
  store i64 %166, i64* %81, align 8
  %167 = icmp eq i64 %165, -9223372036854775808
  br i1 %167, label %Then1.i.i.i670, label %joinpointcont85

Then1.i.i.i670:                                   ; preds = %Then.i.i.i669
  tail call void @roc_dealloc(i8* %get_rc_ptr92, i32 8) #11
  br label %joinpointcont85

joinpointcont85:                                  ; preds = %Then1.i.i.i670, %Then.i.i.i669, %"#Attr_#inc_4.exit667", %"#Attr_#dec_4.exit763"
  %168 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %168)
  %169 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %169)
  %struct_field.elt.i1097 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1098 = load i8*, i8** %struct_field.elt.i1097, align 8
  %struct_field.elt1.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack2.i = load i64, i64* %struct_field.elt1.i, align 8
  %struct_field.elt3.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack4.i = load i64, i64* %struct_field.elt3.i, align 8
  %170 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1096 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #11
  %"cap > 0.not.i.i1099" = icmp eq i64 %struct_field.unpack4.i, 0
  br i1 %"cap > 0.not.i.i1099", label %"#Attr_#inc_17.exit.i", label %modification_list_block.i.i1102

modification_list_block.i.i1102:                  ; preds = %joinpointcont85
  %cast_basic_basic.i.i1100 = bitcast i8* %struct_field.unpack.i1098 to %str.RocStr*
  %bounds_check.not.i.i1101 = icmp eq i64 %struct_field.unpack2.i, 0
  br i1 %bounds_check.not.i.i1101, label %after_loop.i.i1114, label %loop.preheader.i.i1103

loop.preheader.i.i1103:                           ; preds = %modification_list_block.i.i1102
  %load_str_to_stack.i.elt7.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1096, i64 0, i32 2
  br label %loop.i.i1107

loop.i.i1107:                                     ; preds = %"#Attr_#inc_4.exit.i.i", %loop.preheader.i.i1103
  %next_index10.i.i = phi i64 [ 0, %loop.preheader.i.i1103 ], [ %next_index.i.i1104, %"#Attr_#inc_4.exit.i.i" ]
  %next_index.i.i1104 = add nuw i64 %next_index10.i.i, 1
  %load_index.i.i1105 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1100, i64 %next_index10.i.i
  %171 = bitcast %str.RocStr* %load_index.i.i1105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %170, i8* noundef nonnull align 8 dereferenceable(24) %171, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i = load i64, i64* %load_str_to_stack.i.elt7.i.i, align 8
  %is_big_str.i.i.i1106 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i, 0
  br i1 %is_big_str.i.i.i1106, label %modify_rc.i.i.i1109, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i1109:                              ; preds = %loop.i.i1107
  %call_builtin.i.i.i1108 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1096) #11
  %get_rc_ptr.i.i33.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i1108, i64 -8
  %172 = bitcast i8* %get_rc_ptr.i.i33.i to i64*
  %173 = load i64, i64* %172, align 8
  %.not.i.i2.i.i = icmp eq i64 %173, 0
  br i1 %.not.i.i2.i.i, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i34.i

Then.i.i.i34.i:                                   ; preds = %modify_rc.i.i.i1109
  %174 = add nsw i64 %173, 1
  store i64 %174, i64* %172, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i34.i, %modify_rc.i.i.i1109, %loop.i.i1107
  %exitcond.not.i1110 = icmp eq i64 %next_index.i.i1104, %struct_field.unpack2.i
  br i1 %exitcond.not.i1110, label %after_loop.i.i1114, label %loop.i.i1107

after_loop.i.i1114:                               ; preds = %"#Attr_#inc_4.exit.i.i", %modification_list_block.i.i1102
  %175 = ptrtoint i8* %struct_field.unpack.i1098 to i64
  %176 = shl i64 %struct_field.unpack4.i, 1
  %.not.i.i.i35.i = icmp slt i64 %struct_field.unpack4.i, 0
  %177 = select i1 %.not.i.i.i35.i, i64 %176, i64 %175
  %as_usize_ptr.i.i1111 = inttoptr i64 %177 to i64*
  %get_rc_ptr.i.i1112 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1111, i64 -1
  %178 = load i64, i64* %get_rc_ptr.i.i1112, align 8
  %.not.i.i.i1113 = icmp eq i64 %178, 0
  br i1 %.not.i.i.i1113, label %"#Attr_#inc_17.exit.i", label %Then.i.i.i1115

Then.i.i.i1115:                                   ; preds = %after_loop.i.i1114
  %179 = add nsw i64 %178, 1
  store i64 %179, i64* %get_rc_ptr.i.i1112, align 8
  br label %"#Attr_#inc_17.exit.i"

"#Attr_#inc_17.exit.i":                           ; preds = %Then.i.i.i1115, %after_loop.i.i1114, %joinpointcont85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #11
  %struct_field1.sroa.237.0..sroa_idx38.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1116 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1117 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i, align 8
  %"cap > 0.i.i.not.i1118" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i1118", label %"#Attr_#inc_9.exit.i.i", label %modification_list_block.i.i.i1125

modification_list_block.i.i.i1125:                ; preds = %"#Attr_#inc_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i1119 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1120 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1119, align 8
  %180 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1120 to i64
  %181 = shl i64 %struct_field1.sroa.237.0.copyload.i, 1
  %.not.i.i.i.i.i1121 = icmp slt i64 %struct_field1.sroa.237.0.copyload.i, 0
  %182 = select i1 %.not.i.i.i.i.i1121, i64 %181, i64 %180
  %as_usize_ptr.i.i.i1122 = inttoptr i64 %182 to i64*
  %get_rc_ptr.i.i.i1123 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1122, i64 -1
  %183 = load i64, i64* %get_rc_ptr.i.i.i1123, align 8
  %.not.i.i.i.i1124 = icmp eq i64 %183, 0
  br i1 %.not.i.i.i.i1124, label %"#Attr_#inc_9.exit.i.i", label %Then.i.i.i.i1126

Then.i.i.i.i1126:                                 ; preds = %modification_list_block.i.i.i1125
  %184 = add nsw i64 %183, 1
  store i64 %184, i64* %get_rc_ptr.i.i.i1123, align 8
  br label %"#Attr_#inc_9.exit.i.i"

"#Attr_#inc_9.exit.i.i":                          ; preds = %Then.i.i.i.i1126, %modification_list_block.i.i.i1125, %"#Attr_#inc_17.exit.i"
  %"cap > 0.i18.i.not.i" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i, 0
  br i1 %"cap > 0.i18.i.not.i", label %"#Attr_#inc_10.exit.i.i", label %modification_list_block.i27.i.i

modification_list_block.i27.i.i:                  ; preds = %"#Attr_#inc_9.exit.i.i"
  %185 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1116 to i64
  %186 = shl i64 %struct_field1.sroa.441.0.copyload.i, 1
  %.not.i.i.i23.i.i = icmp slt i64 %struct_field1.sroa.441.0.copyload.i, 0
  %187 = select i1 %.not.i.i.i23.i.i, i64 %186, i64 %185
  %as_usize_ptr.i24.i.i = inttoptr i64 %187 to i64*
  %get_rc_ptr.i25.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i, i64 -1
  %188 = load i64, i64* %get_rc_ptr.i25.i.i, align 8
  %.not.i.i26.i.i = icmp eq i64 %188, 0
  br i1 %.not.i.i26.i.i, label %"#Attr_#inc_10.exit.i.i", label %Then.i.i28.i.i

Then.i.i28.i.i:                                   ; preds = %modification_list_block.i27.i.i
  %189 = add nsw i64 %188, 1
  store i64 %189, i64* %get_rc_ptr.i25.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i"

"#Attr_#inc_10.exit.i.i":                         ; preds = %Then.i.i28.i.i, %modification_list_block.i27.i.i, %"#Attr_#inc_9.exit.i.i"
  %"cap > 0.i5.i.not.i" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i, 0
  br i1 %"cap > 0.i5.i.not.i", label %"#Attr_#inc_16.exit", label %modification_list_block.i14.i.i

modification_list_block.i14.i.i:                  ; preds = %"#Attr_#inc_10.exit.i.i"
  %190 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1117 to i64
  %191 = shl i64 %struct_field1.sroa.645.0.copyload.i, 1
  %.not.i.i.i10.i.i = icmp slt i64 %struct_field1.sroa.645.0.copyload.i, 0
  %192 = select i1 %.not.i.i.i10.i.i, i64 %191, i64 %190
  %as_usize_ptr.i11.i.i = inttoptr i64 %192 to i64*
  %get_rc_ptr.i12.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i, i64 -1
  %193 = load i64, i64* %get_rc_ptr.i12.i.i, align 8
  %.not.i.i13.i.i = icmp eq i64 %193, 0
  br i1 %.not.i.i13.i.i, label %"#Attr_#inc_16.exit", label %Then.i.i15.i.i

Then.i.i15.i.i:                                   ; preds = %modification_list_block.i14.i.i
  %194 = add nsw i64 %193, 1
  store i64 %194, i64* %get_rc_ptr.i12.i.i, align 8
  br label %"#Attr_#inc_16.exit"

"#Attr_#inc_16.exit":                             ; preds = %"#Attr_#inc_10.exit.i.i", %modification_list_block.i14.i.i, %Then.i.i15.i.i
  call fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i) #11
  call fastcc void @Result_mapErr_6aefbf48562dfc8b90f8fa88c36a09d50313f33e538dd1c4b3a5ea41197cc31({ [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i, %str.RocStr* nonnull %load_at_index_ptr_old84, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i) #11
  call fastcc void @Result_map_951cd0dfb35f58212872b90ac2c97b3bf693b7e7df281541d7cc9c13a({ [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %168)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %169)
  call fastcc void @Result_map_8aa359bd749b8effde17d95d39df5dd5cfceb675b455e8288a857540333415({ [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value126)
  %195 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value126 to i8*
  br label %common.ret

then_block147:                                    ; preds = %branch3
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %86)
  br label %joinpointcont136

then163:                                          ; preds = %branch3
  %"cap > 0.not.i" = icmp eq i64 %load_at_index_ptr_old135.unpack329, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#inc_19.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %then163
  %cast_basic_basic.i = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %196 = bitcast %str.RocStr* %struct_field.i.i1127 to i8*
  %struct_field.i.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 0
  %struct_field.i.repack13.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 1
  %struct_field.i.repack15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#inc_14.exit.i", %loop.preheader.i
  %index.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#inc_14.exit.i" ]
  %next_index.i = add nuw i64 %index.i, 1
  %incrementing_element_loop_load.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i, align 8
  %incrementing_element_loop_load.unpack.elt8.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i, align 8
  %incrementing_element_loop_load.unpack.elt10.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i, align 8
  %incrementing_element_loop_load.elt5.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 1
  %incrementing_element_loop_load.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i, i8** %struct_field.i.repack.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i, i64* %struct_field.i.repack13.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i, i64* %struct_field.i.repack15.i, align 8
  %is_big_str.i.i.i1128 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i, 0
  br i1 %is_big_str.i.i.i1128, label %modify_rc.i.i.i1132, label %"#Attr_#inc_4.exit.i.i1134"

modify_rc.i.i.i1132:                              ; preds = %loop.i
  %call_builtin.i.i.i1129 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1127) #11
  %get_rc_ptr.i.i.i1130 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1129, i64 -8
  %197 = bitcast i8* %get_rc_ptr.i.i.i1130 to i64*
  %198 = load i64, i64* %197, align 8
  %.not.i.i.i.i1131 = icmp eq i64 %198, 0
  br i1 %.not.i.i.i.i1131, label %"#Attr_#inc_4.exit.i.i1134", label %Then.i.i.i.i1133

Then.i.i.i.i1133:                                 ; preds = %modify_rc.i.i.i1132
  %199 = add nsw i64 %198, 1
  store i64 %199, i64* %197, align 8
  br label %"#Attr_#inc_4.exit.i.i1134"

"#Attr_#inc_4.exit.i.i1134":                      ; preds = %Then.i.i.i.i1133, %modify_rc.i.i.i1132, %loop.i
  %to_int1.i.i.i = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i64
  %masked.i.i.i = and i64 %to_int1.i.i.i, 7
  %cast_to_i8_ptr.i.i.i = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i8*
  %get_rc_ptr.i2.i.idx.i = sub nuw nsw i64 -8, %masked.i.i.i
  %get_rc_ptr.i2.i.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i, i64 %get_rc_ptr.i2.i.idx.i
  %200 = bitcast i8* %get_rc_ptr.i2.i.i to i64*
  %201 = load i64, i64* %200, align 8
  %.not.i.i3.i.i = icmp eq i64 %201, 0
  br i1 %.not.i.i3.i.i, label %"#Attr_#inc_14.exit.i", label %Then.i.i4.i.i

Then.i.i4.i.i:                                    ; preds = %"#Attr_#inc_4.exit.i.i1134"
  %202 = add nsw i64 %201, 1
  store i64 %202, i64* %200, align 8
  br label %"#Attr_#inc_14.exit.i"

"#Attr_#inc_14.exit.i":                           ; preds = %Then.i.i4.i.i, %"#Attr_#inc_4.exit.i.i1134"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #11
  %exitcond1440.not = icmp eq i64 %next_index.i, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond1440.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#inc_14.exit.i", %modification_list_block.i
  %203 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %204 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1135 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %205 = select i1 %.not.i.i.i1135, i64 %204, i64 %203
  %as_usize_ptr.i = inttoptr i64 %205 to i64*
  %get_rc_ptr.i1136 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %206 = load i64, i64* %get_rc_ptr.i1136, align 8
  %.not.i.i1137 = icmp eq i64 %206, 0
  br i1 %.not.i.i1137, label %"#Attr_#inc_19.exitthread-pre-split", label %Then.i.i1138

Then.i.i1138:                                     ; preds = %after_loop.i
  %207 = add nsw i64 %206, 1
  store i64 %207, i64* %get_rc_ptr.i1136, align 8
  br label %"#Attr_#inc_19.exitthread-pre-split"

"#Attr_#inc_19.exitthread-pre-split":             ; preds = %Then.i.i1138, %after_loop.i
  %.pr = load i64, i64* %86, align 8
  br label %"#Attr_#inc_19.exit"

"#Attr_#inc_19.exit":                             ; preds = %"#Attr_#inc_19.exitthread-pre-split", %then163
  %208 = phi i64 [ %.pr, %"#Attr_#inc_19.exitthread-pre-split" ], [ %get_refcount144, %then163 ]
  %.not.i.i.i672 = icmp eq i64 %208, 0
  br i1 %.not.i.i.i672, label %joinpointcont136, label %Then.i.i.i673

Then.i.i.i673:                                    ; preds = %"#Attr_#inc_19.exit"
  %209 = add i64 %208, -1
  store i64 %209, i64* %86, align 8
  %210 = icmp eq i64 %208, -9223372036854775808
  br i1 %210, label %Then1.i.i.i674, label %joinpointcont136

Then1.i.i.i674:                                   ; preds = %Then.i.i.i673
  tail call void @roc_dealloc(i8* %get_rc_ptr143, i32 8) #11
  br label %joinpointcont136

joinpointcont136:                                 ; preds = %Then1.i.i.i674, %Then.i.i.i673, %"#Attr_#inc_19.exit", %then_block147
  %struct_field.elt.i1140 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1141 = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field.elt1.i1142 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack2.i1143 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field.elt3.i1144 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack4.i1145 = load i64, i64* %struct_field.elt3.i1144, align 8
  %211 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1139 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #11
  %"cap > 0.not.i.i1146" = icmp eq i64 %struct_field.unpack4.i1145, 0
  br i1 %"cap > 0.not.i.i1146", label %"#Attr_#inc_17.exit.i1182", label %modification_list_block.i.i1149

modification_list_block.i.i1149:                  ; preds = %joinpointcont136
  %cast_basic_basic.i.i1147 = bitcast i8* %struct_field.unpack.i1141 to %str.RocStr*
  %bounds_check.not.i.i1148 = icmp eq i64 %struct_field.unpack2.i1143, 0
  br i1 %bounds_check.not.i.i1148, label %after_loop.i.i1169, label %loop.preheader.i.i1151

loop.preheader.i.i1151:                           ; preds = %modification_list_block.i.i1149
  %load_str_to_stack.i.elt7.i.i1150 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1139, i64 0, i32 2
  br label %loop.i.i1157

loop.i.i1157:                                     ; preds = %"#Attr_#inc_4.exit.i.i1164", %loop.preheader.i.i1151
  %next_index10.i.i1152 = phi i64 [ 0, %loop.preheader.i.i1151 ], [ %next_index.i.i1153, %"#Attr_#inc_4.exit.i.i1164" ]
  %next_index.i.i1153 = add nuw i64 %next_index10.i.i1152, 1
  %load_index.i.i1154 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1147, i64 %next_index10.i.i1152
  %212 = bitcast %str.RocStr* %load_index.i.i1154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %211, i8* noundef nonnull align 8 dereferenceable(24) %212, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i1155 = load i64, i64* %load_str_to_stack.i.elt7.i.i1150, align 8
  %is_big_str.i.i.i1156 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i1155, 0
  br i1 %is_big_str.i.i.i1156, label %modify_rc.i.i.i1161, label %"#Attr_#inc_4.exit.i.i1164"

modify_rc.i.i.i1161:                              ; preds = %loop.i.i1157
  %call_builtin.i.i.i1158 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1139) #11
  %get_rc_ptr.i.i33.i1159 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1158, i64 -8
  %213 = bitcast i8* %get_rc_ptr.i.i33.i1159 to i64*
  %214 = load i64, i64* %213, align 8
  %.not.i.i2.i.i1160 = icmp eq i64 %214, 0
  br i1 %.not.i.i2.i.i1160, label %"#Attr_#inc_4.exit.i.i1164", label %Then.i.i.i34.i1162

Then.i.i.i34.i1162:                               ; preds = %modify_rc.i.i.i1161
  %215 = add nsw i64 %214, 1
  store i64 %215, i64* %213, align 8
  br label %"#Attr_#inc_4.exit.i.i1164"

"#Attr_#inc_4.exit.i.i1164":                      ; preds = %Then.i.i.i34.i1162, %modify_rc.i.i.i1161, %loop.i.i1157
  %exitcond.not.i1163 = icmp eq i64 %next_index.i.i1153, %struct_field.unpack2.i1143
  br i1 %exitcond.not.i1163, label %after_loop.i.i1169, label %loop.i.i1157

after_loop.i.i1169:                               ; preds = %"#Attr_#inc_4.exit.i.i1164", %modification_list_block.i.i1149
  %216 = ptrtoint i8* %struct_field.unpack.i1141 to i64
  %217 = shl i64 %struct_field.unpack4.i1145, 1
  %.not.i.i.i35.i1165 = icmp slt i64 %struct_field.unpack4.i1145, 0
  %218 = select i1 %.not.i.i.i35.i1165, i64 %217, i64 %216
  %as_usize_ptr.i.i1166 = inttoptr i64 %218 to i64*
  %get_rc_ptr.i.i1167 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1166, i64 -1
  %219 = load i64, i64* %get_rc_ptr.i.i1167, align 8
  %.not.i.i.i1168 = icmp eq i64 %219, 0
  br i1 %.not.i.i.i1168, label %"#Attr_#inc_17.exit.i1182", label %Then.i.i.i1170

Then.i.i.i1170:                                   ; preds = %after_loop.i.i1169
  %220 = add nsw i64 %219, 1
  store i64 %220, i64* %get_rc_ptr.i.i1167, align 8
  br label %"#Attr_#inc_17.exit.i1182"

"#Attr_#inc_17.exit.i1182":                       ; preds = %Then.i.i.i1170, %after_loop.i.i1169, %joinpointcont136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #11
  %struct_field1.sroa.237.0..sroa_idx38.i1171 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i1172 = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i1171, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i1173 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1174 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i1173, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i1175 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i1176 = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i1175, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i1177 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1178 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i1177, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i1179 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i1180 = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i1179, align 8
  %"cap > 0.i.i.not.i1181" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i1172, 0
  br i1 %"cap > 0.i.i.not.i1181", label %"#Attr_#inc_9.exit.i.i1192", label %modification_list_block.i.i.i1189

modification_list_block.i.i.i1189:                ; preds = %"#Attr_#inc_17.exit.i1182"
  %struct_field1.sroa.0.0..sroa_idx.i1183 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1184 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1183, align 8
  %221 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1184 to i64
  %222 = shl i64 %struct_field1.sroa.237.0.copyload.i1172, 1
  %.not.i.i.i.i.i1185 = icmp slt i64 %struct_field1.sroa.237.0.copyload.i1172, 0
  %223 = select i1 %.not.i.i.i.i.i1185, i64 %222, i64 %221
  %as_usize_ptr.i.i.i1186 = inttoptr i64 %223 to i64*
  %get_rc_ptr.i.i.i1187 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1186, i64 -1
  %224 = load i64, i64* %get_rc_ptr.i.i.i1187, align 8
  %.not.i.i.i.i1188 = icmp eq i64 %224, 0
  br i1 %.not.i.i.i.i1188, label %"#Attr_#inc_9.exit.i.i1192", label %Then.i.i.i.i1190

Then.i.i.i.i1190:                                 ; preds = %modification_list_block.i.i.i1189
  %225 = add nsw i64 %224, 1
  store i64 %225, i64* %get_rc_ptr.i.i.i1187, align 8
  br label %"#Attr_#inc_9.exit.i.i1192"

"#Attr_#inc_9.exit.i.i1192":                      ; preds = %Then.i.i.i.i1190, %modification_list_block.i.i.i1189, %"#Attr_#inc_17.exit.i1182"
  %"cap > 0.i18.i.not.i1191" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i1176, 0
  br i1 %"cap > 0.i18.i.not.i1191", label %"#Attr_#inc_10.exit.i.i1200", label %modification_list_block.i27.i.i1197

modification_list_block.i27.i.i1197:              ; preds = %"#Attr_#inc_9.exit.i.i1192"
  %226 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1174 to i64
  %227 = shl i64 %struct_field1.sroa.441.0.copyload.i1176, 1
  %.not.i.i.i23.i.i1193 = icmp slt i64 %struct_field1.sroa.441.0.copyload.i1176, 0
  %228 = select i1 %.not.i.i.i23.i.i1193, i64 %227, i64 %226
  %as_usize_ptr.i24.i.i1194 = inttoptr i64 %228 to i64*
  %get_rc_ptr.i25.i.i1195 = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i1194, i64 -1
  %229 = load i64, i64* %get_rc_ptr.i25.i.i1195, align 8
  %.not.i.i26.i.i1196 = icmp eq i64 %229, 0
  br i1 %.not.i.i26.i.i1196, label %"#Attr_#inc_10.exit.i.i1200", label %Then.i.i28.i.i1198

Then.i.i28.i.i1198:                               ; preds = %modification_list_block.i27.i.i1197
  %230 = add nsw i64 %229, 1
  store i64 %230, i64* %get_rc_ptr.i25.i.i1195, align 8
  br label %"#Attr_#inc_10.exit.i.i1200"

"#Attr_#inc_10.exit.i.i1200":                     ; preds = %Then.i.i28.i.i1198, %modification_list_block.i27.i.i1197, %"#Attr_#inc_9.exit.i.i1192"
  %"cap > 0.i5.i.not.i1199" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i1180, 0
  br i1 %"cap > 0.i5.i.not.i1199", label %"#Attr_#inc_16.exit1207", label %modification_list_block.i14.i.i1205

modification_list_block.i14.i.i1205:              ; preds = %"#Attr_#inc_10.exit.i.i1200"
  %231 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1178 to i64
  %232 = shl i64 %struct_field1.sroa.645.0.copyload.i1180, 1
  %.not.i.i.i10.i.i1201 = icmp slt i64 %struct_field1.sroa.645.0.copyload.i1180, 0
  %233 = select i1 %.not.i.i.i10.i.i1201, i64 %232, i64 %231
  %as_usize_ptr.i11.i.i1202 = inttoptr i64 %233 to i64*
  %get_rc_ptr.i12.i.i1203 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i1202, i64 -1
  %234 = load i64, i64* %get_rc_ptr.i12.i.i1203, align 8
  %.not.i.i13.i.i1204 = icmp eq i64 %234, 0
  br i1 %.not.i.i13.i.i1204, label %"#Attr_#inc_16.exit1207", label %Then.i.i15.i.i1206

Then.i.i15.i.i1206:                               ; preds = %modification_list_block.i14.i.i1205
  %235 = add nsw i64 %234, 1
  store i64 %235, i64* %get_rc_ptr.i12.i.i1203, align 8
  br label %"#Attr_#inc_16.exit1207"

"#Attr_#inc_16.exit1207":                         ; preds = %"#Attr_#inc_10.exit.i.i1200", %modification_list_block.i14.i.i1205, %Then.i.i15.i.i1206
  call fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value168)
  %tag_id_ptr169 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr169, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block171, label %else_block172

then_block171:                                    ; preds = %"#Attr_#inc_16.exit1207"
  %"cap > 0.not.i1209" = icmp eq i64 %load_at_index_ptr_old135.unpack329, 0
  br i1 %"cap > 0.not.i1209", label %"#Attr_#inc_19.exit1250", label %modification_list_block.i1212

modification_list_block.i1212:                    ; preds = %then_block171
  %cast_basic_basic.i1210 = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i1211 = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i1211, label %after_loop.i1248, label %loop.preheader.i1216

loop.preheader.i1216:                             ; preds = %modification_list_block.i1212
  %236 = bitcast %str.RocStr* %struct_field.i.i1208 to i8*
  %struct_field.i.repack.i1213 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 0
  %struct_field.i.repack13.i1214 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 1
  %struct_field.i.repack15.i1215 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 2
  br label %loop.i1228

loop.i1228:                                       ; preds = %"#Attr_#inc_14.exit.i1243", %loop.preheader.i1216
  %index.i1217 = phi i64 [ 0, %loop.preheader.i1216 ], [ %next_index.i1218, %"#Attr_#inc_14.exit.i1243" ]
  %next_index.i1218 = add nuw i64 %index.i1217, 1
  %incrementing_element_loop_load.unpack.elt.i1219 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i1220 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i1219, align 8
  %incrementing_element_loop_load.unpack.elt8.i1221 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i1222 = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i1221, align 8
  %incrementing_element_loop_load.unpack.elt10.i1223 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i1224 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i1223, align 8
  %incrementing_element_loop_load.elt5.i1225 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 1
  %incrementing_element_loop_load.unpack6.i1226 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i1225, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i1220, i8** %struct_field.i.repack.i1213, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i1222, i64* %struct_field.i.repack13.i1214, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i1224, i64* %struct_field.i.repack15.i1215, align 8
  %is_big_str.i.i.i1227 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i1224, 0
  br i1 %is_big_str.i.i.i1227, label %modify_rc.i.i.i1232, label %"#Attr_#inc_4.exit.i.i1240"

modify_rc.i.i.i1232:                              ; preds = %loop.i1228
  %call_builtin.i.i.i1229 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1208) #11
  %get_rc_ptr.i.i.i1230 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1229, i64 -8
  %237 = bitcast i8* %get_rc_ptr.i.i.i1230 to i64*
  %238 = load i64, i64* %237, align 8
  %.not.i.i.i.i1231 = icmp eq i64 %238, 0
  br i1 %.not.i.i.i.i1231, label %"#Attr_#inc_4.exit.i.i1240", label %Then.i.i.i.i1233

Then.i.i.i.i1233:                                 ; preds = %modify_rc.i.i.i1232
  %239 = add nsw i64 %238, 1
  store i64 %239, i64* %237, align 8
  br label %"#Attr_#inc_4.exit.i.i1240"

"#Attr_#inc_4.exit.i.i1240":                      ; preds = %Then.i.i.i.i1233, %modify_rc.i.i.i1232, %loop.i1228
  %to_int1.i.i.i1234 = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i1226 to i64
  %masked.i.i.i1235 = and i64 %to_int1.i.i.i1234, 7
  %cast_to_i8_ptr.i.i.i1236 = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i1226 to i8*
  %get_rc_ptr.i2.i.idx.i1237 = sub nuw nsw i64 -8, %masked.i.i.i1235
  %get_rc_ptr.i2.i.i1238 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i1236, i64 %get_rc_ptr.i2.i.idx.i1237
  %240 = bitcast i8* %get_rc_ptr.i2.i.i1238 to i64*
  %241 = load i64, i64* %240, align 8
  %.not.i.i3.i.i1239 = icmp eq i64 %241, 0
  br i1 %.not.i.i3.i.i1239, label %"#Attr_#inc_14.exit.i1243", label %Then.i.i4.i.i1241

Then.i.i4.i.i1241:                                ; preds = %"#Attr_#inc_4.exit.i.i1240"
  %242 = add nsw i64 %241, 1
  store i64 %242, i64* %240, align 8
  br label %"#Attr_#inc_14.exit.i1243"

"#Attr_#inc_14.exit.i1243":                       ; preds = %Then.i.i4.i.i1241, %"#Attr_#inc_4.exit.i.i1240"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #11
  %exitcond1439.not = icmp eq i64 %next_index.i1218, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond1439.not, label %after_loop.i1248, label %loop.i1228

after_loop.i1248:                                 ; preds = %"#Attr_#inc_14.exit.i1243", %modification_list_block.i1212
  %243 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %244 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1244 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %245 = select i1 %.not.i.i.i1244, i64 %244, i64 %243
  %as_usize_ptr.i1245 = inttoptr i64 %245 to i64*
  %get_rc_ptr.i1246 = getelementptr inbounds i64, i64* %as_usize_ptr.i1245, i64 -1
  %246 = load i64, i64* %get_rc_ptr.i1246, align 8
  %.not.i.i1247 = icmp eq i64 %246, 0
  br i1 %.not.i.i1247, label %"#Attr_#inc_19.exit1250", label %Then.i.i1249

Then.i.i1249:                                     ; preds = %after_loop.i1248
  %247 = add nsw i64 %246, 1
  store i64 %247, i64* %get_rc_ptr.i1246, align 8
  br label %"#Attr_#inc_19.exit1250"

"#Attr_#inc_19.exit1250":                         ; preds = %then_block171, %after_loop.i1248, %Then.i.i1249
  %load_element.elt = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt395 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 1
  %load_element.unpack396.elt = bitcast i64* %load_element.elt395 to i8**
  %load_element.unpack396.unpack = load i8*, i8** %load_element.unpack396.elt, align 8
  %248 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 2
  %load_element.unpack396.unpack399 = load i64, i64* %248, align 8
  %249 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 3
  %load_element.unpack396.unpack401 = load i64, i64* %249, align 8
  %struct_field.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 0
  store i8* %load_element.unpack396.unpack, i8** %struct_field.repack, align 8
  %struct_field.repack403 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %struct_field.repack403, align 8
  %struct_field.repack405 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %struct_field.repack405, align 8
  %is_big_str.i678 = icmp sgt i64 %load_element.unpack396.unpack401, 0
  br i1 %is_big_str.i678, label %modify_rc.i683, label %"#Attr_#inc_4.exit685"

modify_rc.i683:                                   ; preds = %"#Attr_#inc_19.exit1250"
  %call_builtin.i679 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i681 = getelementptr inbounds i8, i8* %call_builtin.i679, i64 -8
  %250 = bitcast i8* %get_rc_ptr.i681 to i64*
  %251 = load i64, i64* %250, align 8
  %.not.i.i682 = icmp eq i64 %251, 0
  br i1 %.not.i.i682, label %"#Attr_#inc_4.exit685", label %Then.i.i684

Then.i.i684:                                      ; preds = %modify_rc.i683
  %252 = add nsw i64 %251, 1
  store i64 %252, i64* %250, align 8
  br label %"#Attr_#inc_4.exit685"

"#Attr_#inc_4.exit685":                           ; preds = %"#Attr_#inc_19.exit1250", %modify_rc.i683, %Then.i.i684
  %struct_field175.unpack = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field175.unpack408 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field175.unpack410 = load i64, i64* %struct_field.elt3.i1144, align 8
  %struct_field_access_record_1176 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1
  %253 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field177 to i8*
  %254 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field_access_record_1176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %253, i8* noundef nonnull align 8 dereferenceable(80) %254, i64 80, i1 false)
  %255 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %255)
  call fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_field177, i64 %load_element.unpack, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i686) #11
  %result_value178.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 0
  %result_value178.sroa.0.0.copyload = load i8*, i8** %result_value178.sroa.0.0..sroa_idx, align 8
  %result_value178.sroa.2.0..sroa_idx1391 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 1
  %result_value178.sroa.2.0.copyload = load i64, i64* %result_value178.sroa.2.0..sroa_idx1391, align 8
  %result_value178.sroa.3.0..sroa_idx1392 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 2
  %result_value178.sroa.3.0.copyload = load i64, i64* %result_value178.sroa.3.0..sroa_idx1392, align 8
  %result_value178.sroa.4.0..sroa_idx1393 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 0
  %result_value178.sroa.4.0.copyload = load i8*, i8** %result_value178.sroa.4.0..sroa_idx1393, align 8
  %result_value178.sroa.5.0..sroa_idx1394 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 1
  %result_value178.sroa.5.0.copyload = load i64, i64* %result_value178.sroa.5.0..sroa_idx1394, align 8
  %result_value178.sroa.6.0..sroa_idx1395 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 2
  %result_value178.sroa.6.0.copyload = load i64, i64* %result_value178.sroa.6.0..sroa_idx1395, align 8
  %result_value178.sroa.7.0..sroa_idx1396 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 0
  %result_value178.sroa.7.0.copyload = load i8*, i8** %result_value178.sroa.7.0..sroa_idx1396, align 8
  %result_value178.sroa.8.0..sroa_idx1397 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 1
  %result_value178.sroa.8.0.copyload = load i64, i64* %result_value178.sroa.8.0..sroa_idx1397, align 8
  %result_value178.sroa.9.0..sroa_idx1398 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 2
  %result_value178.sroa.9.0.copyload = load i64, i64* %result_value178.sroa.9.0..sroa_idx1398, align 8
  %result_value178.sroa.10.0..sroa_idx1399 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 3
  %result_value178.sroa.10.0.copyload = load i64, i64* %result_value178.sroa.10.0..sroa_idx1399, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %255)
  %tag_alloca182 = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr185 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca182, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr185, align 8
  %struct_alloca190 = alloca { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, align 8
  %struct_alloca190.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 0
  store i8* %load_element.unpack396.unpack, i8** %struct_alloca190.repack.repack, align 8
  %struct_alloca190.repack.repack495 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %struct_alloca190.repack.repack495, align 8
  %struct_alloca190.repack.repack497 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %struct_alloca190.repack.repack497, align 8
  %struct_alloca190.repack493.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 0
  store i8* %struct_field175.unpack, i8** %struct_alloca190.repack493.repack.repack, align 8
  %struct_alloca190.repack493.repack.repack501 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 1
  store i64 %struct_field175.unpack408, i64* %struct_alloca190.repack493.repack.repack501, align 8
  %struct_alloca190.repack493.repack.repack503 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 2
  store i64 %struct_field175.unpack410, i64* %struct_alloca190.repack493.repack.repack503, align 8
  %struct_alloca190.repack493.repack499.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 0
  store i8* %result_value178.sroa.0.0.copyload, i8** %struct_alloca190.repack493.repack499.repack.repack, align 8
  %struct_alloca190.repack493.repack499.repack.repack511 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 1
  store i64 %result_value178.sroa.2.0.copyload, i64* %struct_alloca190.repack493.repack499.repack.repack511, align 8
  %struct_alloca190.repack493.repack499.repack.repack513 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 2
  store i64 %result_value178.sroa.3.0.copyload, i64* %struct_alloca190.repack493.repack499.repack.repack513, align 8
  %struct_alloca190.repack493.repack499.repack505.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 0
  store i8* %result_value178.sroa.4.0.copyload, i8** %struct_alloca190.repack493.repack499.repack505.repack, align 8
  %struct_alloca190.repack493.repack499.repack505.repack515 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 1
  store i64 %result_value178.sroa.5.0.copyload, i64* %struct_alloca190.repack493.repack499.repack505.repack515, align 8
  %struct_alloca190.repack493.repack499.repack505.repack517 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 2
  store i64 %result_value178.sroa.6.0.copyload, i64* %struct_alloca190.repack493.repack499.repack505.repack517, align 8
  %struct_alloca190.repack493.repack499.repack507.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 0
  store i8* %result_value178.sroa.7.0.copyload, i8** %struct_alloca190.repack493.repack499.repack507.repack, align 8
  %struct_alloca190.repack493.repack499.repack507.repack519 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 1
  store i64 %result_value178.sroa.8.0.copyload, i64* %struct_alloca190.repack493.repack499.repack507.repack519, align 8
  %struct_alloca190.repack493.repack499.repack507.repack521 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 2
  store i64 %result_value178.sroa.9.0.copyload, i64* %struct_alloca190.repack493.repack499.repack507.repack521, align 8
  %struct_alloca190.repack493.repack499.repack509 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 3
  store i64 %result_value178.sroa.10.0.copyload, i64* %struct_alloca190.repack493.repack499.repack509, align 8
  %result_value.i725.sroa.0.0.sroa_cast1416 = bitcast [9 x i64]* %result_value.i725.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %result_value.i725.sroa.0.0.sroa_cast1416)
  %256 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %256) #11
  call fastcc void @List_iterHelp_b0bea8510982dc41afa71df5c1304ce6de87ac527e5dcd9b88c4cbf7e42f(%list.RocList %load_at_index_ptr_old135330, { [0 x i64], [8 x i64], i8, [7 x i8] }* nonnull %tag_alloca182, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* nonnull %struct_alloca190, i64 %load_at_index_ptr_old135.unpack327, { [0 x i64], [9 x i64], i8, [7 x i8] }* nonnull %result_value.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %result_value.i725.sroa.0.0.sroa_cast1416, i8* noundef nonnull align 8 dereferenceable(72) %256, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %256) #11
  %result_value.i725.sroa.0.0..sroa_cast1410 = bitcast { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %result_value.i725.sroa.0.0..sroa_cast1410, i8* noundef nonnull align 8 dereferenceable(72) %result_value.i725.sroa.0.0.sroa_cast1416, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %result_value.i725.sroa.0.0.sroa_cast1416)
  %tag_id_ptr192 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191, i64 0, i32 2
  %load_tag_id193 = load i8, i8* %tag_id_ptr192, align 8
  %eq_u8194 = icmp eq i8 %load_tag_id193, 1
  br i1 %eq_u8194, label %then_block196, label %else_block197

else_block172:                                    ; preds = %"#Attr_#inc_16.exit1207"
  %struct_field.unpack.i1253 = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field.unpack21.i1255 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field.unpack23.i1257 = load i64, i64* %struct_field.elt3.i1144, align 8
  %257 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1251 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #11
  %"cap > 0.not.i.i1258" = icmp eq i64 %struct_field.unpack23.i1257, 0
  br i1 %"cap > 0.not.i.i1258", label %"#Attr_#dec_17.exit.i1296", label %modification_list_block.i52.i1261

modification_list_block.i52.i1261:                ; preds = %else_block172
  %cast_basic_basic.i.i1259 = bitcast i8* %struct_field.unpack.i1253 to %str.RocStr*
  %bounds_check.not.i.i1260 = icmp eq i64 %struct_field.unpack21.i1255, 0
  br i1 %bounds_check.not.i.i1260, label %after_loop.i.i1282, label %loop.preheader.i.i1263

loop.preheader.i.i1263:                           ; preds = %modification_list_block.i52.i1261
  %load_str_to_stack.i.elt9.i.i1262 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1251, i64 0, i32 2
  br label %loop.i.i1269

loop.i.i1269:                                     ; preds = %"#Attr_#dec_4.exit.i.i1277", %loop.preheader.i.i1263
  %next_index12.i.i1264 = phi i64 [ 0, %loop.preheader.i.i1263 ], [ %next_index.i.i1265, %"#Attr_#dec_4.exit.i.i1277" ]
  %next_index.i.i1265 = add nuw i64 %next_index12.i.i1264, 1
  %load_index.i.i1266 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1259, i64 %next_index12.i.i1264
  %258 = bitcast %str.RocStr* %load_index.i.i1266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %257, i8* noundef nonnull align 8 dereferenceable(24) %258, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i1267 = load i64, i64* %load_str_to_stack.i.elt9.i.i1262, align 8
  %is_big_str.i.i.i1268 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i1267, 0
  br i1 %is_big_str.i.i.i1268, label %modify_rc.i.i.i1273, label %"#Attr_#dec_4.exit.i.i1277"

modify_rc.i.i.i1273:                              ; preds = %loop.i.i1269
  %call_builtin.i.i.i1270 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1251) #11
  %get_rc_ptr.i.i53.i1271 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1270, i64 -8
  %259 = bitcast i8* %get_rc_ptr.i.i53.i1271 to i64*
  %260 = load i64, i64* %259, align 8
  %.not.i.i.i.i.i54.i1272 = icmp eq i64 %260, 0
  br i1 %.not.i.i.i.i.i54.i1272, label %"#Attr_#dec_4.exit.i.i1277", label %Then.i.i.i.i.i55.i1274

Then.i.i.i.i.i55.i1274:                           ; preds = %modify_rc.i.i.i1273
  %261 = add i64 %260, -1
  store i64 %261, i64* %259, align 8
  %262 = icmp eq i64 %260, -9223372036854775808
  br i1 %262, label %Then1.i.i.i.i.i56.i1275, label %"#Attr_#dec_4.exit.i.i1277"

Then1.i.i.i.i.i56.i1275:                          ; preds = %Then.i.i.i.i.i55.i1274
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i1271, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i1277"

"#Attr_#dec_4.exit.i.i1277":                      ; preds = %Then1.i.i.i.i.i56.i1275, %Then.i.i.i.i.i55.i1274, %modify_rc.i.i.i1273, %loop.i.i1269
  %exitcond.not.i1276 = icmp eq i64 %next_index.i.i1265, %struct_field.unpack21.i1255
  br i1 %exitcond.not.i1276, label %after_loop.i.i1282, label %loop.i.i1269

after_loop.i.i1282:                               ; preds = %"#Attr_#dec_4.exit.i.i1277", %modification_list_block.i52.i1261
  %263 = ptrtoint i8* %struct_field.unpack.i1253 to i64
  %264 = shl i64 %struct_field.unpack23.i1257, 1
  %.not.i.i.i57.i1278 = icmp slt i64 %struct_field.unpack23.i1257, 0
  %265 = select i1 %.not.i.i.i57.i1278, i64 %264, i64 %263
  %as_usize_ptr.i58.i1279 = inttoptr i64 %265 to i64*
  %get_rc_ptr.i59.i1280 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i1279, i64 -1
  %266 = load i64, i64* %get_rc_ptr.i59.i1280, align 8
  %.not.i.i.i.i60.i1281 = icmp eq i64 %266, 0
  br i1 %.not.i.i.i.i60.i1281, label %"#Attr_#dec_17.exit.i1296", label %Then.i.i.i.i61.i1283

Then.i.i.i.i61.i1283:                             ; preds = %after_loop.i.i1282
  %267 = add i64 %266, -1
  store i64 %267, i64* %get_rc_ptr.i59.i1280, align 8
  %268 = icmp eq i64 %266, -9223372036854775808
  br i1 %268, label %Then1.i.i.i.i62.i1284, label %"#Attr_#dec_17.exit.i1296"

Then1.i.i.i.i62.i1284:                            ; preds = %Then.i.i.i.i61.i1283
  %269 = bitcast i64* %get_rc_ptr.i59.i1280 to i8*
  tail call void @roc_dealloc(i8* %269, i32 8) #11
  br label %"#Attr_#dec_17.exit.i1296"

"#Attr_#dec_17.exit.i1296":                       ; preds = %Then1.i.i.i.i62.i1284, %Then.i.i.i.i61.i1283, %after_loop.i.i1282, %else_block172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #11
  %struct_field1.sroa.264.0.copyload.i1286 = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i1171, align 8
  %struct_field1.sroa.3.0.copyload.i1288 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i1173, align 8
  %struct_field1.sroa.468.0.copyload.i1290 = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i1175, align 8
  %struct_field1.sroa.5.0.copyload.i1292 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i1177, align 8
  %struct_field1.sroa.672.0.copyload.i1294 = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i1179, align 8
  %"cap > 0.i.i.not.i1295" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i1286, 0
  br i1 %"cap > 0.i.i.not.i1295", label %"#Attr_#dec_18.exit.i1307", label %modification_list_block.i.i.i1303

modification_list_block.i.i.i1303:                ; preds = %"#Attr_#dec_17.exit.i1296"
  %struct_field1.sroa.0.0..sroa_idx.i1297 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1298 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1297, align 8
  %270 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1298 to i64
  %271 = shl i64 %struct_field1.sroa.264.0.copyload.i1286, 1
  %.not.i.i.i.i.i1299 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i1286, 0
  %272 = select i1 %.not.i.i.i.i.i1299, i64 %271, i64 %270
  %as_usize_ptr.i.i.i1300 = inttoptr i64 %272 to i64*
  %get_rc_ptr.i.i.i1301 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1300, i64 -1
  %273 = load i64, i64* %get_rc_ptr.i.i.i1301, align 8
  %.not.i.i.i.i.i.i1302 = icmp eq i64 %273, 0
  br i1 %.not.i.i.i.i.i.i1302, label %"#Attr_#dec_18.exit.i1307", label %Then.i.i.i.i.i.i1304

Then.i.i.i.i.i.i1304:                             ; preds = %modification_list_block.i.i.i1303
  %274 = add i64 %273, -1
  store i64 %274, i64* %get_rc_ptr.i.i.i1301, align 8
  %275 = icmp eq i64 %273, -9223372036854775808
  br i1 %275, label %Then1.i.i.i.i.i.i1305, label %"#Attr_#dec_18.exit.i1307"

Then1.i.i.i.i.i.i1305:                            ; preds = %Then.i.i.i.i.i.i1304
  %276 = bitcast i64* %get_rc_ptr.i.i.i1301 to i8*
  tail call void @roc_dealloc(i8* %276, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1307"

"#Attr_#dec_18.exit.i1307":                       ; preds = %Then1.i.i.i.i.i.i1305, %Then.i.i.i.i.i.i1304, %modification_list_block.i.i.i1303, %"#Attr_#dec_17.exit.i1296"
  %"cap > 0.i5.not.i1306" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i1290, 0
  br i1 %"cap > 0.i5.not.i1306", label %"#Attr_#dec_10.exit.i1316", label %modification_list_block.i14.i1312

modification_list_block.i14.i1312:                ; preds = %"#Attr_#dec_18.exit.i1307"
  %277 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1288 to i64
  %278 = shl i64 %struct_field1.sroa.468.0.copyload.i1290, 1
  %.not.i.i.i10.i1308 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i1290, 0
  %279 = select i1 %.not.i.i.i10.i1308, i64 %278, i64 %277
  %as_usize_ptr.i11.i1309 = inttoptr i64 %279 to i64*
  %get_rc_ptr.i12.i1310 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1309, i64 -1
  %280 = load i64, i64* %get_rc_ptr.i12.i1310, align 8
  %.not.i.i.i.i13.i1311 = icmp eq i64 %280, 0
  br i1 %.not.i.i.i.i13.i1311, label %"#Attr_#dec_10.exit.i1316", label %Then.i.i.i.i15.i1313

Then.i.i.i.i15.i1313:                             ; preds = %modification_list_block.i14.i1312
  %281 = add i64 %280, -1
  store i64 %281, i64* %get_rc_ptr.i12.i1310, align 8
  %282 = icmp eq i64 %280, -9223372036854775808
  br i1 %282, label %Then1.i.i.i.i16.i1314, label %"#Attr_#dec_10.exit.i1316"

Then1.i.i.i.i16.i1314:                            ; preds = %Then.i.i.i.i15.i1313
  %283 = bitcast i64* %get_rc_ptr.i12.i1310 to i8*
  tail call void @roc_dealloc(i8* %283, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1316"

"#Attr_#dec_10.exit.i1316":                       ; preds = %Then1.i.i.i.i16.i1314, %Then.i.i.i.i15.i1313, %modification_list_block.i14.i1312, %"#Attr_#dec_18.exit.i1307"
  %"cap > 0.i.not.i1315" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i1294, 0
  br i1 %"cap > 0.i.not.i1315", label %"#Attr_#dec_40.exit", label %modification_list_block.i.i1321

modification_list_block.i.i1321:                  ; preds = %"#Attr_#dec_10.exit.i1316"
  %284 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1292 to i64
  %285 = shl i64 %struct_field1.sroa.672.0.copyload.i1294, 1
  %.not.i.i.i.i1317 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i1294, 0
  %286 = select i1 %.not.i.i.i.i1317, i64 %285, i64 %284
  %as_usize_ptr.i.i1318 = inttoptr i64 %286 to i64*
  %get_rc_ptr.i.i1319 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1318, i64 -1
  %287 = load i64, i64* %get_rc_ptr.i.i1319, align 8
  %.not.i.i.i.i2.i1320 = icmp eq i64 %287, 0
  br i1 %.not.i.i.i.i2.i1320, label %"#Attr_#dec_40.exit", label %Then.i.i.i.i.i1322

Then.i.i.i.i.i1322:                               ; preds = %modification_list_block.i.i1321
  %288 = add i64 %287, -1
  store i64 %288, i64* %get_rc_ptr.i.i1319, align 8
  %289 = icmp eq i64 %287, -9223372036854775808
  br i1 %289, label %Then1.i.i.i.i.i1323, label %"#Attr_#dec_40.exit"

Then1.i.i.i.i.i1323:                              ; preds = %Then.i.i.i.i.i1322
  %290 = bitcast i64* %get_rc_ptr.i.i1319 to i8*
  tail call void @roc_dealloc(i8* %290, i32 8) #11
  br label %"#Attr_#dec_40.exit"

"#Attr_#dec_40.exit":                             ; preds = %Then1.i.i.i.i.i1323, %Then.i.i.i.i.i1322, %modification_list_block.i.i1321, %"#Attr_#dec_10.exit.i1316"
  %.not.i.i1325 = icmp eq i8* %load_at_index_ptr_old135.unpack, null
  br i1 %.not.i.i1325, label %roc_builtins.list.map.exit.i, label %OptionalThen.i.i

OptionalThen.i.i:                                 ; preds = %"#Attr_#dec_40.exit"
  %291 = icmp ne i64 %load_at_index_ptr_old135.unpack327, 0
  tail call void @llvm.assume(i1 %291) #11
  %292 = icmp ugt i64 %load_at_index_ptr_old135.unpack327, 2
  %..i.i.i.i.i = select i1 %292, i64 %load_at_index_ptr_old135.unpack327, i64 2
  %293 = mul nuw i64 %..i.i.i.i.i, 24
  %294 = add nuw i64 %293, 8
  %295 = tail call i8* @roc_alloc(i64 %294, i32 8) #11, !noalias !601
  %296 = icmp ne i8* %295, null
  tail call void @llvm.assume(i1 %296) #11
  %297 = getelementptr inbounds i8, i8* %295, i64 8
  %298 = bitcast i8* %295 to i64*
  store i64 -9223372036854775808, i64* %298, align 8, !noalias !601
  br label %WhileBody.i.i

WhileBody.i.i:                                    ; preds = %WhileBody.i.i, %OptionalThen.i.i
  %i.010.i.i = phi i64 [ %306, %WhileBody.i.i ], [ 0, %OptionalThen.i.i ]
  %299 = shl nuw i64 %i.010.i.i, 5
  %300 = getelementptr inbounds i8, i8* %load_at_index_ptr_old135.unpack, i64 %299
  %301 = mul nuw i64 %i.010.i.i, 24
  %302 = getelementptr inbounds i8, i8* %297, i64 %301
  %zig_helper_load_opaque.i.unpack.elt.i = bitcast i8* %300 to i8**
  %zig_helper_load_opaque.i.unpack.unpack.i = load i8*, i8** %zig_helper_load_opaque.i.unpack.elt.i, align 8, !noalias !606
  %zig_helper_load_opaque.i.unpack.elt8.i = getelementptr inbounds i8, i8* %300, i64 8
  %303 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt8.i to i64*
  %zig_helper_load_opaque.i.unpack.unpack9.i = load i64, i64* %303, align 8, !noalias !606
  %zig_helper_load_opaque.i.unpack.elt10.i = getelementptr inbounds i8, i8* %300, i64 16
  %304 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt10.i to i64*
  %zig_helper_load_opaque.i.unpack.unpack11.i = load i64, i64* %304, align 8, !noalias !606
  %zig_helper_load_opaque.i.elt5.i = getelementptr inbounds i8, i8* %300, i64 24
  %305 = bitcast i8* %zig_helper_load_opaque.i.elt5.i to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %305, align 8, !noalias !606
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.unpack6.i) #11, !noalias !606
  %result_value.i.sroa.0.0..sroa_cast.i = bitcast i8* %302 to i8**
  store i8* %zig_helper_load_opaque.i.unpack.unpack.i, i8** %result_value.i.sroa.0.0..sroa_cast.i, align 8, !noalias !606
  %result_value.i.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, i8* %302, i64 8
  %result_value.i.sroa.4.0..sroa_cast.i = bitcast i8* %result_value.i.sroa.4.0..sroa_idx.i to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack9.i, i64* %result_value.i.sroa.4.0..sroa_cast.i, align 8, !noalias !606
  %result_value.i.sroa.5.0..sroa_idx.i = getelementptr inbounds i8, i8* %302, i64 16
  %result_value.i.sroa.5.0..sroa_cast.i = bitcast i8* %result_value.i.sroa.5.0..sroa_idx.i to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack11.i, i64* %result_value.i.sroa.5.0..sroa_cast.i, align 8, !noalias !606
  %306 = add nuw i64 %i.010.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %306, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not.i.i, label %roc_builtins.list.map.exit.i.loopexit, label %WhileBody.i.i

roc_builtins.list.map.exit.i.loopexit:            ; preds = %WhileBody.i.i
  %phi.cast = ptrtoint i8* %297 to i64
  br label %roc_builtins.list.map.exit.i

roc_builtins.list.map.exit.i:                     ; preds = %roc_builtins.list.map.exit.i.loopexit, %"#Attr_#dec_40.exit"
  %list_alloca.sroa.0.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %phi.cast, %roc_builtins.list.map.exit.i.loopexit ]
  %list_alloca.sroa.3.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %load_at_index_ptr_old135.unpack327, %roc_builtins.list.map.exit.i.loopexit ]
  %list_alloca.sroa.5.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %..i.i.i.i.i, %roc_builtins.list.map.exit.i.loopexit ]
  %307 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %308 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1326 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %309 = select i1 %.not.i.i.i1326, i64 %308, i64 %307
  %.not.i19.i = icmp eq i64 %309, 0
  br i1 %.not.i19.i, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, label %OptionalThen.i21.i

OptionalThen.i21.i:                               ; preds = %roc_builtins.list.map.exit.i
  %310 = inttoptr i64 %309 to i8*
  %311 = getelementptr inbounds i8, i8* %310, i64 -8
  %312 = bitcast i8* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %.not.i.i20.i = icmp eq i64 %313, 0
  br i1 %.not.i.i20.i, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, label %Then.i.i.i1327

Then.i.i.i1327:                                   ; preds = %OptionalThen.i21.i
  %314 = add i64 %313, -1
  store i64 %314, i64* %312, align 8
  %315 = icmp eq i64 %313, -9223372036854775808
  br i1 %315, label %Then1.i.i.i1328, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit

Then1.i.i.i1328:                                  ; preds = %Then.i.i.i1327
  tail call void @roc_dealloc(i8* %311, i32 8) #11
  br label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit

List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit: ; preds = %roc_builtins.list.map.exit.i, %OptionalThen.i21.i, %Then.i.i.i1327, %Then1.i.i.i1328
  %struct_alloca228 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack367.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 0
  store i64 %list_alloca.sroa.0.0.i, i64* %.repack367.repack, align 8
  %.repack367.repack373 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 1
  store i64 %list_alloca.sroa.3.0.i, i64* %.repack367.repack373, align 8
  %.repack367.repack375 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 2
  store i64 %list_alloca.sroa.5.0.i, i64* %.repack367.repack375, align 8
  %.repack369 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 2
  store i8 4, i8* %.repack369, align 8
  %tag_alloca229 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer230 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229, i64 0, i32 1
  %316 = bitcast [7 x i64]* %data_buffer230 to i8*
  %317 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %316, i8* noundef nonnull align 8 dereferenceable(56) %317, i64 56, i1 false)
  %tag_id_ptr232 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr232, align 8
  %318 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229 to i8*
  br label %common.ret

then_block196:                                    ; preds = %"#Attr_#inc_4.exit685"
  br i1 %is_big_str.i678, label %modify_rc.i693, label %"#Attr_#dec_4.exit"

modify_rc.i693:                                   ; preds = %then_block196
  %call_builtin.i690 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i692 = getelementptr inbounds i8, i8* %call_builtin.i690, i64 -8
  %319 = bitcast i8* %get_rc_ptr.i692 to i64*
  %320 = load i64, i64* %319, align 8
  %.not.i.i.i.i = icmp eq i64 %320, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i693
  %321 = add i64 %320, -1
  store i64 %321, i64* %319, align 8
  %322 = icmp eq i64 %320, -9223372036854775808
  br i1 %322, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i692, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i693, %Then.i.i.i.i, %Then1.i.i.i.i, %then_block196
  br i1 %"cap > 0.not.i1209", label %"#Attr_#dec_19.exit", label %modification_list_block.i1333

modification_list_block.i1333:                    ; preds = %"#Attr_#dec_4.exit"
  %cast_basic_basic.i1331 = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i1332 = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i1332, label %after_loop.i1356, label %loop.preheader.i1336

loop.preheader.i1336:                             ; preds = %modification_list_block.i1333
  %323 = bitcast %str.RocStr* %struct_field.i.i1329 to i8*
  %struct_field.i.repack.i1334 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 0
  %struct_field.i.repack15.i1335 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 1
  %struct_field.i.repack17.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 2
  br label %loop.i1344

loop.i1344:                                       ; preds = %"#Attr_#dec_14.exit.i", %loop.preheader.i1336
  %index.i1337 = phi i64 [ 0, %loop.preheader.i1336 ], [ %next_index.i1338, %"#Attr_#dec_14.exit.i" ]
  %next_index.i1338 = add nuw i64 %index.i1337, 1
  %incrementing_element_loop_load.unpack.elt.i1339 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i1340 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i1339, align 8
  %incrementing_element_loop_load.unpack.elt10.i1341 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11.i1342 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i1341, align 8
  %incrementing_element_loop_load.unpack.elt12.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13.i = load i64, i64* %incrementing_element_loop_load.unpack.elt12.i, align 8
  %incrementing_element_loop_load.elt7.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 1
  %incrementing_element_loop_load.unpack8.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt7.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i1340, i8** %struct_field.i.repack.i1334, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i1342, i64* %struct_field.i.repack15.i1335, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13.i, i64* %struct_field.i.repack17.i, align 8
  %is_big_str.i.i.i1343 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13.i, 0
  br i1 %is_big_str.i.i.i1343, label %modify_rc.i.i.i1348, label %"#Attr_#dec_14.exit.i"

modify_rc.i.i.i1348:                              ; preds = %loop.i1344
  %call_builtin.i.i.i1345 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1329) #11
  %get_rc_ptr.i.i.i1346 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1345, i64 -8
  %324 = bitcast i8* %get_rc_ptr.i.i.i1346 to i64*
  %325 = load i64, i64* %324, align 8
  %.not.i.i.i.i.i.i1347 = icmp eq i64 %325, 0
  br i1 %.not.i.i.i.i.i.i1347, label %"#Attr_#dec_14.exit.i", label %Then.i.i.i.i.i.i1349

Then.i.i.i.i.i.i1349:                             ; preds = %modify_rc.i.i.i1348
  %326 = add i64 %325, -1
  store i64 %326, i64* %324, align 8
  %327 = icmp eq i64 %325, -9223372036854775808
  br i1 %327, label %Then1.i.i.i.i.i.i1350, label %"#Attr_#dec_14.exit.i"

Then1.i.i.i.i.i.i1350:                            ; preds = %Then.i.i.i.i.i.i1349
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i1346, i32 8) #11
  br label %"#Attr_#dec_14.exit.i"

"#Attr_#dec_14.exit.i":                           ; preds = %Then1.i.i.i.i.i.i1350, %Then.i.i.i.i.i.i1349, %modify_rc.i.i.i1348, %loop.i1344
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack8.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #11
  %exitcond.not = icmp eq i64 %next_index.i1338, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not, label %after_loop.i1356, label %loop.i1344

after_loop.i1356:                                 ; preds = %"#Attr_#dec_14.exit.i", %modification_list_block.i1333
  %328 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %329 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1352 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %330 = select i1 %.not.i.i.i1352, i64 %329, i64 %328
  %as_usize_ptr.i1353 = inttoptr i64 %330 to i64*
  %get_rc_ptr.i1354 = getelementptr inbounds i64, i64* %as_usize_ptr.i1353, i64 -1
  %331 = load i64, i64* %get_rc_ptr.i1354, align 8
  %.not.i.i.i.i1355 = icmp eq i64 %331, 0
  br i1 %.not.i.i.i.i1355, label %"#Attr_#dec_19.exit", label %Then.i.i.i.i1357

Then.i.i.i.i1357:                                 ; preds = %after_loop.i1356
  %332 = add i64 %331, -1
  store i64 %332, i64* %get_rc_ptr.i1354, align 8
  %333 = icmp eq i64 %331, -9223372036854775808
  br i1 %333, label %Then1.i.i.i.i1358, label %"#Attr_#dec_19.exit"

Then1.i.i.i.i1358:                                ; preds = %Then.i.i.i.i1357
  %334 = bitcast i64* %get_rc_ptr.i1354 to i8*
  tail call void @roc_dealloc(i8* %334, i32 8) #11
  br label %"#Attr_#dec_19.exit"

"#Attr_#dec_19.exit":                             ; preds = %"#Attr_#dec_4.exit", %after_loop.i1356, %Then.i.i.i.i1357, %Then1.i.i.i.i1358
  %get_opaque_data_ptr198 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191, i64 0, i32 1
  %335 = bitcast [8 x i64]* %get_opaque_data_ptr198 to i8*
  br label %common.ret

else_block197:                                    ; preds = %"#Attr_#inc_4.exit685"
  call fastcc void @"#Attr_#dec_35"({ [0 x i64], [8 x i64], i8, [7 x i8] }* nonnull %result_value191)
  %.not.i.i1359 = icmp eq i8* %load_at_index_ptr_old135.unpack, null
  br i1 %.not.i.i1359, label %roc_builtins.list.map.exit.i1383, label %OptionalThen.i.i1361

OptionalThen.i.i1361:                             ; preds = %else_block197
  %336 = icmp ne i64 %load_at_index_ptr_old135.unpack327, 0
  tail call void @llvm.assume(i1 %336) #11
  %337 = icmp ugt i64 %load_at_index_ptr_old135.unpack327, 2
  %..i.i.i.i.i1360 = select i1 %337, i64 %load_at_index_ptr_old135.unpack327, i64 2
  %338 = mul nuw i64 %..i.i.i.i.i1360, 24
  %339 = add nuw i64 %338, 8
  %340 = tail call i8* @roc_alloc(i64 %339, i32 8) #11, !noalias !607
  %341 = icmp ne i8* %340, null
  tail call void @llvm.assume(i1 %341) #11
  %342 = getelementptr inbounds i8, i8* %340, i64 8
  %343 = bitcast i8* %340 to i64*
  store i64 -9223372036854775808, i64* %343, align 8, !noalias !607
  br label %WhileBody.i.i1377

WhileBody.i.i1377:                                ; preds = %WhileBody.i.i1377, %OptionalThen.i.i1361
  %i.010.i.i1362 = phi i64 [ %351, %WhileBody.i.i1377 ], [ 0, %OptionalThen.i.i1361 ]
  %344 = shl nuw i64 %i.010.i.i1362, 5
  %345 = getelementptr inbounds i8, i8* %load_at_index_ptr_old135.unpack, i64 %344
  %346 = mul nuw i64 %i.010.i.i1362, 24
  %347 = getelementptr inbounds i8, i8* %342, i64 %346
  %zig_helper_load_opaque.i.unpack.elt.i1363 = bitcast i8* %345 to i8**
  %zig_helper_load_opaque.i.unpack.unpack.i1364 = load i8*, i8** %zig_helper_load_opaque.i.unpack.elt.i1363, align 8, !noalias !612
  %zig_helper_load_opaque.i.unpack.elt8.i1365 = getelementptr inbounds i8, i8* %345, i64 8
  %348 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt8.i1365 to i64*
  %zig_helper_load_opaque.i.unpack.unpack9.i1366 = load i64, i64* %348, align 8, !noalias !612
  %zig_helper_load_opaque.i.unpack.elt10.i1367 = getelementptr inbounds i8, i8* %345, i64 16
  %349 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt10.i1367 to i64*
  %zig_helper_load_opaque.i.unpack.unpack11.i1368 = load i64, i64* %349, align 8, !noalias !612
  %zig_helper_load_opaque.i.elt5.i1369 = getelementptr inbounds i8, i8* %345, i64 24
  %350 = bitcast i8* %zig_helper_load_opaque.i.elt5.i1369 to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.unpack6.i1370 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %350, align 8, !noalias !612
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.unpack6.i1370) #11, !noalias !612
  %result_value.i.sroa.0.0..sroa_cast.i1371 = bitcast i8* %347 to i8**
  store i8* %zig_helper_load_opaque.i.unpack.unpack.i1364, i8** %result_value.i.sroa.0.0..sroa_cast.i1371, align 8, !noalias !612
  %result_value.i.sroa.4.0..sroa_idx.i1372 = getelementptr inbounds i8, i8* %347, i64 8
  %result_value.i.sroa.4.0..sroa_cast.i1373 = bitcast i8* %result_value.i.sroa.4.0..sroa_idx.i1372 to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack9.i1366, i64* %result_value.i.sroa.4.0..sroa_cast.i1373, align 8, !noalias !612
  %result_value.i.sroa.5.0..sroa_idx.i1374 = getelementptr inbounds i8, i8* %347, i64 16
  %result_value.i.sroa.5.0..sroa_cast.i1375 = bitcast i8* %result_value.i.sroa.5.0..sroa_idx.i1374 to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack11.i1368, i64* %result_value.i.sroa.5.0..sroa_cast.i1375, align 8, !noalias !612
  %351 = add nuw i64 %i.010.i.i1362, 1
  %exitcond.not.i.i1376 = icmp eq i64 %351, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not.i.i1376, label %roc_builtins.list.map.exit.i1383, label %WhileBody.i.i1377

roc_builtins.list.map.exit.i1383:                 ; preds = %WhileBody.i.i1377, %else_block197
  %list_alloca.sroa.0.0.i1378 = phi i8* [ null, %else_block197 ], [ %342, %WhileBody.i.i1377 ]
  %list_alloca.sroa.3.0.i1379 = phi i64 [ 0, %else_block197 ], [ %load_at_index_ptr_old135.unpack327, %WhileBody.i.i1377 ]
  %list_alloca.sroa.5.0.i1380 = phi i64 [ 0, %else_block197 ], [ %..i.i.i.i.i1360, %WhileBody.i.i1377 ]
  %352 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %353 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1381 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %354 = select i1 %.not.i.i.i1381, i64 %353, i64 %352
  %.not.i19.i1382 = icmp eq i64 %354, 0
  br i1 %.not.i19.i1382, label %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit, label %OptionalThen.i21.i1385

OptionalThen.i21.i1385:                           ; preds = %roc_builtins.list.map.exit.i1383
  %355 = inttoptr i64 %354 to i8*
  %356 = getelementptr inbounds i8, i8* %355, i64 -8
  %357 = bitcast i8* %356 to i64*
  %358 = load i64, i64* %357, align 8
  %.not.i.i20.i1384 = icmp eq i64 %358, 0
  br i1 %.not.i.i20.i1384, label %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit, label %Then.i.i.i1386

Then.i.i.i1386:                                   ; preds = %OptionalThen.i21.i1385
  %359 = add i64 %358, -1
  store i64 %359, i64* %357, align 8
  %360 = icmp eq i64 %358, -9223372036854775808
  br i1 %360, label %Then1.i.i.i1387, label %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit

Then1.i.i.i1387:                                  ; preds = %Then.i.i.i1386
  tail call void @roc_dealloc(i8* %356, i32 8) #11
  br label %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit

List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit: ; preds = %roc_builtins.list.map.exit.i1383, %OptionalThen.i21.i1385, %Then.i.i.i1386, %Then1.i.i.i1387
  %struct_alloca208 = alloca { { %list.RocList, %str.RocStr } }, align 8
  %.repack551.repack = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 0
  store i8* %list_alloca.sroa.0.0.i1378, i8** %.repack551.repack, align 8
  %.repack551.repack554 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 1
  store i64 %list_alloca.sroa.3.0.i1379, i64* %.repack551.repack554, align 8
  %.repack551.repack556 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 2
  store i64 %list_alloca.sroa.5.0.i1380, i64* %.repack551.repack556, align 8
  %.repack552.repack = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 0
  store i8* %load_element.unpack396.unpack, i8** %.repack552.repack, align 8
  %.repack552.repack558 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %.repack552.repack558, align 8
  %.repack552.repack560 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %.repack552.repack560, align 8
  %tag_alloca209 = alloca { [0 x i64], [6 x i64], i8, [7 x i8] }, align 8
  %data_buffer210 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1
  %361 = bitcast [6 x i64]* %data_buffer210 to i8*
  %362 = bitcast { { %list.RocList, %str.RocStr } }* %struct_alloca208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %361, i8* noundef nonnull align 8 dereferenceable(48) %362, i64 48, i1 false)
  %tag_id_ptr212 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr212, align 8
  %load_tag_to_put_in_struct213.unpack563.elt = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct213.unpack563.unpack = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt, align 8
  %load_tag_to_put_in_struct213.unpack563.elt569 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct213.unpack563.unpack570 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt569, align 8
  %load_tag_to_put_in_struct213.unpack563.elt571 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct213.unpack563.unpack572 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt571, align 8
  %load_tag_to_put_in_struct213.unpack563.elt573 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct213.unpack563.unpack574 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt573, align 8
  %load_tag_to_put_in_struct213.unpack563.elt575 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct213.unpack563.unpack576 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt575, align 8
  %load_tag_to_put_in_struct213.unpack563.elt577 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct213.unpack563.unpack578 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt577, align 8
  %struct_alloca215 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack594.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack, i64* %.repack594.repack, align 8
  %.repack594.repack600 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack570, i64* %.repack594.repack600, align 8
  %.repack594.repack602 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack572, i64* %.repack594.repack602, align 8
  %.repack594.repack604 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack574, i64* %.repack594.repack604, align 8
  %.repack594.repack606 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack576, i64* %.repack594.repack606, align 8
  %.repack594.repack608 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack578, i64* %.repack594.repack608, align 8
  %.repack596 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 2
  store i8 0, i8* %.repack596, align 8
  %tag_alloca216 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer217 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216, i64 0, i32 1
  %363 = bitcast [7 x i64]* %data_buffer217 to i8*
  %364 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %363, i8* noundef nonnull align 8 dereferenceable(56) %364, i64 56, i1 false)
  %tag_id_ptr219 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr219, align 8
  %365 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216 to i8*
  br label %common.ret

then_block253:                                    ; preds = %"#Attr_#dec_16.exit1095"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %121)
  br label %joinpointcont242

Then.i.i.i695:                                    ; preds = %"#Attr_#dec_16.exit1095"
  %366 = add nsw i64 %get_refcount250, -1
  store i64 %366, i64* %121, align 8
  br label %joinpointcont242

joinpointcont242:                                 ; preds = %"#Attr_#dec_16.exit1095", %Then.i.i.i695, %then_block253
  %const_str_store274.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store274.repack, align 8
  %const_str_store274.repack324 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 1
  store i64 73, i64* %const_str_store274.repack324, align 8
  %const_str_store274.repack325 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 2
  store i64 73, i64* %const_str_store274.repack325, align 8
  call void @roc_panic(%str.RocStr* %const_str_store274, i32 0)
  unreachable

then_block294:                                    ; preds = %default
  %at_index_struct_gep_data303.idx = sub nuw nsw i64 8, %masked276
  %at_index_struct_gep_data303 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %at_index_struct_gep_data303.idx
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %load_at_index_ptr_old304.sroa.0.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %at_index_struct_gep_data303, i64 80, i1 false)
  %load_at_index_ptr_old304.sroa.6.0.at_index_struct_gep_data303.sroa_raw_idx = getelementptr inbounds i8, i8* %at_index_struct_gep_data303, i64 80
  %load_at_index_ptr_old304.sroa.6.0.copyload = load i8, i8* %load_at_index_ptr_old304.sroa.6.0.at_index_struct_gep_data303.sroa_raw_idx, align 8
  switch i8 %load_at_index_ptr_old304.sroa.6.0.copyload, label %"#Attr_#dec_8.exit" [
    i8 0, label %tag_id_modify.i704
    i8 1, label %tag_id_modify1.i
  ]

tag_id_modify.i704:                               ; preds = %then_block294
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data303, i64 24, i1 false)
  %load_str_to_stack.i.i768.unpack924 = load i64, i64* %load_str_to_stack.i.i768.elt923, align 8
  %is_big_str.i.i770 = icmp sgt i64 %load_str_to_stack.i.i768.unpack924, 0
  br i1 %is_big_str.i.i770, label %modify_rc.i.i775, label %"#Attr_#dec_3.exit781"

modify_rc.i.i775:                                 ; preds = %tag_id_modify.i704
  %call_builtin.i.i771 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i766) #11
  %get_rc_ptr.i.i773 = getelementptr inbounds i8, i8* %call_builtin.i.i771, i64 -8
  %367 = bitcast i8* %get_rc_ptr.i.i773 to i64*
  %368 = load i64, i64* %367, align 8
  %.not.i.i.i.i.i774 = icmp eq i64 %368, 0
  br i1 %.not.i.i.i.i.i774, label %"#Attr_#dec_3.exit781", label %Then.i.i.i.i.i776

Then.i.i.i.i.i776:                                ; preds = %modify_rc.i.i775
  %369 = add i64 %368, -1
  store i64 %369, i64* %367, align 8
  %370 = icmp eq i64 %368, -9223372036854775808
  br i1 %370, label %Then1.i.i.i.i.i777, label %"#Attr_#dec_3.exit781"

Then1.i.i.i.i.i777:                               ; preds = %Then.i.i.i.i.i776
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i773, i32 8) #11
  br label %"#Attr_#dec_3.exit781"

"#Attr_#dec_3.exit781":                           ; preds = %modify_rc.i.i775, %Then.i.i.i.i.i776, %Then1.i.i.i.i.i777, %tag_id_modify.i704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i794.unpack929 = load i64, i64* %load_str_to_stack.i794.elt928, align 8
  %is_big_str.i796 = icmp sgt i64 %load_str_to_stack.i794.unpack929, 0
  br i1 %is_big_str.i796, label %modify_rc.i801, label %"#Attr_#dec_4.exit805"

modify_rc.i801:                                   ; preds = %"#Attr_#dec_3.exit781"
  %call_builtin.i797 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i765) #11
  %get_rc_ptr.i799 = getelementptr inbounds i8, i8* %call_builtin.i797, i64 -8
  %371 = bitcast i8* %get_rc_ptr.i799 to i64*
  %372 = load i64, i64* %371, align 8
  %.not.i.i.i.i800 = icmp eq i64 %372, 0
  br i1 %.not.i.i.i.i800, label %"#Attr_#dec_4.exit805", label %Then.i.i.i.i802

Then.i.i.i.i802:                                  ; preds = %modify_rc.i801
  %373 = add i64 %372, -1
  store i64 %373, i64* %371, align 8
  %374 = icmp eq i64 %372, -9223372036854775808
  br i1 %374, label %Then1.i.i.i.i803, label %"#Attr_#dec_4.exit805"

Then1.i.i.i.i803:                                 ; preds = %Then.i.i.i.i802
  tail call void @roc_dealloc(i8* %get_rc_ptr.i799, i32 8) #11
  br label %"#Attr_#dec_4.exit805"

"#Attr_#dec_4.exit805":                           ; preds = %modify_rc.i801, %Then.i.i.i.i802, %Then1.i.i.i.i803, %"#Attr_#dec_3.exit781"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.48.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i806.unpack934 = load i64, i64* %load_str_to_stack.i806.elt933, align 8
  %is_big_str.i808 = icmp sgt i64 %load_str_to_stack.i806.unpack934, 0
  br i1 %is_big_str.i808, label %modify_rc.i813, label %"#Attr_#dec_4.exit817"

modify_rc.i813:                                   ; preds = %"#Attr_#dec_4.exit805"
  %call_builtin.i809 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i764) #11
  %get_rc_ptr.i811 = getelementptr inbounds i8, i8* %call_builtin.i809, i64 -8
  %375 = bitcast i8* %get_rc_ptr.i811 to i64*
  %376 = load i64, i64* %375, align 8
  %.not.i.i.i.i812 = icmp eq i64 %376, 0
  br i1 %.not.i.i.i.i812, label %"#Attr_#dec_4.exit817", label %Then.i.i.i.i814

Then.i.i.i.i814:                                  ; preds = %modify_rc.i813
  %377 = add i64 %376, -1
  store i64 %377, i64* %375, align 8
  %378 = icmp eq i64 %376, -9223372036854775808
  br i1 %378, label %Then1.i.i.i.i815, label %"#Attr_#dec_4.exit817"

Then1.i.i.i.i815:                                 ; preds = %Then.i.i.i.i814
  tail call void @roc_dealloc(i8* %get_rc_ptr.i811, i32 8) #11
  br label %"#Attr_#dec_4.exit817"

"#Attr_#dec_4.exit817":                           ; preds = %modify_rc.i813, %Then.i.i.i.i814, %Then1.i.i.i.i815, %"#Attr_#dec_4.exit805"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  br label %"#Attr_#dec_8.exit"

tag_id_modify1.i:                                 ; preds = %then_block294
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %2, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data303, i64 24, i1 false)
  %load_str_to_stack.i.i.i705.unpack914 = load i64, i64* %load_str_to_stack.i.i.i705.elt913, align 8
  %is_big_str.i.i.i707 = icmp sgt i64 %load_str_to_stack.i.i.i705.unpack914, 0
  br i1 %is_big_str.i.i.i707, label %modify_rc.i.i.i712, label %"#Attr_#dec_5.exit.i"

modify_rc.i.i.i712:                               ; preds = %tag_id_modify1.i
  %call_builtin.i.i.i708 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i698) #11
  %get_rc_ptr.i.i.i710 = getelementptr inbounds i8, i8* %call_builtin.i.i.i708, i64 -8
  %379 = bitcast i8* %get_rc_ptr.i.i.i710 to i64*
  %380 = load i64, i64* %379, align 8
  %.not.i.i.i.i.i.i711 = icmp eq i64 %380, 0
  br i1 %.not.i.i.i.i.i.i711, label %"#Attr_#dec_5.exit.i", label %Then.i.i.i.i.i.i713

Then.i.i.i.i.i.i713:                              ; preds = %modify_rc.i.i.i712
  %381 = add i64 %380, -1
  store i64 %381, i64* %379, align 8
  %382 = icmp eq i64 %380, -9223372036854775808
  br i1 %382, label %Then1.i.i.i.i.i.i714, label %"#Attr_#dec_5.exit.i"

Then1.i.i.i.i.i.i714:                             ; preds = %Then.i.i.i.i.i.i713
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i710, i32 8) #11
  br label %"#Attr_#dec_5.exit.i"

"#Attr_#dec_5.exit.i":                            ; preds = %modify_rc.i.i.i712, %Then.i.i.i.i.i.i713, %Then1.i.i.i.i.i.i714, %tag_id_modify1.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i782.unpack919 = load i64, i64* %load_str_to_stack.i782.elt918, align 8
  %is_big_str.i784 = icmp sgt i64 %load_str_to_stack.i782.unpack919, 0
  br i1 %is_big_str.i784, label %modify_rc.i789, label %"#Attr_#dec_4.exit793"

modify_rc.i789:                                   ; preds = %"#Attr_#dec_5.exit.i"
  %call_builtin.i785 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i787 = getelementptr inbounds i8, i8* %call_builtin.i785, i64 -8
  %383 = bitcast i8* %get_rc_ptr.i787 to i64*
  %384 = load i64, i64* %383, align 8
  %.not.i.i.i.i788 = icmp eq i64 %384, 0
  br i1 %.not.i.i.i.i788, label %"#Attr_#dec_4.exit793", label %Then.i.i.i.i790

Then.i.i.i.i790:                                  ; preds = %modify_rc.i789
  %385 = add i64 %384, -1
  store i64 %385, i64* %383, align 8
  %386 = icmp eq i64 %384, -9223372036854775808
  br i1 %386, label %Then1.i.i.i.i791, label %"#Attr_#dec_4.exit793"

Then1.i.i.i.i791:                                 ; preds = %Then.i.i.i.i790
  tail call void @roc_dealloc(i8* %get_rc_ptr.i787, i32 8) #11
  br label %"#Attr_#dec_4.exit793"

"#Attr_#dec_4.exit793":                           ; preds = %modify_rc.i789, %Then.i.i.i.i790, %Then1.i.i.i.i791, %"#Attr_#dec_5.exit.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #11
  br label %"#Attr_#dec_8.exit"

"#Attr_#dec_8.exit":                              ; preds = %then_block294, %"#Attr_#dec_4.exit817", %"#Attr_#dec_4.exit793"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %8)
  br label %joinpointcont.backedge

done320:                                          ; preds = %default
  %to_int1.i = ptrtoint { [0 x i64], [12 x i64] }* %load_at_index_ptr_old283634 to i64
  %masked.i = and i64 %to_int1.i, 7
  %cast_to_i8_ptr.i = bitcast { [0 x i64], [12 x i64] }* %load_at_index_ptr_old283634 to i8*
  %get_rc_ptr.i718.idx = sub nuw nsw i64 -8, %masked.i
  %get_rc_ptr.i718 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i, i64 %get_rc_ptr.i718.idx
  %387 = bitcast i8* %get_rc_ptr.i718 to i64*
  %388 = load i64, i64* %387, align 8
  %.not.i.i719 = icmp eq i64 %388, 0
  br i1 %.not.i.i719, label %"#Attr_#inc_2.exit", label %Then.i.i720

Then.i.i720:                                      ; preds = %done320
  %389 = add nsw i64 %388, 1
  store i64 %389, i64* %387, align 8
  %.pre1444 = load i64, i64* %8, align 8
  br label %"#Attr_#inc_2.exit"

"#Attr_#inc_2.exit":                              ; preds = %done320, %Then.i.i720
  %390 = phi i64 [ %get_refcount291, %done320 ], [ %.pre1444, %Then.i.i720 ]
  %.not.i.i.i721 = icmp eq i64 %390, 0
  br i1 %.not.i.i.i721, label %joinpointcont.backedge, label %Then.i.i.i722

Then.i.i.i722:                                    ; preds = %"#Attr_#inc_2.exit"
  %391 = add i64 %390, -1
  store i64 %391, i64* %8, align 8
  %392 = icmp eq i64 %390, -9223372036854775808
  br i1 %392, label %Then1.i.i.i723, label %joinpointcont.backedge

Then1.i.i.i723:                                   ; preds = %Then.i.i.i722
  tail call void @roc_dealloc(i8* %get_rc_ptr290, i32 8) #11
  br label %joinpointcont.backedge

joinpointcont.backedge:                           ; preds = %Then1.i.i.i723, %Then.i.i.i722, %"#Attr_#inc_2.exit", %"#Attr_#dec_8.exit"
  br label %joinpointcont
}

; Function Attrs: nounwind
define internal fastcc void @Arg_parseHelp_719b3c2972b1ab9e3d116b79369e556fafad95d2712ee8fef4dcea0cdf186({ [0 x i64], [12 x i64] }* %"74", { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* readonly %"75", { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field.i.i1329 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1251 = alloca %str.RocStr, align 8
  %struct_field.i.i1208 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1139 = alloca %str.RocStr, align 8
  %struct_field.i.i1127 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1096 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1022 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i948 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %struct_field2.i776 = alloca %str.RocStr, align 8
  %struct_field1.i777 = alloca %str.RocStr, align 8
  %struct_field.i778 = alloca %str.RocStr, align 8
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i701 = alloca %str.RocStr, align 8
  %result_value.i.i = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %result_value.i687.sroa.0 = alloca [9 x i64], align 8
  %result_value.i686 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value1.i = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value.i = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field1.i643 = alloca %str.RocStr, align 8
  %struct_field.i644 = alloca %str.RocStr, align 8
  %struct_field2.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %load_at_index_ptr_old304.sroa.0 = alloca [10 x i64], align 8
  %const_str_store274 = alloca %str.RocStr, align 8
  %result_value191 = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %struct_field177 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field = alloca %str.RocStr, align 8
  %result_value168 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %result_value126 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %load_at_index_ptr_old106 = alloca { %str.RocStr, %str.RocStr }, align 8
  %load_at_index_ptr_old84 = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %load_at_index_ptr_old56 = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %load_at_index_ptr_old = alloca %str.RocStr, align 8
  %load_at_index_ptr_old304.sroa.0.0.sroa_cast = bitcast [10 x i64]* %load_at_index_ptr_old304.sroa.0 to i8*
  %1 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  %2 = bitcast %str.RocStr* %struct_field.i.i701 to i8*
  %load_str_to_stack.i.i.i708.elt913 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i701, i64 0, i32 2
  %load_at_index_ptr_old304.sroa.0.24.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old304.sroa.0, i64 0, i64 3
  %load_at_index_ptr_old304.sroa.0.24.sroa_cast = bitcast i64* %load_at_index_ptr_old304.sroa.0.24.sroa_idx to i8*
  %load_str_to_stack.i720.elt918 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %3 = bitcast %str.RocStr* %struct_field2.i776 to i8*
  %4 = bitcast %str.RocStr* %struct_field1.i777 to i8*
  %5 = bitcast %str.RocStr* %struct_field.i778 to i8*
  %load_str_to_stack.i.i780.elt923 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i778, i64 0, i32 2
  %load_str_to_stack.i794.elt928 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i777, i64 0, i32 2
  %load_at_index_ptr_old304.sroa.0.48.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old304.sroa.0, i64 0, i64 6
  %load_at_index_ptr_old304.sroa.0.48.sroa_cast = bitcast i64* %load_at_index_ptr_old304.sroa.0.48.sroa_idx to i8*
  %load_str_to_stack.i806.elt933 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i776, i64 0, i32 2
  br label %joinpointcont

joinpointcont:                                    ; preds = %joinpointcont.backedge, %entry
  %joinpointarg = phi { [0 x i64], [12 x i64] }* [ %"74", %entry ], [ %load_at_index_ptr_old283634, %joinpointcont.backedge ]
  %to_int = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %6 = trunc i64 %to_int to i3
  switch i3 %6, label %default [
    i3 -4, label %branch4
    i3 1, label %branch1
    i3 2, label %branch2
    i3 3, label %branch3
    i3 0, label %branch0
  ]

default:                                          ; preds = %joinpointcont
  %masked276 = and i64 %to_int, 7
  %index277 = sub nsw i64 0, %masked276
  %cast_to_i8_ptr278 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr279 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %index277
  %7 = bitcast i8* %new_ptr279 to { [0 x i64], [12 x i64] }**
  %load_at_index_ptr_old283634 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %7, align 8
  %get_rc_ptr290.idx = sub nuw nsw i64 -8, %masked276
  %get_rc_ptr290 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %get_rc_ptr290.idx
  %8 = bitcast i8* %get_rc_ptr290 to i64*
  %get_refcount291 = load i64, i64* %8, align 8
  %is_one292 = icmp eq i64 %get_refcount291, -9223372036854775808
  br i1 %is_one292, label %then_block294, label %done320

branch4:                                          ; preds = %joinpointcont
  %to_int.le1460 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %9 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %branch4
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %10 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8* noundef nonnull align 8 dereferenceable(24) %10, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i936 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i936, label %modify_rc.i.i.i938, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i938:                               ; preds = %loop.i.i
  %call_builtin.i.i.i937 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i937, i64 -8
  %11 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %12 = load i64, i64* %11, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %12, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i938
  %13 = add i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %12, -9223372036854775808
  br i1 %14, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i938, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %15 = ptrtoint i8* %struct_field.unpack.i to i64
  %16 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %17 = select i1 %.not.i.i.i57.i, i64 %16, i64 %15
  %as_usize_ptr.i58.i = inttoptr i64 %17 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %18 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %19 = add i64 %18, -1
  store i64 %19, i64* %get_rc_ptr.i59.i, align 8
  %20 = icmp eq i64 %18, -9223372036854775808
  br i1 %20, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %21 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %21, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %branch4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %22 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %23 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i939 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %24 = select i1 %.not.i.i.i.i.i939, i64 %23, i64 %22
  %as_usize_ptr.i.i.i = inttoptr i64 %24 to i64*
  %get_rc_ptr.i.i.i940 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %25 = load i64, i64* %get_rc_ptr.i.i.i940, align 8
  %.not.i.i.i.i.i.i941 = icmp eq i64 %25, 0
  br i1 %.not.i.i.i.i.i.i941, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i942

Then.i.i.i.i.i.i942:                              ; preds = %modification_list_block.i.i.i
  %26 = add i64 %25, -1
  store i64 %26, i64* %get_rc_ptr.i.i.i940, align 8
  %27 = icmp eq i64 %25, -9223372036854775808
  br i1 %27, label %Then1.i.i.i.i.i.i943, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i943:                             ; preds = %Then.i.i.i.i.i.i942
  %28 = bitcast i64* %get_rc_ptr.i.i.i940 to i8*
  tail call void @roc_dealloc(i8* %28, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i943, %Then.i.i.i.i.i.i942, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %29 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %30 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %31 = select i1 %.not.i.i.i10.i, i64 %30, i64 %29
  %as_usize_ptr.i11.i = inttoptr i64 %31 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %33 = add i64 %32, -1
  store i64 %33, i64* %get_rc_ptr.i12.i, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %35 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %35, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %36 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %37 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i944 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %38 = select i1 %.not.i.i.i.i944, i64 %37, i64 %36
  %as_usize_ptr.i.i = inttoptr i64 %38 to i64*
  %get_rc_ptr.i.i945 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %39 = load i64, i64* %get_rc_ptr.i.i945, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %39, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i946

Then.i.i.i.i.i946:                                ; preds = %modification_list_block.i.i
  %40 = add i64 %39, -1
  store i64 %40, i64* %get_rc_ptr.i.i945, align 8
  %41 = icmp eq i64 %39, -9223372036854775808
  br i1 %41, label %Then1.i.i.i.i.i947, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i947:                               ; preds = %Then.i.i.i.i.i946
  %42 = bitcast i64* %get_rc_ptr.i.i945 to i8*
  tail call void @roc_dealloc(i8* %42, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i946, %Then1.i.i.i.i.i947
  %masked = and i64 %to_int.le1460, 7
  %index = sub nsw i64 0, %masked
  %cast_to_i8_ptr = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %index
  %43 = bitcast %str.RocStr* %load_at_index_ptr_old to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %43, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr, i64 24, i1 false)
  %get_rc_ptr.idx = sub nuw nsw i64 -8, %masked
  %get_rc_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %get_rc_ptr.idx
  %44 = bitcast i8* %get_rc_ptr to i64*
  %get_refcount = load i64, i64* %44, align 8
  %is_one = icmp eq i64 %get_refcount, -9223372036854775808
  br i1 %is_one, label %then_block, label %then

branch1:                                          ; preds = %joinpointcont
  %to_int.le1458 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i949 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i950 = load i8*, i8** %struct_field.elt.i949, align 8
  %struct_field.elt20.i951 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i952 = load i64, i64* %struct_field.elt20.i951, align 8
  %struct_field.elt22.i953 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i954 = load i64, i64* %struct_field.elt22.i953, align 8
  %45 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i948 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %"cap > 0.not.i.i955" = icmp eq i64 %struct_field.unpack23.i954, 0
  br i1 %"cap > 0.not.i.i955", label %"#Attr_#dec_17.exit.i993", label %modification_list_block.i52.i958

modification_list_block.i52.i958:                 ; preds = %branch1
  %cast_basic_basic.i.i956 = bitcast i8* %struct_field.unpack.i950 to %str.RocStr*
  %bounds_check.not.i.i957 = icmp eq i64 %struct_field.unpack21.i952, 0
  br i1 %bounds_check.not.i.i957, label %after_loop.i.i979, label %loop.preheader.i.i960

loop.preheader.i.i960:                            ; preds = %modification_list_block.i52.i958
  %load_str_to_stack.i.elt9.i.i959 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i948, i64 0, i32 2
  br label %loop.i.i966

loop.i.i966:                                      ; preds = %"#Attr_#dec_4.exit.i.i974", %loop.preheader.i.i960
  %next_index12.i.i961 = phi i64 [ 0, %loop.preheader.i.i960 ], [ %next_index.i.i962, %"#Attr_#dec_4.exit.i.i974" ]
  %next_index.i.i962 = add nuw i64 %next_index12.i.i961, 1
  %load_index.i.i963 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i956, i64 %next_index12.i.i961
  %46 = bitcast %str.RocStr* %load_index.i.i963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8* noundef nonnull align 8 dereferenceable(24) %46, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i964 = load i64, i64* %load_str_to_stack.i.elt9.i.i959, align 8
  %is_big_str.i.i.i965 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i964, 0
  br i1 %is_big_str.i.i.i965, label %modify_rc.i.i.i970, label %"#Attr_#dec_4.exit.i.i974"

modify_rc.i.i.i970:                               ; preds = %loop.i.i966
  %call_builtin.i.i.i967 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i948) #11
  %get_rc_ptr.i.i53.i968 = getelementptr inbounds i8, i8* %call_builtin.i.i.i967, i64 -8
  %47 = bitcast i8* %get_rc_ptr.i.i53.i968 to i64*
  %48 = load i64, i64* %47, align 8
  %.not.i.i.i.i.i54.i969 = icmp eq i64 %48, 0
  br i1 %.not.i.i.i.i.i54.i969, label %"#Attr_#dec_4.exit.i.i974", label %Then.i.i.i.i.i55.i971

Then.i.i.i.i.i55.i971:                            ; preds = %modify_rc.i.i.i970
  %49 = add i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp eq i64 %48, -9223372036854775808
  br i1 %50, label %Then1.i.i.i.i.i56.i972, label %"#Attr_#dec_4.exit.i.i974"

Then1.i.i.i.i.i56.i972:                           ; preds = %Then.i.i.i.i.i55.i971
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i968, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i974"

"#Attr_#dec_4.exit.i.i974":                       ; preds = %Then1.i.i.i.i.i56.i972, %Then.i.i.i.i.i55.i971, %modify_rc.i.i.i970, %loop.i.i966
  %exitcond.not.i973 = icmp eq i64 %next_index.i.i962, %struct_field.unpack21.i952
  br i1 %exitcond.not.i973, label %after_loop.i.i979, label %loop.i.i966

after_loop.i.i979:                                ; preds = %"#Attr_#dec_4.exit.i.i974", %modification_list_block.i52.i958
  %51 = ptrtoint i8* %struct_field.unpack.i950 to i64
  %52 = shl i64 %struct_field.unpack23.i954, 1
  %.not.i.i.i57.i975 = icmp slt i64 %struct_field.unpack23.i954, 0
  %53 = select i1 %.not.i.i.i57.i975, i64 %52, i64 %51
  %as_usize_ptr.i58.i976 = inttoptr i64 %53 to i64*
  %get_rc_ptr.i59.i977 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i976, i64 -1
  %54 = load i64, i64* %get_rc_ptr.i59.i977, align 8
  %.not.i.i.i.i60.i978 = icmp eq i64 %54, 0
  br i1 %.not.i.i.i.i60.i978, label %"#Attr_#dec_17.exit.i993", label %Then.i.i.i.i61.i980

Then.i.i.i.i61.i980:                              ; preds = %after_loop.i.i979
  %55 = add i64 %54, -1
  store i64 %55, i64* %get_rc_ptr.i59.i977, align 8
  %56 = icmp eq i64 %54, -9223372036854775808
  br i1 %56, label %Then1.i.i.i.i62.i981, label %"#Attr_#dec_17.exit.i993"

Then1.i.i.i.i62.i981:                             ; preds = %Then.i.i.i.i61.i980
  %57 = bitcast i64* %get_rc_ptr.i59.i977 to i8*
  tail call void @roc_dealloc(i8* %57, i32 8) #11
  br label %"#Attr_#dec_17.exit.i993"

"#Attr_#dec_17.exit.i993":                        ; preds = %Then1.i.i.i.i62.i981, %Then.i.i.i.i61.i980, %after_loop.i.i979, %branch1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  %struct_field1.sroa.264.0..sroa_idx65.i982 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i983 = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i982, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i984 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i985 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i984, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i986 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i987 = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i986, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i988 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i989 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i988, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i990 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i991 = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i990, align 8
  %"cap > 0.i.i.not.i992" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i983, 0
  br i1 %"cap > 0.i.i.not.i992", label %"#Attr_#dec_18.exit.i1004", label %modification_list_block.i.i.i1000

modification_list_block.i.i.i1000:                ; preds = %"#Attr_#dec_17.exit.i993"
  %struct_field1.sroa.0.0..sroa_idx.i994 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i995 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i994, align 8
  %58 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i995 to i64
  %59 = shl i64 %struct_field1.sroa.264.0.copyload.i983, 1
  %.not.i.i.i.i.i996 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i983, 0
  %60 = select i1 %.not.i.i.i.i.i996, i64 %59, i64 %58
  %as_usize_ptr.i.i.i997 = inttoptr i64 %60 to i64*
  %get_rc_ptr.i.i.i998 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i997, i64 -1
  %61 = load i64, i64* %get_rc_ptr.i.i.i998, align 8
  %.not.i.i.i.i.i.i999 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i.i.i999, label %"#Attr_#dec_18.exit.i1004", label %Then.i.i.i.i.i.i1001

Then.i.i.i.i.i.i1001:                             ; preds = %modification_list_block.i.i.i1000
  %62 = add i64 %61, -1
  store i64 %62, i64* %get_rc_ptr.i.i.i998, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i.i.i1002, label %"#Attr_#dec_18.exit.i1004"

Then1.i.i.i.i.i.i1002:                            ; preds = %Then.i.i.i.i.i.i1001
  %64 = bitcast i64* %get_rc_ptr.i.i.i998 to i8*
  tail call void @roc_dealloc(i8* %64, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1004"

"#Attr_#dec_18.exit.i1004":                       ; preds = %Then1.i.i.i.i.i.i1002, %Then.i.i.i.i.i.i1001, %modification_list_block.i.i.i1000, %"#Attr_#dec_17.exit.i993"
  %"cap > 0.i5.not.i1003" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i987, 0
  br i1 %"cap > 0.i5.not.i1003", label %"#Attr_#dec_10.exit.i1013", label %modification_list_block.i14.i1009

modification_list_block.i14.i1009:                ; preds = %"#Attr_#dec_18.exit.i1004"
  %65 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i985 to i64
  %66 = shl i64 %struct_field1.sroa.468.0.copyload.i987, 1
  %.not.i.i.i10.i1005 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i987, 0
  %67 = select i1 %.not.i.i.i10.i1005, i64 %66, i64 %65
  %as_usize_ptr.i11.i1006 = inttoptr i64 %67 to i64*
  %get_rc_ptr.i12.i1007 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1006, i64 -1
  %68 = load i64, i64* %get_rc_ptr.i12.i1007, align 8
  %.not.i.i.i.i13.i1008 = icmp eq i64 %68, 0
  br i1 %.not.i.i.i.i13.i1008, label %"#Attr_#dec_10.exit.i1013", label %Then.i.i.i.i15.i1010

Then.i.i.i.i15.i1010:                             ; preds = %modification_list_block.i14.i1009
  %69 = add i64 %68, -1
  store i64 %69, i64* %get_rc_ptr.i12.i1007, align 8
  %70 = icmp eq i64 %68, -9223372036854775808
  br i1 %70, label %Then1.i.i.i.i16.i1011, label %"#Attr_#dec_10.exit.i1013"

Then1.i.i.i.i16.i1011:                            ; preds = %Then.i.i.i.i15.i1010
  %71 = bitcast i64* %get_rc_ptr.i12.i1007 to i8*
  tail call void @roc_dealloc(i8* %71, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1013"

"#Attr_#dec_10.exit.i1013":                       ; preds = %Then1.i.i.i.i16.i1011, %Then.i.i.i.i15.i1010, %modification_list_block.i14.i1009, %"#Attr_#dec_18.exit.i1004"
  %"cap > 0.i.not.i1012" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i991, 0
  br i1 %"cap > 0.i.not.i1012", label %"#Attr_#dec_16.exit1021", label %modification_list_block.i.i1018

modification_list_block.i.i1018:                  ; preds = %"#Attr_#dec_10.exit.i1013"
  %72 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i989 to i64
  %73 = shl i64 %struct_field1.sroa.672.0.copyload.i991, 1
  %.not.i.i.i.i1014 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i991, 0
  %74 = select i1 %.not.i.i.i.i1014, i64 %73, i64 %72
  %as_usize_ptr.i.i1015 = inttoptr i64 %74 to i64*
  %get_rc_ptr.i.i1016 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1015, i64 -1
  %75 = load i64, i64* %get_rc_ptr.i.i1016, align 8
  %.not.i.i.i.i2.i1017 = icmp eq i64 %75, 0
  br i1 %.not.i.i.i.i2.i1017, label %"#Attr_#dec_16.exit1021", label %Then.i.i.i.i.i1019

Then.i.i.i.i.i1019:                               ; preds = %modification_list_block.i.i1018
  %76 = add i64 %75, -1
  store i64 %76, i64* %get_rc_ptr.i.i1016, align 8
  %77 = icmp eq i64 %75, -9223372036854775808
  br i1 %77, label %Then1.i.i.i.i.i1020, label %"#Attr_#dec_16.exit1021"

Then1.i.i.i.i.i1020:                              ; preds = %Then.i.i.i.i.i1019
  %78 = bitcast i64* %get_rc_ptr.i.i1016 to i8*
  tail call void @roc_dealloc(i8* %78, i32 8) #11
  br label %"#Attr_#dec_16.exit1021"

"#Attr_#dec_16.exit1021":                         ; preds = %"#Attr_#dec_10.exit.i1013", %modification_list_block.i.i1018, %Then.i.i.i.i.i1019, %Then1.i.i.i.i.i1020
  %cast_to_i8_ptr36 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %masked38 = and i64 %to_int.le1458, 7
  %get_rc_ptr42.idx = sub nuw nsw i64 -8, %masked38
  %get_rc_ptr42 = getelementptr inbounds i8, i8* %cast_to_i8_ptr36, i64 %get_rc_ptr42.idx
  %79 = bitcast i8* %get_rc_ptr42 to i64*
  %get_refcount43 = load i64, i64* %79, align 8
  switch i64 %get_refcount43, label %Then.i.i.i640 [
    i64 -9223372036854775808, label %then_block46
    i64 0, label %joinpointcont35
  ]

branch2:                                          ; preds = %joinpointcont
  %to_int.le1456 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked77 = and i64 %to_int.le1456, 7
  %cast_to_i8_ptr79 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %at_index_struct_gep_data83.idx = sub nuw nsw i64 48, %masked77
  %at_index_struct_gep_data83 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %at_index_struct_gep_data83.idx
  %80 = bitcast %str.RocStr* %load_at_index_ptr_old84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %80, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data83, i64 24, i1 false)
  %get_rc_ptr92.idx = sub nuw nsw i64 -8, %masked77
  %get_rc_ptr92 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %get_rc_ptr92.idx
  %81 = bitcast i8* %get_rc_ptr92 to i64*
  %get_refcount93 = load i64, i64* %81, align 8
  %is_one94 = icmp eq i64 %get_refcount93, -9223372036854775808
  br i1 %is_one94, label %then_block96, label %then121

branch3:                                          ; preds = %joinpointcont
  %to_int.le1454 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked128 = and i64 %to_int.le1454, 7
  %index129 = sub nsw i64 0, %masked128
  %cast_to_i8_ptr130 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr131 = getelementptr inbounds i8, i8* %cast_to_i8_ptr130, i64 %index129
  %load_at_index_ptr_old135.elt = bitcast i8* %new_ptr131 to i8**
  %load_at_index_ptr_old135.unpack = load i8*, i8** %load_at_index_ptr_old135.elt, align 8
  %82 = insertvalue %list.RocList undef, i8* %load_at_index_ptr_old135.unpack, 0
  %load_at_index_ptr_old135.elt326 = getelementptr inbounds i8, i8* %new_ptr131, i64 8
  %83 = bitcast i8* %load_at_index_ptr_old135.elt326 to i64*
  %load_at_index_ptr_old135.unpack327 = load i64, i64* %83, align 8
  %84 = insertvalue %list.RocList %82, i64 %load_at_index_ptr_old135.unpack327, 1
  %load_at_index_ptr_old135.elt328 = getelementptr inbounds i8, i8* %new_ptr131, i64 16
  %85 = bitcast i8* %load_at_index_ptr_old135.elt328 to i64*
  %load_at_index_ptr_old135.unpack329 = load i64, i64* %85, align 8
  %load_at_index_ptr_old135330 = insertvalue %list.RocList %84, i64 %load_at_index_ptr_old135.unpack329, 2
  %get_rc_ptr143.idx = sub nuw nsw i64 -8, %masked128
  %get_rc_ptr143 = getelementptr inbounds i8, i8* %cast_to_i8_ptr130, i64 %get_rc_ptr143.idx
  %86 = bitcast i8* %get_rc_ptr143 to i64*
  %get_refcount144 = load i64, i64* %86, align 8
  %is_one145 = icmp eq i64 %get_refcount144, -9223372036854775808
  br i1 %is_one145, label %then_block147, label %then163

branch0:                                          ; preds = %joinpointcont
  %to_int.le = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i1023 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1024 = load i8*, i8** %struct_field.elt.i1023, align 8
  %struct_field.elt20.i1025 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i1026 = load i64, i64* %struct_field.elt20.i1025, align 8
  %struct_field.elt22.i1027 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i1028 = load i64, i64* %struct_field.elt22.i1027, align 8
  %87 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1022 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %"cap > 0.not.i.i1029" = icmp eq i64 %struct_field.unpack23.i1028, 0
  br i1 %"cap > 0.not.i.i1029", label %"#Attr_#dec_17.exit.i1067", label %modification_list_block.i52.i1032

modification_list_block.i52.i1032:                ; preds = %branch0
  %cast_basic_basic.i.i1030 = bitcast i8* %struct_field.unpack.i1024 to %str.RocStr*
  %bounds_check.not.i.i1031 = icmp eq i64 %struct_field.unpack21.i1026, 0
  br i1 %bounds_check.not.i.i1031, label %after_loop.i.i1053, label %loop.preheader.i.i1034

loop.preheader.i.i1034:                           ; preds = %modification_list_block.i52.i1032
  %load_str_to_stack.i.elt9.i.i1033 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1022, i64 0, i32 2
  br label %loop.i.i1040

loop.i.i1040:                                     ; preds = %"#Attr_#dec_4.exit.i.i1048", %loop.preheader.i.i1034
  %next_index12.i.i1035 = phi i64 [ 0, %loop.preheader.i.i1034 ], [ %next_index.i.i1036, %"#Attr_#dec_4.exit.i.i1048" ]
  %next_index.i.i1036 = add nuw i64 %next_index12.i.i1035, 1
  %load_index.i.i1037 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1030, i64 %next_index12.i.i1035
  %88 = bitcast %str.RocStr* %load_index.i.i1037 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %87, i8* noundef nonnull align 8 dereferenceable(24) %88, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i1038 = load i64, i64* %load_str_to_stack.i.elt9.i.i1033, align 8
  %is_big_str.i.i.i1039 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i1038, 0
  br i1 %is_big_str.i.i.i1039, label %modify_rc.i.i.i1044, label %"#Attr_#dec_4.exit.i.i1048"

modify_rc.i.i.i1044:                              ; preds = %loop.i.i1040
  %call_builtin.i.i.i1041 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1022) #11
  %get_rc_ptr.i.i53.i1042 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1041, i64 -8
  %89 = bitcast i8* %get_rc_ptr.i.i53.i1042 to i64*
  %90 = load i64, i64* %89, align 8
  %.not.i.i.i.i.i54.i1043 = icmp eq i64 %90, 0
  br i1 %.not.i.i.i.i.i54.i1043, label %"#Attr_#dec_4.exit.i.i1048", label %Then.i.i.i.i.i55.i1045

Then.i.i.i.i.i55.i1045:                           ; preds = %modify_rc.i.i.i1044
  %91 = add i64 %90, -1
  store i64 %91, i64* %89, align 8
  %92 = icmp eq i64 %90, -9223372036854775808
  br i1 %92, label %Then1.i.i.i.i.i56.i1046, label %"#Attr_#dec_4.exit.i.i1048"

Then1.i.i.i.i.i56.i1046:                          ; preds = %Then.i.i.i.i.i55.i1045
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i1042, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i1048"

"#Attr_#dec_4.exit.i.i1048":                      ; preds = %Then1.i.i.i.i.i56.i1046, %Then.i.i.i.i.i55.i1045, %modify_rc.i.i.i1044, %loop.i.i1040
  %exitcond.not.i1047 = icmp eq i64 %next_index.i.i1036, %struct_field.unpack21.i1026
  br i1 %exitcond.not.i1047, label %after_loop.i.i1053, label %loop.i.i1040

after_loop.i.i1053:                               ; preds = %"#Attr_#dec_4.exit.i.i1048", %modification_list_block.i52.i1032
  %93 = ptrtoint i8* %struct_field.unpack.i1024 to i64
  %94 = shl i64 %struct_field.unpack23.i1028, 1
  %.not.i.i.i57.i1049 = icmp slt i64 %struct_field.unpack23.i1028, 0
  %95 = select i1 %.not.i.i.i57.i1049, i64 %94, i64 %93
  %as_usize_ptr.i58.i1050 = inttoptr i64 %95 to i64*
  %get_rc_ptr.i59.i1051 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i1050, i64 -1
  %96 = load i64, i64* %get_rc_ptr.i59.i1051, align 8
  %.not.i.i.i.i60.i1052 = icmp eq i64 %96, 0
  br i1 %.not.i.i.i.i60.i1052, label %"#Attr_#dec_17.exit.i1067", label %Then.i.i.i.i61.i1054

Then.i.i.i.i61.i1054:                             ; preds = %after_loop.i.i1053
  %97 = add i64 %96, -1
  store i64 %97, i64* %get_rc_ptr.i59.i1051, align 8
  %98 = icmp eq i64 %96, -9223372036854775808
  br i1 %98, label %Then1.i.i.i.i62.i1055, label %"#Attr_#dec_17.exit.i1067"

Then1.i.i.i.i62.i1055:                            ; preds = %Then.i.i.i.i61.i1054
  %99 = bitcast i64* %get_rc_ptr.i59.i1051 to i8*
  tail call void @roc_dealloc(i8* %99, i32 8) #11
  br label %"#Attr_#dec_17.exit.i1067"

"#Attr_#dec_17.exit.i1067":                       ; preds = %Then1.i.i.i.i62.i1055, %Then.i.i.i.i61.i1054, %after_loop.i.i1053, %branch0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  %struct_field1.sroa.264.0..sroa_idx65.i1056 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i1057 = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i1056, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i1058 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1059 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i1058, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i1060 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i1061 = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i1060, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i1062 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1063 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i1062, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i1064 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i1065 = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i1064, align 8
  %"cap > 0.i.i.not.i1066" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i1057, 0
  br i1 %"cap > 0.i.i.not.i1066", label %"#Attr_#dec_18.exit.i1078", label %modification_list_block.i.i.i1074

modification_list_block.i.i.i1074:                ; preds = %"#Attr_#dec_17.exit.i1067"
  %struct_field1.sroa.0.0..sroa_idx.i1068 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1069 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1068, align 8
  %100 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1069 to i64
  %101 = shl i64 %struct_field1.sroa.264.0.copyload.i1057, 1
  %.not.i.i.i.i.i1070 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i1057, 0
  %102 = select i1 %.not.i.i.i.i.i1070, i64 %101, i64 %100
  %as_usize_ptr.i.i.i1071 = inttoptr i64 %102 to i64*
  %get_rc_ptr.i.i.i1072 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1071, i64 -1
  %103 = load i64, i64* %get_rc_ptr.i.i.i1072, align 8
  %.not.i.i.i.i.i.i1073 = icmp eq i64 %103, 0
  br i1 %.not.i.i.i.i.i.i1073, label %"#Attr_#dec_18.exit.i1078", label %Then.i.i.i.i.i.i1075

Then.i.i.i.i.i.i1075:                             ; preds = %modification_list_block.i.i.i1074
  %104 = add i64 %103, -1
  store i64 %104, i64* %get_rc_ptr.i.i.i1072, align 8
  %105 = icmp eq i64 %103, -9223372036854775808
  br i1 %105, label %Then1.i.i.i.i.i.i1076, label %"#Attr_#dec_18.exit.i1078"

Then1.i.i.i.i.i.i1076:                            ; preds = %Then.i.i.i.i.i.i1075
  %106 = bitcast i64* %get_rc_ptr.i.i.i1072 to i8*
  tail call void @roc_dealloc(i8* %106, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1078"

"#Attr_#dec_18.exit.i1078":                       ; preds = %Then1.i.i.i.i.i.i1076, %Then.i.i.i.i.i.i1075, %modification_list_block.i.i.i1074, %"#Attr_#dec_17.exit.i1067"
  %"cap > 0.i5.not.i1077" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i1061, 0
  br i1 %"cap > 0.i5.not.i1077", label %"#Attr_#dec_10.exit.i1087", label %modification_list_block.i14.i1083

modification_list_block.i14.i1083:                ; preds = %"#Attr_#dec_18.exit.i1078"
  %107 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1059 to i64
  %108 = shl i64 %struct_field1.sroa.468.0.copyload.i1061, 1
  %.not.i.i.i10.i1079 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i1061, 0
  %109 = select i1 %.not.i.i.i10.i1079, i64 %108, i64 %107
  %as_usize_ptr.i11.i1080 = inttoptr i64 %109 to i64*
  %get_rc_ptr.i12.i1081 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1080, i64 -1
  %110 = load i64, i64* %get_rc_ptr.i12.i1081, align 8
  %.not.i.i.i.i13.i1082 = icmp eq i64 %110, 0
  br i1 %.not.i.i.i.i13.i1082, label %"#Attr_#dec_10.exit.i1087", label %Then.i.i.i.i15.i1084

Then.i.i.i.i15.i1084:                             ; preds = %modification_list_block.i14.i1083
  %111 = add i64 %110, -1
  store i64 %111, i64* %get_rc_ptr.i12.i1081, align 8
  %112 = icmp eq i64 %110, -9223372036854775808
  br i1 %112, label %Then1.i.i.i.i16.i1085, label %"#Attr_#dec_10.exit.i1087"

Then1.i.i.i.i16.i1085:                            ; preds = %Then.i.i.i.i15.i1084
  %113 = bitcast i64* %get_rc_ptr.i12.i1081 to i8*
  tail call void @roc_dealloc(i8* %113, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1087"

"#Attr_#dec_10.exit.i1087":                       ; preds = %Then1.i.i.i.i16.i1085, %Then.i.i.i.i15.i1084, %modification_list_block.i14.i1083, %"#Attr_#dec_18.exit.i1078"
  %"cap > 0.i.not.i1086" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i1065, 0
  br i1 %"cap > 0.i.not.i1086", label %"#Attr_#dec_16.exit1095", label %modification_list_block.i.i1092

modification_list_block.i.i1092:                  ; preds = %"#Attr_#dec_10.exit.i1087"
  %114 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1063 to i64
  %115 = shl i64 %struct_field1.sroa.672.0.copyload.i1065, 1
  %.not.i.i.i.i1088 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i1065, 0
  %116 = select i1 %.not.i.i.i.i1088, i64 %115, i64 %114
  %as_usize_ptr.i.i1089 = inttoptr i64 %116 to i64*
  %get_rc_ptr.i.i1090 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1089, i64 -1
  %117 = load i64, i64* %get_rc_ptr.i.i1090, align 8
  %.not.i.i.i.i2.i1091 = icmp eq i64 %117, 0
  br i1 %.not.i.i.i.i2.i1091, label %"#Attr_#dec_16.exit1095", label %Then.i.i.i.i.i1093

Then.i.i.i.i.i1093:                               ; preds = %modification_list_block.i.i1092
  %118 = add i64 %117, -1
  store i64 %118, i64* %get_rc_ptr.i.i1090, align 8
  %119 = icmp eq i64 %117, -9223372036854775808
  br i1 %119, label %Then1.i.i.i.i.i1094, label %"#Attr_#dec_16.exit1095"

Then1.i.i.i.i.i1094:                              ; preds = %Then.i.i.i.i.i1093
  %120 = bitcast i64* %get_rc_ptr.i.i1090 to i8*
  tail call void @roc_dealloc(i8* %120, i32 8) #11
  br label %"#Attr_#dec_16.exit1095"

"#Attr_#dec_16.exit1095":                         ; preds = %"#Attr_#dec_10.exit.i1087", %modification_list_block.i.i1092, %Then.i.i.i.i.i1093, %Then1.i.i.i.i.i1094
  %cast_to_i8_ptr243 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %masked245 = and i64 %to_int.le, 7
  %get_rc_ptr249.idx = sub nuw nsw i64 -8, %masked245
  %get_rc_ptr249 = getelementptr inbounds i8, i8* %cast_to_i8_ptr243, i64 %get_rc_ptr249.idx
  %121 = bitcast i8* %get_rc_ptr249 to i64*
  %get_refcount250 = load i64, i64* %121, align 8
  switch i64 %get_refcount250, label %Then.i.i.i698 [
    i64 -9223372036854775808, label %then_block253
    i64 0, label %joinpointcont242
  ]

then_block:                                       ; preds = %"#Attr_#dec_16.exit"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %44)
  %load_tag_to_put_in_struct.elt626.phi.trans.insert = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack627.pre = load i64, i64* %load_tag_to_put_in_struct.elt626.phi.trans.insert, align 8
  br label %joinpointcont3

then:                                             ; preds = %"#Attr_#dec_16.exit"
  %load_str_to_stack.i.elt908 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 2
  %load_str_to_stack.i.unpack909 = load i64, i64* %load_str_to_stack.i.elt908, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack909, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#inc_4.exit"

modify_rc.i:                                      ; preds = %then
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %122 = bitcast i8* %get_rc_ptr.i to i64*
  %123 = load i64, i64* %122, align 8
  %.not.i.i = icmp eq i64 %123, 0
  br i1 %.not.i.i, label %"#Attr_#inc_4.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modify_rc.i
  %124 = add nsw i64 %123, 1
  store i64 %124, i64* %122, align 8
  %.pre1442 = load i64, i64* %44, align 8
  br label %"#Attr_#inc_4.exit"

"#Attr_#inc_4.exit":                              ; preds = %then, %modify_rc.i, %Then.i.i
  %125 = phi i64 [ %get_refcount, %then ], [ %get_refcount, %modify_rc.i ], [ %.pre1442, %Then.i.i ]
  %.not.i.i.i = icmp eq i64 %125, 0
  br i1 %.not.i.i.i, label %joinpointcont3, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %"#Attr_#inc_4.exit"
  %126 = add i64 %125, -1
  store i64 %126, i64* %44, align 8
  %127 = icmp eq i64 %125, -9223372036854775808
  br i1 %127, label %Then1.i.i.i, label %joinpointcont3

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  br label %joinpointcont3

common.ret:                                       ; preds = %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit, %"#Attr_#dec_19.exit", %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, %"#Attr_#inc_16.exit", %joinpointcont3
  %.sink1462 = phi i8* [ %365, %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit ], [ %335, %"#Attr_#dec_19.exit" ], [ %318, %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit ], [ %195, %"#Attr_#inc_16.exit" ], [ %130, %joinpointcont3 ]
  %.sink = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %.sink, i8* noundef nonnull align 8 dereferenceable(64) %.sink1462, i64 64, i1 false)
  ret void

joinpointcont3:                                   ; preds = %Then1.i.i.i, %Then.i.i.i, %"#Attr_#inc_4.exit", %then_block
  %load_tag_to_put_in_struct.unpack627 = phi i64 [ %load_str_to_stack.i.unpack909, %Then1.i.i.i ], [ %load_str_to_stack.i.unpack909, %Then.i.i.i ], [ %load_str_to_stack.i.unpack909, %"#Attr_#inc_4.exit" ], [ %load_tag_to_put_in_struct.unpack627.pre, %then_block ]
  %load_tag_to_put_in_struct.elt = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 0
  %load_tag_to_put_in_struct.unpack = load i8*, i8** %load_tag_to_put_in_struct.elt, align 8
  %load_tag_to_put_in_struct.elt624 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 1
  %load_tag_to_put_in_struct.unpack625 = load i64, i64* %load_tag_to_put_in_struct.elt624, align 8
  %tag_alloca = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %.repack629 = bitcast [7 x i64]* %data_buffer to i8**
  store i8* %load_tag_to_put_in_struct.unpack, i8** %.repack629, align 8
  %128 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack625, i64* %128, align 8
  %129 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack627, i64* %129, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr, align 8
  %130 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  br label %common.ret

then_block46:                                     ; preds = %"#Attr_#dec_16.exit1021"
  %index50 = sub nsw i64 0, %masked38
  %new_ptr52 = getelementptr inbounds i8, i8* %cast_to_i8_ptr36, i64 %index50
  %131 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %131, i8* noundef nonnull align 8 dereferenceable(80) %new_ptr52, i64 80, i1 false)
  %132 = bitcast %str.RocStr* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132)
  %133 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133)
  %134 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %134, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr52, i64 24, i1 false)
  %load_str_to_stack.i.i.elt893 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack894 = load i64, i64* %load_str_to_stack.i.i.elt893, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack894, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_3.exit"

modify_rc.i.i:                                    ; preds = %then_block46
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %135 = bitcast i8* %get_rc_ptr.i.i to i64*
  %136 = load i64, i64* %135, align 8
  %.not.i.i.i.i.i = icmp eq i64 %136, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_3.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %137 = add i64 %136, -1
  store i64 %137, i64* %135, align 8
  %138 = icmp eq i64 %136, -9223372036854775808
  br i1 %138, label %Then1.i.i.i.i.i, label %"#Attr_#dec_3.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_3.exit"

"#Attr_#dec_3.exit":                              ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %then_block46
  %struct_field_access_record_1.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56, i64 0, i32 1
  %139 = bitcast %str.RocStr* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %133, i8* noundef nonnull align 8 dereferenceable(24) %139, i64 24, i1 false) #11
  %load_str_to_stack.i740.elt898 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i740.unpack899 = load i64, i64* %load_str_to_stack.i740.elt898, align 8
  %is_big_str.i742 = icmp sgt i64 %load_str_to_stack.i740.unpack899, 0
  br i1 %is_big_str.i742, label %modify_rc.i747, label %"#Attr_#dec_4.exit751"

modify_rc.i747:                                   ; preds = %"#Attr_#dec_3.exit"
  %call_builtin.i743 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i745 = getelementptr inbounds i8, i8* %call_builtin.i743, i64 -8
  %140 = bitcast i8* %get_rc_ptr.i745 to i64*
  %141 = load i64, i64* %140, align 8
  %.not.i.i.i.i746 = icmp eq i64 %141, 0
  br i1 %.not.i.i.i.i746, label %"#Attr_#dec_4.exit751", label %Then.i.i.i.i748

Then.i.i.i.i748:                                  ; preds = %modify_rc.i747
  %142 = add i64 %141, -1
  store i64 %142, i64* %140, align 8
  %143 = icmp eq i64 %141, -9223372036854775808
  br i1 %143, label %Then1.i.i.i.i749, label %"#Attr_#dec_4.exit751"

Then1.i.i.i.i749:                                 ; preds = %Then.i.i.i.i748
  tail call void @roc_dealloc(i8* %get_rc_ptr.i745, i32 8) #11
  br label %"#Attr_#dec_4.exit751"

"#Attr_#dec_4.exit751":                           ; preds = %modify_rc.i747, %Then.i.i.i.i748, %Then1.i.i.i.i749, %"#Attr_#dec_3.exit"
  %struct_field_access_record_2.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56, i64 0, i32 2
  %144 = bitcast %str.RocStr* %struct_field_access_record_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %132, i8* noundef nonnull align 8 dereferenceable(24) %144, i64 24, i1 false) #11
  %load_str_to_stack.i752.elt903 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i, i64 0, i32 2
  %load_str_to_stack.i752.unpack904 = load i64, i64* %load_str_to_stack.i752.elt903, align 8
  %is_big_str.i754 = icmp sgt i64 %load_str_to_stack.i752.unpack904, 0
  br i1 %is_big_str.i754, label %modify_rc.i759, label %"#Attr_#dec_4.exit763"

modify_rc.i759:                                   ; preds = %"#Attr_#dec_4.exit751"
  %call_builtin.i755 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i) #11
  %get_rc_ptr.i757 = getelementptr inbounds i8, i8* %call_builtin.i755, i64 -8
  %145 = bitcast i8* %get_rc_ptr.i757 to i64*
  %146 = load i64, i64* %145, align 8
  %.not.i.i.i.i758 = icmp eq i64 %146, 0
  br i1 %.not.i.i.i.i758, label %"#Attr_#dec_4.exit763", label %Then.i.i.i.i760

Then.i.i.i.i760:                                  ; preds = %modify_rc.i759
  %147 = add i64 %146, -1
  store i64 %147, i64* %145, align 8
  %148 = icmp eq i64 %146, -9223372036854775808
  br i1 %148, label %Then1.i.i.i.i761, label %"#Attr_#dec_4.exit763"

Then1.i.i.i.i761:                                 ; preds = %Then.i.i.i.i760
  tail call void @roc_dealloc(i8* %get_rc_ptr.i757, i32 8) #11
  br label %"#Attr_#dec_4.exit763"

"#Attr_#dec_4.exit763":                           ; preds = %modify_rc.i759, %Then.i.i.i.i760, %Then1.i.i.i.i761, %"#Attr_#dec_4.exit751"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134)
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %79)
  br label %joinpointcont35

Then.i.i.i640:                                    ; preds = %"#Attr_#dec_16.exit1021"
  %149 = add nsw i64 %get_refcount43, -1
  store i64 %149, i64* %79, align 8
  br label %joinpointcont35

joinpointcont35:                                  ; preds = %"#Attr_#dec_16.exit1021", %Then.i.i.i640, %"#Attr_#dec_4.exit763"
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store.repack, align 8
  %const_str_store.repack622 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 73, i64* %const_str_store.repack622, align 8
  %const_str_store.repack623 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 73, i64* %const_str_store.repack623, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 0)
  unreachable

then_block96:                                     ; preds = %branch2
  %index100 = sub nsw i64 0, %masked77
  %new_ptr102 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %index100
  %150 = bitcast { %str.RocStr, %str.RocStr }* %load_at_index_ptr_old106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %150, i8* noundef nonnull align 8 dereferenceable(48) %new_ptr102, i64 48, i1 false)
  %151 = bitcast %str.RocStr* %struct_field1.i643 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151)
  %152 = bitcast %str.RocStr* %struct_field.i644 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %152, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr102, i64 24, i1 false)
  %load_str_to_stack.i.i646.elt883 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i644, i64 0, i32 2
  %load_str_to_stack.i.i646.unpack884 = load i64, i64* %load_str_to_stack.i.i646.elt883, align 8
  %is_big_str.i.i648 = icmp sgt i64 %load_str_to_stack.i.i646.unpack884, 0
  br i1 %is_big_str.i.i648, label %modify_rc.i.i653, label %"#Attr_#dec_5.exit"

modify_rc.i.i653:                                 ; preds = %then_block96
  %call_builtin.i.i649 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i644) #11
  %get_rc_ptr.i.i651 = getelementptr inbounds i8, i8* %call_builtin.i.i649, i64 -8
  %153 = bitcast i8* %get_rc_ptr.i.i651 to i64*
  %154 = load i64, i64* %153, align 8
  %.not.i.i.i.i.i652 = icmp eq i64 %154, 0
  br i1 %.not.i.i.i.i.i652, label %"#Attr_#dec_5.exit", label %Then.i.i.i.i.i654

Then.i.i.i.i.i654:                                ; preds = %modify_rc.i.i653
  %155 = add i64 %154, -1
  store i64 %155, i64* %153, align 8
  %156 = icmp eq i64 %154, -9223372036854775808
  br i1 %156, label %Then1.i.i.i.i.i655, label %"#Attr_#dec_5.exit"

Then1.i.i.i.i.i655:                               ; preds = %Then.i.i.i.i.i654
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i651, i32 8) #11
  br label %"#Attr_#dec_5.exit"

"#Attr_#dec_5.exit":                              ; preds = %modify_rc.i.i653, %Then.i.i.i.i.i654, %Then1.i.i.i.i.i655, %then_block96
  %struct_field_access_record_1.i657 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %load_at_index_ptr_old106, i64 0, i32 1
  %157 = bitcast %str.RocStr* %struct_field_access_record_1.i657 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %151, i8* noundef nonnull align 8 dereferenceable(24) %157, i64 24, i1 false) #11
  %load_str_to_stack.i764.elt888 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i643, i64 0, i32 2
  %load_str_to_stack.i764.unpack889 = load i64, i64* %load_str_to_stack.i764.elt888, align 8
  %is_big_str.i766 = icmp sgt i64 %load_str_to_stack.i764.unpack889, 0
  br i1 %is_big_str.i766, label %modify_rc.i771, label %"#Attr_#dec_4.exit775"

modify_rc.i771:                                   ; preds = %"#Attr_#dec_5.exit"
  %call_builtin.i767 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i643) #11
  %get_rc_ptr.i769 = getelementptr inbounds i8, i8* %call_builtin.i767, i64 -8
  %158 = bitcast i8* %get_rc_ptr.i769 to i64*
  %159 = load i64, i64* %158, align 8
  %.not.i.i.i.i770 = icmp eq i64 %159, 0
  br i1 %.not.i.i.i.i770, label %"#Attr_#dec_4.exit775", label %Then.i.i.i.i772

Then.i.i.i.i772:                                  ; preds = %modify_rc.i771
  %160 = add i64 %159, -1
  store i64 %160, i64* %158, align 8
  %161 = icmp eq i64 %159, -9223372036854775808
  br i1 %161, label %Then1.i.i.i.i773, label %"#Attr_#dec_4.exit775"

Then1.i.i.i.i773:                                 ; preds = %Then.i.i.i.i772
  tail call void @roc_dealloc(i8* %get_rc_ptr.i769, i32 8) #11
  br label %"#Attr_#dec_4.exit775"

"#Attr_#dec_4.exit775":                           ; preds = %modify_rc.i771, %Then.i.i.i.i772, %Then1.i.i.i.i773, %"#Attr_#dec_5.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152)
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %81)
  br label %joinpointcont85

then121:                                          ; preds = %branch2
  %load_str_to_stack.i658.elt878 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old84, i64 0, i32 2
  %load_str_to_stack.i658.unpack879 = load i64, i64* %load_str_to_stack.i658.elt878, align 8
  %is_big_str.i660 = icmp sgt i64 %load_str_to_stack.i658.unpack879, 0
  br i1 %is_big_str.i660, label %modify_rc.i665, label %"#Attr_#inc_4.exit667"

modify_rc.i665:                                   ; preds = %then121
  %call_builtin.i661 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old84) #11
  %get_rc_ptr.i663 = getelementptr inbounds i8, i8* %call_builtin.i661, i64 -8
  %162 = bitcast i8* %get_rc_ptr.i663 to i64*
  %163 = load i64, i64* %162, align 8
  %.not.i.i664 = icmp eq i64 %163, 0
  br i1 %.not.i.i664, label %"#Attr_#inc_4.exit667", label %Then.i.i666

Then.i.i666:                                      ; preds = %modify_rc.i665
  %164 = add nsw i64 %163, 1
  store i64 %164, i64* %162, align 8
  %.pre = load i64, i64* %81, align 8
  br label %"#Attr_#inc_4.exit667"

"#Attr_#inc_4.exit667":                           ; preds = %then121, %modify_rc.i665, %Then.i.i666
  %165 = phi i64 [ %get_refcount93, %then121 ], [ %get_refcount93, %modify_rc.i665 ], [ %.pre, %Then.i.i666 ]
  %.not.i.i.i668 = icmp eq i64 %165, 0
  br i1 %.not.i.i.i668, label %joinpointcont85, label %Then.i.i.i669

Then.i.i.i669:                                    ; preds = %"#Attr_#inc_4.exit667"
  %166 = add i64 %165, -1
  store i64 %166, i64* %81, align 8
  %167 = icmp eq i64 %165, -9223372036854775808
  br i1 %167, label %Then1.i.i.i670, label %joinpointcont85

Then1.i.i.i670:                                   ; preds = %Then.i.i.i669
  tail call void @roc_dealloc(i8* %get_rc_ptr92, i32 8) #11
  br label %joinpointcont85

joinpointcont85:                                  ; preds = %Then1.i.i.i670, %Then.i.i.i669, %"#Attr_#inc_4.exit667", %"#Attr_#dec_4.exit775"
  %168 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %168)
  %169 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %169)
  %struct_field.elt.i1097 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1098 = load i8*, i8** %struct_field.elt.i1097, align 8
  %struct_field.elt1.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack2.i = load i64, i64* %struct_field.elt1.i, align 8
  %struct_field.elt3.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack4.i = load i64, i64* %struct_field.elt3.i, align 8
  %170 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1096 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #11
  %"cap > 0.not.i.i1099" = icmp eq i64 %struct_field.unpack4.i, 0
  br i1 %"cap > 0.not.i.i1099", label %"#Attr_#inc_17.exit.i", label %modification_list_block.i.i1102

modification_list_block.i.i1102:                  ; preds = %joinpointcont85
  %cast_basic_basic.i.i1100 = bitcast i8* %struct_field.unpack.i1098 to %str.RocStr*
  %bounds_check.not.i.i1101 = icmp eq i64 %struct_field.unpack2.i, 0
  br i1 %bounds_check.not.i.i1101, label %after_loop.i.i1114, label %loop.preheader.i.i1103

loop.preheader.i.i1103:                           ; preds = %modification_list_block.i.i1102
  %load_str_to_stack.i.elt7.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1096, i64 0, i32 2
  br label %loop.i.i1107

loop.i.i1107:                                     ; preds = %"#Attr_#inc_4.exit.i.i", %loop.preheader.i.i1103
  %next_index10.i.i = phi i64 [ 0, %loop.preheader.i.i1103 ], [ %next_index.i.i1104, %"#Attr_#inc_4.exit.i.i" ]
  %next_index.i.i1104 = add nuw i64 %next_index10.i.i, 1
  %load_index.i.i1105 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1100, i64 %next_index10.i.i
  %171 = bitcast %str.RocStr* %load_index.i.i1105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %170, i8* noundef nonnull align 8 dereferenceable(24) %171, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i = load i64, i64* %load_str_to_stack.i.elt7.i.i, align 8
  %is_big_str.i.i.i1106 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i, 0
  br i1 %is_big_str.i.i.i1106, label %modify_rc.i.i.i1109, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i1109:                              ; preds = %loop.i.i1107
  %call_builtin.i.i.i1108 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1096) #11
  %get_rc_ptr.i.i33.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i1108, i64 -8
  %172 = bitcast i8* %get_rc_ptr.i.i33.i to i64*
  %173 = load i64, i64* %172, align 8
  %.not.i.i2.i.i = icmp eq i64 %173, 0
  br i1 %.not.i.i2.i.i, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i34.i

Then.i.i.i34.i:                                   ; preds = %modify_rc.i.i.i1109
  %174 = add nsw i64 %173, 1
  store i64 %174, i64* %172, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i34.i, %modify_rc.i.i.i1109, %loop.i.i1107
  %exitcond.not.i1110 = icmp eq i64 %next_index.i.i1104, %struct_field.unpack2.i
  br i1 %exitcond.not.i1110, label %after_loop.i.i1114, label %loop.i.i1107

after_loop.i.i1114:                               ; preds = %"#Attr_#inc_4.exit.i.i", %modification_list_block.i.i1102
  %175 = ptrtoint i8* %struct_field.unpack.i1098 to i64
  %176 = shl i64 %struct_field.unpack4.i, 1
  %.not.i.i.i35.i = icmp slt i64 %struct_field.unpack4.i, 0
  %177 = select i1 %.not.i.i.i35.i, i64 %176, i64 %175
  %as_usize_ptr.i.i1111 = inttoptr i64 %177 to i64*
  %get_rc_ptr.i.i1112 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1111, i64 -1
  %178 = load i64, i64* %get_rc_ptr.i.i1112, align 8
  %.not.i.i.i1113 = icmp eq i64 %178, 0
  br i1 %.not.i.i.i1113, label %"#Attr_#inc_17.exit.i", label %Then.i.i.i1115

Then.i.i.i1115:                                   ; preds = %after_loop.i.i1114
  %179 = add nsw i64 %178, 1
  store i64 %179, i64* %get_rc_ptr.i.i1112, align 8
  br label %"#Attr_#inc_17.exit.i"

"#Attr_#inc_17.exit.i":                           ; preds = %Then.i.i.i1115, %after_loop.i.i1114, %joinpointcont85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #11
  %struct_field1.sroa.237.0..sroa_idx38.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1116 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1117 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i, align 8
  %"cap > 0.i.i.not.i1118" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i1118", label %"#Attr_#inc_9.exit.i.i", label %modification_list_block.i.i.i1125

modification_list_block.i.i.i1125:                ; preds = %"#Attr_#inc_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i1119 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1120 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1119, align 8
  %180 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1120 to i64
  %181 = shl i64 %struct_field1.sroa.237.0.copyload.i, 1
  %.not.i.i.i.i.i1121 = icmp slt i64 %struct_field1.sroa.237.0.copyload.i, 0
  %182 = select i1 %.not.i.i.i.i.i1121, i64 %181, i64 %180
  %as_usize_ptr.i.i.i1122 = inttoptr i64 %182 to i64*
  %get_rc_ptr.i.i.i1123 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1122, i64 -1
  %183 = load i64, i64* %get_rc_ptr.i.i.i1123, align 8
  %.not.i.i.i.i1124 = icmp eq i64 %183, 0
  br i1 %.not.i.i.i.i1124, label %"#Attr_#inc_9.exit.i.i", label %Then.i.i.i.i1126

Then.i.i.i.i1126:                                 ; preds = %modification_list_block.i.i.i1125
  %184 = add nsw i64 %183, 1
  store i64 %184, i64* %get_rc_ptr.i.i.i1123, align 8
  br label %"#Attr_#inc_9.exit.i.i"

"#Attr_#inc_9.exit.i.i":                          ; preds = %Then.i.i.i.i1126, %modification_list_block.i.i.i1125, %"#Attr_#inc_17.exit.i"
  %"cap > 0.i18.i.not.i" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i, 0
  br i1 %"cap > 0.i18.i.not.i", label %"#Attr_#inc_10.exit.i.i", label %modification_list_block.i27.i.i

modification_list_block.i27.i.i:                  ; preds = %"#Attr_#inc_9.exit.i.i"
  %185 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1116 to i64
  %186 = shl i64 %struct_field1.sroa.441.0.copyload.i, 1
  %.not.i.i.i23.i.i = icmp slt i64 %struct_field1.sroa.441.0.copyload.i, 0
  %187 = select i1 %.not.i.i.i23.i.i, i64 %186, i64 %185
  %as_usize_ptr.i24.i.i = inttoptr i64 %187 to i64*
  %get_rc_ptr.i25.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i, i64 -1
  %188 = load i64, i64* %get_rc_ptr.i25.i.i, align 8
  %.not.i.i26.i.i = icmp eq i64 %188, 0
  br i1 %.not.i.i26.i.i, label %"#Attr_#inc_10.exit.i.i", label %Then.i.i28.i.i

Then.i.i28.i.i:                                   ; preds = %modification_list_block.i27.i.i
  %189 = add nsw i64 %188, 1
  store i64 %189, i64* %get_rc_ptr.i25.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i"

"#Attr_#inc_10.exit.i.i":                         ; preds = %Then.i.i28.i.i, %modification_list_block.i27.i.i, %"#Attr_#inc_9.exit.i.i"
  %"cap > 0.i5.i.not.i" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i, 0
  br i1 %"cap > 0.i5.i.not.i", label %"#Attr_#inc_16.exit", label %modification_list_block.i14.i.i

modification_list_block.i14.i.i:                  ; preds = %"#Attr_#inc_10.exit.i.i"
  %190 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1117 to i64
  %191 = shl i64 %struct_field1.sroa.645.0.copyload.i, 1
  %.not.i.i.i10.i.i = icmp slt i64 %struct_field1.sroa.645.0.copyload.i, 0
  %192 = select i1 %.not.i.i.i10.i.i, i64 %191, i64 %190
  %as_usize_ptr.i11.i.i = inttoptr i64 %192 to i64*
  %get_rc_ptr.i12.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i, i64 -1
  %193 = load i64, i64* %get_rc_ptr.i12.i.i, align 8
  %.not.i.i13.i.i = icmp eq i64 %193, 0
  br i1 %.not.i.i13.i.i, label %"#Attr_#inc_16.exit", label %Then.i.i15.i.i

Then.i.i15.i.i:                                   ; preds = %modification_list_block.i14.i.i
  %194 = add nsw i64 %193, 1
  store i64 %194, i64* %get_rc_ptr.i12.i.i, align 8
  br label %"#Attr_#inc_16.exit"

"#Attr_#inc_16.exit":                             ; preds = %"#Attr_#inc_10.exit.i.i", %modification_list_block.i14.i.i, %Then.i.i15.i.i
  call fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i) #11
  call fastcc void @Result_mapErr_f3717d8d695ceecc8bdf05d2fa68cfb4e9074a591f91410b8cf55b1598d641({ [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i, %str.RocStr* nonnull %load_at_index_ptr_old84, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i) #11
  call fastcc void @Result_map_3f9ab963e3201c9c9298568dff66db4e8baa1bfb7c816e95b979552a49782f7({ [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %168)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %169)
  call fastcc void @Result_map_8aa359bd749b8effde17d95d39df5dd5cfceb675b455e8288a857540333415({ [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value126)
  %195 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value126 to i8*
  br label %common.ret

then_block147:                                    ; preds = %branch3
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %86)
  br label %joinpointcont136

then163:                                          ; preds = %branch3
  %"cap > 0.not.i" = icmp eq i64 %load_at_index_ptr_old135.unpack329, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#inc_19.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %then163
  %cast_basic_basic.i = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %196 = bitcast %str.RocStr* %struct_field.i.i1127 to i8*
  %struct_field.i.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 0
  %struct_field.i.repack13.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 1
  %struct_field.i.repack15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#inc_14.exit.i", %loop.preheader.i
  %index.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#inc_14.exit.i" ]
  %next_index.i = add nuw i64 %index.i, 1
  %incrementing_element_loop_load.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i, align 8
  %incrementing_element_loop_load.unpack.elt8.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i, align 8
  %incrementing_element_loop_load.unpack.elt10.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i, align 8
  %incrementing_element_loop_load.elt5.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 1
  %incrementing_element_loop_load.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i, i8** %struct_field.i.repack.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i, i64* %struct_field.i.repack13.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i, i64* %struct_field.i.repack15.i, align 8
  %is_big_str.i.i.i1128 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i, 0
  br i1 %is_big_str.i.i.i1128, label %modify_rc.i.i.i1132, label %"#Attr_#inc_4.exit.i.i1134"

modify_rc.i.i.i1132:                              ; preds = %loop.i
  %call_builtin.i.i.i1129 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1127) #11
  %get_rc_ptr.i.i.i1130 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1129, i64 -8
  %197 = bitcast i8* %get_rc_ptr.i.i.i1130 to i64*
  %198 = load i64, i64* %197, align 8
  %.not.i.i.i.i1131 = icmp eq i64 %198, 0
  br i1 %.not.i.i.i.i1131, label %"#Attr_#inc_4.exit.i.i1134", label %Then.i.i.i.i1133

Then.i.i.i.i1133:                                 ; preds = %modify_rc.i.i.i1132
  %199 = add nsw i64 %198, 1
  store i64 %199, i64* %197, align 8
  br label %"#Attr_#inc_4.exit.i.i1134"

"#Attr_#inc_4.exit.i.i1134":                      ; preds = %Then.i.i.i.i1133, %modify_rc.i.i.i1132, %loop.i
  %to_int1.i.i.i = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i64
  %masked.i.i.i = and i64 %to_int1.i.i.i, 7
  %cast_to_i8_ptr.i.i.i = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i8*
  %get_rc_ptr.i2.i.idx.i = sub nuw nsw i64 -8, %masked.i.i.i
  %get_rc_ptr.i2.i.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i, i64 %get_rc_ptr.i2.i.idx.i
  %200 = bitcast i8* %get_rc_ptr.i2.i.i to i64*
  %201 = load i64, i64* %200, align 8
  %.not.i.i3.i.i = icmp eq i64 %201, 0
  br i1 %.not.i.i3.i.i, label %"#Attr_#inc_14.exit.i", label %Then.i.i4.i.i

Then.i.i4.i.i:                                    ; preds = %"#Attr_#inc_4.exit.i.i1134"
  %202 = add nsw i64 %201, 1
  store i64 %202, i64* %200, align 8
  br label %"#Attr_#inc_14.exit.i"

"#Attr_#inc_14.exit.i":                           ; preds = %Then.i.i4.i.i, %"#Attr_#inc_4.exit.i.i1134"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #11
  %exitcond1440.not = icmp eq i64 %next_index.i, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond1440.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#inc_14.exit.i", %modification_list_block.i
  %203 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %204 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1135 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %205 = select i1 %.not.i.i.i1135, i64 %204, i64 %203
  %as_usize_ptr.i = inttoptr i64 %205 to i64*
  %get_rc_ptr.i1136 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %206 = load i64, i64* %get_rc_ptr.i1136, align 8
  %.not.i.i1137 = icmp eq i64 %206, 0
  br i1 %.not.i.i1137, label %"#Attr_#inc_19.exitthread-pre-split", label %Then.i.i1138

Then.i.i1138:                                     ; preds = %after_loop.i
  %207 = add nsw i64 %206, 1
  store i64 %207, i64* %get_rc_ptr.i1136, align 8
  br label %"#Attr_#inc_19.exitthread-pre-split"

"#Attr_#inc_19.exitthread-pre-split":             ; preds = %Then.i.i1138, %after_loop.i
  %.pr = load i64, i64* %86, align 8
  br label %"#Attr_#inc_19.exit"

"#Attr_#inc_19.exit":                             ; preds = %"#Attr_#inc_19.exitthread-pre-split", %then163
  %208 = phi i64 [ %.pr, %"#Attr_#inc_19.exitthread-pre-split" ], [ %get_refcount144, %then163 ]
  %.not.i.i.i672 = icmp eq i64 %208, 0
  br i1 %.not.i.i.i672, label %joinpointcont136, label %Then.i.i.i673

Then.i.i.i673:                                    ; preds = %"#Attr_#inc_19.exit"
  %209 = add i64 %208, -1
  store i64 %209, i64* %86, align 8
  %210 = icmp eq i64 %208, -9223372036854775808
  br i1 %210, label %Then1.i.i.i674, label %joinpointcont136

Then1.i.i.i674:                                   ; preds = %Then.i.i.i673
  tail call void @roc_dealloc(i8* %get_rc_ptr143, i32 8) #11
  br label %joinpointcont136

joinpointcont136:                                 ; preds = %Then1.i.i.i674, %Then.i.i.i673, %"#Attr_#inc_19.exit", %then_block147
  %struct_field.elt.i1140 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1141 = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field.elt1.i1142 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack2.i1143 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field.elt3.i1144 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack4.i1145 = load i64, i64* %struct_field.elt3.i1144, align 8
  %211 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1139 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #11
  %"cap > 0.not.i.i1146" = icmp eq i64 %struct_field.unpack4.i1145, 0
  br i1 %"cap > 0.not.i.i1146", label %"#Attr_#inc_17.exit.i1182", label %modification_list_block.i.i1149

modification_list_block.i.i1149:                  ; preds = %joinpointcont136
  %cast_basic_basic.i.i1147 = bitcast i8* %struct_field.unpack.i1141 to %str.RocStr*
  %bounds_check.not.i.i1148 = icmp eq i64 %struct_field.unpack2.i1143, 0
  br i1 %bounds_check.not.i.i1148, label %after_loop.i.i1169, label %loop.preheader.i.i1151

loop.preheader.i.i1151:                           ; preds = %modification_list_block.i.i1149
  %load_str_to_stack.i.elt7.i.i1150 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1139, i64 0, i32 2
  br label %loop.i.i1157

loop.i.i1157:                                     ; preds = %"#Attr_#inc_4.exit.i.i1164", %loop.preheader.i.i1151
  %next_index10.i.i1152 = phi i64 [ 0, %loop.preheader.i.i1151 ], [ %next_index.i.i1153, %"#Attr_#inc_4.exit.i.i1164" ]
  %next_index.i.i1153 = add nuw i64 %next_index10.i.i1152, 1
  %load_index.i.i1154 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1147, i64 %next_index10.i.i1152
  %212 = bitcast %str.RocStr* %load_index.i.i1154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %211, i8* noundef nonnull align 8 dereferenceable(24) %212, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i1155 = load i64, i64* %load_str_to_stack.i.elt7.i.i1150, align 8
  %is_big_str.i.i.i1156 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i1155, 0
  br i1 %is_big_str.i.i.i1156, label %modify_rc.i.i.i1161, label %"#Attr_#inc_4.exit.i.i1164"

modify_rc.i.i.i1161:                              ; preds = %loop.i.i1157
  %call_builtin.i.i.i1158 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1139) #11
  %get_rc_ptr.i.i33.i1159 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1158, i64 -8
  %213 = bitcast i8* %get_rc_ptr.i.i33.i1159 to i64*
  %214 = load i64, i64* %213, align 8
  %.not.i.i2.i.i1160 = icmp eq i64 %214, 0
  br i1 %.not.i.i2.i.i1160, label %"#Attr_#inc_4.exit.i.i1164", label %Then.i.i.i34.i1162

Then.i.i.i34.i1162:                               ; preds = %modify_rc.i.i.i1161
  %215 = add nsw i64 %214, 1
  store i64 %215, i64* %213, align 8
  br label %"#Attr_#inc_4.exit.i.i1164"

"#Attr_#inc_4.exit.i.i1164":                      ; preds = %Then.i.i.i34.i1162, %modify_rc.i.i.i1161, %loop.i.i1157
  %exitcond.not.i1163 = icmp eq i64 %next_index.i.i1153, %struct_field.unpack2.i1143
  br i1 %exitcond.not.i1163, label %after_loop.i.i1169, label %loop.i.i1157

after_loop.i.i1169:                               ; preds = %"#Attr_#inc_4.exit.i.i1164", %modification_list_block.i.i1149
  %216 = ptrtoint i8* %struct_field.unpack.i1141 to i64
  %217 = shl i64 %struct_field.unpack4.i1145, 1
  %.not.i.i.i35.i1165 = icmp slt i64 %struct_field.unpack4.i1145, 0
  %218 = select i1 %.not.i.i.i35.i1165, i64 %217, i64 %216
  %as_usize_ptr.i.i1166 = inttoptr i64 %218 to i64*
  %get_rc_ptr.i.i1167 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1166, i64 -1
  %219 = load i64, i64* %get_rc_ptr.i.i1167, align 8
  %.not.i.i.i1168 = icmp eq i64 %219, 0
  br i1 %.not.i.i.i1168, label %"#Attr_#inc_17.exit.i1182", label %Then.i.i.i1170

Then.i.i.i1170:                                   ; preds = %after_loop.i.i1169
  %220 = add nsw i64 %219, 1
  store i64 %220, i64* %get_rc_ptr.i.i1167, align 8
  br label %"#Attr_#inc_17.exit.i1182"

"#Attr_#inc_17.exit.i1182":                       ; preds = %Then.i.i.i1170, %after_loop.i.i1169, %joinpointcont136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #11
  %struct_field1.sroa.237.0..sroa_idx38.i1171 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i1172 = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i1171, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i1173 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1174 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i1173, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i1175 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i1176 = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i1175, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i1177 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1178 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i1177, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i1179 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i1180 = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i1179, align 8
  %"cap > 0.i.i.not.i1181" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i1172, 0
  br i1 %"cap > 0.i.i.not.i1181", label %"#Attr_#inc_9.exit.i.i1192", label %modification_list_block.i.i.i1189

modification_list_block.i.i.i1189:                ; preds = %"#Attr_#inc_17.exit.i1182"
  %struct_field1.sroa.0.0..sroa_idx.i1183 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1184 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1183, align 8
  %221 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1184 to i64
  %222 = shl i64 %struct_field1.sroa.237.0.copyload.i1172, 1
  %.not.i.i.i.i.i1185 = icmp slt i64 %struct_field1.sroa.237.0.copyload.i1172, 0
  %223 = select i1 %.not.i.i.i.i.i1185, i64 %222, i64 %221
  %as_usize_ptr.i.i.i1186 = inttoptr i64 %223 to i64*
  %get_rc_ptr.i.i.i1187 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1186, i64 -1
  %224 = load i64, i64* %get_rc_ptr.i.i.i1187, align 8
  %.not.i.i.i.i1188 = icmp eq i64 %224, 0
  br i1 %.not.i.i.i.i1188, label %"#Attr_#inc_9.exit.i.i1192", label %Then.i.i.i.i1190

Then.i.i.i.i1190:                                 ; preds = %modification_list_block.i.i.i1189
  %225 = add nsw i64 %224, 1
  store i64 %225, i64* %get_rc_ptr.i.i.i1187, align 8
  br label %"#Attr_#inc_9.exit.i.i1192"

"#Attr_#inc_9.exit.i.i1192":                      ; preds = %Then.i.i.i.i1190, %modification_list_block.i.i.i1189, %"#Attr_#inc_17.exit.i1182"
  %"cap > 0.i18.i.not.i1191" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i1176, 0
  br i1 %"cap > 0.i18.i.not.i1191", label %"#Attr_#inc_10.exit.i.i1200", label %modification_list_block.i27.i.i1197

modification_list_block.i27.i.i1197:              ; preds = %"#Attr_#inc_9.exit.i.i1192"
  %226 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1174 to i64
  %227 = shl i64 %struct_field1.sroa.441.0.copyload.i1176, 1
  %.not.i.i.i23.i.i1193 = icmp slt i64 %struct_field1.sroa.441.0.copyload.i1176, 0
  %228 = select i1 %.not.i.i.i23.i.i1193, i64 %227, i64 %226
  %as_usize_ptr.i24.i.i1194 = inttoptr i64 %228 to i64*
  %get_rc_ptr.i25.i.i1195 = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i1194, i64 -1
  %229 = load i64, i64* %get_rc_ptr.i25.i.i1195, align 8
  %.not.i.i26.i.i1196 = icmp eq i64 %229, 0
  br i1 %.not.i.i26.i.i1196, label %"#Attr_#inc_10.exit.i.i1200", label %Then.i.i28.i.i1198

Then.i.i28.i.i1198:                               ; preds = %modification_list_block.i27.i.i1197
  %230 = add nsw i64 %229, 1
  store i64 %230, i64* %get_rc_ptr.i25.i.i1195, align 8
  br label %"#Attr_#inc_10.exit.i.i1200"

"#Attr_#inc_10.exit.i.i1200":                     ; preds = %Then.i.i28.i.i1198, %modification_list_block.i27.i.i1197, %"#Attr_#inc_9.exit.i.i1192"
  %"cap > 0.i5.i.not.i1199" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i1180, 0
  br i1 %"cap > 0.i5.i.not.i1199", label %"#Attr_#inc_16.exit1207", label %modification_list_block.i14.i.i1205

modification_list_block.i14.i.i1205:              ; preds = %"#Attr_#inc_10.exit.i.i1200"
  %231 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1178 to i64
  %232 = shl i64 %struct_field1.sroa.645.0.copyload.i1180, 1
  %.not.i.i.i10.i.i1201 = icmp slt i64 %struct_field1.sroa.645.0.copyload.i1180, 0
  %233 = select i1 %.not.i.i.i10.i.i1201, i64 %232, i64 %231
  %as_usize_ptr.i11.i.i1202 = inttoptr i64 %233 to i64*
  %get_rc_ptr.i12.i.i1203 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i1202, i64 -1
  %234 = load i64, i64* %get_rc_ptr.i12.i.i1203, align 8
  %.not.i.i13.i.i1204 = icmp eq i64 %234, 0
  br i1 %.not.i.i13.i.i1204, label %"#Attr_#inc_16.exit1207", label %Then.i.i15.i.i1206

Then.i.i15.i.i1206:                               ; preds = %modification_list_block.i14.i.i1205
  %235 = add nsw i64 %234, 1
  store i64 %235, i64* %get_rc_ptr.i12.i.i1203, align 8
  br label %"#Attr_#inc_16.exit1207"

"#Attr_#inc_16.exit1207":                         ; preds = %"#Attr_#inc_10.exit.i.i1200", %modification_list_block.i14.i.i1205, %Then.i.i15.i.i1206
  call fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value168)
  %tag_id_ptr169 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr169, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block171, label %else_block172

then_block171:                                    ; preds = %"#Attr_#inc_16.exit1207"
  %"cap > 0.not.i1209" = icmp eq i64 %load_at_index_ptr_old135.unpack329, 0
  br i1 %"cap > 0.not.i1209", label %"#Attr_#inc_19.exit1250", label %modification_list_block.i1212

modification_list_block.i1212:                    ; preds = %then_block171
  %cast_basic_basic.i1210 = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i1211 = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i1211, label %after_loop.i1248, label %loop.preheader.i1216

loop.preheader.i1216:                             ; preds = %modification_list_block.i1212
  %236 = bitcast %str.RocStr* %struct_field.i.i1208 to i8*
  %struct_field.i.repack.i1213 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 0
  %struct_field.i.repack13.i1214 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 1
  %struct_field.i.repack15.i1215 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 2
  br label %loop.i1228

loop.i1228:                                       ; preds = %"#Attr_#inc_14.exit.i1243", %loop.preheader.i1216
  %index.i1217 = phi i64 [ 0, %loop.preheader.i1216 ], [ %next_index.i1218, %"#Attr_#inc_14.exit.i1243" ]
  %next_index.i1218 = add nuw i64 %index.i1217, 1
  %incrementing_element_loop_load.unpack.elt.i1219 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i1220 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i1219, align 8
  %incrementing_element_loop_load.unpack.elt8.i1221 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i1222 = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i1221, align 8
  %incrementing_element_loop_load.unpack.elt10.i1223 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i1224 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i1223, align 8
  %incrementing_element_loop_load.elt5.i1225 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 1
  %incrementing_element_loop_load.unpack6.i1226 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i1225, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i1220, i8** %struct_field.i.repack.i1213, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i1222, i64* %struct_field.i.repack13.i1214, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i1224, i64* %struct_field.i.repack15.i1215, align 8
  %is_big_str.i.i.i1227 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i1224, 0
  br i1 %is_big_str.i.i.i1227, label %modify_rc.i.i.i1232, label %"#Attr_#inc_4.exit.i.i1240"

modify_rc.i.i.i1232:                              ; preds = %loop.i1228
  %call_builtin.i.i.i1229 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1208) #11
  %get_rc_ptr.i.i.i1230 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1229, i64 -8
  %237 = bitcast i8* %get_rc_ptr.i.i.i1230 to i64*
  %238 = load i64, i64* %237, align 8
  %.not.i.i.i.i1231 = icmp eq i64 %238, 0
  br i1 %.not.i.i.i.i1231, label %"#Attr_#inc_4.exit.i.i1240", label %Then.i.i.i.i1233

Then.i.i.i.i1233:                                 ; preds = %modify_rc.i.i.i1232
  %239 = add nsw i64 %238, 1
  store i64 %239, i64* %237, align 8
  br label %"#Attr_#inc_4.exit.i.i1240"

"#Attr_#inc_4.exit.i.i1240":                      ; preds = %Then.i.i.i.i1233, %modify_rc.i.i.i1232, %loop.i1228
  %to_int1.i.i.i1234 = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i1226 to i64
  %masked.i.i.i1235 = and i64 %to_int1.i.i.i1234, 7
  %cast_to_i8_ptr.i.i.i1236 = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i1226 to i8*
  %get_rc_ptr.i2.i.idx.i1237 = sub nuw nsw i64 -8, %masked.i.i.i1235
  %get_rc_ptr.i2.i.i1238 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i1236, i64 %get_rc_ptr.i2.i.idx.i1237
  %240 = bitcast i8* %get_rc_ptr.i2.i.i1238 to i64*
  %241 = load i64, i64* %240, align 8
  %.not.i.i3.i.i1239 = icmp eq i64 %241, 0
  br i1 %.not.i.i3.i.i1239, label %"#Attr_#inc_14.exit.i1243", label %Then.i.i4.i.i1241

Then.i.i4.i.i1241:                                ; preds = %"#Attr_#inc_4.exit.i.i1240"
  %242 = add nsw i64 %241, 1
  store i64 %242, i64* %240, align 8
  br label %"#Attr_#inc_14.exit.i1243"

"#Attr_#inc_14.exit.i1243":                       ; preds = %Then.i.i4.i.i1241, %"#Attr_#inc_4.exit.i.i1240"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #11
  %exitcond1439.not = icmp eq i64 %next_index.i1218, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond1439.not, label %after_loop.i1248, label %loop.i1228

after_loop.i1248:                                 ; preds = %"#Attr_#inc_14.exit.i1243", %modification_list_block.i1212
  %243 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %244 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1244 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %245 = select i1 %.not.i.i.i1244, i64 %244, i64 %243
  %as_usize_ptr.i1245 = inttoptr i64 %245 to i64*
  %get_rc_ptr.i1246 = getelementptr inbounds i64, i64* %as_usize_ptr.i1245, i64 -1
  %246 = load i64, i64* %get_rc_ptr.i1246, align 8
  %.not.i.i1247 = icmp eq i64 %246, 0
  br i1 %.not.i.i1247, label %"#Attr_#inc_19.exit1250", label %Then.i.i1249

Then.i.i1249:                                     ; preds = %after_loop.i1248
  %247 = add nsw i64 %246, 1
  store i64 %247, i64* %get_rc_ptr.i1246, align 8
  br label %"#Attr_#inc_19.exit1250"

"#Attr_#inc_19.exit1250":                         ; preds = %then_block171, %after_loop.i1248, %Then.i.i1249
  %load_element.elt = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt395 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 1
  %load_element.unpack396.elt = bitcast i64* %load_element.elt395 to i8**
  %load_element.unpack396.unpack = load i8*, i8** %load_element.unpack396.elt, align 8
  %248 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 2
  %load_element.unpack396.unpack399 = load i64, i64* %248, align 8
  %249 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 3
  %load_element.unpack396.unpack401 = load i64, i64* %249, align 8
  %struct_field.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 0
  store i8* %load_element.unpack396.unpack, i8** %struct_field.repack, align 8
  %struct_field.repack403 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %struct_field.repack403, align 8
  %struct_field.repack405 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %struct_field.repack405, align 8
  %is_big_str.i678 = icmp sgt i64 %load_element.unpack396.unpack401, 0
  br i1 %is_big_str.i678, label %modify_rc.i683, label %"#Attr_#inc_4.exit685"

modify_rc.i683:                                   ; preds = %"#Attr_#inc_19.exit1250"
  %call_builtin.i679 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i681 = getelementptr inbounds i8, i8* %call_builtin.i679, i64 -8
  %250 = bitcast i8* %get_rc_ptr.i681 to i64*
  %251 = load i64, i64* %250, align 8
  %.not.i.i682 = icmp eq i64 %251, 0
  br i1 %.not.i.i682, label %"#Attr_#inc_4.exit685", label %Then.i.i684

Then.i.i684:                                      ; preds = %modify_rc.i683
  %252 = add nsw i64 %251, 1
  store i64 %252, i64* %250, align 8
  br label %"#Attr_#inc_4.exit685"

"#Attr_#inc_4.exit685":                           ; preds = %"#Attr_#inc_19.exit1250", %modify_rc.i683, %Then.i.i684
  %struct_field175.unpack = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field175.unpack408 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field175.unpack410 = load i64, i64* %struct_field.elt3.i1144, align 8
  %struct_field_access_record_1176 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1
  %253 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field177 to i8*
  %254 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field_access_record_1176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %253, i8* noundef nonnull align 8 dereferenceable(80) %254, i64 80, i1 false)
  %255 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %255)
  call fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_field177, i64 %load_element.unpack, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i686) #11
  %result_value178.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 0
  %result_value178.sroa.0.0.copyload = load i8*, i8** %result_value178.sroa.0.0..sroa_idx, align 8
  %result_value178.sroa.2.0..sroa_idx1391 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 1
  %result_value178.sroa.2.0.copyload = load i64, i64* %result_value178.sroa.2.0..sroa_idx1391, align 8
  %result_value178.sroa.3.0..sroa_idx1392 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 2
  %result_value178.sroa.3.0.copyload = load i64, i64* %result_value178.sroa.3.0..sroa_idx1392, align 8
  %result_value178.sroa.4.0..sroa_idx1393 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 0
  %result_value178.sroa.4.0.copyload = load i8*, i8** %result_value178.sroa.4.0..sroa_idx1393, align 8
  %result_value178.sroa.5.0..sroa_idx1394 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 1
  %result_value178.sroa.5.0.copyload = load i64, i64* %result_value178.sroa.5.0..sroa_idx1394, align 8
  %result_value178.sroa.6.0..sroa_idx1395 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 2
  %result_value178.sroa.6.0.copyload = load i64, i64* %result_value178.sroa.6.0..sroa_idx1395, align 8
  %result_value178.sroa.7.0..sroa_idx1396 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 0
  %result_value178.sroa.7.0.copyload = load i8*, i8** %result_value178.sroa.7.0..sroa_idx1396, align 8
  %result_value178.sroa.8.0..sroa_idx1397 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 1
  %result_value178.sroa.8.0.copyload = load i64, i64* %result_value178.sroa.8.0..sroa_idx1397, align 8
  %result_value178.sroa.9.0..sroa_idx1398 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 2
  %result_value178.sroa.9.0.copyload = load i64, i64* %result_value178.sroa.9.0..sroa_idx1398, align 8
  %result_value178.sroa.10.0..sroa_idx1399 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 3
  %result_value178.sroa.10.0.copyload = load i64, i64* %result_value178.sroa.10.0..sroa_idx1399, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %255)
  %tag_alloca182 = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr185 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca182, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr185, align 8
  %struct_alloca190 = alloca { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, align 8
  %struct_alloca190.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 0
  store i8* %load_element.unpack396.unpack, i8** %struct_alloca190.repack.repack, align 8
  %struct_alloca190.repack.repack495 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %struct_alloca190.repack.repack495, align 8
  %struct_alloca190.repack.repack497 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %struct_alloca190.repack.repack497, align 8
  %struct_alloca190.repack493.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 0
  store i8* %struct_field175.unpack, i8** %struct_alloca190.repack493.repack.repack, align 8
  %struct_alloca190.repack493.repack.repack501 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 1
  store i64 %struct_field175.unpack408, i64* %struct_alloca190.repack493.repack.repack501, align 8
  %struct_alloca190.repack493.repack.repack503 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 2
  store i64 %struct_field175.unpack410, i64* %struct_alloca190.repack493.repack.repack503, align 8
  %struct_alloca190.repack493.repack499.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 0
  store i8* %result_value178.sroa.0.0.copyload, i8** %struct_alloca190.repack493.repack499.repack.repack, align 8
  %struct_alloca190.repack493.repack499.repack.repack511 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 1
  store i64 %result_value178.sroa.2.0.copyload, i64* %struct_alloca190.repack493.repack499.repack.repack511, align 8
  %struct_alloca190.repack493.repack499.repack.repack513 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 2
  store i64 %result_value178.sroa.3.0.copyload, i64* %struct_alloca190.repack493.repack499.repack.repack513, align 8
  %struct_alloca190.repack493.repack499.repack505.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 0
  store i8* %result_value178.sroa.4.0.copyload, i8** %struct_alloca190.repack493.repack499.repack505.repack, align 8
  %struct_alloca190.repack493.repack499.repack505.repack515 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 1
  store i64 %result_value178.sroa.5.0.copyload, i64* %struct_alloca190.repack493.repack499.repack505.repack515, align 8
  %struct_alloca190.repack493.repack499.repack505.repack517 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 2
  store i64 %result_value178.sroa.6.0.copyload, i64* %struct_alloca190.repack493.repack499.repack505.repack517, align 8
  %struct_alloca190.repack493.repack499.repack507.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 0
  store i8* %result_value178.sroa.7.0.copyload, i8** %struct_alloca190.repack493.repack499.repack507.repack, align 8
  %struct_alloca190.repack493.repack499.repack507.repack519 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 1
  store i64 %result_value178.sroa.8.0.copyload, i64* %struct_alloca190.repack493.repack499.repack507.repack519, align 8
  %struct_alloca190.repack493.repack499.repack507.repack521 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 2
  store i64 %result_value178.sroa.9.0.copyload, i64* %struct_alloca190.repack493.repack499.repack507.repack521, align 8
  %struct_alloca190.repack493.repack499.repack509 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 3
  store i64 %result_value178.sroa.10.0.copyload, i64* %struct_alloca190.repack493.repack499.repack509, align 8
  %result_value.i687.sroa.0.0.sroa_cast1416 = bitcast [9 x i64]* %result_value.i687.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %result_value.i687.sroa.0.0.sroa_cast1416)
  %256 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %256) #11
  call fastcc void @List_iterHelp_475c77e73ff7e6e34e2c21a314b0e09e66b9a3856a1d0c5c34643d926(%list.RocList %load_at_index_ptr_old135330, { [0 x i64], [8 x i64], i8, [7 x i8] }* nonnull %tag_alloca182, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* nonnull %struct_alloca190, i64 %load_at_index_ptr_old135.unpack327, { [0 x i64], [9 x i64], i8, [7 x i8] }* nonnull %result_value.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %result_value.i687.sroa.0.0.sroa_cast1416, i8* noundef nonnull align 8 dereferenceable(72) %256, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %256) #11
  %result_value.i687.sroa.0.0..sroa_cast1410 = bitcast { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %result_value.i687.sroa.0.0..sroa_cast1410, i8* noundef nonnull align 8 dereferenceable(72) %result_value.i687.sroa.0.0.sroa_cast1416, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %result_value.i687.sroa.0.0.sroa_cast1416)
  %tag_id_ptr192 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191, i64 0, i32 2
  %load_tag_id193 = load i8, i8* %tag_id_ptr192, align 8
  %eq_u8194 = icmp eq i8 %load_tag_id193, 1
  br i1 %eq_u8194, label %then_block196, label %else_block197

else_block172:                                    ; preds = %"#Attr_#inc_16.exit1207"
  %struct_field.unpack.i1253 = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field.unpack21.i1255 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field.unpack23.i1257 = load i64, i64* %struct_field.elt3.i1144, align 8
  %257 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1251 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #11
  %"cap > 0.not.i.i1258" = icmp eq i64 %struct_field.unpack23.i1257, 0
  br i1 %"cap > 0.not.i.i1258", label %"#Attr_#dec_17.exit.i1296", label %modification_list_block.i52.i1261

modification_list_block.i52.i1261:                ; preds = %else_block172
  %cast_basic_basic.i.i1259 = bitcast i8* %struct_field.unpack.i1253 to %str.RocStr*
  %bounds_check.not.i.i1260 = icmp eq i64 %struct_field.unpack21.i1255, 0
  br i1 %bounds_check.not.i.i1260, label %after_loop.i.i1282, label %loop.preheader.i.i1263

loop.preheader.i.i1263:                           ; preds = %modification_list_block.i52.i1261
  %load_str_to_stack.i.elt9.i.i1262 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1251, i64 0, i32 2
  br label %loop.i.i1269

loop.i.i1269:                                     ; preds = %"#Attr_#dec_4.exit.i.i1277", %loop.preheader.i.i1263
  %next_index12.i.i1264 = phi i64 [ 0, %loop.preheader.i.i1263 ], [ %next_index.i.i1265, %"#Attr_#dec_4.exit.i.i1277" ]
  %next_index.i.i1265 = add nuw i64 %next_index12.i.i1264, 1
  %load_index.i.i1266 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1259, i64 %next_index12.i.i1264
  %258 = bitcast %str.RocStr* %load_index.i.i1266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %257, i8* noundef nonnull align 8 dereferenceable(24) %258, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i1267 = load i64, i64* %load_str_to_stack.i.elt9.i.i1262, align 8
  %is_big_str.i.i.i1268 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i1267, 0
  br i1 %is_big_str.i.i.i1268, label %modify_rc.i.i.i1273, label %"#Attr_#dec_4.exit.i.i1277"

modify_rc.i.i.i1273:                              ; preds = %loop.i.i1269
  %call_builtin.i.i.i1270 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1251) #11
  %get_rc_ptr.i.i53.i1271 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1270, i64 -8
  %259 = bitcast i8* %get_rc_ptr.i.i53.i1271 to i64*
  %260 = load i64, i64* %259, align 8
  %.not.i.i.i.i.i54.i1272 = icmp eq i64 %260, 0
  br i1 %.not.i.i.i.i.i54.i1272, label %"#Attr_#dec_4.exit.i.i1277", label %Then.i.i.i.i.i55.i1274

Then.i.i.i.i.i55.i1274:                           ; preds = %modify_rc.i.i.i1273
  %261 = add i64 %260, -1
  store i64 %261, i64* %259, align 8
  %262 = icmp eq i64 %260, -9223372036854775808
  br i1 %262, label %Then1.i.i.i.i.i56.i1275, label %"#Attr_#dec_4.exit.i.i1277"

Then1.i.i.i.i.i56.i1275:                          ; preds = %Then.i.i.i.i.i55.i1274
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i1271, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i1277"

"#Attr_#dec_4.exit.i.i1277":                      ; preds = %Then1.i.i.i.i.i56.i1275, %Then.i.i.i.i.i55.i1274, %modify_rc.i.i.i1273, %loop.i.i1269
  %exitcond.not.i1276 = icmp eq i64 %next_index.i.i1265, %struct_field.unpack21.i1255
  br i1 %exitcond.not.i1276, label %after_loop.i.i1282, label %loop.i.i1269

after_loop.i.i1282:                               ; preds = %"#Attr_#dec_4.exit.i.i1277", %modification_list_block.i52.i1261
  %263 = ptrtoint i8* %struct_field.unpack.i1253 to i64
  %264 = shl i64 %struct_field.unpack23.i1257, 1
  %.not.i.i.i57.i1278 = icmp slt i64 %struct_field.unpack23.i1257, 0
  %265 = select i1 %.not.i.i.i57.i1278, i64 %264, i64 %263
  %as_usize_ptr.i58.i1279 = inttoptr i64 %265 to i64*
  %get_rc_ptr.i59.i1280 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i1279, i64 -1
  %266 = load i64, i64* %get_rc_ptr.i59.i1280, align 8
  %.not.i.i.i.i60.i1281 = icmp eq i64 %266, 0
  br i1 %.not.i.i.i.i60.i1281, label %"#Attr_#dec_17.exit.i1296", label %Then.i.i.i.i61.i1283

Then.i.i.i.i61.i1283:                             ; preds = %after_loop.i.i1282
  %267 = add i64 %266, -1
  store i64 %267, i64* %get_rc_ptr.i59.i1280, align 8
  %268 = icmp eq i64 %266, -9223372036854775808
  br i1 %268, label %Then1.i.i.i.i62.i1284, label %"#Attr_#dec_17.exit.i1296"

Then1.i.i.i.i62.i1284:                            ; preds = %Then.i.i.i.i61.i1283
  %269 = bitcast i64* %get_rc_ptr.i59.i1280 to i8*
  tail call void @roc_dealloc(i8* %269, i32 8) #11
  br label %"#Attr_#dec_17.exit.i1296"

"#Attr_#dec_17.exit.i1296":                       ; preds = %Then1.i.i.i.i62.i1284, %Then.i.i.i.i61.i1283, %after_loop.i.i1282, %else_block172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #11
  %struct_field1.sroa.264.0.copyload.i1286 = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i1171, align 8
  %struct_field1.sroa.3.0.copyload.i1288 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i1173, align 8
  %struct_field1.sroa.468.0.copyload.i1290 = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i1175, align 8
  %struct_field1.sroa.5.0.copyload.i1292 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i1177, align 8
  %struct_field1.sroa.672.0.copyload.i1294 = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i1179, align 8
  %"cap > 0.i.i.not.i1295" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i1286, 0
  br i1 %"cap > 0.i.i.not.i1295", label %"#Attr_#dec_18.exit.i1307", label %modification_list_block.i.i.i1303

modification_list_block.i.i.i1303:                ; preds = %"#Attr_#dec_17.exit.i1296"
  %struct_field1.sroa.0.0..sroa_idx.i1297 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1298 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1297, align 8
  %270 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1298 to i64
  %271 = shl i64 %struct_field1.sroa.264.0.copyload.i1286, 1
  %.not.i.i.i.i.i1299 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i1286, 0
  %272 = select i1 %.not.i.i.i.i.i1299, i64 %271, i64 %270
  %as_usize_ptr.i.i.i1300 = inttoptr i64 %272 to i64*
  %get_rc_ptr.i.i.i1301 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1300, i64 -1
  %273 = load i64, i64* %get_rc_ptr.i.i.i1301, align 8
  %.not.i.i.i.i.i.i1302 = icmp eq i64 %273, 0
  br i1 %.not.i.i.i.i.i.i1302, label %"#Attr_#dec_18.exit.i1307", label %Then.i.i.i.i.i.i1304

Then.i.i.i.i.i.i1304:                             ; preds = %modification_list_block.i.i.i1303
  %274 = add i64 %273, -1
  store i64 %274, i64* %get_rc_ptr.i.i.i1301, align 8
  %275 = icmp eq i64 %273, -9223372036854775808
  br i1 %275, label %Then1.i.i.i.i.i.i1305, label %"#Attr_#dec_18.exit.i1307"

Then1.i.i.i.i.i.i1305:                            ; preds = %Then.i.i.i.i.i.i1304
  %276 = bitcast i64* %get_rc_ptr.i.i.i1301 to i8*
  tail call void @roc_dealloc(i8* %276, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1307"

"#Attr_#dec_18.exit.i1307":                       ; preds = %Then1.i.i.i.i.i.i1305, %Then.i.i.i.i.i.i1304, %modification_list_block.i.i.i1303, %"#Attr_#dec_17.exit.i1296"
  %"cap > 0.i5.not.i1306" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i1290, 0
  br i1 %"cap > 0.i5.not.i1306", label %"#Attr_#dec_10.exit.i1316", label %modification_list_block.i14.i1312

modification_list_block.i14.i1312:                ; preds = %"#Attr_#dec_18.exit.i1307"
  %277 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1288 to i64
  %278 = shl i64 %struct_field1.sroa.468.0.copyload.i1290, 1
  %.not.i.i.i10.i1308 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i1290, 0
  %279 = select i1 %.not.i.i.i10.i1308, i64 %278, i64 %277
  %as_usize_ptr.i11.i1309 = inttoptr i64 %279 to i64*
  %get_rc_ptr.i12.i1310 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1309, i64 -1
  %280 = load i64, i64* %get_rc_ptr.i12.i1310, align 8
  %.not.i.i.i.i13.i1311 = icmp eq i64 %280, 0
  br i1 %.not.i.i.i.i13.i1311, label %"#Attr_#dec_10.exit.i1316", label %Then.i.i.i.i15.i1313

Then.i.i.i.i15.i1313:                             ; preds = %modification_list_block.i14.i1312
  %281 = add i64 %280, -1
  store i64 %281, i64* %get_rc_ptr.i12.i1310, align 8
  %282 = icmp eq i64 %280, -9223372036854775808
  br i1 %282, label %Then1.i.i.i.i16.i1314, label %"#Attr_#dec_10.exit.i1316"

Then1.i.i.i.i16.i1314:                            ; preds = %Then.i.i.i.i15.i1313
  %283 = bitcast i64* %get_rc_ptr.i12.i1310 to i8*
  tail call void @roc_dealloc(i8* %283, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1316"

"#Attr_#dec_10.exit.i1316":                       ; preds = %Then1.i.i.i.i16.i1314, %Then.i.i.i.i15.i1313, %modification_list_block.i14.i1312, %"#Attr_#dec_18.exit.i1307"
  %"cap > 0.i.not.i1315" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i1294, 0
  br i1 %"cap > 0.i.not.i1315", label %"#Attr_#dec_40.exit", label %modification_list_block.i.i1321

modification_list_block.i.i1321:                  ; preds = %"#Attr_#dec_10.exit.i1316"
  %284 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1292 to i64
  %285 = shl i64 %struct_field1.sroa.672.0.copyload.i1294, 1
  %.not.i.i.i.i1317 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i1294, 0
  %286 = select i1 %.not.i.i.i.i1317, i64 %285, i64 %284
  %as_usize_ptr.i.i1318 = inttoptr i64 %286 to i64*
  %get_rc_ptr.i.i1319 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1318, i64 -1
  %287 = load i64, i64* %get_rc_ptr.i.i1319, align 8
  %.not.i.i.i.i2.i1320 = icmp eq i64 %287, 0
  br i1 %.not.i.i.i.i2.i1320, label %"#Attr_#dec_40.exit", label %Then.i.i.i.i.i1322

Then.i.i.i.i.i1322:                               ; preds = %modification_list_block.i.i1321
  %288 = add i64 %287, -1
  store i64 %288, i64* %get_rc_ptr.i.i1319, align 8
  %289 = icmp eq i64 %287, -9223372036854775808
  br i1 %289, label %Then1.i.i.i.i.i1323, label %"#Attr_#dec_40.exit"

Then1.i.i.i.i.i1323:                              ; preds = %Then.i.i.i.i.i1322
  %290 = bitcast i64* %get_rc_ptr.i.i1319 to i8*
  tail call void @roc_dealloc(i8* %290, i32 8) #11
  br label %"#Attr_#dec_40.exit"

"#Attr_#dec_40.exit":                             ; preds = %Then1.i.i.i.i.i1323, %Then.i.i.i.i.i1322, %modification_list_block.i.i1321, %"#Attr_#dec_10.exit.i1316"
  %.not.i.i1325 = icmp eq i8* %load_at_index_ptr_old135.unpack, null
  br i1 %.not.i.i1325, label %roc_builtins.list.map.exit.i, label %OptionalThen.i.i

OptionalThen.i.i:                                 ; preds = %"#Attr_#dec_40.exit"
  %291 = icmp ne i64 %load_at_index_ptr_old135.unpack327, 0
  tail call void @llvm.assume(i1 %291) #11
  %292 = icmp ugt i64 %load_at_index_ptr_old135.unpack327, 2
  %..i.i.i.i.i = select i1 %292, i64 %load_at_index_ptr_old135.unpack327, i64 2
  %293 = mul nuw i64 %..i.i.i.i.i, 24
  %294 = add nuw i64 %293, 8
  %295 = tail call i8* @roc_alloc(i64 %294, i32 8) #11, !noalias !613
  %296 = icmp ne i8* %295, null
  tail call void @llvm.assume(i1 %296) #11
  %297 = getelementptr inbounds i8, i8* %295, i64 8
  %298 = bitcast i8* %295 to i64*
  store i64 -9223372036854775808, i64* %298, align 8, !noalias !613
  br label %WhileBody.i.i

WhileBody.i.i:                                    ; preds = %WhileBody.i.i, %OptionalThen.i.i
  %i.010.i.i = phi i64 [ %306, %WhileBody.i.i ], [ 0, %OptionalThen.i.i ]
  %299 = shl nuw i64 %i.010.i.i, 5
  %300 = getelementptr inbounds i8, i8* %load_at_index_ptr_old135.unpack, i64 %299
  %301 = mul nuw i64 %i.010.i.i, 24
  %302 = getelementptr inbounds i8, i8* %297, i64 %301
  %zig_helper_load_opaque.i.unpack.elt.i = bitcast i8* %300 to i8**
  %zig_helper_load_opaque.i.unpack.unpack.i = load i8*, i8** %zig_helper_load_opaque.i.unpack.elt.i, align 8, !noalias !618
  %zig_helper_load_opaque.i.unpack.elt8.i = getelementptr inbounds i8, i8* %300, i64 8
  %303 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt8.i to i64*
  %zig_helper_load_opaque.i.unpack.unpack9.i = load i64, i64* %303, align 8, !noalias !618
  %zig_helper_load_opaque.i.unpack.elt10.i = getelementptr inbounds i8, i8* %300, i64 16
  %304 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt10.i to i64*
  %zig_helper_load_opaque.i.unpack.unpack11.i = load i64, i64* %304, align 8, !noalias !618
  %zig_helper_load_opaque.i.elt5.i = getelementptr inbounds i8, i8* %300, i64 24
  %305 = bitcast i8* %zig_helper_load_opaque.i.elt5.i to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %305, align 8, !noalias !618
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.unpack6.i) #11, !noalias !618
  %result_value.i.sroa.0.0..sroa_cast.i = bitcast i8* %302 to i8**
  store i8* %zig_helper_load_opaque.i.unpack.unpack.i, i8** %result_value.i.sroa.0.0..sroa_cast.i, align 8, !noalias !618
  %result_value.i.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, i8* %302, i64 8
  %result_value.i.sroa.4.0..sroa_cast.i = bitcast i8* %result_value.i.sroa.4.0..sroa_idx.i to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack9.i, i64* %result_value.i.sroa.4.0..sroa_cast.i, align 8, !noalias !618
  %result_value.i.sroa.5.0..sroa_idx.i = getelementptr inbounds i8, i8* %302, i64 16
  %result_value.i.sroa.5.0..sroa_cast.i = bitcast i8* %result_value.i.sroa.5.0..sroa_idx.i to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack11.i, i64* %result_value.i.sroa.5.0..sroa_cast.i, align 8, !noalias !618
  %306 = add nuw i64 %i.010.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %306, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not.i.i, label %roc_builtins.list.map.exit.i.loopexit, label %WhileBody.i.i

roc_builtins.list.map.exit.i.loopexit:            ; preds = %WhileBody.i.i
  %phi.cast = ptrtoint i8* %297 to i64
  br label %roc_builtins.list.map.exit.i

roc_builtins.list.map.exit.i:                     ; preds = %roc_builtins.list.map.exit.i.loopexit, %"#Attr_#dec_40.exit"
  %list_alloca.sroa.0.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %phi.cast, %roc_builtins.list.map.exit.i.loopexit ]
  %list_alloca.sroa.3.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %load_at_index_ptr_old135.unpack327, %roc_builtins.list.map.exit.i.loopexit ]
  %list_alloca.sroa.5.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %..i.i.i.i.i, %roc_builtins.list.map.exit.i.loopexit ]
  %307 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %308 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1326 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %309 = select i1 %.not.i.i.i1326, i64 %308, i64 %307
  %.not.i19.i = icmp eq i64 %309, 0
  br i1 %.not.i19.i, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, label %OptionalThen.i21.i

OptionalThen.i21.i:                               ; preds = %roc_builtins.list.map.exit.i
  %310 = inttoptr i64 %309 to i8*
  %311 = getelementptr inbounds i8, i8* %310, i64 -8
  %312 = bitcast i8* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %.not.i.i20.i = icmp eq i64 %313, 0
  br i1 %.not.i.i20.i, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, label %Then.i.i.i1327

Then.i.i.i1327:                                   ; preds = %OptionalThen.i21.i
  %314 = add i64 %313, -1
  store i64 %314, i64* %312, align 8
  %315 = icmp eq i64 %313, -9223372036854775808
  br i1 %315, label %Then1.i.i.i1328, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit

Then1.i.i.i1328:                                  ; preds = %Then.i.i.i1327
  tail call void @roc_dealloc(i8* %311, i32 8) #11
  br label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit

List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit: ; preds = %roc_builtins.list.map.exit.i, %OptionalThen.i21.i, %Then.i.i.i1327, %Then1.i.i.i1328
  %struct_alloca228 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack367.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 0
  store i64 %list_alloca.sroa.0.0.i, i64* %.repack367.repack, align 8
  %.repack367.repack373 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 1
  store i64 %list_alloca.sroa.3.0.i, i64* %.repack367.repack373, align 8
  %.repack367.repack375 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 2
  store i64 %list_alloca.sroa.5.0.i, i64* %.repack367.repack375, align 8
  %.repack369 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 2
  store i8 4, i8* %.repack369, align 8
  %tag_alloca229 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer230 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229, i64 0, i32 1
  %316 = bitcast [7 x i64]* %data_buffer230 to i8*
  %317 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %316, i8* noundef nonnull align 8 dereferenceable(56) %317, i64 56, i1 false)
  %tag_id_ptr232 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr232, align 8
  %318 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229 to i8*
  br label %common.ret

then_block196:                                    ; preds = %"#Attr_#inc_4.exit685"
  br i1 %is_big_str.i678, label %modify_rc.i696, label %"#Attr_#dec_4.exit"

modify_rc.i696:                                   ; preds = %then_block196
  %call_builtin.i693 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i695 = getelementptr inbounds i8, i8* %call_builtin.i693, i64 -8
  %319 = bitcast i8* %get_rc_ptr.i695 to i64*
  %320 = load i64, i64* %319, align 8
  %.not.i.i.i.i = icmp eq i64 %320, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i696
  %321 = add i64 %320, -1
  store i64 %321, i64* %319, align 8
  %322 = icmp eq i64 %320, -9223372036854775808
  br i1 %322, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i695, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i696, %Then.i.i.i.i, %Then1.i.i.i.i, %then_block196
  br i1 %"cap > 0.not.i1209", label %"#Attr_#dec_19.exit", label %modification_list_block.i1333

modification_list_block.i1333:                    ; preds = %"#Attr_#dec_4.exit"
  %cast_basic_basic.i1331 = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i1332 = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i1332, label %after_loop.i1356, label %loop.preheader.i1336

loop.preheader.i1336:                             ; preds = %modification_list_block.i1333
  %323 = bitcast %str.RocStr* %struct_field.i.i1329 to i8*
  %struct_field.i.repack.i1334 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 0
  %struct_field.i.repack15.i1335 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 1
  %struct_field.i.repack17.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 2
  br label %loop.i1344

loop.i1344:                                       ; preds = %"#Attr_#dec_14.exit.i", %loop.preheader.i1336
  %index.i1337 = phi i64 [ 0, %loop.preheader.i1336 ], [ %next_index.i1338, %"#Attr_#dec_14.exit.i" ]
  %next_index.i1338 = add nuw i64 %index.i1337, 1
  %incrementing_element_loop_load.unpack.elt.i1339 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i1340 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i1339, align 8
  %incrementing_element_loop_load.unpack.elt10.i1341 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11.i1342 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i1341, align 8
  %incrementing_element_loop_load.unpack.elt12.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13.i = load i64, i64* %incrementing_element_loop_load.unpack.elt12.i, align 8
  %incrementing_element_loop_load.elt7.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 1
  %incrementing_element_loop_load.unpack8.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt7.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i1340, i8** %struct_field.i.repack.i1334, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i1342, i64* %struct_field.i.repack15.i1335, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13.i, i64* %struct_field.i.repack17.i, align 8
  %is_big_str.i.i.i1343 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13.i, 0
  br i1 %is_big_str.i.i.i1343, label %modify_rc.i.i.i1348, label %"#Attr_#dec_14.exit.i"

modify_rc.i.i.i1348:                              ; preds = %loop.i1344
  %call_builtin.i.i.i1345 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1329) #11
  %get_rc_ptr.i.i.i1346 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1345, i64 -8
  %324 = bitcast i8* %get_rc_ptr.i.i.i1346 to i64*
  %325 = load i64, i64* %324, align 8
  %.not.i.i.i.i.i.i1347 = icmp eq i64 %325, 0
  br i1 %.not.i.i.i.i.i.i1347, label %"#Attr_#dec_14.exit.i", label %Then.i.i.i.i.i.i1349

Then.i.i.i.i.i.i1349:                             ; preds = %modify_rc.i.i.i1348
  %326 = add i64 %325, -1
  store i64 %326, i64* %324, align 8
  %327 = icmp eq i64 %325, -9223372036854775808
  br i1 %327, label %Then1.i.i.i.i.i.i1350, label %"#Attr_#dec_14.exit.i"

Then1.i.i.i.i.i.i1350:                            ; preds = %Then.i.i.i.i.i.i1349
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i1346, i32 8) #11
  br label %"#Attr_#dec_14.exit.i"

"#Attr_#dec_14.exit.i":                           ; preds = %Then1.i.i.i.i.i.i1350, %Then.i.i.i.i.i.i1349, %modify_rc.i.i.i1348, %loop.i1344
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack8.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #11
  %exitcond.not = icmp eq i64 %next_index.i1338, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not, label %after_loop.i1356, label %loop.i1344

after_loop.i1356:                                 ; preds = %"#Attr_#dec_14.exit.i", %modification_list_block.i1333
  %328 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %329 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1352 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %330 = select i1 %.not.i.i.i1352, i64 %329, i64 %328
  %as_usize_ptr.i1353 = inttoptr i64 %330 to i64*
  %get_rc_ptr.i1354 = getelementptr inbounds i64, i64* %as_usize_ptr.i1353, i64 -1
  %331 = load i64, i64* %get_rc_ptr.i1354, align 8
  %.not.i.i.i.i1355 = icmp eq i64 %331, 0
  br i1 %.not.i.i.i.i1355, label %"#Attr_#dec_19.exit", label %Then.i.i.i.i1357

Then.i.i.i.i1357:                                 ; preds = %after_loop.i1356
  %332 = add i64 %331, -1
  store i64 %332, i64* %get_rc_ptr.i1354, align 8
  %333 = icmp eq i64 %331, -9223372036854775808
  br i1 %333, label %Then1.i.i.i.i1358, label %"#Attr_#dec_19.exit"

Then1.i.i.i.i1358:                                ; preds = %Then.i.i.i.i1357
  %334 = bitcast i64* %get_rc_ptr.i1354 to i8*
  tail call void @roc_dealloc(i8* %334, i32 8) #11
  br label %"#Attr_#dec_19.exit"

"#Attr_#dec_19.exit":                             ; preds = %"#Attr_#dec_4.exit", %after_loop.i1356, %Then.i.i.i.i1357, %Then1.i.i.i.i1358
  %get_opaque_data_ptr198 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191, i64 0, i32 1
  %335 = bitcast [8 x i64]* %get_opaque_data_ptr198 to i8*
  br label %common.ret

else_block197:                                    ; preds = %"#Attr_#inc_4.exit685"
  call fastcc void @"#Attr_#dec_35"({ [0 x i64], [8 x i64], i8, [7 x i8] }* nonnull %result_value191)
  %.not.i.i1359 = icmp eq i8* %load_at_index_ptr_old135.unpack, null
  br i1 %.not.i.i1359, label %roc_builtins.list.map.exit.i1383, label %OptionalThen.i.i1361

OptionalThen.i.i1361:                             ; preds = %else_block197
  %336 = icmp ne i64 %load_at_index_ptr_old135.unpack327, 0
  tail call void @llvm.assume(i1 %336) #11
  %337 = icmp ugt i64 %load_at_index_ptr_old135.unpack327, 2
  %..i.i.i.i.i1360 = select i1 %337, i64 %load_at_index_ptr_old135.unpack327, i64 2
  %338 = mul nuw i64 %..i.i.i.i.i1360, 24
  %339 = add nuw i64 %338, 8
  %340 = tail call i8* @roc_alloc(i64 %339, i32 8) #11, !noalias !619
  %341 = icmp ne i8* %340, null
  tail call void @llvm.assume(i1 %341) #11
  %342 = getelementptr inbounds i8, i8* %340, i64 8
  %343 = bitcast i8* %340 to i64*
  store i64 -9223372036854775808, i64* %343, align 8, !noalias !619
  br label %WhileBody.i.i1377

WhileBody.i.i1377:                                ; preds = %WhileBody.i.i1377, %OptionalThen.i.i1361
  %i.010.i.i1362 = phi i64 [ %351, %WhileBody.i.i1377 ], [ 0, %OptionalThen.i.i1361 ]
  %344 = shl nuw i64 %i.010.i.i1362, 5
  %345 = getelementptr inbounds i8, i8* %load_at_index_ptr_old135.unpack, i64 %344
  %346 = mul nuw i64 %i.010.i.i1362, 24
  %347 = getelementptr inbounds i8, i8* %342, i64 %346
  %zig_helper_load_opaque.i.unpack.elt.i1363 = bitcast i8* %345 to i8**
  %zig_helper_load_opaque.i.unpack.unpack.i1364 = load i8*, i8** %zig_helper_load_opaque.i.unpack.elt.i1363, align 8, !noalias !624
  %zig_helper_load_opaque.i.unpack.elt8.i1365 = getelementptr inbounds i8, i8* %345, i64 8
  %348 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt8.i1365 to i64*
  %zig_helper_load_opaque.i.unpack.unpack9.i1366 = load i64, i64* %348, align 8, !noalias !624
  %zig_helper_load_opaque.i.unpack.elt10.i1367 = getelementptr inbounds i8, i8* %345, i64 16
  %349 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt10.i1367 to i64*
  %zig_helper_load_opaque.i.unpack.unpack11.i1368 = load i64, i64* %349, align 8, !noalias !624
  %zig_helper_load_opaque.i.elt5.i1369 = getelementptr inbounds i8, i8* %345, i64 24
  %350 = bitcast i8* %zig_helper_load_opaque.i.elt5.i1369 to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.unpack6.i1370 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %350, align 8, !noalias !624
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.unpack6.i1370) #11, !noalias !624
  %result_value.i.sroa.0.0..sroa_cast.i1371 = bitcast i8* %347 to i8**
  store i8* %zig_helper_load_opaque.i.unpack.unpack.i1364, i8** %result_value.i.sroa.0.0..sroa_cast.i1371, align 8, !noalias !624
  %result_value.i.sroa.4.0..sroa_idx.i1372 = getelementptr inbounds i8, i8* %347, i64 8
  %result_value.i.sroa.4.0..sroa_cast.i1373 = bitcast i8* %result_value.i.sroa.4.0..sroa_idx.i1372 to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack9.i1366, i64* %result_value.i.sroa.4.0..sroa_cast.i1373, align 8, !noalias !624
  %result_value.i.sroa.5.0..sroa_idx.i1374 = getelementptr inbounds i8, i8* %347, i64 16
  %result_value.i.sroa.5.0..sroa_cast.i1375 = bitcast i8* %result_value.i.sroa.5.0..sroa_idx.i1374 to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack11.i1368, i64* %result_value.i.sroa.5.0..sroa_cast.i1375, align 8, !noalias !624
  %351 = add nuw i64 %i.010.i.i1362, 1
  %exitcond.not.i.i1376 = icmp eq i64 %351, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not.i.i1376, label %roc_builtins.list.map.exit.i1383, label %WhileBody.i.i1377

roc_builtins.list.map.exit.i1383:                 ; preds = %WhileBody.i.i1377, %else_block197
  %list_alloca.sroa.0.0.i1378 = phi i8* [ null, %else_block197 ], [ %342, %WhileBody.i.i1377 ]
  %list_alloca.sroa.3.0.i1379 = phi i64 [ 0, %else_block197 ], [ %load_at_index_ptr_old135.unpack327, %WhileBody.i.i1377 ]
  %list_alloca.sroa.5.0.i1380 = phi i64 [ 0, %else_block197 ], [ %..i.i.i.i.i1360, %WhileBody.i.i1377 ]
  %352 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %353 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1381 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %354 = select i1 %.not.i.i.i1381, i64 %353, i64 %352
  %.not.i19.i1382 = icmp eq i64 %354, 0
  br i1 %.not.i19.i1382, label %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit, label %OptionalThen.i21.i1385

OptionalThen.i21.i1385:                           ; preds = %roc_builtins.list.map.exit.i1383
  %355 = inttoptr i64 %354 to i8*
  %356 = getelementptr inbounds i8, i8* %355, i64 -8
  %357 = bitcast i8* %356 to i64*
  %358 = load i64, i64* %357, align 8
  %.not.i.i20.i1384 = icmp eq i64 %358, 0
  br i1 %.not.i.i20.i1384, label %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit, label %Then.i.i.i1386

Then.i.i.i1386:                                   ; preds = %OptionalThen.i21.i1385
  %359 = add i64 %358, -1
  store i64 %359, i64* %357, align 8
  %360 = icmp eq i64 %358, -9223372036854775808
  br i1 %360, label %Then1.i.i.i1387, label %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit

Then1.i.i.i1387:                                  ; preds = %Then.i.i.i1386
  tail call void @roc_dealloc(i8* %356, i32 8) #11
  br label %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit

List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit: ; preds = %roc_builtins.list.map.exit.i1383, %OptionalThen.i21.i1385, %Then.i.i.i1386, %Then1.i.i.i1387
  %struct_alloca208 = alloca { { %list.RocList, %str.RocStr } }, align 8
  %.repack551.repack = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 0
  store i8* %list_alloca.sroa.0.0.i1378, i8** %.repack551.repack, align 8
  %.repack551.repack554 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 1
  store i64 %list_alloca.sroa.3.0.i1379, i64* %.repack551.repack554, align 8
  %.repack551.repack556 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 2
  store i64 %list_alloca.sroa.5.0.i1380, i64* %.repack551.repack556, align 8
  %.repack552.repack = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 0
  store i8* %load_element.unpack396.unpack, i8** %.repack552.repack, align 8
  %.repack552.repack558 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %.repack552.repack558, align 8
  %.repack552.repack560 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %.repack552.repack560, align 8
  %tag_alloca209 = alloca { [0 x i64], [6 x i64], i8, [7 x i8] }, align 8
  %data_buffer210 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1
  %361 = bitcast [6 x i64]* %data_buffer210 to i8*
  %362 = bitcast { { %list.RocList, %str.RocStr } }* %struct_alloca208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %361, i8* noundef nonnull align 8 dereferenceable(48) %362, i64 48, i1 false)
  %tag_id_ptr212 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr212, align 8
  %load_tag_to_put_in_struct213.unpack563.elt = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct213.unpack563.unpack = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt, align 8
  %load_tag_to_put_in_struct213.unpack563.elt569 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct213.unpack563.unpack570 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt569, align 8
  %load_tag_to_put_in_struct213.unpack563.elt571 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct213.unpack563.unpack572 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt571, align 8
  %load_tag_to_put_in_struct213.unpack563.elt573 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct213.unpack563.unpack574 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt573, align 8
  %load_tag_to_put_in_struct213.unpack563.elt575 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct213.unpack563.unpack576 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt575, align 8
  %load_tag_to_put_in_struct213.unpack563.elt577 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct213.unpack563.unpack578 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt577, align 8
  %struct_alloca215 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack594.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack, i64* %.repack594.repack, align 8
  %.repack594.repack600 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack570, i64* %.repack594.repack600, align 8
  %.repack594.repack602 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack572, i64* %.repack594.repack602, align 8
  %.repack594.repack604 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack574, i64* %.repack594.repack604, align 8
  %.repack594.repack606 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack576, i64* %.repack594.repack606, align 8
  %.repack594.repack608 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack578, i64* %.repack594.repack608, align 8
  %.repack596 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 2
  store i8 0, i8* %.repack596, align 8
  %tag_alloca216 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer217 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216, i64 0, i32 1
  %363 = bitcast [7 x i64]* %data_buffer217 to i8*
  %364 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %363, i8* noundef nonnull align 8 dereferenceable(56) %364, i64 56, i1 false)
  %tag_id_ptr219 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr219, align 8
  %365 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216 to i8*
  br label %common.ret

then_block253:                                    ; preds = %"#Attr_#dec_16.exit1095"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %121)
  br label %joinpointcont242

Then.i.i.i698:                                    ; preds = %"#Attr_#dec_16.exit1095"
  %366 = add nsw i64 %get_refcount250, -1
  store i64 %366, i64* %121, align 8
  br label %joinpointcont242

joinpointcont242:                                 ; preds = %"#Attr_#dec_16.exit1095", %Then.i.i.i698, %then_block253
  %const_str_store274.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store274.repack, align 8
  %const_str_store274.repack324 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 1
  store i64 73, i64* %const_str_store274.repack324, align 8
  %const_str_store274.repack325 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 2
  store i64 73, i64* %const_str_store274.repack325, align 8
  call void @roc_panic(%str.RocStr* %const_str_store274, i32 0)
  unreachable

then_block294:                                    ; preds = %default
  %at_index_struct_gep_data303.idx = sub nuw nsw i64 8, %masked276
  %at_index_struct_gep_data303 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %at_index_struct_gep_data303.idx
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %load_at_index_ptr_old304.sroa.0.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %at_index_struct_gep_data303, i64 80, i1 false)
  %load_at_index_ptr_old304.sroa.6.0.at_index_struct_gep_data303.sroa_raw_idx = getelementptr inbounds i8, i8* %at_index_struct_gep_data303, i64 80
  %load_at_index_ptr_old304.sroa.6.0.copyload = load i8, i8* %load_at_index_ptr_old304.sroa.6.0.at_index_struct_gep_data303.sroa_raw_idx, align 8
  switch i8 %load_at_index_ptr_old304.sroa.6.0.copyload, label %"#Attr_#dec_8.exit" [
    i8 0, label %tag_id_modify.i707
    i8 1, label %tag_id_modify1.i
  ]

tag_id_modify.i707:                               ; preds = %then_block294
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data303, i64 24, i1 false)
  %load_str_to_stack.i.i780.unpack924 = load i64, i64* %load_str_to_stack.i.i780.elt923, align 8
  %is_big_str.i.i782 = icmp sgt i64 %load_str_to_stack.i.i780.unpack924, 0
  br i1 %is_big_str.i.i782, label %modify_rc.i.i787, label %"#Attr_#dec_3.exit793"

modify_rc.i.i787:                                 ; preds = %tag_id_modify.i707
  %call_builtin.i.i783 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i778) #11
  %get_rc_ptr.i.i785 = getelementptr inbounds i8, i8* %call_builtin.i.i783, i64 -8
  %367 = bitcast i8* %get_rc_ptr.i.i785 to i64*
  %368 = load i64, i64* %367, align 8
  %.not.i.i.i.i.i786 = icmp eq i64 %368, 0
  br i1 %.not.i.i.i.i.i786, label %"#Attr_#dec_3.exit793", label %Then.i.i.i.i.i788

Then.i.i.i.i.i788:                                ; preds = %modify_rc.i.i787
  %369 = add i64 %368, -1
  store i64 %369, i64* %367, align 8
  %370 = icmp eq i64 %368, -9223372036854775808
  br i1 %370, label %Then1.i.i.i.i.i789, label %"#Attr_#dec_3.exit793"

Then1.i.i.i.i.i789:                               ; preds = %Then.i.i.i.i.i788
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i785, i32 8) #11
  br label %"#Attr_#dec_3.exit793"

"#Attr_#dec_3.exit793":                           ; preds = %modify_rc.i.i787, %Then.i.i.i.i.i788, %Then1.i.i.i.i.i789, %tag_id_modify.i707
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i794.unpack929 = load i64, i64* %load_str_to_stack.i794.elt928, align 8
  %is_big_str.i796 = icmp sgt i64 %load_str_to_stack.i794.unpack929, 0
  br i1 %is_big_str.i796, label %modify_rc.i801, label %"#Attr_#dec_4.exit805"

modify_rc.i801:                                   ; preds = %"#Attr_#dec_3.exit793"
  %call_builtin.i797 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i777) #11
  %get_rc_ptr.i799 = getelementptr inbounds i8, i8* %call_builtin.i797, i64 -8
  %371 = bitcast i8* %get_rc_ptr.i799 to i64*
  %372 = load i64, i64* %371, align 8
  %.not.i.i.i.i800 = icmp eq i64 %372, 0
  br i1 %.not.i.i.i.i800, label %"#Attr_#dec_4.exit805", label %Then.i.i.i.i802

Then.i.i.i.i802:                                  ; preds = %modify_rc.i801
  %373 = add i64 %372, -1
  store i64 %373, i64* %371, align 8
  %374 = icmp eq i64 %372, -9223372036854775808
  br i1 %374, label %Then1.i.i.i.i803, label %"#Attr_#dec_4.exit805"

Then1.i.i.i.i803:                                 ; preds = %Then.i.i.i.i802
  tail call void @roc_dealloc(i8* %get_rc_ptr.i799, i32 8) #11
  br label %"#Attr_#dec_4.exit805"

"#Attr_#dec_4.exit805":                           ; preds = %modify_rc.i801, %Then.i.i.i.i802, %Then1.i.i.i.i803, %"#Attr_#dec_3.exit793"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.48.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i806.unpack934 = load i64, i64* %load_str_to_stack.i806.elt933, align 8
  %is_big_str.i808 = icmp sgt i64 %load_str_to_stack.i806.unpack934, 0
  br i1 %is_big_str.i808, label %modify_rc.i813, label %"#Attr_#dec_4.exit817"

modify_rc.i813:                                   ; preds = %"#Attr_#dec_4.exit805"
  %call_builtin.i809 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i776) #11
  %get_rc_ptr.i811 = getelementptr inbounds i8, i8* %call_builtin.i809, i64 -8
  %375 = bitcast i8* %get_rc_ptr.i811 to i64*
  %376 = load i64, i64* %375, align 8
  %.not.i.i.i.i812 = icmp eq i64 %376, 0
  br i1 %.not.i.i.i.i812, label %"#Attr_#dec_4.exit817", label %Then.i.i.i.i814

Then.i.i.i.i814:                                  ; preds = %modify_rc.i813
  %377 = add i64 %376, -1
  store i64 %377, i64* %375, align 8
  %378 = icmp eq i64 %376, -9223372036854775808
  br i1 %378, label %Then1.i.i.i.i815, label %"#Attr_#dec_4.exit817"

Then1.i.i.i.i815:                                 ; preds = %Then.i.i.i.i814
  tail call void @roc_dealloc(i8* %get_rc_ptr.i811, i32 8) #11
  br label %"#Attr_#dec_4.exit817"

"#Attr_#dec_4.exit817":                           ; preds = %modify_rc.i813, %Then.i.i.i.i814, %Then1.i.i.i.i815, %"#Attr_#dec_4.exit805"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  br label %"#Attr_#dec_8.exit"

tag_id_modify1.i:                                 ; preds = %then_block294
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %2, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data303, i64 24, i1 false)
  %load_str_to_stack.i.i.i708.unpack914 = load i64, i64* %load_str_to_stack.i.i.i708.elt913, align 8
  %is_big_str.i.i.i710 = icmp sgt i64 %load_str_to_stack.i.i.i708.unpack914, 0
  br i1 %is_big_str.i.i.i710, label %modify_rc.i.i.i715, label %"#Attr_#dec_5.exit.i"

modify_rc.i.i.i715:                               ; preds = %tag_id_modify1.i
  %call_builtin.i.i.i711 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i701) #11
  %get_rc_ptr.i.i.i713 = getelementptr inbounds i8, i8* %call_builtin.i.i.i711, i64 -8
  %379 = bitcast i8* %get_rc_ptr.i.i.i713 to i64*
  %380 = load i64, i64* %379, align 8
  %.not.i.i.i.i.i.i714 = icmp eq i64 %380, 0
  br i1 %.not.i.i.i.i.i.i714, label %"#Attr_#dec_5.exit.i", label %Then.i.i.i.i.i.i716

Then.i.i.i.i.i.i716:                              ; preds = %modify_rc.i.i.i715
  %381 = add i64 %380, -1
  store i64 %381, i64* %379, align 8
  %382 = icmp eq i64 %380, -9223372036854775808
  br i1 %382, label %Then1.i.i.i.i.i.i717, label %"#Attr_#dec_5.exit.i"

Then1.i.i.i.i.i.i717:                             ; preds = %Then.i.i.i.i.i.i716
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i713, i32 8) #11
  br label %"#Attr_#dec_5.exit.i"

"#Attr_#dec_5.exit.i":                            ; preds = %modify_rc.i.i.i715, %Then.i.i.i.i.i.i716, %Then1.i.i.i.i.i.i717, %tag_id_modify1.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i720.unpack919 = load i64, i64* %load_str_to_stack.i720.elt918, align 8
  %is_big_str.i722 = icmp sgt i64 %load_str_to_stack.i720.unpack919, 0
  br i1 %is_big_str.i722, label %modify_rc.i727, label %"#Attr_#dec_4.exit731"

modify_rc.i727:                                   ; preds = %"#Attr_#dec_5.exit.i"
  %call_builtin.i723 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i725 = getelementptr inbounds i8, i8* %call_builtin.i723, i64 -8
  %383 = bitcast i8* %get_rc_ptr.i725 to i64*
  %384 = load i64, i64* %383, align 8
  %.not.i.i.i.i726 = icmp eq i64 %384, 0
  br i1 %.not.i.i.i.i726, label %"#Attr_#dec_4.exit731", label %Then.i.i.i.i728

Then.i.i.i.i728:                                  ; preds = %modify_rc.i727
  %385 = add i64 %384, -1
  store i64 %385, i64* %383, align 8
  %386 = icmp eq i64 %384, -9223372036854775808
  br i1 %386, label %Then1.i.i.i.i729, label %"#Attr_#dec_4.exit731"

Then1.i.i.i.i729:                                 ; preds = %Then.i.i.i.i728
  tail call void @roc_dealloc(i8* %get_rc_ptr.i725, i32 8) #11
  br label %"#Attr_#dec_4.exit731"

"#Attr_#dec_4.exit731":                           ; preds = %modify_rc.i727, %Then.i.i.i.i728, %Then1.i.i.i.i729, %"#Attr_#dec_5.exit.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #11
  br label %"#Attr_#dec_8.exit"

"#Attr_#dec_8.exit":                              ; preds = %then_block294, %"#Attr_#dec_4.exit817", %"#Attr_#dec_4.exit731"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %8)
  br label %joinpointcont.backedge

done320:                                          ; preds = %default
  %to_int1.i = ptrtoint { [0 x i64], [12 x i64] }* %load_at_index_ptr_old283634 to i64
  %masked.i = and i64 %to_int1.i, 7
  %cast_to_i8_ptr.i = bitcast { [0 x i64], [12 x i64] }* %load_at_index_ptr_old283634 to i8*
  %get_rc_ptr.i733.idx = sub nuw nsw i64 -8, %masked.i
  %get_rc_ptr.i733 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i, i64 %get_rc_ptr.i733.idx
  %387 = bitcast i8* %get_rc_ptr.i733 to i64*
  %388 = load i64, i64* %387, align 8
  %.not.i.i734 = icmp eq i64 %388, 0
  br i1 %.not.i.i734, label %"#Attr_#inc_2.exit", label %Then.i.i735

Then.i.i735:                                      ; preds = %done320
  %389 = add nsw i64 %388, 1
  store i64 %389, i64* %387, align 8
  %.pre1444 = load i64, i64* %8, align 8
  br label %"#Attr_#inc_2.exit"

"#Attr_#inc_2.exit":                              ; preds = %done320, %Then.i.i735
  %390 = phi i64 [ %get_refcount291, %done320 ], [ %.pre1444, %Then.i.i735 ]
  %.not.i.i.i736 = icmp eq i64 %390, 0
  br i1 %.not.i.i.i736, label %joinpointcont.backedge, label %Then.i.i.i737

Then.i.i.i737:                                    ; preds = %"#Attr_#inc_2.exit"
  %391 = add i64 %390, -1
  store i64 %391, i64* %8, align 8
  %392 = icmp eq i64 %390, -9223372036854775808
  br i1 %392, label %Then1.i.i.i738, label %joinpointcont.backedge

Then1.i.i.i738:                                   ; preds = %Then.i.i.i737
  tail call void @roc_dealloc(i8* %get_rc_ptr290, i32 8) #11
  br label %joinpointcont.backedge

joinpointcont.backedge:                           ; preds = %Then1.i.i.i738, %Then.i.i.i737, %"#Attr_#inc_2.exit", %"#Attr_#dec_8.exit"
  br label %joinpointcont
}

; Function Attrs: nounwind
define internal fastcc void @Arg_parseHelp_c72b902eda39bb917aa07692563fa619ede178030f0bf29603dcc1a9e69ba2({ [0 x i64], [12 x i64] }* %"74", { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* readonly %"75", { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field.i.i1329 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1251 = alloca %str.RocStr, align 8
  %struct_field.i.i1208 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1139 = alloca %str.RocStr, align 8
  %struct_field.i.i1127 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1096 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1022 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i948 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %struct_field2.i764 = alloca %str.RocStr, align 8
  %struct_field1.i765 = alloca %str.RocStr, align 8
  %struct_field.i766 = alloca %str.RocStr, align 8
  %result_value.i.i = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %result_value.i725.sroa.0 = alloca [9 x i64], align 8
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i698 = alloca %str.RocStr, align 8
  %result_value.i686 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value1.i = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value.i = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field1.i643 = alloca %str.RocStr, align 8
  %struct_field.i644 = alloca %str.RocStr, align 8
  %struct_field2.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %load_at_index_ptr_old304.sroa.0 = alloca [10 x i64], align 8
  %const_str_store274 = alloca %str.RocStr, align 8
  %result_value191 = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %struct_field177 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field = alloca %str.RocStr, align 8
  %result_value168 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %result_value126 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %load_at_index_ptr_old106 = alloca { %str.RocStr, %str.RocStr }, align 8
  %load_at_index_ptr_old84 = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %load_at_index_ptr_old56 = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %load_at_index_ptr_old = alloca %str.RocStr, align 8
  %load_at_index_ptr_old304.sroa.0.0.sroa_cast = bitcast [10 x i64]* %load_at_index_ptr_old304.sroa.0 to i8*
  %1 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  %2 = bitcast %str.RocStr* %struct_field.i.i698 to i8*
  %load_str_to_stack.i.i.i705.elt913 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i698, i64 0, i32 2
  %load_at_index_ptr_old304.sroa.0.24.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old304.sroa.0, i64 0, i64 3
  %load_at_index_ptr_old304.sroa.0.24.sroa_cast = bitcast i64* %load_at_index_ptr_old304.sroa.0.24.sroa_idx to i8*
  %load_str_to_stack.i782.elt918 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %3 = bitcast %str.RocStr* %struct_field2.i764 to i8*
  %4 = bitcast %str.RocStr* %struct_field1.i765 to i8*
  %5 = bitcast %str.RocStr* %struct_field.i766 to i8*
  %load_str_to_stack.i.i768.elt923 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i766, i64 0, i32 2
  %load_str_to_stack.i794.elt928 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i765, i64 0, i32 2
  %load_at_index_ptr_old304.sroa.0.48.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old304.sroa.0, i64 0, i64 6
  %load_at_index_ptr_old304.sroa.0.48.sroa_cast = bitcast i64* %load_at_index_ptr_old304.sroa.0.48.sroa_idx to i8*
  %load_str_to_stack.i806.elt933 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i764, i64 0, i32 2
  br label %joinpointcont

joinpointcont:                                    ; preds = %joinpointcont.backedge, %entry
  %joinpointarg = phi { [0 x i64], [12 x i64] }* [ %"74", %entry ], [ %load_at_index_ptr_old283634, %joinpointcont.backedge ]
  %to_int = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %6 = trunc i64 %to_int to i3
  switch i3 %6, label %default [
    i3 -4, label %branch4
    i3 1, label %branch1
    i3 2, label %branch2
    i3 3, label %branch3
    i3 0, label %branch0
  ]

default:                                          ; preds = %joinpointcont
  %masked276 = and i64 %to_int, 7
  %index277 = sub nsw i64 0, %masked276
  %cast_to_i8_ptr278 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr279 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %index277
  %7 = bitcast i8* %new_ptr279 to { [0 x i64], [12 x i64] }**
  %load_at_index_ptr_old283634 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %7, align 8
  %get_rc_ptr290.idx = sub nuw nsw i64 -8, %masked276
  %get_rc_ptr290 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %get_rc_ptr290.idx
  %8 = bitcast i8* %get_rc_ptr290 to i64*
  %get_refcount291 = load i64, i64* %8, align 8
  %is_one292 = icmp eq i64 %get_refcount291, -9223372036854775808
  br i1 %is_one292, label %then_block294, label %done320

branch4:                                          ; preds = %joinpointcont
  %to_int.le1460 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %9 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %branch4
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %10 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8* noundef nonnull align 8 dereferenceable(24) %10, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i936 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i936, label %modify_rc.i.i.i938, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i938:                               ; preds = %loop.i.i
  %call_builtin.i.i.i937 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i937, i64 -8
  %11 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %12 = load i64, i64* %11, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %12, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i938
  %13 = add i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %12, -9223372036854775808
  br i1 %14, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i938, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %15 = ptrtoint i8* %struct_field.unpack.i to i64
  %16 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %17 = select i1 %.not.i.i.i57.i, i64 %16, i64 %15
  %as_usize_ptr.i58.i = inttoptr i64 %17 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %18 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %19 = add i64 %18, -1
  store i64 %19, i64* %get_rc_ptr.i59.i, align 8
  %20 = icmp eq i64 %18, -9223372036854775808
  br i1 %20, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %21 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %21, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %branch4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %22 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %23 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i939 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %24 = select i1 %.not.i.i.i.i.i939, i64 %23, i64 %22
  %as_usize_ptr.i.i.i = inttoptr i64 %24 to i64*
  %get_rc_ptr.i.i.i940 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %25 = load i64, i64* %get_rc_ptr.i.i.i940, align 8
  %.not.i.i.i.i.i.i941 = icmp eq i64 %25, 0
  br i1 %.not.i.i.i.i.i.i941, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i942

Then.i.i.i.i.i.i942:                              ; preds = %modification_list_block.i.i.i
  %26 = add i64 %25, -1
  store i64 %26, i64* %get_rc_ptr.i.i.i940, align 8
  %27 = icmp eq i64 %25, -9223372036854775808
  br i1 %27, label %Then1.i.i.i.i.i.i943, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i943:                             ; preds = %Then.i.i.i.i.i.i942
  %28 = bitcast i64* %get_rc_ptr.i.i.i940 to i8*
  tail call void @roc_dealloc(i8* %28, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i943, %Then.i.i.i.i.i.i942, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %29 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %30 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %31 = select i1 %.not.i.i.i10.i, i64 %30, i64 %29
  %as_usize_ptr.i11.i = inttoptr i64 %31 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %33 = add i64 %32, -1
  store i64 %33, i64* %get_rc_ptr.i12.i, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %35 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %35, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %36 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %37 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i944 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %38 = select i1 %.not.i.i.i.i944, i64 %37, i64 %36
  %as_usize_ptr.i.i = inttoptr i64 %38 to i64*
  %get_rc_ptr.i.i945 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %39 = load i64, i64* %get_rc_ptr.i.i945, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %39, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i946

Then.i.i.i.i.i946:                                ; preds = %modification_list_block.i.i
  %40 = add i64 %39, -1
  store i64 %40, i64* %get_rc_ptr.i.i945, align 8
  %41 = icmp eq i64 %39, -9223372036854775808
  br i1 %41, label %Then1.i.i.i.i.i947, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i947:                               ; preds = %Then.i.i.i.i.i946
  %42 = bitcast i64* %get_rc_ptr.i.i945 to i8*
  tail call void @roc_dealloc(i8* %42, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i946, %Then1.i.i.i.i.i947
  %masked = and i64 %to_int.le1460, 7
  %index = sub nsw i64 0, %masked
  %cast_to_i8_ptr = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %index
  %43 = bitcast %str.RocStr* %load_at_index_ptr_old to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %43, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr, i64 24, i1 false)
  %get_rc_ptr.idx = sub nuw nsw i64 -8, %masked
  %get_rc_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %get_rc_ptr.idx
  %44 = bitcast i8* %get_rc_ptr to i64*
  %get_refcount = load i64, i64* %44, align 8
  %is_one = icmp eq i64 %get_refcount, -9223372036854775808
  br i1 %is_one, label %then_block, label %then

branch1:                                          ; preds = %joinpointcont
  %to_int.le1458 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i949 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i950 = load i8*, i8** %struct_field.elt.i949, align 8
  %struct_field.elt20.i951 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i952 = load i64, i64* %struct_field.elt20.i951, align 8
  %struct_field.elt22.i953 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i954 = load i64, i64* %struct_field.elt22.i953, align 8
  %45 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i948 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %"cap > 0.not.i.i955" = icmp eq i64 %struct_field.unpack23.i954, 0
  br i1 %"cap > 0.not.i.i955", label %"#Attr_#dec_17.exit.i993", label %modification_list_block.i52.i958

modification_list_block.i52.i958:                 ; preds = %branch1
  %cast_basic_basic.i.i956 = bitcast i8* %struct_field.unpack.i950 to %str.RocStr*
  %bounds_check.not.i.i957 = icmp eq i64 %struct_field.unpack21.i952, 0
  br i1 %bounds_check.not.i.i957, label %after_loop.i.i979, label %loop.preheader.i.i960

loop.preheader.i.i960:                            ; preds = %modification_list_block.i52.i958
  %load_str_to_stack.i.elt9.i.i959 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i948, i64 0, i32 2
  br label %loop.i.i966

loop.i.i966:                                      ; preds = %"#Attr_#dec_4.exit.i.i974", %loop.preheader.i.i960
  %next_index12.i.i961 = phi i64 [ 0, %loop.preheader.i.i960 ], [ %next_index.i.i962, %"#Attr_#dec_4.exit.i.i974" ]
  %next_index.i.i962 = add nuw i64 %next_index12.i.i961, 1
  %load_index.i.i963 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i956, i64 %next_index12.i.i961
  %46 = bitcast %str.RocStr* %load_index.i.i963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8* noundef nonnull align 8 dereferenceable(24) %46, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i964 = load i64, i64* %load_str_to_stack.i.elt9.i.i959, align 8
  %is_big_str.i.i.i965 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i964, 0
  br i1 %is_big_str.i.i.i965, label %modify_rc.i.i.i970, label %"#Attr_#dec_4.exit.i.i974"

modify_rc.i.i.i970:                               ; preds = %loop.i.i966
  %call_builtin.i.i.i967 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i948) #11
  %get_rc_ptr.i.i53.i968 = getelementptr inbounds i8, i8* %call_builtin.i.i.i967, i64 -8
  %47 = bitcast i8* %get_rc_ptr.i.i53.i968 to i64*
  %48 = load i64, i64* %47, align 8
  %.not.i.i.i.i.i54.i969 = icmp eq i64 %48, 0
  br i1 %.not.i.i.i.i.i54.i969, label %"#Attr_#dec_4.exit.i.i974", label %Then.i.i.i.i.i55.i971

Then.i.i.i.i.i55.i971:                            ; preds = %modify_rc.i.i.i970
  %49 = add i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp eq i64 %48, -9223372036854775808
  br i1 %50, label %Then1.i.i.i.i.i56.i972, label %"#Attr_#dec_4.exit.i.i974"

Then1.i.i.i.i.i56.i972:                           ; preds = %Then.i.i.i.i.i55.i971
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i968, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i974"

"#Attr_#dec_4.exit.i.i974":                       ; preds = %Then1.i.i.i.i.i56.i972, %Then.i.i.i.i.i55.i971, %modify_rc.i.i.i970, %loop.i.i966
  %exitcond.not.i973 = icmp eq i64 %next_index.i.i962, %struct_field.unpack21.i952
  br i1 %exitcond.not.i973, label %after_loop.i.i979, label %loop.i.i966

after_loop.i.i979:                                ; preds = %"#Attr_#dec_4.exit.i.i974", %modification_list_block.i52.i958
  %51 = ptrtoint i8* %struct_field.unpack.i950 to i64
  %52 = shl i64 %struct_field.unpack23.i954, 1
  %.not.i.i.i57.i975 = icmp slt i64 %struct_field.unpack23.i954, 0
  %53 = select i1 %.not.i.i.i57.i975, i64 %52, i64 %51
  %as_usize_ptr.i58.i976 = inttoptr i64 %53 to i64*
  %get_rc_ptr.i59.i977 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i976, i64 -1
  %54 = load i64, i64* %get_rc_ptr.i59.i977, align 8
  %.not.i.i.i.i60.i978 = icmp eq i64 %54, 0
  br i1 %.not.i.i.i.i60.i978, label %"#Attr_#dec_17.exit.i993", label %Then.i.i.i.i61.i980

Then.i.i.i.i61.i980:                              ; preds = %after_loop.i.i979
  %55 = add i64 %54, -1
  store i64 %55, i64* %get_rc_ptr.i59.i977, align 8
  %56 = icmp eq i64 %54, -9223372036854775808
  br i1 %56, label %Then1.i.i.i.i62.i981, label %"#Attr_#dec_17.exit.i993"

Then1.i.i.i.i62.i981:                             ; preds = %Then.i.i.i.i61.i980
  %57 = bitcast i64* %get_rc_ptr.i59.i977 to i8*
  tail call void @roc_dealloc(i8* %57, i32 8) #11
  br label %"#Attr_#dec_17.exit.i993"

"#Attr_#dec_17.exit.i993":                        ; preds = %Then1.i.i.i.i62.i981, %Then.i.i.i.i61.i980, %after_loop.i.i979, %branch1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  %struct_field1.sroa.264.0..sroa_idx65.i982 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i983 = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i982, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i984 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i985 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i984, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i986 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i987 = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i986, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i988 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i989 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i988, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i990 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i991 = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i990, align 8
  %"cap > 0.i.i.not.i992" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i983, 0
  br i1 %"cap > 0.i.i.not.i992", label %"#Attr_#dec_18.exit.i1004", label %modification_list_block.i.i.i1000

modification_list_block.i.i.i1000:                ; preds = %"#Attr_#dec_17.exit.i993"
  %struct_field1.sroa.0.0..sroa_idx.i994 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i995 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i994, align 8
  %58 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i995 to i64
  %59 = shl i64 %struct_field1.sroa.264.0.copyload.i983, 1
  %.not.i.i.i.i.i996 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i983, 0
  %60 = select i1 %.not.i.i.i.i.i996, i64 %59, i64 %58
  %as_usize_ptr.i.i.i997 = inttoptr i64 %60 to i64*
  %get_rc_ptr.i.i.i998 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i997, i64 -1
  %61 = load i64, i64* %get_rc_ptr.i.i.i998, align 8
  %.not.i.i.i.i.i.i999 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i.i.i999, label %"#Attr_#dec_18.exit.i1004", label %Then.i.i.i.i.i.i1001

Then.i.i.i.i.i.i1001:                             ; preds = %modification_list_block.i.i.i1000
  %62 = add i64 %61, -1
  store i64 %62, i64* %get_rc_ptr.i.i.i998, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i.i.i1002, label %"#Attr_#dec_18.exit.i1004"

Then1.i.i.i.i.i.i1002:                            ; preds = %Then.i.i.i.i.i.i1001
  %64 = bitcast i64* %get_rc_ptr.i.i.i998 to i8*
  tail call void @roc_dealloc(i8* %64, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1004"

"#Attr_#dec_18.exit.i1004":                       ; preds = %Then1.i.i.i.i.i.i1002, %Then.i.i.i.i.i.i1001, %modification_list_block.i.i.i1000, %"#Attr_#dec_17.exit.i993"
  %"cap > 0.i5.not.i1003" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i987, 0
  br i1 %"cap > 0.i5.not.i1003", label %"#Attr_#dec_10.exit.i1013", label %modification_list_block.i14.i1009

modification_list_block.i14.i1009:                ; preds = %"#Attr_#dec_18.exit.i1004"
  %65 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i985 to i64
  %66 = shl i64 %struct_field1.sroa.468.0.copyload.i987, 1
  %.not.i.i.i10.i1005 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i987, 0
  %67 = select i1 %.not.i.i.i10.i1005, i64 %66, i64 %65
  %as_usize_ptr.i11.i1006 = inttoptr i64 %67 to i64*
  %get_rc_ptr.i12.i1007 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1006, i64 -1
  %68 = load i64, i64* %get_rc_ptr.i12.i1007, align 8
  %.not.i.i.i.i13.i1008 = icmp eq i64 %68, 0
  br i1 %.not.i.i.i.i13.i1008, label %"#Attr_#dec_10.exit.i1013", label %Then.i.i.i.i15.i1010

Then.i.i.i.i15.i1010:                             ; preds = %modification_list_block.i14.i1009
  %69 = add i64 %68, -1
  store i64 %69, i64* %get_rc_ptr.i12.i1007, align 8
  %70 = icmp eq i64 %68, -9223372036854775808
  br i1 %70, label %Then1.i.i.i.i16.i1011, label %"#Attr_#dec_10.exit.i1013"

Then1.i.i.i.i16.i1011:                            ; preds = %Then.i.i.i.i15.i1010
  %71 = bitcast i64* %get_rc_ptr.i12.i1007 to i8*
  tail call void @roc_dealloc(i8* %71, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1013"

"#Attr_#dec_10.exit.i1013":                       ; preds = %Then1.i.i.i.i16.i1011, %Then.i.i.i.i15.i1010, %modification_list_block.i14.i1009, %"#Attr_#dec_18.exit.i1004"
  %"cap > 0.i.not.i1012" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i991, 0
  br i1 %"cap > 0.i.not.i1012", label %"#Attr_#dec_16.exit1021", label %modification_list_block.i.i1018

modification_list_block.i.i1018:                  ; preds = %"#Attr_#dec_10.exit.i1013"
  %72 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i989 to i64
  %73 = shl i64 %struct_field1.sroa.672.0.copyload.i991, 1
  %.not.i.i.i.i1014 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i991, 0
  %74 = select i1 %.not.i.i.i.i1014, i64 %73, i64 %72
  %as_usize_ptr.i.i1015 = inttoptr i64 %74 to i64*
  %get_rc_ptr.i.i1016 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1015, i64 -1
  %75 = load i64, i64* %get_rc_ptr.i.i1016, align 8
  %.not.i.i.i.i2.i1017 = icmp eq i64 %75, 0
  br i1 %.not.i.i.i.i2.i1017, label %"#Attr_#dec_16.exit1021", label %Then.i.i.i.i.i1019

Then.i.i.i.i.i1019:                               ; preds = %modification_list_block.i.i1018
  %76 = add i64 %75, -1
  store i64 %76, i64* %get_rc_ptr.i.i1016, align 8
  %77 = icmp eq i64 %75, -9223372036854775808
  br i1 %77, label %Then1.i.i.i.i.i1020, label %"#Attr_#dec_16.exit1021"

Then1.i.i.i.i.i1020:                              ; preds = %Then.i.i.i.i.i1019
  %78 = bitcast i64* %get_rc_ptr.i.i1016 to i8*
  tail call void @roc_dealloc(i8* %78, i32 8) #11
  br label %"#Attr_#dec_16.exit1021"

"#Attr_#dec_16.exit1021":                         ; preds = %"#Attr_#dec_10.exit.i1013", %modification_list_block.i.i1018, %Then.i.i.i.i.i1019, %Then1.i.i.i.i.i1020
  %cast_to_i8_ptr36 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %masked38 = and i64 %to_int.le1458, 7
  %get_rc_ptr42.idx = sub nuw nsw i64 -8, %masked38
  %get_rc_ptr42 = getelementptr inbounds i8, i8* %cast_to_i8_ptr36, i64 %get_rc_ptr42.idx
  %79 = bitcast i8* %get_rc_ptr42 to i64*
  %get_refcount43 = load i64, i64* %79, align 8
  switch i64 %get_refcount43, label %Then.i.i.i640 [
    i64 -9223372036854775808, label %then_block46
    i64 0, label %joinpointcont35
  ]

branch2:                                          ; preds = %joinpointcont
  %to_int.le1456 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked77 = and i64 %to_int.le1456, 7
  %cast_to_i8_ptr79 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %at_index_struct_gep_data83.idx = sub nuw nsw i64 48, %masked77
  %at_index_struct_gep_data83 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %at_index_struct_gep_data83.idx
  %80 = bitcast %str.RocStr* %load_at_index_ptr_old84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %80, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data83, i64 24, i1 false)
  %get_rc_ptr92.idx = sub nuw nsw i64 -8, %masked77
  %get_rc_ptr92 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %get_rc_ptr92.idx
  %81 = bitcast i8* %get_rc_ptr92 to i64*
  %get_refcount93 = load i64, i64* %81, align 8
  %is_one94 = icmp eq i64 %get_refcount93, -9223372036854775808
  br i1 %is_one94, label %then_block96, label %then121

branch3:                                          ; preds = %joinpointcont
  %to_int.le1454 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked128 = and i64 %to_int.le1454, 7
  %index129 = sub nsw i64 0, %masked128
  %cast_to_i8_ptr130 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr131 = getelementptr inbounds i8, i8* %cast_to_i8_ptr130, i64 %index129
  %load_at_index_ptr_old135.elt = bitcast i8* %new_ptr131 to i8**
  %load_at_index_ptr_old135.unpack = load i8*, i8** %load_at_index_ptr_old135.elt, align 8
  %82 = insertvalue %list.RocList undef, i8* %load_at_index_ptr_old135.unpack, 0
  %load_at_index_ptr_old135.elt326 = getelementptr inbounds i8, i8* %new_ptr131, i64 8
  %83 = bitcast i8* %load_at_index_ptr_old135.elt326 to i64*
  %load_at_index_ptr_old135.unpack327 = load i64, i64* %83, align 8
  %84 = insertvalue %list.RocList %82, i64 %load_at_index_ptr_old135.unpack327, 1
  %load_at_index_ptr_old135.elt328 = getelementptr inbounds i8, i8* %new_ptr131, i64 16
  %85 = bitcast i8* %load_at_index_ptr_old135.elt328 to i64*
  %load_at_index_ptr_old135.unpack329 = load i64, i64* %85, align 8
  %load_at_index_ptr_old135330 = insertvalue %list.RocList %84, i64 %load_at_index_ptr_old135.unpack329, 2
  %get_rc_ptr143.idx = sub nuw nsw i64 -8, %masked128
  %get_rc_ptr143 = getelementptr inbounds i8, i8* %cast_to_i8_ptr130, i64 %get_rc_ptr143.idx
  %86 = bitcast i8* %get_rc_ptr143 to i64*
  %get_refcount144 = load i64, i64* %86, align 8
  %is_one145 = icmp eq i64 %get_refcount144, -9223372036854775808
  br i1 %is_one145, label %then_block147, label %then163

branch0:                                          ; preds = %joinpointcont
  %to_int.le = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i1023 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1024 = load i8*, i8** %struct_field.elt.i1023, align 8
  %struct_field.elt20.i1025 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i1026 = load i64, i64* %struct_field.elt20.i1025, align 8
  %struct_field.elt22.i1027 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i1028 = load i64, i64* %struct_field.elt22.i1027, align 8
  %87 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1022 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %"cap > 0.not.i.i1029" = icmp eq i64 %struct_field.unpack23.i1028, 0
  br i1 %"cap > 0.not.i.i1029", label %"#Attr_#dec_17.exit.i1067", label %modification_list_block.i52.i1032

modification_list_block.i52.i1032:                ; preds = %branch0
  %cast_basic_basic.i.i1030 = bitcast i8* %struct_field.unpack.i1024 to %str.RocStr*
  %bounds_check.not.i.i1031 = icmp eq i64 %struct_field.unpack21.i1026, 0
  br i1 %bounds_check.not.i.i1031, label %after_loop.i.i1053, label %loop.preheader.i.i1034

loop.preheader.i.i1034:                           ; preds = %modification_list_block.i52.i1032
  %load_str_to_stack.i.elt9.i.i1033 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1022, i64 0, i32 2
  br label %loop.i.i1040

loop.i.i1040:                                     ; preds = %"#Attr_#dec_4.exit.i.i1048", %loop.preheader.i.i1034
  %next_index12.i.i1035 = phi i64 [ 0, %loop.preheader.i.i1034 ], [ %next_index.i.i1036, %"#Attr_#dec_4.exit.i.i1048" ]
  %next_index.i.i1036 = add nuw i64 %next_index12.i.i1035, 1
  %load_index.i.i1037 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1030, i64 %next_index12.i.i1035
  %88 = bitcast %str.RocStr* %load_index.i.i1037 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %87, i8* noundef nonnull align 8 dereferenceable(24) %88, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i1038 = load i64, i64* %load_str_to_stack.i.elt9.i.i1033, align 8
  %is_big_str.i.i.i1039 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i1038, 0
  br i1 %is_big_str.i.i.i1039, label %modify_rc.i.i.i1044, label %"#Attr_#dec_4.exit.i.i1048"

modify_rc.i.i.i1044:                              ; preds = %loop.i.i1040
  %call_builtin.i.i.i1041 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1022) #11
  %get_rc_ptr.i.i53.i1042 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1041, i64 -8
  %89 = bitcast i8* %get_rc_ptr.i.i53.i1042 to i64*
  %90 = load i64, i64* %89, align 8
  %.not.i.i.i.i.i54.i1043 = icmp eq i64 %90, 0
  br i1 %.not.i.i.i.i.i54.i1043, label %"#Attr_#dec_4.exit.i.i1048", label %Then.i.i.i.i.i55.i1045

Then.i.i.i.i.i55.i1045:                           ; preds = %modify_rc.i.i.i1044
  %91 = add i64 %90, -1
  store i64 %91, i64* %89, align 8
  %92 = icmp eq i64 %90, -9223372036854775808
  br i1 %92, label %Then1.i.i.i.i.i56.i1046, label %"#Attr_#dec_4.exit.i.i1048"

Then1.i.i.i.i.i56.i1046:                          ; preds = %Then.i.i.i.i.i55.i1045
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i1042, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i1048"

"#Attr_#dec_4.exit.i.i1048":                      ; preds = %Then1.i.i.i.i.i56.i1046, %Then.i.i.i.i.i55.i1045, %modify_rc.i.i.i1044, %loop.i.i1040
  %exitcond.not.i1047 = icmp eq i64 %next_index.i.i1036, %struct_field.unpack21.i1026
  br i1 %exitcond.not.i1047, label %after_loop.i.i1053, label %loop.i.i1040

after_loop.i.i1053:                               ; preds = %"#Attr_#dec_4.exit.i.i1048", %modification_list_block.i52.i1032
  %93 = ptrtoint i8* %struct_field.unpack.i1024 to i64
  %94 = shl i64 %struct_field.unpack23.i1028, 1
  %.not.i.i.i57.i1049 = icmp slt i64 %struct_field.unpack23.i1028, 0
  %95 = select i1 %.not.i.i.i57.i1049, i64 %94, i64 %93
  %as_usize_ptr.i58.i1050 = inttoptr i64 %95 to i64*
  %get_rc_ptr.i59.i1051 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i1050, i64 -1
  %96 = load i64, i64* %get_rc_ptr.i59.i1051, align 8
  %.not.i.i.i.i60.i1052 = icmp eq i64 %96, 0
  br i1 %.not.i.i.i.i60.i1052, label %"#Attr_#dec_17.exit.i1067", label %Then.i.i.i.i61.i1054

Then.i.i.i.i61.i1054:                             ; preds = %after_loop.i.i1053
  %97 = add i64 %96, -1
  store i64 %97, i64* %get_rc_ptr.i59.i1051, align 8
  %98 = icmp eq i64 %96, -9223372036854775808
  br i1 %98, label %Then1.i.i.i.i62.i1055, label %"#Attr_#dec_17.exit.i1067"

Then1.i.i.i.i62.i1055:                            ; preds = %Then.i.i.i.i61.i1054
  %99 = bitcast i64* %get_rc_ptr.i59.i1051 to i8*
  tail call void @roc_dealloc(i8* %99, i32 8) #11
  br label %"#Attr_#dec_17.exit.i1067"

"#Attr_#dec_17.exit.i1067":                       ; preds = %Then1.i.i.i.i62.i1055, %Then.i.i.i.i61.i1054, %after_loop.i.i1053, %branch0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  %struct_field1.sroa.264.0..sroa_idx65.i1056 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i1057 = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i1056, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i1058 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1059 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i1058, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i1060 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i1061 = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i1060, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i1062 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1063 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i1062, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i1064 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i1065 = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i1064, align 8
  %"cap > 0.i.i.not.i1066" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i1057, 0
  br i1 %"cap > 0.i.i.not.i1066", label %"#Attr_#dec_18.exit.i1078", label %modification_list_block.i.i.i1074

modification_list_block.i.i.i1074:                ; preds = %"#Attr_#dec_17.exit.i1067"
  %struct_field1.sroa.0.0..sroa_idx.i1068 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1069 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1068, align 8
  %100 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1069 to i64
  %101 = shl i64 %struct_field1.sroa.264.0.copyload.i1057, 1
  %.not.i.i.i.i.i1070 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i1057, 0
  %102 = select i1 %.not.i.i.i.i.i1070, i64 %101, i64 %100
  %as_usize_ptr.i.i.i1071 = inttoptr i64 %102 to i64*
  %get_rc_ptr.i.i.i1072 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1071, i64 -1
  %103 = load i64, i64* %get_rc_ptr.i.i.i1072, align 8
  %.not.i.i.i.i.i.i1073 = icmp eq i64 %103, 0
  br i1 %.not.i.i.i.i.i.i1073, label %"#Attr_#dec_18.exit.i1078", label %Then.i.i.i.i.i.i1075

Then.i.i.i.i.i.i1075:                             ; preds = %modification_list_block.i.i.i1074
  %104 = add i64 %103, -1
  store i64 %104, i64* %get_rc_ptr.i.i.i1072, align 8
  %105 = icmp eq i64 %103, -9223372036854775808
  br i1 %105, label %Then1.i.i.i.i.i.i1076, label %"#Attr_#dec_18.exit.i1078"

Then1.i.i.i.i.i.i1076:                            ; preds = %Then.i.i.i.i.i.i1075
  %106 = bitcast i64* %get_rc_ptr.i.i.i1072 to i8*
  tail call void @roc_dealloc(i8* %106, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1078"

"#Attr_#dec_18.exit.i1078":                       ; preds = %Then1.i.i.i.i.i.i1076, %Then.i.i.i.i.i.i1075, %modification_list_block.i.i.i1074, %"#Attr_#dec_17.exit.i1067"
  %"cap > 0.i5.not.i1077" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i1061, 0
  br i1 %"cap > 0.i5.not.i1077", label %"#Attr_#dec_10.exit.i1087", label %modification_list_block.i14.i1083

modification_list_block.i14.i1083:                ; preds = %"#Attr_#dec_18.exit.i1078"
  %107 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1059 to i64
  %108 = shl i64 %struct_field1.sroa.468.0.copyload.i1061, 1
  %.not.i.i.i10.i1079 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i1061, 0
  %109 = select i1 %.not.i.i.i10.i1079, i64 %108, i64 %107
  %as_usize_ptr.i11.i1080 = inttoptr i64 %109 to i64*
  %get_rc_ptr.i12.i1081 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1080, i64 -1
  %110 = load i64, i64* %get_rc_ptr.i12.i1081, align 8
  %.not.i.i.i.i13.i1082 = icmp eq i64 %110, 0
  br i1 %.not.i.i.i.i13.i1082, label %"#Attr_#dec_10.exit.i1087", label %Then.i.i.i.i15.i1084

Then.i.i.i.i15.i1084:                             ; preds = %modification_list_block.i14.i1083
  %111 = add i64 %110, -1
  store i64 %111, i64* %get_rc_ptr.i12.i1081, align 8
  %112 = icmp eq i64 %110, -9223372036854775808
  br i1 %112, label %Then1.i.i.i.i16.i1085, label %"#Attr_#dec_10.exit.i1087"

Then1.i.i.i.i16.i1085:                            ; preds = %Then.i.i.i.i15.i1084
  %113 = bitcast i64* %get_rc_ptr.i12.i1081 to i8*
  tail call void @roc_dealloc(i8* %113, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1087"

"#Attr_#dec_10.exit.i1087":                       ; preds = %Then1.i.i.i.i16.i1085, %Then.i.i.i.i15.i1084, %modification_list_block.i14.i1083, %"#Attr_#dec_18.exit.i1078"
  %"cap > 0.i.not.i1086" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i1065, 0
  br i1 %"cap > 0.i.not.i1086", label %"#Attr_#dec_16.exit1095", label %modification_list_block.i.i1092

modification_list_block.i.i1092:                  ; preds = %"#Attr_#dec_10.exit.i1087"
  %114 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1063 to i64
  %115 = shl i64 %struct_field1.sroa.672.0.copyload.i1065, 1
  %.not.i.i.i.i1088 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i1065, 0
  %116 = select i1 %.not.i.i.i.i1088, i64 %115, i64 %114
  %as_usize_ptr.i.i1089 = inttoptr i64 %116 to i64*
  %get_rc_ptr.i.i1090 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1089, i64 -1
  %117 = load i64, i64* %get_rc_ptr.i.i1090, align 8
  %.not.i.i.i.i2.i1091 = icmp eq i64 %117, 0
  br i1 %.not.i.i.i.i2.i1091, label %"#Attr_#dec_16.exit1095", label %Then.i.i.i.i.i1093

Then.i.i.i.i.i1093:                               ; preds = %modification_list_block.i.i1092
  %118 = add i64 %117, -1
  store i64 %118, i64* %get_rc_ptr.i.i1090, align 8
  %119 = icmp eq i64 %117, -9223372036854775808
  br i1 %119, label %Then1.i.i.i.i.i1094, label %"#Attr_#dec_16.exit1095"

Then1.i.i.i.i.i1094:                              ; preds = %Then.i.i.i.i.i1093
  %120 = bitcast i64* %get_rc_ptr.i.i1090 to i8*
  tail call void @roc_dealloc(i8* %120, i32 8) #11
  br label %"#Attr_#dec_16.exit1095"

"#Attr_#dec_16.exit1095":                         ; preds = %"#Attr_#dec_10.exit.i1087", %modification_list_block.i.i1092, %Then.i.i.i.i.i1093, %Then1.i.i.i.i.i1094
  %cast_to_i8_ptr243 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %masked245 = and i64 %to_int.le, 7
  %get_rc_ptr249.idx = sub nuw nsw i64 -8, %masked245
  %get_rc_ptr249 = getelementptr inbounds i8, i8* %cast_to_i8_ptr243, i64 %get_rc_ptr249.idx
  %121 = bitcast i8* %get_rc_ptr249 to i64*
  %get_refcount250 = load i64, i64* %121, align 8
  switch i64 %get_refcount250, label %Then.i.i.i695 [
    i64 -9223372036854775808, label %then_block253
    i64 0, label %joinpointcont242
  ]

then_block:                                       ; preds = %"#Attr_#dec_16.exit"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %44)
  %load_tag_to_put_in_struct.elt626.phi.trans.insert = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack627.pre = load i64, i64* %load_tag_to_put_in_struct.elt626.phi.trans.insert, align 8
  br label %joinpointcont3

then:                                             ; preds = %"#Attr_#dec_16.exit"
  %load_str_to_stack.i.elt908 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 2
  %load_str_to_stack.i.unpack909 = load i64, i64* %load_str_to_stack.i.elt908, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack909, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#inc_4.exit"

modify_rc.i:                                      ; preds = %then
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %122 = bitcast i8* %get_rc_ptr.i to i64*
  %123 = load i64, i64* %122, align 8
  %.not.i.i = icmp eq i64 %123, 0
  br i1 %.not.i.i, label %"#Attr_#inc_4.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modify_rc.i
  %124 = add nsw i64 %123, 1
  store i64 %124, i64* %122, align 8
  %.pre1442 = load i64, i64* %44, align 8
  br label %"#Attr_#inc_4.exit"

"#Attr_#inc_4.exit":                              ; preds = %then, %modify_rc.i, %Then.i.i
  %125 = phi i64 [ %get_refcount, %then ], [ %get_refcount, %modify_rc.i ], [ %.pre1442, %Then.i.i ]
  %.not.i.i.i = icmp eq i64 %125, 0
  br i1 %.not.i.i.i, label %joinpointcont3, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %"#Attr_#inc_4.exit"
  %126 = add i64 %125, -1
  store i64 %126, i64* %44, align 8
  %127 = icmp eq i64 %125, -9223372036854775808
  br i1 %127, label %Then1.i.i.i, label %joinpointcont3

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  br label %joinpointcont3

common.ret:                                       ; preds = %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit, %"#Attr_#dec_19.exit", %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, %"#Attr_#inc_16.exit", %joinpointcont3
  %.sink1462 = phi i8* [ %365, %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit ], [ %335, %"#Attr_#dec_19.exit" ], [ %318, %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit ], [ %195, %"#Attr_#inc_16.exit" ], [ %130, %joinpointcont3 ]
  %.sink = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %.sink, i8* noundef nonnull align 8 dereferenceable(64) %.sink1462, i64 64, i1 false)
  ret void

joinpointcont3:                                   ; preds = %Then1.i.i.i, %Then.i.i.i, %"#Attr_#inc_4.exit", %then_block
  %load_tag_to_put_in_struct.unpack627 = phi i64 [ %load_str_to_stack.i.unpack909, %Then1.i.i.i ], [ %load_str_to_stack.i.unpack909, %Then.i.i.i ], [ %load_str_to_stack.i.unpack909, %"#Attr_#inc_4.exit" ], [ %load_tag_to_put_in_struct.unpack627.pre, %then_block ]
  %load_tag_to_put_in_struct.elt = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 0
  %load_tag_to_put_in_struct.unpack = load i8*, i8** %load_tag_to_put_in_struct.elt, align 8
  %load_tag_to_put_in_struct.elt624 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 1
  %load_tag_to_put_in_struct.unpack625 = load i64, i64* %load_tag_to_put_in_struct.elt624, align 8
  %tag_alloca = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %.repack629 = bitcast [7 x i64]* %data_buffer to i8**
  store i8* %load_tag_to_put_in_struct.unpack, i8** %.repack629, align 8
  %128 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack625, i64* %128, align 8
  %129 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack627, i64* %129, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr, align 8
  %130 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  br label %common.ret

then_block46:                                     ; preds = %"#Attr_#dec_16.exit1021"
  %index50 = sub nsw i64 0, %masked38
  %new_ptr52 = getelementptr inbounds i8, i8* %cast_to_i8_ptr36, i64 %index50
  %131 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %131, i8* noundef nonnull align 8 dereferenceable(80) %new_ptr52, i64 80, i1 false)
  %132 = bitcast %str.RocStr* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132)
  %133 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133)
  %134 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %134, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr52, i64 24, i1 false)
  %load_str_to_stack.i.i.elt893 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack894 = load i64, i64* %load_str_to_stack.i.i.elt893, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack894, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_3.exit"

modify_rc.i.i:                                    ; preds = %then_block46
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %135 = bitcast i8* %get_rc_ptr.i.i to i64*
  %136 = load i64, i64* %135, align 8
  %.not.i.i.i.i.i = icmp eq i64 %136, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_3.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %137 = add i64 %136, -1
  store i64 %137, i64* %135, align 8
  %138 = icmp eq i64 %136, -9223372036854775808
  br i1 %138, label %Then1.i.i.i.i.i, label %"#Attr_#dec_3.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_3.exit"

"#Attr_#dec_3.exit":                              ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %then_block46
  %struct_field_access_record_1.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56, i64 0, i32 1
  %139 = bitcast %str.RocStr* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %133, i8* noundef nonnull align 8 dereferenceable(24) %139, i64 24, i1 false) #11
  %load_str_to_stack.i728.elt898 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i728.unpack899 = load i64, i64* %load_str_to_stack.i728.elt898, align 8
  %is_big_str.i730 = icmp sgt i64 %load_str_to_stack.i728.unpack899, 0
  br i1 %is_big_str.i730, label %modify_rc.i735, label %"#Attr_#dec_4.exit739"

modify_rc.i735:                                   ; preds = %"#Attr_#dec_3.exit"
  %call_builtin.i731 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i733 = getelementptr inbounds i8, i8* %call_builtin.i731, i64 -8
  %140 = bitcast i8* %get_rc_ptr.i733 to i64*
  %141 = load i64, i64* %140, align 8
  %.not.i.i.i.i734 = icmp eq i64 %141, 0
  br i1 %.not.i.i.i.i734, label %"#Attr_#dec_4.exit739", label %Then.i.i.i.i736

Then.i.i.i.i736:                                  ; preds = %modify_rc.i735
  %142 = add i64 %141, -1
  store i64 %142, i64* %140, align 8
  %143 = icmp eq i64 %141, -9223372036854775808
  br i1 %143, label %Then1.i.i.i.i737, label %"#Attr_#dec_4.exit739"

Then1.i.i.i.i737:                                 ; preds = %Then.i.i.i.i736
  tail call void @roc_dealloc(i8* %get_rc_ptr.i733, i32 8) #11
  br label %"#Attr_#dec_4.exit739"

"#Attr_#dec_4.exit739":                           ; preds = %modify_rc.i735, %Then.i.i.i.i736, %Then1.i.i.i.i737, %"#Attr_#dec_3.exit"
  %struct_field_access_record_2.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56, i64 0, i32 2
  %144 = bitcast %str.RocStr* %struct_field_access_record_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %132, i8* noundef nonnull align 8 dereferenceable(24) %144, i64 24, i1 false) #11
  %load_str_to_stack.i740.elt903 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i, i64 0, i32 2
  %load_str_to_stack.i740.unpack904 = load i64, i64* %load_str_to_stack.i740.elt903, align 8
  %is_big_str.i742 = icmp sgt i64 %load_str_to_stack.i740.unpack904, 0
  br i1 %is_big_str.i742, label %modify_rc.i747, label %"#Attr_#dec_4.exit751"

modify_rc.i747:                                   ; preds = %"#Attr_#dec_4.exit739"
  %call_builtin.i743 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i) #11
  %get_rc_ptr.i745 = getelementptr inbounds i8, i8* %call_builtin.i743, i64 -8
  %145 = bitcast i8* %get_rc_ptr.i745 to i64*
  %146 = load i64, i64* %145, align 8
  %.not.i.i.i.i746 = icmp eq i64 %146, 0
  br i1 %.not.i.i.i.i746, label %"#Attr_#dec_4.exit751", label %Then.i.i.i.i748

Then.i.i.i.i748:                                  ; preds = %modify_rc.i747
  %147 = add i64 %146, -1
  store i64 %147, i64* %145, align 8
  %148 = icmp eq i64 %146, -9223372036854775808
  br i1 %148, label %Then1.i.i.i.i749, label %"#Attr_#dec_4.exit751"

Then1.i.i.i.i749:                                 ; preds = %Then.i.i.i.i748
  tail call void @roc_dealloc(i8* %get_rc_ptr.i745, i32 8) #11
  br label %"#Attr_#dec_4.exit751"

"#Attr_#dec_4.exit751":                           ; preds = %modify_rc.i747, %Then.i.i.i.i748, %Then1.i.i.i.i749, %"#Attr_#dec_4.exit739"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134)
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %79)
  br label %joinpointcont35

Then.i.i.i640:                                    ; preds = %"#Attr_#dec_16.exit1021"
  %149 = add nsw i64 %get_refcount43, -1
  store i64 %149, i64* %79, align 8
  br label %joinpointcont35

joinpointcont35:                                  ; preds = %"#Attr_#dec_16.exit1021", %Then.i.i.i640, %"#Attr_#dec_4.exit751"
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store.repack, align 8
  %const_str_store.repack622 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 73, i64* %const_str_store.repack622, align 8
  %const_str_store.repack623 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 73, i64* %const_str_store.repack623, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 0)
  unreachable

then_block96:                                     ; preds = %branch2
  %index100 = sub nsw i64 0, %masked77
  %new_ptr102 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %index100
  %150 = bitcast { %str.RocStr, %str.RocStr }* %load_at_index_ptr_old106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %150, i8* noundef nonnull align 8 dereferenceable(48) %new_ptr102, i64 48, i1 false)
  %151 = bitcast %str.RocStr* %struct_field1.i643 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151)
  %152 = bitcast %str.RocStr* %struct_field.i644 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %152, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr102, i64 24, i1 false)
  %load_str_to_stack.i.i646.elt883 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i644, i64 0, i32 2
  %load_str_to_stack.i.i646.unpack884 = load i64, i64* %load_str_to_stack.i.i646.elt883, align 8
  %is_big_str.i.i648 = icmp sgt i64 %load_str_to_stack.i.i646.unpack884, 0
  br i1 %is_big_str.i.i648, label %modify_rc.i.i653, label %"#Attr_#dec_5.exit"

modify_rc.i.i653:                                 ; preds = %then_block96
  %call_builtin.i.i649 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i644) #11
  %get_rc_ptr.i.i651 = getelementptr inbounds i8, i8* %call_builtin.i.i649, i64 -8
  %153 = bitcast i8* %get_rc_ptr.i.i651 to i64*
  %154 = load i64, i64* %153, align 8
  %.not.i.i.i.i.i652 = icmp eq i64 %154, 0
  br i1 %.not.i.i.i.i.i652, label %"#Attr_#dec_5.exit", label %Then.i.i.i.i.i654

Then.i.i.i.i.i654:                                ; preds = %modify_rc.i.i653
  %155 = add i64 %154, -1
  store i64 %155, i64* %153, align 8
  %156 = icmp eq i64 %154, -9223372036854775808
  br i1 %156, label %Then1.i.i.i.i.i655, label %"#Attr_#dec_5.exit"

Then1.i.i.i.i.i655:                               ; preds = %Then.i.i.i.i.i654
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i651, i32 8) #11
  br label %"#Attr_#dec_5.exit"

"#Attr_#dec_5.exit":                              ; preds = %modify_rc.i.i653, %Then.i.i.i.i.i654, %Then1.i.i.i.i.i655, %then_block96
  %struct_field_access_record_1.i657 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %load_at_index_ptr_old106, i64 0, i32 1
  %157 = bitcast %str.RocStr* %struct_field_access_record_1.i657 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %151, i8* noundef nonnull align 8 dereferenceable(24) %157, i64 24, i1 false) #11
  %load_str_to_stack.i752.elt888 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i643, i64 0, i32 2
  %load_str_to_stack.i752.unpack889 = load i64, i64* %load_str_to_stack.i752.elt888, align 8
  %is_big_str.i754 = icmp sgt i64 %load_str_to_stack.i752.unpack889, 0
  br i1 %is_big_str.i754, label %modify_rc.i759, label %"#Attr_#dec_4.exit763"

modify_rc.i759:                                   ; preds = %"#Attr_#dec_5.exit"
  %call_builtin.i755 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i643) #11
  %get_rc_ptr.i757 = getelementptr inbounds i8, i8* %call_builtin.i755, i64 -8
  %158 = bitcast i8* %get_rc_ptr.i757 to i64*
  %159 = load i64, i64* %158, align 8
  %.not.i.i.i.i758 = icmp eq i64 %159, 0
  br i1 %.not.i.i.i.i758, label %"#Attr_#dec_4.exit763", label %Then.i.i.i.i760

Then.i.i.i.i760:                                  ; preds = %modify_rc.i759
  %160 = add i64 %159, -1
  store i64 %160, i64* %158, align 8
  %161 = icmp eq i64 %159, -9223372036854775808
  br i1 %161, label %Then1.i.i.i.i761, label %"#Attr_#dec_4.exit763"

Then1.i.i.i.i761:                                 ; preds = %Then.i.i.i.i760
  tail call void @roc_dealloc(i8* %get_rc_ptr.i757, i32 8) #11
  br label %"#Attr_#dec_4.exit763"

"#Attr_#dec_4.exit763":                           ; preds = %modify_rc.i759, %Then.i.i.i.i760, %Then1.i.i.i.i761, %"#Attr_#dec_5.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152)
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %81)
  br label %joinpointcont85

then121:                                          ; preds = %branch2
  %load_str_to_stack.i658.elt878 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old84, i64 0, i32 2
  %load_str_to_stack.i658.unpack879 = load i64, i64* %load_str_to_stack.i658.elt878, align 8
  %is_big_str.i660 = icmp sgt i64 %load_str_to_stack.i658.unpack879, 0
  br i1 %is_big_str.i660, label %modify_rc.i665, label %"#Attr_#inc_4.exit667"

modify_rc.i665:                                   ; preds = %then121
  %call_builtin.i661 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old84) #11
  %get_rc_ptr.i663 = getelementptr inbounds i8, i8* %call_builtin.i661, i64 -8
  %162 = bitcast i8* %get_rc_ptr.i663 to i64*
  %163 = load i64, i64* %162, align 8
  %.not.i.i664 = icmp eq i64 %163, 0
  br i1 %.not.i.i664, label %"#Attr_#inc_4.exit667", label %Then.i.i666

Then.i.i666:                                      ; preds = %modify_rc.i665
  %164 = add nsw i64 %163, 1
  store i64 %164, i64* %162, align 8
  %.pre = load i64, i64* %81, align 8
  br label %"#Attr_#inc_4.exit667"

"#Attr_#inc_4.exit667":                           ; preds = %then121, %modify_rc.i665, %Then.i.i666
  %165 = phi i64 [ %get_refcount93, %then121 ], [ %get_refcount93, %modify_rc.i665 ], [ %.pre, %Then.i.i666 ]
  %.not.i.i.i668 = icmp eq i64 %165, 0
  br i1 %.not.i.i.i668, label %joinpointcont85, label %Then.i.i.i669

Then.i.i.i669:                                    ; preds = %"#Attr_#inc_4.exit667"
  %166 = add i64 %165, -1
  store i64 %166, i64* %81, align 8
  %167 = icmp eq i64 %165, -9223372036854775808
  br i1 %167, label %Then1.i.i.i670, label %joinpointcont85

Then1.i.i.i670:                                   ; preds = %Then.i.i.i669
  tail call void @roc_dealloc(i8* %get_rc_ptr92, i32 8) #11
  br label %joinpointcont85

joinpointcont85:                                  ; preds = %Then1.i.i.i670, %Then.i.i.i669, %"#Attr_#inc_4.exit667", %"#Attr_#dec_4.exit763"
  %168 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %168)
  %169 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %169)
  %struct_field.elt.i1097 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1098 = load i8*, i8** %struct_field.elt.i1097, align 8
  %struct_field.elt1.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack2.i = load i64, i64* %struct_field.elt1.i, align 8
  %struct_field.elt3.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack4.i = load i64, i64* %struct_field.elt3.i, align 8
  %170 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1096 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #11
  %"cap > 0.not.i.i1099" = icmp eq i64 %struct_field.unpack4.i, 0
  br i1 %"cap > 0.not.i.i1099", label %"#Attr_#inc_17.exit.i", label %modification_list_block.i.i1102

modification_list_block.i.i1102:                  ; preds = %joinpointcont85
  %cast_basic_basic.i.i1100 = bitcast i8* %struct_field.unpack.i1098 to %str.RocStr*
  %bounds_check.not.i.i1101 = icmp eq i64 %struct_field.unpack2.i, 0
  br i1 %bounds_check.not.i.i1101, label %after_loop.i.i1114, label %loop.preheader.i.i1103

loop.preheader.i.i1103:                           ; preds = %modification_list_block.i.i1102
  %load_str_to_stack.i.elt7.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1096, i64 0, i32 2
  br label %loop.i.i1107

loop.i.i1107:                                     ; preds = %"#Attr_#inc_4.exit.i.i", %loop.preheader.i.i1103
  %next_index10.i.i = phi i64 [ 0, %loop.preheader.i.i1103 ], [ %next_index.i.i1104, %"#Attr_#inc_4.exit.i.i" ]
  %next_index.i.i1104 = add nuw i64 %next_index10.i.i, 1
  %load_index.i.i1105 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1100, i64 %next_index10.i.i
  %171 = bitcast %str.RocStr* %load_index.i.i1105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %170, i8* noundef nonnull align 8 dereferenceable(24) %171, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i = load i64, i64* %load_str_to_stack.i.elt7.i.i, align 8
  %is_big_str.i.i.i1106 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i, 0
  br i1 %is_big_str.i.i.i1106, label %modify_rc.i.i.i1109, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i1109:                              ; preds = %loop.i.i1107
  %call_builtin.i.i.i1108 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1096) #11
  %get_rc_ptr.i.i33.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i1108, i64 -8
  %172 = bitcast i8* %get_rc_ptr.i.i33.i to i64*
  %173 = load i64, i64* %172, align 8
  %.not.i.i2.i.i = icmp eq i64 %173, 0
  br i1 %.not.i.i2.i.i, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i34.i

Then.i.i.i34.i:                                   ; preds = %modify_rc.i.i.i1109
  %174 = add nsw i64 %173, 1
  store i64 %174, i64* %172, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i34.i, %modify_rc.i.i.i1109, %loop.i.i1107
  %exitcond.not.i1110 = icmp eq i64 %next_index.i.i1104, %struct_field.unpack2.i
  br i1 %exitcond.not.i1110, label %after_loop.i.i1114, label %loop.i.i1107

after_loop.i.i1114:                               ; preds = %"#Attr_#inc_4.exit.i.i", %modification_list_block.i.i1102
  %175 = ptrtoint i8* %struct_field.unpack.i1098 to i64
  %176 = shl i64 %struct_field.unpack4.i, 1
  %.not.i.i.i35.i = icmp slt i64 %struct_field.unpack4.i, 0
  %177 = select i1 %.not.i.i.i35.i, i64 %176, i64 %175
  %as_usize_ptr.i.i1111 = inttoptr i64 %177 to i64*
  %get_rc_ptr.i.i1112 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1111, i64 -1
  %178 = load i64, i64* %get_rc_ptr.i.i1112, align 8
  %.not.i.i.i1113 = icmp eq i64 %178, 0
  br i1 %.not.i.i.i1113, label %"#Attr_#inc_17.exit.i", label %Then.i.i.i1115

Then.i.i.i1115:                                   ; preds = %after_loop.i.i1114
  %179 = add nsw i64 %178, 1
  store i64 %179, i64* %get_rc_ptr.i.i1112, align 8
  br label %"#Attr_#inc_17.exit.i"

"#Attr_#inc_17.exit.i":                           ; preds = %Then.i.i.i1115, %after_loop.i.i1114, %joinpointcont85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #11
  %struct_field1.sroa.237.0..sroa_idx38.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1116 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1117 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i, align 8
  %"cap > 0.i.i.not.i1118" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i1118", label %"#Attr_#inc_9.exit.i.i", label %modification_list_block.i.i.i1125

modification_list_block.i.i.i1125:                ; preds = %"#Attr_#inc_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i1119 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1120 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1119, align 8
  %180 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1120 to i64
  %181 = shl i64 %struct_field1.sroa.237.0.copyload.i, 1
  %.not.i.i.i.i.i1121 = icmp slt i64 %struct_field1.sroa.237.0.copyload.i, 0
  %182 = select i1 %.not.i.i.i.i.i1121, i64 %181, i64 %180
  %as_usize_ptr.i.i.i1122 = inttoptr i64 %182 to i64*
  %get_rc_ptr.i.i.i1123 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1122, i64 -1
  %183 = load i64, i64* %get_rc_ptr.i.i.i1123, align 8
  %.not.i.i.i.i1124 = icmp eq i64 %183, 0
  br i1 %.not.i.i.i.i1124, label %"#Attr_#inc_9.exit.i.i", label %Then.i.i.i.i1126

Then.i.i.i.i1126:                                 ; preds = %modification_list_block.i.i.i1125
  %184 = add nsw i64 %183, 1
  store i64 %184, i64* %get_rc_ptr.i.i.i1123, align 8
  br label %"#Attr_#inc_9.exit.i.i"

"#Attr_#inc_9.exit.i.i":                          ; preds = %Then.i.i.i.i1126, %modification_list_block.i.i.i1125, %"#Attr_#inc_17.exit.i"
  %"cap > 0.i18.i.not.i" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i, 0
  br i1 %"cap > 0.i18.i.not.i", label %"#Attr_#inc_10.exit.i.i", label %modification_list_block.i27.i.i

modification_list_block.i27.i.i:                  ; preds = %"#Attr_#inc_9.exit.i.i"
  %185 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1116 to i64
  %186 = shl i64 %struct_field1.sroa.441.0.copyload.i, 1
  %.not.i.i.i23.i.i = icmp slt i64 %struct_field1.sroa.441.0.copyload.i, 0
  %187 = select i1 %.not.i.i.i23.i.i, i64 %186, i64 %185
  %as_usize_ptr.i24.i.i = inttoptr i64 %187 to i64*
  %get_rc_ptr.i25.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i, i64 -1
  %188 = load i64, i64* %get_rc_ptr.i25.i.i, align 8
  %.not.i.i26.i.i = icmp eq i64 %188, 0
  br i1 %.not.i.i26.i.i, label %"#Attr_#inc_10.exit.i.i", label %Then.i.i28.i.i

Then.i.i28.i.i:                                   ; preds = %modification_list_block.i27.i.i
  %189 = add nsw i64 %188, 1
  store i64 %189, i64* %get_rc_ptr.i25.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i"

"#Attr_#inc_10.exit.i.i":                         ; preds = %Then.i.i28.i.i, %modification_list_block.i27.i.i, %"#Attr_#inc_9.exit.i.i"
  %"cap > 0.i5.i.not.i" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i, 0
  br i1 %"cap > 0.i5.i.not.i", label %"#Attr_#inc_16.exit", label %modification_list_block.i14.i.i

modification_list_block.i14.i.i:                  ; preds = %"#Attr_#inc_10.exit.i.i"
  %190 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1117 to i64
  %191 = shl i64 %struct_field1.sroa.645.0.copyload.i, 1
  %.not.i.i.i10.i.i = icmp slt i64 %struct_field1.sroa.645.0.copyload.i, 0
  %192 = select i1 %.not.i.i.i10.i.i, i64 %191, i64 %190
  %as_usize_ptr.i11.i.i = inttoptr i64 %192 to i64*
  %get_rc_ptr.i12.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i, i64 -1
  %193 = load i64, i64* %get_rc_ptr.i12.i.i, align 8
  %.not.i.i13.i.i = icmp eq i64 %193, 0
  br i1 %.not.i.i13.i.i, label %"#Attr_#inc_16.exit", label %Then.i.i15.i.i

Then.i.i15.i.i:                                   ; preds = %modification_list_block.i14.i.i
  %194 = add nsw i64 %193, 1
  store i64 %194, i64* %get_rc_ptr.i12.i.i, align 8
  br label %"#Attr_#inc_16.exit"

"#Attr_#inc_16.exit":                             ; preds = %"#Attr_#inc_10.exit.i.i", %modification_list_block.i14.i.i, %Then.i.i15.i.i
  call fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i) #11
  call fastcc void @Result_mapErr_f3717d8d695ceecc8bdf05d2fa68cfb4e9074a591f91410b8cf55b1598d641({ [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i, %str.RocStr* nonnull %load_at_index_ptr_old84, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i) #11
  call fastcc void @Result_map_3f9ab963e3201c9c9298568dff66db4e8baa1bfb7c816e95b979552a49782f7({ [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %168)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %169)
  call fastcc void @Result_map_8aa359bd749b8effde17d95d39df5dd5cfceb675b455e8288a857540333415({ [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value126)
  %195 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value126 to i8*
  br label %common.ret

then_block147:                                    ; preds = %branch3
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %86)
  br label %joinpointcont136

then163:                                          ; preds = %branch3
  %"cap > 0.not.i" = icmp eq i64 %load_at_index_ptr_old135.unpack329, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#inc_19.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %then163
  %cast_basic_basic.i = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %196 = bitcast %str.RocStr* %struct_field.i.i1127 to i8*
  %struct_field.i.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 0
  %struct_field.i.repack13.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 1
  %struct_field.i.repack15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#inc_14.exit.i", %loop.preheader.i
  %index.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#inc_14.exit.i" ]
  %next_index.i = add nuw i64 %index.i, 1
  %incrementing_element_loop_load.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i, align 8
  %incrementing_element_loop_load.unpack.elt8.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i, align 8
  %incrementing_element_loop_load.unpack.elt10.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i, align 8
  %incrementing_element_loop_load.elt5.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 1
  %incrementing_element_loop_load.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i, i8** %struct_field.i.repack.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i, i64* %struct_field.i.repack13.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i, i64* %struct_field.i.repack15.i, align 8
  %is_big_str.i.i.i1128 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i, 0
  br i1 %is_big_str.i.i.i1128, label %modify_rc.i.i.i1132, label %"#Attr_#inc_4.exit.i.i1134"

modify_rc.i.i.i1132:                              ; preds = %loop.i
  %call_builtin.i.i.i1129 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1127) #11
  %get_rc_ptr.i.i.i1130 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1129, i64 -8
  %197 = bitcast i8* %get_rc_ptr.i.i.i1130 to i64*
  %198 = load i64, i64* %197, align 8
  %.not.i.i.i.i1131 = icmp eq i64 %198, 0
  br i1 %.not.i.i.i.i1131, label %"#Attr_#inc_4.exit.i.i1134", label %Then.i.i.i.i1133

Then.i.i.i.i1133:                                 ; preds = %modify_rc.i.i.i1132
  %199 = add nsw i64 %198, 1
  store i64 %199, i64* %197, align 8
  br label %"#Attr_#inc_4.exit.i.i1134"

"#Attr_#inc_4.exit.i.i1134":                      ; preds = %Then.i.i.i.i1133, %modify_rc.i.i.i1132, %loop.i
  %to_int1.i.i.i = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i64
  %masked.i.i.i = and i64 %to_int1.i.i.i, 7
  %cast_to_i8_ptr.i.i.i = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i8*
  %get_rc_ptr.i2.i.idx.i = sub nuw nsw i64 -8, %masked.i.i.i
  %get_rc_ptr.i2.i.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i, i64 %get_rc_ptr.i2.i.idx.i
  %200 = bitcast i8* %get_rc_ptr.i2.i.i to i64*
  %201 = load i64, i64* %200, align 8
  %.not.i.i3.i.i = icmp eq i64 %201, 0
  br i1 %.not.i.i3.i.i, label %"#Attr_#inc_14.exit.i", label %Then.i.i4.i.i

Then.i.i4.i.i:                                    ; preds = %"#Attr_#inc_4.exit.i.i1134"
  %202 = add nsw i64 %201, 1
  store i64 %202, i64* %200, align 8
  br label %"#Attr_#inc_14.exit.i"

"#Attr_#inc_14.exit.i":                           ; preds = %Then.i.i4.i.i, %"#Attr_#inc_4.exit.i.i1134"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #11
  %exitcond1440.not = icmp eq i64 %next_index.i, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond1440.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#inc_14.exit.i", %modification_list_block.i
  %203 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %204 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1135 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %205 = select i1 %.not.i.i.i1135, i64 %204, i64 %203
  %as_usize_ptr.i = inttoptr i64 %205 to i64*
  %get_rc_ptr.i1136 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %206 = load i64, i64* %get_rc_ptr.i1136, align 8
  %.not.i.i1137 = icmp eq i64 %206, 0
  br i1 %.not.i.i1137, label %"#Attr_#inc_19.exitthread-pre-split", label %Then.i.i1138

Then.i.i1138:                                     ; preds = %after_loop.i
  %207 = add nsw i64 %206, 1
  store i64 %207, i64* %get_rc_ptr.i1136, align 8
  br label %"#Attr_#inc_19.exitthread-pre-split"

"#Attr_#inc_19.exitthread-pre-split":             ; preds = %Then.i.i1138, %after_loop.i
  %.pr = load i64, i64* %86, align 8
  br label %"#Attr_#inc_19.exit"

"#Attr_#inc_19.exit":                             ; preds = %"#Attr_#inc_19.exitthread-pre-split", %then163
  %208 = phi i64 [ %.pr, %"#Attr_#inc_19.exitthread-pre-split" ], [ %get_refcount144, %then163 ]
  %.not.i.i.i672 = icmp eq i64 %208, 0
  br i1 %.not.i.i.i672, label %joinpointcont136, label %Then.i.i.i673

Then.i.i.i673:                                    ; preds = %"#Attr_#inc_19.exit"
  %209 = add i64 %208, -1
  store i64 %209, i64* %86, align 8
  %210 = icmp eq i64 %208, -9223372036854775808
  br i1 %210, label %Then1.i.i.i674, label %joinpointcont136

Then1.i.i.i674:                                   ; preds = %Then.i.i.i673
  tail call void @roc_dealloc(i8* %get_rc_ptr143, i32 8) #11
  br label %joinpointcont136

joinpointcont136:                                 ; preds = %Then1.i.i.i674, %Then.i.i.i673, %"#Attr_#inc_19.exit", %then_block147
  %struct_field.elt.i1140 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1141 = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field.elt1.i1142 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack2.i1143 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field.elt3.i1144 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack4.i1145 = load i64, i64* %struct_field.elt3.i1144, align 8
  %211 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1139 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #11
  %"cap > 0.not.i.i1146" = icmp eq i64 %struct_field.unpack4.i1145, 0
  br i1 %"cap > 0.not.i.i1146", label %"#Attr_#inc_17.exit.i1182", label %modification_list_block.i.i1149

modification_list_block.i.i1149:                  ; preds = %joinpointcont136
  %cast_basic_basic.i.i1147 = bitcast i8* %struct_field.unpack.i1141 to %str.RocStr*
  %bounds_check.not.i.i1148 = icmp eq i64 %struct_field.unpack2.i1143, 0
  br i1 %bounds_check.not.i.i1148, label %after_loop.i.i1169, label %loop.preheader.i.i1151

loop.preheader.i.i1151:                           ; preds = %modification_list_block.i.i1149
  %load_str_to_stack.i.elt7.i.i1150 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1139, i64 0, i32 2
  br label %loop.i.i1157

loop.i.i1157:                                     ; preds = %"#Attr_#inc_4.exit.i.i1164", %loop.preheader.i.i1151
  %next_index10.i.i1152 = phi i64 [ 0, %loop.preheader.i.i1151 ], [ %next_index.i.i1153, %"#Attr_#inc_4.exit.i.i1164" ]
  %next_index.i.i1153 = add nuw i64 %next_index10.i.i1152, 1
  %load_index.i.i1154 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1147, i64 %next_index10.i.i1152
  %212 = bitcast %str.RocStr* %load_index.i.i1154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %211, i8* noundef nonnull align 8 dereferenceable(24) %212, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i1155 = load i64, i64* %load_str_to_stack.i.elt7.i.i1150, align 8
  %is_big_str.i.i.i1156 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i1155, 0
  br i1 %is_big_str.i.i.i1156, label %modify_rc.i.i.i1161, label %"#Attr_#inc_4.exit.i.i1164"

modify_rc.i.i.i1161:                              ; preds = %loop.i.i1157
  %call_builtin.i.i.i1158 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1139) #11
  %get_rc_ptr.i.i33.i1159 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1158, i64 -8
  %213 = bitcast i8* %get_rc_ptr.i.i33.i1159 to i64*
  %214 = load i64, i64* %213, align 8
  %.not.i.i2.i.i1160 = icmp eq i64 %214, 0
  br i1 %.not.i.i2.i.i1160, label %"#Attr_#inc_4.exit.i.i1164", label %Then.i.i.i34.i1162

Then.i.i.i34.i1162:                               ; preds = %modify_rc.i.i.i1161
  %215 = add nsw i64 %214, 1
  store i64 %215, i64* %213, align 8
  br label %"#Attr_#inc_4.exit.i.i1164"

"#Attr_#inc_4.exit.i.i1164":                      ; preds = %Then.i.i.i34.i1162, %modify_rc.i.i.i1161, %loop.i.i1157
  %exitcond.not.i1163 = icmp eq i64 %next_index.i.i1153, %struct_field.unpack2.i1143
  br i1 %exitcond.not.i1163, label %after_loop.i.i1169, label %loop.i.i1157

after_loop.i.i1169:                               ; preds = %"#Attr_#inc_4.exit.i.i1164", %modification_list_block.i.i1149
  %216 = ptrtoint i8* %struct_field.unpack.i1141 to i64
  %217 = shl i64 %struct_field.unpack4.i1145, 1
  %.not.i.i.i35.i1165 = icmp slt i64 %struct_field.unpack4.i1145, 0
  %218 = select i1 %.not.i.i.i35.i1165, i64 %217, i64 %216
  %as_usize_ptr.i.i1166 = inttoptr i64 %218 to i64*
  %get_rc_ptr.i.i1167 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1166, i64 -1
  %219 = load i64, i64* %get_rc_ptr.i.i1167, align 8
  %.not.i.i.i1168 = icmp eq i64 %219, 0
  br i1 %.not.i.i.i1168, label %"#Attr_#inc_17.exit.i1182", label %Then.i.i.i1170

Then.i.i.i1170:                                   ; preds = %after_loop.i.i1169
  %220 = add nsw i64 %219, 1
  store i64 %220, i64* %get_rc_ptr.i.i1167, align 8
  br label %"#Attr_#inc_17.exit.i1182"

"#Attr_#inc_17.exit.i1182":                       ; preds = %Then.i.i.i1170, %after_loop.i.i1169, %joinpointcont136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #11
  %struct_field1.sroa.237.0..sroa_idx38.i1171 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i1172 = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i1171, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i1173 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1174 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i1173, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i1175 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i1176 = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i1175, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i1177 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1178 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i1177, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i1179 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i1180 = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i1179, align 8
  %"cap > 0.i.i.not.i1181" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i1172, 0
  br i1 %"cap > 0.i.i.not.i1181", label %"#Attr_#inc_9.exit.i.i1192", label %modification_list_block.i.i.i1189

modification_list_block.i.i.i1189:                ; preds = %"#Attr_#inc_17.exit.i1182"
  %struct_field1.sroa.0.0..sroa_idx.i1183 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1184 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1183, align 8
  %221 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1184 to i64
  %222 = shl i64 %struct_field1.sroa.237.0.copyload.i1172, 1
  %.not.i.i.i.i.i1185 = icmp slt i64 %struct_field1.sroa.237.0.copyload.i1172, 0
  %223 = select i1 %.not.i.i.i.i.i1185, i64 %222, i64 %221
  %as_usize_ptr.i.i.i1186 = inttoptr i64 %223 to i64*
  %get_rc_ptr.i.i.i1187 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1186, i64 -1
  %224 = load i64, i64* %get_rc_ptr.i.i.i1187, align 8
  %.not.i.i.i.i1188 = icmp eq i64 %224, 0
  br i1 %.not.i.i.i.i1188, label %"#Attr_#inc_9.exit.i.i1192", label %Then.i.i.i.i1190

Then.i.i.i.i1190:                                 ; preds = %modification_list_block.i.i.i1189
  %225 = add nsw i64 %224, 1
  store i64 %225, i64* %get_rc_ptr.i.i.i1187, align 8
  br label %"#Attr_#inc_9.exit.i.i1192"

"#Attr_#inc_9.exit.i.i1192":                      ; preds = %Then.i.i.i.i1190, %modification_list_block.i.i.i1189, %"#Attr_#inc_17.exit.i1182"
  %"cap > 0.i18.i.not.i1191" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i1176, 0
  br i1 %"cap > 0.i18.i.not.i1191", label %"#Attr_#inc_10.exit.i.i1200", label %modification_list_block.i27.i.i1197

modification_list_block.i27.i.i1197:              ; preds = %"#Attr_#inc_9.exit.i.i1192"
  %226 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1174 to i64
  %227 = shl i64 %struct_field1.sroa.441.0.copyload.i1176, 1
  %.not.i.i.i23.i.i1193 = icmp slt i64 %struct_field1.sroa.441.0.copyload.i1176, 0
  %228 = select i1 %.not.i.i.i23.i.i1193, i64 %227, i64 %226
  %as_usize_ptr.i24.i.i1194 = inttoptr i64 %228 to i64*
  %get_rc_ptr.i25.i.i1195 = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i1194, i64 -1
  %229 = load i64, i64* %get_rc_ptr.i25.i.i1195, align 8
  %.not.i.i26.i.i1196 = icmp eq i64 %229, 0
  br i1 %.not.i.i26.i.i1196, label %"#Attr_#inc_10.exit.i.i1200", label %Then.i.i28.i.i1198

Then.i.i28.i.i1198:                               ; preds = %modification_list_block.i27.i.i1197
  %230 = add nsw i64 %229, 1
  store i64 %230, i64* %get_rc_ptr.i25.i.i1195, align 8
  br label %"#Attr_#inc_10.exit.i.i1200"

"#Attr_#inc_10.exit.i.i1200":                     ; preds = %Then.i.i28.i.i1198, %modification_list_block.i27.i.i1197, %"#Attr_#inc_9.exit.i.i1192"
  %"cap > 0.i5.i.not.i1199" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i1180, 0
  br i1 %"cap > 0.i5.i.not.i1199", label %"#Attr_#inc_16.exit1207", label %modification_list_block.i14.i.i1205

modification_list_block.i14.i.i1205:              ; preds = %"#Attr_#inc_10.exit.i.i1200"
  %231 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1178 to i64
  %232 = shl i64 %struct_field1.sroa.645.0.copyload.i1180, 1
  %.not.i.i.i10.i.i1201 = icmp slt i64 %struct_field1.sroa.645.0.copyload.i1180, 0
  %233 = select i1 %.not.i.i.i10.i.i1201, i64 %232, i64 %231
  %as_usize_ptr.i11.i.i1202 = inttoptr i64 %233 to i64*
  %get_rc_ptr.i12.i.i1203 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i1202, i64 -1
  %234 = load i64, i64* %get_rc_ptr.i12.i.i1203, align 8
  %.not.i.i13.i.i1204 = icmp eq i64 %234, 0
  br i1 %.not.i.i13.i.i1204, label %"#Attr_#inc_16.exit1207", label %Then.i.i15.i.i1206

Then.i.i15.i.i1206:                               ; preds = %modification_list_block.i14.i.i1205
  %235 = add nsw i64 %234, 1
  store i64 %235, i64* %get_rc_ptr.i12.i.i1203, align 8
  br label %"#Attr_#inc_16.exit1207"

"#Attr_#inc_16.exit1207":                         ; preds = %"#Attr_#inc_10.exit.i.i1200", %modification_list_block.i14.i.i1205, %Then.i.i15.i.i1206
  call fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value168)
  %tag_id_ptr169 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr169, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block171, label %else_block172

then_block171:                                    ; preds = %"#Attr_#inc_16.exit1207"
  %"cap > 0.not.i1209" = icmp eq i64 %load_at_index_ptr_old135.unpack329, 0
  br i1 %"cap > 0.not.i1209", label %"#Attr_#inc_19.exit1250", label %modification_list_block.i1212

modification_list_block.i1212:                    ; preds = %then_block171
  %cast_basic_basic.i1210 = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i1211 = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i1211, label %after_loop.i1248, label %loop.preheader.i1216

loop.preheader.i1216:                             ; preds = %modification_list_block.i1212
  %236 = bitcast %str.RocStr* %struct_field.i.i1208 to i8*
  %struct_field.i.repack.i1213 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 0
  %struct_field.i.repack13.i1214 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 1
  %struct_field.i.repack15.i1215 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 2
  br label %loop.i1228

loop.i1228:                                       ; preds = %"#Attr_#inc_14.exit.i1243", %loop.preheader.i1216
  %index.i1217 = phi i64 [ 0, %loop.preheader.i1216 ], [ %next_index.i1218, %"#Attr_#inc_14.exit.i1243" ]
  %next_index.i1218 = add nuw i64 %index.i1217, 1
  %incrementing_element_loop_load.unpack.elt.i1219 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i1220 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i1219, align 8
  %incrementing_element_loop_load.unpack.elt8.i1221 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i1222 = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i1221, align 8
  %incrementing_element_loop_load.unpack.elt10.i1223 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i1224 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i1223, align 8
  %incrementing_element_loop_load.elt5.i1225 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 1
  %incrementing_element_loop_load.unpack6.i1226 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i1225, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i1220, i8** %struct_field.i.repack.i1213, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i1222, i64* %struct_field.i.repack13.i1214, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i1224, i64* %struct_field.i.repack15.i1215, align 8
  %is_big_str.i.i.i1227 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i1224, 0
  br i1 %is_big_str.i.i.i1227, label %modify_rc.i.i.i1232, label %"#Attr_#inc_4.exit.i.i1240"

modify_rc.i.i.i1232:                              ; preds = %loop.i1228
  %call_builtin.i.i.i1229 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1208) #11
  %get_rc_ptr.i.i.i1230 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1229, i64 -8
  %237 = bitcast i8* %get_rc_ptr.i.i.i1230 to i64*
  %238 = load i64, i64* %237, align 8
  %.not.i.i.i.i1231 = icmp eq i64 %238, 0
  br i1 %.not.i.i.i.i1231, label %"#Attr_#inc_4.exit.i.i1240", label %Then.i.i.i.i1233

Then.i.i.i.i1233:                                 ; preds = %modify_rc.i.i.i1232
  %239 = add nsw i64 %238, 1
  store i64 %239, i64* %237, align 8
  br label %"#Attr_#inc_4.exit.i.i1240"

"#Attr_#inc_4.exit.i.i1240":                      ; preds = %Then.i.i.i.i1233, %modify_rc.i.i.i1232, %loop.i1228
  %to_int1.i.i.i1234 = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i1226 to i64
  %masked.i.i.i1235 = and i64 %to_int1.i.i.i1234, 7
  %cast_to_i8_ptr.i.i.i1236 = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i1226 to i8*
  %get_rc_ptr.i2.i.idx.i1237 = sub nuw nsw i64 -8, %masked.i.i.i1235
  %get_rc_ptr.i2.i.i1238 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i1236, i64 %get_rc_ptr.i2.i.idx.i1237
  %240 = bitcast i8* %get_rc_ptr.i2.i.i1238 to i64*
  %241 = load i64, i64* %240, align 8
  %.not.i.i3.i.i1239 = icmp eq i64 %241, 0
  br i1 %.not.i.i3.i.i1239, label %"#Attr_#inc_14.exit.i1243", label %Then.i.i4.i.i1241

Then.i.i4.i.i1241:                                ; preds = %"#Attr_#inc_4.exit.i.i1240"
  %242 = add nsw i64 %241, 1
  store i64 %242, i64* %240, align 8
  br label %"#Attr_#inc_14.exit.i1243"

"#Attr_#inc_14.exit.i1243":                       ; preds = %Then.i.i4.i.i1241, %"#Attr_#inc_4.exit.i.i1240"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #11
  %exitcond1439.not = icmp eq i64 %next_index.i1218, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond1439.not, label %after_loop.i1248, label %loop.i1228

after_loop.i1248:                                 ; preds = %"#Attr_#inc_14.exit.i1243", %modification_list_block.i1212
  %243 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %244 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1244 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %245 = select i1 %.not.i.i.i1244, i64 %244, i64 %243
  %as_usize_ptr.i1245 = inttoptr i64 %245 to i64*
  %get_rc_ptr.i1246 = getelementptr inbounds i64, i64* %as_usize_ptr.i1245, i64 -1
  %246 = load i64, i64* %get_rc_ptr.i1246, align 8
  %.not.i.i1247 = icmp eq i64 %246, 0
  br i1 %.not.i.i1247, label %"#Attr_#inc_19.exit1250", label %Then.i.i1249

Then.i.i1249:                                     ; preds = %after_loop.i1248
  %247 = add nsw i64 %246, 1
  store i64 %247, i64* %get_rc_ptr.i1246, align 8
  br label %"#Attr_#inc_19.exit1250"

"#Attr_#inc_19.exit1250":                         ; preds = %then_block171, %after_loop.i1248, %Then.i.i1249
  %load_element.elt = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt395 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 1
  %load_element.unpack396.elt = bitcast i64* %load_element.elt395 to i8**
  %load_element.unpack396.unpack = load i8*, i8** %load_element.unpack396.elt, align 8
  %248 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 2
  %load_element.unpack396.unpack399 = load i64, i64* %248, align 8
  %249 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 3
  %load_element.unpack396.unpack401 = load i64, i64* %249, align 8
  %struct_field.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 0
  store i8* %load_element.unpack396.unpack, i8** %struct_field.repack, align 8
  %struct_field.repack403 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %struct_field.repack403, align 8
  %struct_field.repack405 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %struct_field.repack405, align 8
  %is_big_str.i678 = icmp sgt i64 %load_element.unpack396.unpack401, 0
  br i1 %is_big_str.i678, label %modify_rc.i683, label %"#Attr_#inc_4.exit685"

modify_rc.i683:                                   ; preds = %"#Attr_#inc_19.exit1250"
  %call_builtin.i679 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i681 = getelementptr inbounds i8, i8* %call_builtin.i679, i64 -8
  %250 = bitcast i8* %get_rc_ptr.i681 to i64*
  %251 = load i64, i64* %250, align 8
  %.not.i.i682 = icmp eq i64 %251, 0
  br i1 %.not.i.i682, label %"#Attr_#inc_4.exit685", label %Then.i.i684

Then.i.i684:                                      ; preds = %modify_rc.i683
  %252 = add nsw i64 %251, 1
  store i64 %252, i64* %250, align 8
  br label %"#Attr_#inc_4.exit685"

"#Attr_#inc_4.exit685":                           ; preds = %"#Attr_#inc_19.exit1250", %modify_rc.i683, %Then.i.i684
  %struct_field175.unpack = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field175.unpack408 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field175.unpack410 = load i64, i64* %struct_field.elt3.i1144, align 8
  %struct_field_access_record_1176 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1
  %253 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field177 to i8*
  %254 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field_access_record_1176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %253, i8* noundef nonnull align 8 dereferenceable(80) %254, i64 80, i1 false)
  %255 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %255)
  call fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_field177, i64 %load_element.unpack, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i686) #11
  %result_value178.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 0
  %result_value178.sroa.0.0.copyload = load i8*, i8** %result_value178.sroa.0.0..sroa_idx, align 8
  %result_value178.sroa.2.0..sroa_idx1391 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 1
  %result_value178.sroa.2.0.copyload = load i64, i64* %result_value178.sroa.2.0..sroa_idx1391, align 8
  %result_value178.sroa.3.0..sroa_idx1392 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 2
  %result_value178.sroa.3.0.copyload = load i64, i64* %result_value178.sroa.3.0..sroa_idx1392, align 8
  %result_value178.sroa.4.0..sroa_idx1393 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 0
  %result_value178.sroa.4.0.copyload = load i8*, i8** %result_value178.sroa.4.0..sroa_idx1393, align 8
  %result_value178.sroa.5.0..sroa_idx1394 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 1
  %result_value178.sroa.5.0.copyload = load i64, i64* %result_value178.sroa.5.0..sroa_idx1394, align 8
  %result_value178.sroa.6.0..sroa_idx1395 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 2
  %result_value178.sroa.6.0.copyload = load i64, i64* %result_value178.sroa.6.0..sroa_idx1395, align 8
  %result_value178.sroa.7.0..sroa_idx1396 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 0
  %result_value178.sroa.7.0.copyload = load i8*, i8** %result_value178.sroa.7.0..sroa_idx1396, align 8
  %result_value178.sroa.8.0..sroa_idx1397 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 1
  %result_value178.sroa.8.0.copyload = load i64, i64* %result_value178.sroa.8.0..sroa_idx1397, align 8
  %result_value178.sroa.9.0..sroa_idx1398 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 2
  %result_value178.sroa.9.0.copyload = load i64, i64* %result_value178.sroa.9.0..sroa_idx1398, align 8
  %result_value178.sroa.10.0..sroa_idx1399 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 3
  %result_value178.sroa.10.0.copyload = load i64, i64* %result_value178.sroa.10.0..sroa_idx1399, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %255)
  %tag_alloca182 = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr185 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca182, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr185, align 8
  %struct_alloca190 = alloca { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, align 8
  %struct_alloca190.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 0
  store i8* %load_element.unpack396.unpack, i8** %struct_alloca190.repack.repack, align 8
  %struct_alloca190.repack.repack495 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %struct_alloca190.repack.repack495, align 8
  %struct_alloca190.repack.repack497 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %struct_alloca190.repack.repack497, align 8
  %struct_alloca190.repack493.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 0
  store i8* %struct_field175.unpack, i8** %struct_alloca190.repack493.repack.repack, align 8
  %struct_alloca190.repack493.repack.repack501 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 1
  store i64 %struct_field175.unpack408, i64* %struct_alloca190.repack493.repack.repack501, align 8
  %struct_alloca190.repack493.repack.repack503 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 2
  store i64 %struct_field175.unpack410, i64* %struct_alloca190.repack493.repack.repack503, align 8
  %struct_alloca190.repack493.repack499.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 0
  store i8* %result_value178.sroa.0.0.copyload, i8** %struct_alloca190.repack493.repack499.repack.repack, align 8
  %struct_alloca190.repack493.repack499.repack.repack511 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 1
  store i64 %result_value178.sroa.2.0.copyload, i64* %struct_alloca190.repack493.repack499.repack.repack511, align 8
  %struct_alloca190.repack493.repack499.repack.repack513 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 2
  store i64 %result_value178.sroa.3.0.copyload, i64* %struct_alloca190.repack493.repack499.repack.repack513, align 8
  %struct_alloca190.repack493.repack499.repack505.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 0
  store i8* %result_value178.sroa.4.0.copyload, i8** %struct_alloca190.repack493.repack499.repack505.repack, align 8
  %struct_alloca190.repack493.repack499.repack505.repack515 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 1
  store i64 %result_value178.sroa.5.0.copyload, i64* %struct_alloca190.repack493.repack499.repack505.repack515, align 8
  %struct_alloca190.repack493.repack499.repack505.repack517 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 2
  store i64 %result_value178.sroa.6.0.copyload, i64* %struct_alloca190.repack493.repack499.repack505.repack517, align 8
  %struct_alloca190.repack493.repack499.repack507.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 0
  store i8* %result_value178.sroa.7.0.copyload, i8** %struct_alloca190.repack493.repack499.repack507.repack, align 8
  %struct_alloca190.repack493.repack499.repack507.repack519 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 1
  store i64 %result_value178.sroa.8.0.copyload, i64* %struct_alloca190.repack493.repack499.repack507.repack519, align 8
  %struct_alloca190.repack493.repack499.repack507.repack521 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 2
  store i64 %result_value178.sroa.9.0.copyload, i64* %struct_alloca190.repack493.repack499.repack507.repack521, align 8
  %struct_alloca190.repack493.repack499.repack509 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 3
  store i64 %result_value178.sroa.10.0.copyload, i64* %struct_alloca190.repack493.repack499.repack509, align 8
  %result_value.i725.sroa.0.0.sroa_cast1416 = bitcast [9 x i64]* %result_value.i725.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %result_value.i725.sroa.0.0.sroa_cast1416)
  %256 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %256) #11
  call fastcc void @List_iterHelp_475c77e73ff7e6e34e2c21a314b0e09e66b9a3856a1d0c5c34643d926(%list.RocList %load_at_index_ptr_old135330, { [0 x i64], [8 x i64], i8, [7 x i8] }* nonnull %tag_alloca182, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* nonnull %struct_alloca190, i64 %load_at_index_ptr_old135.unpack327, { [0 x i64], [9 x i64], i8, [7 x i8] }* nonnull %result_value.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %result_value.i725.sroa.0.0.sroa_cast1416, i8* noundef nonnull align 8 dereferenceable(72) %256, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %256) #11
  %result_value.i725.sroa.0.0..sroa_cast1410 = bitcast { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %result_value.i725.sroa.0.0..sroa_cast1410, i8* noundef nonnull align 8 dereferenceable(72) %result_value.i725.sroa.0.0.sroa_cast1416, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %result_value.i725.sroa.0.0.sroa_cast1416)
  %tag_id_ptr192 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191, i64 0, i32 2
  %load_tag_id193 = load i8, i8* %tag_id_ptr192, align 8
  %eq_u8194 = icmp eq i8 %load_tag_id193, 1
  br i1 %eq_u8194, label %then_block196, label %else_block197

else_block172:                                    ; preds = %"#Attr_#inc_16.exit1207"
  %struct_field.unpack.i1253 = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field.unpack21.i1255 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field.unpack23.i1257 = load i64, i64* %struct_field.elt3.i1144, align 8
  %257 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1251 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #11
  %"cap > 0.not.i.i1258" = icmp eq i64 %struct_field.unpack23.i1257, 0
  br i1 %"cap > 0.not.i.i1258", label %"#Attr_#dec_17.exit.i1296", label %modification_list_block.i52.i1261

modification_list_block.i52.i1261:                ; preds = %else_block172
  %cast_basic_basic.i.i1259 = bitcast i8* %struct_field.unpack.i1253 to %str.RocStr*
  %bounds_check.not.i.i1260 = icmp eq i64 %struct_field.unpack21.i1255, 0
  br i1 %bounds_check.not.i.i1260, label %after_loop.i.i1282, label %loop.preheader.i.i1263

loop.preheader.i.i1263:                           ; preds = %modification_list_block.i52.i1261
  %load_str_to_stack.i.elt9.i.i1262 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1251, i64 0, i32 2
  br label %loop.i.i1269

loop.i.i1269:                                     ; preds = %"#Attr_#dec_4.exit.i.i1277", %loop.preheader.i.i1263
  %next_index12.i.i1264 = phi i64 [ 0, %loop.preheader.i.i1263 ], [ %next_index.i.i1265, %"#Attr_#dec_4.exit.i.i1277" ]
  %next_index.i.i1265 = add nuw i64 %next_index12.i.i1264, 1
  %load_index.i.i1266 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1259, i64 %next_index12.i.i1264
  %258 = bitcast %str.RocStr* %load_index.i.i1266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %257, i8* noundef nonnull align 8 dereferenceable(24) %258, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i1267 = load i64, i64* %load_str_to_stack.i.elt9.i.i1262, align 8
  %is_big_str.i.i.i1268 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i1267, 0
  br i1 %is_big_str.i.i.i1268, label %modify_rc.i.i.i1273, label %"#Attr_#dec_4.exit.i.i1277"

modify_rc.i.i.i1273:                              ; preds = %loop.i.i1269
  %call_builtin.i.i.i1270 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1251) #11
  %get_rc_ptr.i.i53.i1271 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1270, i64 -8
  %259 = bitcast i8* %get_rc_ptr.i.i53.i1271 to i64*
  %260 = load i64, i64* %259, align 8
  %.not.i.i.i.i.i54.i1272 = icmp eq i64 %260, 0
  br i1 %.not.i.i.i.i.i54.i1272, label %"#Attr_#dec_4.exit.i.i1277", label %Then.i.i.i.i.i55.i1274

Then.i.i.i.i.i55.i1274:                           ; preds = %modify_rc.i.i.i1273
  %261 = add i64 %260, -1
  store i64 %261, i64* %259, align 8
  %262 = icmp eq i64 %260, -9223372036854775808
  br i1 %262, label %Then1.i.i.i.i.i56.i1275, label %"#Attr_#dec_4.exit.i.i1277"

Then1.i.i.i.i.i56.i1275:                          ; preds = %Then.i.i.i.i.i55.i1274
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i1271, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i1277"

"#Attr_#dec_4.exit.i.i1277":                      ; preds = %Then1.i.i.i.i.i56.i1275, %Then.i.i.i.i.i55.i1274, %modify_rc.i.i.i1273, %loop.i.i1269
  %exitcond.not.i1276 = icmp eq i64 %next_index.i.i1265, %struct_field.unpack21.i1255
  br i1 %exitcond.not.i1276, label %after_loop.i.i1282, label %loop.i.i1269

after_loop.i.i1282:                               ; preds = %"#Attr_#dec_4.exit.i.i1277", %modification_list_block.i52.i1261
  %263 = ptrtoint i8* %struct_field.unpack.i1253 to i64
  %264 = shl i64 %struct_field.unpack23.i1257, 1
  %.not.i.i.i57.i1278 = icmp slt i64 %struct_field.unpack23.i1257, 0
  %265 = select i1 %.not.i.i.i57.i1278, i64 %264, i64 %263
  %as_usize_ptr.i58.i1279 = inttoptr i64 %265 to i64*
  %get_rc_ptr.i59.i1280 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i1279, i64 -1
  %266 = load i64, i64* %get_rc_ptr.i59.i1280, align 8
  %.not.i.i.i.i60.i1281 = icmp eq i64 %266, 0
  br i1 %.not.i.i.i.i60.i1281, label %"#Attr_#dec_17.exit.i1296", label %Then.i.i.i.i61.i1283

Then.i.i.i.i61.i1283:                             ; preds = %after_loop.i.i1282
  %267 = add i64 %266, -1
  store i64 %267, i64* %get_rc_ptr.i59.i1280, align 8
  %268 = icmp eq i64 %266, -9223372036854775808
  br i1 %268, label %Then1.i.i.i.i62.i1284, label %"#Attr_#dec_17.exit.i1296"

Then1.i.i.i.i62.i1284:                            ; preds = %Then.i.i.i.i61.i1283
  %269 = bitcast i64* %get_rc_ptr.i59.i1280 to i8*
  tail call void @roc_dealloc(i8* %269, i32 8) #11
  br label %"#Attr_#dec_17.exit.i1296"

"#Attr_#dec_17.exit.i1296":                       ; preds = %Then1.i.i.i.i62.i1284, %Then.i.i.i.i61.i1283, %after_loop.i.i1282, %else_block172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #11
  %struct_field1.sroa.264.0.copyload.i1286 = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i1171, align 8
  %struct_field1.sroa.3.0.copyload.i1288 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i1173, align 8
  %struct_field1.sroa.468.0.copyload.i1290 = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i1175, align 8
  %struct_field1.sroa.5.0.copyload.i1292 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i1177, align 8
  %struct_field1.sroa.672.0.copyload.i1294 = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i1179, align 8
  %"cap > 0.i.i.not.i1295" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i1286, 0
  br i1 %"cap > 0.i.i.not.i1295", label %"#Attr_#dec_18.exit.i1307", label %modification_list_block.i.i.i1303

modification_list_block.i.i.i1303:                ; preds = %"#Attr_#dec_17.exit.i1296"
  %struct_field1.sroa.0.0..sroa_idx.i1297 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1298 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1297, align 8
  %270 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1298 to i64
  %271 = shl i64 %struct_field1.sroa.264.0.copyload.i1286, 1
  %.not.i.i.i.i.i1299 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i1286, 0
  %272 = select i1 %.not.i.i.i.i.i1299, i64 %271, i64 %270
  %as_usize_ptr.i.i.i1300 = inttoptr i64 %272 to i64*
  %get_rc_ptr.i.i.i1301 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1300, i64 -1
  %273 = load i64, i64* %get_rc_ptr.i.i.i1301, align 8
  %.not.i.i.i.i.i.i1302 = icmp eq i64 %273, 0
  br i1 %.not.i.i.i.i.i.i1302, label %"#Attr_#dec_18.exit.i1307", label %Then.i.i.i.i.i.i1304

Then.i.i.i.i.i.i1304:                             ; preds = %modification_list_block.i.i.i1303
  %274 = add i64 %273, -1
  store i64 %274, i64* %get_rc_ptr.i.i.i1301, align 8
  %275 = icmp eq i64 %273, -9223372036854775808
  br i1 %275, label %Then1.i.i.i.i.i.i1305, label %"#Attr_#dec_18.exit.i1307"

Then1.i.i.i.i.i.i1305:                            ; preds = %Then.i.i.i.i.i.i1304
  %276 = bitcast i64* %get_rc_ptr.i.i.i1301 to i8*
  tail call void @roc_dealloc(i8* %276, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1307"

"#Attr_#dec_18.exit.i1307":                       ; preds = %Then1.i.i.i.i.i.i1305, %Then.i.i.i.i.i.i1304, %modification_list_block.i.i.i1303, %"#Attr_#dec_17.exit.i1296"
  %"cap > 0.i5.not.i1306" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i1290, 0
  br i1 %"cap > 0.i5.not.i1306", label %"#Attr_#dec_10.exit.i1316", label %modification_list_block.i14.i1312

modification_list_block.i14.i1312:                ; preds = %"#Attr_#dec_18.exit.i1307"
  %277 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1288 to i64
  %278 = shl i64 %struct_field1.sroa.468.0.copyload.i1290, 1
  %.not.i.i.i10.i1308 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i1290, 0
  %279 = select i1 %.not.i.i.i10.i1308, i64 %278, i64 %277
  %as_usize_ptr.i11.i1309 = inttoptr i64 %279 to i64*
  %get_rc_ptr.i12.i1310 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1309, i64 -1
  %280 = load i64, i64* %get_rc_ptr.i12.i1310, align 8
  %.not.i.i.i.i13.i1311 = icmp eq i64 %280, 0
  br i1 %.not.i.i.i.i13.i1311, label %"#Attr_#dec_10.exit.i1316", label %Then.i.i.i.i15.i1313

Then.i.i.i.i15.i1313:                             ; preds = %modification_list_block.i14.i1312
  %281 = add i64 %280, -1
  store i64 %281, i64* %get_rc_ptr.i12.i1310, align 8
  %282 = icmp eq i64 %280, -9223372036854775808
  br i1 %282, label %Then1.i.i.i.i16.i1314, label %"#Attr_#dec_10.exit.i1316"

Then1.i.i.i.i16.i1314:                            ; preds = %Then.i.i.i.i15.i1313
  %283 = bitcast i64* %get_rc_ptr.i12.i1310 to i8*
  tail call void @roc_dealloc(i8* %283, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1316"

"#Attr_#dec_10.exit.i1316":                       ; preds = %Then1.i.i.i.i16.i1314, %Then.i.i.i.i15.i1313, %modification_list_block.i14.i1312, %"#Attr_#dec_18.exit.i1307"
  %"cap > 0.i.not.i1315" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i1294, 0
  br i1 %"cap > 0.i.not.i1315", label %"#Attr_#dec_40.exit", label %modification_list_block.i.i1321

modification_list_block.i.i1321:                  ; preds = %"#Attr_#dec_10.exit.i1316"
  %284 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1292 to i64
  %285 = shl i64 %struct_field1.sroa.672.0.copyload.i1294, 1
  %.not.i.i.i.i1317 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i1294, 0
  %286 = select i1 %.not.i.i.i.i1317, i64 %285, i64 %284
  %as_usize_ptr.i.i1318 = inttoptr i64 %286 to i64*
  %get_rc_ptr.i.i1319 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1318, i64 -1
  %287 = load i64, i64* %get_rc_ptr.i.i1319, align 8
  %.not.i.i.i.i2.i1320 = icmp eq i64 %287, 0
  br i1 %.not.i.i.i.i2.i1320, label %"#Attr_#dec_40.exit", label %Then.i.i.i.i.i1322

Then.i.i.i.i.i1322:                               ; preds = %modification_list_block.i.i1321
  %288 = add i64 %287, -1
  store i64 %288, i64* %get_rc_ptr.i.i1319, align 8
  %289 = icmp eq i64 %287, -9223372036854775808
  br i1 %289, label %Then1.i.i.i.i.i1323, label %"#Attr_#dec_40.exit"

Then1.i.i.i.i.i1323:                              ; preds = %Then.i.i.i.i.i1322
  %290 = bitcast i64* %get_rc_ptr.i.i1319 to i8*
  tail call void @roc_dealloc(i8* %290, i32 8) #11
  br label %"#Attr_#dec_40.exit"

"#Attr_#dec_40.exit":                             ; preds = %Then1.i.i.i.i.i1323, %Then.i.i.i.i.i1322, %modification_list_block.i.i1321, %"#Attr_#dec_10.exit.i1316"
  %.not.i.i1325 = icmp eq i8* %load_at_index_ptr_old135.unpack, null
  br i1 %.not.i.i1325, label %roc_builtins.list.map.exit.i, label %OptionalThen.i.i

OptionalThen.i.i:                                 ; preds = %"#Attr_#dec_40.exit"
  %291 = icmp ne i64 %load_at_index_ptr_old135.unpack327, 0
  tail call void @llvm.assume(i1 %291) #11
  %292 = icmp ugt i64 %load_at_index_ptr_old135.unpack327, 2
  %..i.i.i.i.i = select i1 %292, i64 %load_at_index_ptr_old135.unpack327, i64 2
  %293 = mul nuw i64 %..i.i.i.i.i, 24
  %294 = add nuw i64 %293, 8
  %295 = tail call i8* @roc_alloc(i64 %294, i32 8) #11, !noalias !625
  %296 = icmp ne i8* %295, null
  tail call void @llvm.assume(i1 %296) #11
  %297 = getelementptr inbounds i8, i8* %295, i64 8
  %298 = bitcast i8* %295 to i64*
  store i64 -9223372036854775808, i64* %298, align 8, !noalias !625
  br label %WhileBody.i.i

WhileBody.i.i:                                    ; preds = %WhileBody.i.i, %OptionalThen.i.i
  %i.010.i.i = phi i64 [ %306, %WhileBody.i.i ], [ 0, %OptionalThen.i.i ]
  %299 = shl nuw i64 %i.010.i.i, 5
  %300 = getelementptr inbounds i8, i8* %load_at_index_ptr_old135.unpack, i64 %299
  %301 = mul nuw i64 %i.010.i.i, 24
  %302 = getelementptr inbounds i8, i8* %297, i64 %301
  %zig_helper_load_opaque.i.unpack.elt.i = bitcast i8* %300 to i8**
  %zig_helper_load_opaque.i.unpack.unpack.i = load i8*, i8** %zig_helper_load_opaque.i.unpack.elt.i, align 8, !noalias !630
  %zig_helper_load_opaque.i.unpack.elt8.i = getelementptr inbounds i8, i8* %300, i64 8
  %303 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt8.i to i64*
  %zig_helper_load_opaque.i.unpack.unpack9.i = load i64, i64* %303, align 8, !noalias !630
  %zig_helper_load_opaque.i.unpack.elt10.i = getelementptr inbounds i8, i8* %300, i64 16
  %304 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt10.i to i64*
  %zig_helper_load_opaque.i.unpack.unpack11.i = load i64, i64* %304, align 8, !noalias !630
  %zig_helper_load_opaque.i.elt5.i = getelementptr inbounds i8, i8* %300, i64 24
  %305 = bitcast i8* %zig_helper_load_opaque.i.elt5.i to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %305, align 8, !noalias !630
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.unpack6.i) #11, !noalias !630
  %result_value.i.sroa.0.0..sroa_cast.i = bitcast i8* %302 to i8**
  store i8* %zig_helper_load_opaque.i.unpack.unpack.i, i8** %result_value.i.sroa.0.0..sroa_cast.i, align 8, !noalias !630
  %result_value.i.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, i8* %302, i64 8
  %result_value.i.sroa.4.0..sroa_cast.i = bitcast i8* %result_value.i.sroa.4.0..sroa_idx.i to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack9.i, i64* %result_value.i.sroa.4.0..sroa_cast.i, align 8, !noalias !630
  %result_value.i.sroa.5.0..sroa_idx.i = getelementptr inbounds i8, i8* %302, i64 16
  %result_value.i.sroa.5.0..sroa_cast.i = bitcast i8* %result_value.i.sroa.5.0..sroa_idx.i to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack11.i, i64* %result_value.i.sroa.5.0..sroa_cast.i, align 8, !noalias !630
  %306 = add nuw i64 %i.010.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %306, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not.i.i, label %roc_builtins.list.map.exit.i.loopexit, label %WhileBody.i.i

roc_builtins.list.map.exit.i.loopexit:            ; preds = %WhileBody.i.i
  %phi.cast = ptrtoint i8* %297 to i64
  br label %roc_builtins.list.map.exit.i

roc_builtins.list.map.exit.i:                     ; preds = %roc_builtins.list.map.exit.i.loopexit, %"#Attr_#dec_40.exit"
  %list_alloca.sroa.0.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %phi.cast, %roc_builtins.list.map.exit.i.loopexit ]
  %list_alloca.sroa.3.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %load_at_index_ptr_old135.unpack327, %roc_builtins.list.map.exit.i.loopexit ]
  %list_alloca.sroa.5.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %..i.i.i.i.i, %roc_builtins.list.map.exit.i.loopexit ]
  %307 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %308 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1326 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %309 = select i1 %.not.i.i.i1326, i64 %308, i64 %307
  %.not.i19.i = icmp eq i64 %309, 0
  br i1 %.not.i19.i, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, label %OptionalThen.i21.i

OptionalThen.i21.i:                               ; preds = %roc_builtins.list.map.exit.i
  %310 = inttoptr i64 %309 to i8*
  %311 = getelementptr inbounds i8, i8* %310, i64 -8
  %312 = bitcast i8* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %.not.i.i20.i = icmp eq i64 %313, 0
  br i1 %.not.i.i20.i, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, label %Then.i.i.i1327

Then.i.i.i1327:                                   ; preds = %OptionalThen.i21.i
  %314 = add i64 %313, -1
  store i64 %314, i64* %312, align 8
  %315 = icmp eq i64 %313, -9223372036854775808
  br i1 %315, label %Then1.i.i.i1328, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit

Then1.i.i.i1328:                                  ; preds = %Then.i.i.i1327
  tail call void @roc_dealloc(i8* %311, i32 8) #11
  br label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit

List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit: ; preds = %roc_builtins.list.map.exit.i, %OptionalThen.i21.i, %Then.i.i.i1327, %Then1.i.i.i1328
  %struct_alloca228 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack367.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 0
  store i64 %list_alloca.sroa.0.0.i, i64* %.repack367.repack, align 8
  %.repack367.repack373 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 1
  store i64 %list_alloca.sroa.3.0.i, i64* %.repack367.repack373, align 8
  %.repack367.repack375 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 2
  store i64 %list_alloca.sroa.5.0.i, i64* %.repack367.repack375, align 8
  %.repack369 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 2
  store i8 4, i8* %.repack369, align 8
  %tag_alloca229 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer230 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229, i64 0, i32 1
  %316 = bitcast [7 x i64]* %data_buffer230 to i8*
  %317 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %316, i8* noundef nonnull align 8 dereferenceable(56) %317, i64 56, i1 false)
  %tag_id_ptr232 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr232, align 8
  %318 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229 to i8*
  br label %common.ret

then_block196:                                    ; preds = %"#Attr_#inc_4.exit685"
  br i1 %is_big_str.i678, label %modify_rc.i693, label %"#Attr_#dec_4.exit"

modify_rc.i693:                                   ; preds = %then_block196
  %call_builtin.i690 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i692 = getelementptr inbounds i8, i8* %call_builtin.i690, i64 -8
  %319 = bitcast i8* %get_rc_ptr.i692 to i64*
  %320 = load i64, i64* %319, align 8
  %.not.i.i.i.i = icmp eq i64 %320, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i693
  %321 = add i64 %320, -1
  store i64 %321, i64* %319, align 8
  %322 = icmp eq i64 %320, -9223372036854775808
  br i1 %322, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i692, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i693, %Then.i.i.i.i, %Then1.i.i.i.i, %then_block196
  br i1 %"cap > 0.not.i1209", label %"#Attr_#dec_19.exit", label %modification_list_block.i1333

modification_list_block.i1333:                    ; preds = %"#Attr_#dec_4.exit"
  %cast_basic_basic.i1331 = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i1332 = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i1332, label %after_loop.i1356, label %loop.preheader.i1336

loop.preheader.i1336:                             ; preds = %modification_list_block.i1333
  %323 = bitcast %str.RocStr* %struct_field.i.i1329 to i8*
  %struct_field.i.repack.i1334 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 0
  %struct_field.i.repack15.i1335 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 1
  %struct_field.i.repack17.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 2
  br label %loop.i1344

loop.i1344:                                       ; preds = %"#Attr_#dec_14.exit.i", %loop.preheader.i1336
  %index.i1337 = phi i64 [ 0, %loop.preheader.i1336 ], [ %next_index.i1338, %"#Attr_#dec_14.exit.i" ]
  %next_index.i1338 = add nuw i64 %index.i1337, 1
  %incrementing_element_loop_load.unpack.elt.i1339 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i1340 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i1339, align 8
  %incrementing_element_loop_load.unpack.elt10.i1341 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11.i1342 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i1341, align 8
  %incrementing_element_loop_load.unpack.elt12.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13.i = load i64, i64* %incrementing_element_loop_load.unpack.elt12.i, align 8
  %incrementing_element_loop_load.elt7.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 1
  %incrementing_element_loop_load.unpack8.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt7.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i1340, i8** %struct_field.i.repack.i1334, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i1342, i64* %struct_field.i.repack15.i1335, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13.i, i64* %struct_field.i.repack17.i, align 8
  %is_big_str.i.i.i1343 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13.i, 0
  br i1 %is_big_str.i.i.i1343, label %modify_rc.i.i.i1348, label %"#Attr_#dec_14.exit.i"

modify_rc.i.i.i1348:                              ; preds = %loop.i1344
  %call_builtin.i.i.i1345 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1329) #11
  %get_rc_ptr.i.i.i1346 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1345, i64 -8
  %324 = bitcast i8* %get_rc_ptr.i.i.i1346 to i64*
  %325 = load i64, i64* %324, align 8
  %.not.i.i.i.i.i.i1347 = icmp eq i64 %325, 0
  br i1 %.not.i.i.i.i.i.i1347, label %"#Attr_#dec_14.exit.i", label %Then.i.i.i.i.i.i1349

Then.i.i.i.i.i.i1349:                             ; preds = %modify_rc.i.i.i1348
  %326 = add i64 %325, -1
  store i64 %326, i64* %324, align 8
  %327 = icmp eq i64 %325, -9223372036854775808
  br i1 %327, label %Then1.i.i.i.i.i.i1350, label %"#Attr_#dec_14.exit.i"

Then1.i.i.i.i.i.i1350:                            ; preds = %Then.i.i.i.i.i.i1349
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i1346, i32 8) #11
  br label %"#Attr_#dec_14.exit.i"

"#Attr_#dec_14.exit.i":                           ; preds = %Then1.i.i.i.i.i.i1350, %Then.i.i.i.i.i.i1349, %modify_rc.i.i.i1348, %loop.i1344
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack8.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #11
  %exitcond.not = icmp eq i64 %next_index.i1338, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not, label %after_loop.i1356, label %loop.i1344

after_loop.i1356:                                 ; preds = %"#Attr_#dec_14.exit.i", %modification_list_block.i1333
  %328 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %329 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1352 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %330 = select i1 %.not.i.i.i1352, i64 %329, i64 %328
  %as_usize_ptr.i1353 = inttoptr i64 %330 to i64*
  %get_rc_ptr.i1354 = getelementptr inbounds i64, i64* %as_usize_ptr.i1353, i64 -1
  %331 = load i64, i64* %get_rc_ptr.i1354, align 8
  %.not.i.i.i.i1355 = icmp eq i64 %331, 0
  br i1 %.not.i.i.i.i1355, label %"#Attr_#dec_19.exit", label %Then.i.i.i.i1357

Then.i.i.i.i1357:                                 ; preds = %after_loop.i1356
  %332 = add i64 %331, -1
  store i64 %332, i64* %get_rc_ptr.i1354, align 8
  %333 = icmp eq i64 %331, -9223372036854775808
  br i1 %333, label %Then1.i.i.i.i1358, label %"#Attr_#dec_19.exit"

Then1.i.i.i.i1358:                                ; preds = %Then.i.i.i.i1357
  %334 = bitcast i64* %get_rc_ptr.i1354 to i8*
  tail call void @roc_dealloc(i8* %334, i32 8) #11
  br label %"#Attr_#dec_19.exit"

"#Attr_#dec_19.exit":                             ; preds = %"#Attr_#dec_4.exit", %after_loop.i1356, %Then.i.i.i.i1357, %Then1.i.i.i.i1358
  %get_opaque_data_ptr198 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191, i64 0, i32 1
  %335 = bitcast [8 x i64]* %get_opaque_data_ptr198 to i8*
  br label %common.ret

else_block197:                                    ; preds = %"#Attr_#inc_4.exit685"
  call fastcc void @"#Attr_#dec_35"({ [0 x i64], [8 x i64], i8, [7 x i8] }* nonnull %result_value191)
  %.not.i.i1359 = icmp eq i8* %load_at_index_ptr_old135.unpack, null
  br i1 %.not.i.i1359, label %roc_builtins.list.map.exit.i1383, label %OptionalThen.i.i1361

OptionalThen.i.i1361:                             ; preds = %else_block197
  %336 = icmp ne i64 %load_at_index_ptr_old135.unpack327, 0
  tail call void @llvm.assume(i1 %336) #11
  %337 = icmp ugt i64 %load_at_index_ptr_old135.unpack327, 2
  %..i.i.i.i.i1360 = select i1 %337, i64 %load_at_index_ptr_old135.unpack327, i64 2
  %338 = mul nuw i64 %..i.i.i.i.i1360, 24
  %339 = add nuw i64 %338, 8
  %340 = tail call i8* @roc_alloc(i64 %339, i32 8) #11, !noalias !631
  %341 = icmp ne i8* %340, null
  tail call void @llvm.assume(i1 %341) #11
  %342 = getelementptr inbounds i8, i8* %340, i64 8
  %343 = bitcast i8* %340 to i64*
  store i64 -9223372036854775808, i64* %343, align 8, !noalias !631
  br label %WhileBody.i.i1377

WhileBody.i.i1377:                                ; preds = %WhileBody.i.i1377, %OptionalThen.i.i1361
  %i.010.i.i1362 = phi i64 [ %351, %WhileBody.i.i1377 ], [ 0, %OptionalThen.i.i1361 ]
  %344 = shl nuw i64 %i.010.i.i1362, 5
  %345 = getelementptr inbounds i8, i8* %load_at_index_ptr_old135.unpack, i64 %344
  %346 = mul nuw i64 %i.010.i.i1362, 24
  %347 = getelementptr inbounds i8, i8* %342, i64 %346
  %zig_helper_load_opaque.i.unpack.elt.i1363 = bitcast i8* %345 to i8**
  %zig_helper_load_opaque.i.unpack.unpack.i1364 = load i8*, i8** %zig_helper_load_opaque.i.unpack.elt.i1363, align 8, !noalias !636
  %zig_helper_load_opaque.i.unpack.elt8.i1365 = getelementptr inbounds i8, i8* %345, i64 8
  %348 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt8.i1365 to i64*
  %zig_helper_load_opaque.i.unpack.unpack9.i1366 = load i64, i64* %348, align 8, !noalias !636
  %zig_helper_load_opaque.i.unpack.elt10.i1367 = getelementptr inbounds i8, i8* %345, i64 16
  %349 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt10.i1367 to i64*
  %zig_helper_load_opaque.i.unpack.unpack11.i1368 = load i64, i64* %349, align 8, !noalias !636
  %zig_helper_load_opaque.i.elt5.i1369 = getelementptr inbounds i8, i8* %345, i64 24
  %350 = bitcast i8* %zig_helper_load_opaque.i.elt5.i1369 to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.unpack6.i1370 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %350, align 8, !noalias !636
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.unpack6.i1370) #11, !noalias !636
  %result_value.i.sroa.0.0..sroa_cast.i1371 = bitcast i8* %347 to i8**
  store i8* %zig_helper_load_opaque.i.unpack.unpack.i1364, i8** %result_value.i.sroa.0.0..sroa_cast.i1371, align 8, !noalias !636
  %result_value.i.sroa.4.0..sroa_idx.i1372 = getelementptr inbounds i8, i8* %347, i64 8
  %result_value.i.sroa.4.0..sroa_cast.i1373 = bitcast i8* %result_value.i.sroa.4.0..sroa_idx.i1372 to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack9.i1366, i64* %result_value.i.sroa.4.0..sroa_cast.i1373, align 8, !noalias !636
  %result_value.i.sroa.5.0..sroa_idx.i1374 = getelementptr inbounds i8, i8* %347, i64 16
  %result_value.i.sroa.5.0..sroa_cast.i1375 = bitcast i8* %result_value.i.sroa.5.0..sroa_idx.i1374 to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack11.i1368, i64* %result_value.i.sroa.5.0..sroa_cast.i1375, align 8, !noalias !636
  %351 = add nuw i64 %i.010.i.i1362, 1
  %exitcond.not.i.i1376 = icmp eq i64 %351, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not.i.i1376, label %roc_builtins.list.map.exit.i1383, label %WhileBody.i.i1377

roc_builtins.list.map.exit.i1383:                 ; preds = %WhileBody.i.i1377, %else_block197
  %list_alloca.sroa.0.0.i1378 = phi i8* [ null, %else_block197 ], [ %342, %WhileBody.i.i1377 ]
  %list_alloca.sroa.3.0.i1379 = phi i64 [ 0, %else_block197 ], [ %load_at_index_ptr_old135.unpack327, %WhileBody.i.i1377 ]
  %list_alloca.sroa.5.0.i1380 = phi i64 [ 0, %else_block197 ], [ %..i.i.i.i.i1360, %WhileBody.i.i1377 ]
  %352 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %353 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1381 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %354 = select i1 %.not.i.i.i1381, i64 %353, i64 %352
  %.not.i19.i1382 = icmp eq i64 %354, 0
  br i1 %.not.i19.i1382, label %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit, label %OptionalThen.i21.i1385

OptionalThen.i21.i1385:                           ; preds = %roc_builtins.list.map.exit.i1383
  %355 = inttoptr i64 %354 to i8*
  %356 = getelementptr inbounds i8, i8* %355, i64 -8
  %357 = bitcast i8* %356 to i64*
  %358 = load i64, i64* %357, align 8
  %.not.i.i20.i1384 = icmp eq i64 %358, 0
  br i1 %.not.i.i20.i1384, label %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit, label %Then.i.i.i1386

Then.i.i.i1386:                                   ; preds = %OptionalThen.i21.i1385
  %359 = add i64 %358, -1
  store i64 %359, i64* %357, align 8
  %360 = icmp eq i64 %358, -9223372036854775808
  br i1 %360, label %Then1.i.i.i1387, label %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit

Then1.i.i.i1387:                                  ; preds = %Then.i.i.i1386
  tail call void @roc_dealloc(i8* %356, i32 8) #11
  br label %List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit

List_map_9b504e2558c96f90e6f17fd8e6f969f6c39c44769150f9c2391a62613d6cb3d.exit: ; preds = %roc_builtins.list.map.exit.i1383, %OptionalThen.i21.i1385, %Then.i.i.i1386, %Then1.i.i.i1387
  %struct_alloca208 = alloca { { %list.RocList, %str.RocStr } }, align 8
  %.repack551.repack = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 0
  store i8* %list_alloca.sroa.0.0.i1378, i8** %.repack551.repack, align 8
  %.repack551.repack554 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 1
  store i64 %list_alloca.sroa.3.0.i1379, i64* %.repack551.repack554, align 8
  %.repack551.repack556 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 2
  store i64 %list_alloca.sroa.5.0.i1380, i64* %.repack551.repack556, align 8
  %.repack552.repack = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 0
  store i8* %load_element.unpack396.unpack, i8** %.repack552.repack, align 8
  %.repack552.repack558 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %.repack552.repack558, align 8
  %.repack552.repack560 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %.repack552.repack560, align 8
  %tag_alloca209 = alloca { [0 x i64], [6 x i64], i8, [7 x i8] }, align 8
  %data_buffer210 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1
  %361 = bitcast [6 x i64]* %data_buffer210 to i8*
  %362 = bitcast { { %list.RocList, %str.RocStr } }* %struct_alloca208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %361, i8* noundef nonnull align 8 dereferenceable(48) %362, i64 48, i1 false)
  %tag_id_ptr212 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr212, align 8
  %load_tag_to_put_in_struct213.unpack563.elt = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct213.unpack563.unpack = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt, align 8
  %load_tag_to_put_in_struct213.unpack563.elt569 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct213.unpack563.unpack570 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt569, align 8
  %load_tag_to_put_in_struct213.unpack563.elt571 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct213.unpack563.unpack572 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt571, align 8
  %load_tag_to_put_in_struct213.unpack563.elt573 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct213.unpack563.unpack574 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt573, align 8
  %load_tag_to_put_in_struct213.unpack563.elt575 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct213.unpack563.unpack576 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt575, align 8
  %load_tag_to_put_in_struct213.unpack563.elt577 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct213.unpack563.unpack578 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt577, align 8
  %struct_alloca215 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack594.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack, i64* %.repack594.repack, align 8
  %.repack594.repack600 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack570, i64* %.repack594.repack600, align 8
  %.repack594.repack602 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack572, i64* %.repack594.repack602, align 8
  %.repack594.repack604 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack574, i64* %.repack594.repack604, align 8
  %.repack594.repack606 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack576, i64* %.repack594.repack606, align 8
  %.repack594.repack608 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack578, i64* %.repack594.repack608, align 8
  %.repack596 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 2
  store i8 0, i8* %.repack596, align 8
  %tag_alloca216 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer217 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216, i64 0, i32 1
  %363 = bitcast [7 x i64]* %data_buffer217 to i8*
  %364 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %363, i8* noundef nonnull align 8 dereferenceable(56) %364, i64 56, i1 false)
  %tag_id_ptr219 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr219, align 8
  %365 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216 to i8*
  br label %common.ret

then_block253:                                    ; preds = %"#Attr_#dec_16.exit1095"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %121)
  br label %joinpointcont242

Then.i.i.i695:                                    ; preds = %"#Attr_#dec_16.exit1095"
  %366 = add nsw i64 %get_refcount250, -1
  store i64 %366, i64* %121, align 8
  br label %joinpointcont242

joinpointcont242:                                 ; preds = %"#Attr_#dec_16.exit1095", %Then.i.i.i695, %then_block253
  %const_str_store274.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store274.repack, align 8
  %const_str_store274.repack324 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 1
  store i64 73, i64* %const_str_store274.repack324, align 8
  %const_str_store274.repack325 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 2
  store i64 73, i64* %const_str_store274.repack325, align 8
  call void @roc_panic(%str.RocStr* %const_str_store274, i32 0)
  unreachable

then_block294:                                    ; preds = %default
  %at_index_struct_gep_data303.idx = sub nuw nsw i64 8, %masked276
  %at_index_struct_gep_data303 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %at_index_struct_gep_data303.idx
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %load_at_index_ptr_old304.sroa.0.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %at_index_struct_gep_data303, i64 80, i1 false)
  %load_at_index_ptr_old304.sroa.6.0.at_index_struct_gep_data303.sroa_raw_idx = getelementptr inbounds i8, i8* %at_index_struct_gep_data303, i64 80
  %load_at_index_ptr_old304.sroa.6.0.copyload = load i8, i8* %load_at_index_ptr_old304.sroa.6.0.at_index_struct_gep_data303.sroa_raw_idx, align 8
  switch i8 %load_at_index_ptr_old304.sroa.6.0.copyload, label %"#Attr_#dec_8.exit" [
    i8 0, label %tag_id_modify.i704
    i8 1, label %tag_id_modify1.i
  ]

tag_id_modify.i704:                               ; preds = %then_block294
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data303, i64 24, i1 false)
  %load_str_to_stack.i.i768.unpack924 = load i64, i64* %load_str_to_stack.i.i768.elt923, align 8
  %is_big_str.i.i770 = icmp sgt i64 %load_str_to_stack.i.i768.unpack924, 0
  br i1 %is_big_str.i.i770, label %modify_rc.i.i775, label %"#Attr_#dec_3.exit781"

modify_rc.i.i775:                                 ; preds = %tag_id_modify.i704
  %call_builtin.i.i771 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i766) #11
  %get_rc_ptr.i.i773 = getelementptr inbounds i8, i8* %call_builtin.i.i771, i64 -8
  %367 = bitcast i8* %get_rc_ptr.i.i773 to i64*
  %368 = load i64, i64* %367, align 8
  %.not.i.i.i.i.i774 = icmp eq i64 %368, 0
  br i1 %.not.i.i.i.i.i774, label %"#Attr_#dec_3.exit781", label %Then.i.i.i.i.i776

Then.i.i.i.i.i776:                                ; preds = %modify_rc.i.i775
  %369 = add i64 %368, -1
  store i64 %369, i64* %367, align 8
  %370 = icmp eq i64 %368, -9223372036854775808
  br i1 %370, label %Then1.i.i.i.i.i777, label %"#Attr_#dec_3.exit781"

Then1.i.i.i.i.i777:                               ; preds = %Then.i.i.i.i.i776
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i773, i32 8) #11
  br label %"#Attr_#dec_3.exit781"

"#Attr_#dec_3.exit781":                           ; preds = %modify_rc.i.i775, %Then.i.i.i.i.i776, %Then1.i.i.i.i.i777, %tag_id_modify.i704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i794.unpack929 = load i64, i64* %load_str_to_stack.i794.elt928, align 8
  %is_big_str.i796 = icmp sgt i64 %load_str_to_stack.i794.unpack929, 0
  br i1 %is_big_str.i796, label %modify_rc.i801, label %"#Attr_#dec_4.exit805"

modify_rc.i801:                                   ; preds = %"#Attr_#dec_3.exit781"
  %call_builtin.i797 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i765) #11
  %get_rc_ptr.i799 = getelementptr inbounds i8, i8* %call_builtin.i797, i64 -8
  %371 = bitcast i8* %get_rc_ptr.i799 to i64*
  %372 = load i64, i64* %371, align 8
  %.not.i.i.i.i800 = icmp eq i64 %372, 0
  br i1 %.not.i.i.i.i800, label %"#Attr_#dec_4.exit805", label %Then.i.i.i.i802

Then.i.i.i.i802:                                  ; preds = %modify_rc.i801
  %373 = add i64 %372, -1
  store i64 %373, i64* %371, align 8
  %374 = icmp eq i64 %372, -9223372036854775808
  br i1 %374, label %Then1.i.i.i.i803, label %"#Attr_#dec_4.exit805"

Then1.i.i.i.i803:                                 ; preds = %Then.i.i.i.i802
  tail call void @roc_dealloc(i8* %get_rc_ptr.i799, i32 8) #11
  br label %"#Attr_#dec_4.exit805"

"#Attr_#dec_4.exit805":                           ; preds = %modify_rc.i801, %Then.i.i.i.i802, %Then1.i.i.i.i803, %"#Attr_#dec_3.exit781"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.48.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i806.unpack934 = load i64, i64* %load_str_to_stack.i806.elt933, align 8
  %is_big_str.i808 = icmp sgt i64 %load_str_to_stack.i806.unpack934, 0
  br i1 %is_big_str.i808, label %modify_rc.i813, label %"#Attr_#dec_4.exit817"

modify_rc.i813:                                   ; preds = %"#Attr_#dec_4.exit805"
  %call_builtin.i809 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i764) #11
  %get_rc_ptr.i811 = getelementptr inbounds i8, i8* %call_builtin.i809, i64 -8
  %375 = bitcast i8* %get_rc_ptr.i811 to i64*
  %376 = load i64, i64* %375, align 8
  %.not.i.i.i.i812 = icmp eq i64 %376, 0
  br i1 %.not.i.i.i.i812, label %"#Attr_#dec_4.exit817", label %Then.i.i.i.i814

Then.i.i.i.i814:                                  ; preds = %modify_rc.i813
  %377 = add i64 %376, -1
  store i64 %377, i64* %375, align 8
  %378 = icmp eq i64 %376, -9223372036854775808
  br i1 %378, label %Then1.i.i.i.i815, label %"#Attr_#dec_4.exit817"

Then1.i.i.i.i815:                                 ; preds = %Then.i.i.i.i814
  tail call void @roc_dealloc(i8* %get_rc_ptr.i811, i32 8) #11
  br label %"#Attr_#dec_4.exit817"

"#Attr_#dec_4.exit817":                           ; preds = %modify_rc.i813, %Then.i.i.i.i814, %Then1.i.i.i.i815, %"#Attr_#dec_4.exit805"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  br label %"#Attr_#dec_8.exit"

tag_id_modify1.i:                                 ; preds = %then_block294
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %2, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data303, i64 24, i1 false)
  %load_str_to_stack.i.i.i705.unpack914 = load i64, i64* %load_str_to_stack.i.i.i705.elt913, align 8
  %is_big_str.i.i.i707 = icmp sgt i64 %load_str_to_stack.i.i.i705.unpack914, 0
  br i1 %is_big_str.i.i.i707, label %modify_rc.i.i.i712, label %"#Attr_#dec_5.exit.i"

modify_rc.i.i.i712:                               ; preds = %tag_id_modify1.i
  %call_builtin.i.i.i708 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i698) #11
  %get_rc_ptr.i.i.i710 = getelementptr inbounds i8, i8* %call_builtin.i.i.i708, i64 -8
  %379 = bitcast i8* %get_rc_ptr.i.i.i710 to i64*
  %380 = load i64, i64* %379, align 8
  %.not.i.i.i.i.i.i711 = icmp eq i64 %380, 0
  br i1 %.not.i.i.i.i.i.i711, label %"#Attr_#dec_5.exit.i", label %Then.i.i.i.i.i.i713

Then.i.i.i.i.i.i713:                              ; preds = %modify_rc.i.i.i712
  %381 = add i64 %380, -1
  store i64 %381, i64* %379, align 8
  %382 = icmp eq i64 %380, -9223372036854775808
  br i1 %382, label %Then1.i.i.i.i.i.i714, label %"#Attr_#dec_5.exit.i"

Then1.i.i.i.i.i.i714:                             ; preds = %Then.i.i.i.i.i.i713
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i710, i32 8) #11
  br label %"#Attr_#dec_5.exit.i"

"#Attr_#dec_5.exit.i":                            ; preds = %modify_rc.i.i.i712, %Then.i.i.i.i.i.i713, %Then1.i.i.i.i.i.i714, %tag_id_modify1.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i782.unpack919 = load i64, i64* %load_str_to_stack.i782.elt918, align 8
  %is_big_str.i784 = icmp sgt i64 %load_str_to_stack.i782.unpack919, 0
  br i1 %is_big_str.i784, label %modify_rc.i789, label %"#Attr_#dec_4.exit793"

modify_rc.i789:                                   ; preds = %"#Attr_#dec_5.exit.i"
  %call_builtin.i785 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i787 = getelementptr inbounds i8, i8* %call_builtin.i785, i64 -8
  %383 = bitcast i8* %get_rc_ptr.i787 to i64*
  %384 = load i64, i64* %383, align 8
  %.not.i.i.i.i788 = icmp eq i64 %384, 0
  br i1 %.not.i.i.i.i788, label %"#Attr_#dec_4.exit793", label %Then.i.i.i.i790

Then.i.i.i.i790:                                  ; preds = %modify_rc.i789
  %385 = add i64 %384, -1
  store i64 %385, i64* %383, align 8
  %386 = icmp eq i64 %384, -9223372036854775808
  br i1 %386, label %Then1.i.i.i.i791, label %"#Attr_#dec_4.exit793"

Then1.i.i.i.i791:                                 ; preds = %Then.i.i.i.i790
  tail call void @roc_dealloc(i8* %get_rc_ptr.i787, i32 8) #11
  br label %"#Attr_#dec_4.exit793"

"#Attr_#dec_4.exit793":                           ; preds = %modify_rc.i789, %Then.i.i.i.i790, %Then1.i.i.i.i791, %"#Attr_#dec_5.exit.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #11
  br label %"#Attr_#dec_8.exit"

"#Attr_#dec_8.exit":                              ; preds = %then_block294, %"#Attr_#dec_4.exit817", %"#Attr_#dec_4.exit793"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %8)
  br label %joinpointcont.backedge

done320:                                          ; preds = %default
  %to_int1.i = ptrtoint { [0 x i64], [12 x i64] }* %load_at_index_ptr_old283634 to i64
  %masked.i = and i64 %to_int1.i, 7
  %cast_to_i8_ptr.i = bitcast { [0 x i64], [12 x i64] }* %load_at_index_ptr_old283634 to i8*
  %get_rc_ptr.i718.idx = sub nuw nsw i64 -8, %masked.i
  %get_rc_ptr.i718 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i, i64 %get_rc_ptr.i718.idx
  %387 = bitcast i8* %get_rc_ptr.i718 to i64*
  %388 = load i64, i64* %387, align 8
  %.not.i.i719 = icmp eq i64 %388, 0
  br i1 %.not.i.i719, label %"#Attr_#inc_2.exit", label %Then.i.i720

Then.i.i720:                                      ; preds = %done320
  %389 = add nsw i64 %388, 1
  store i64 %389, i64* %387, align 8
  %.pre1444 = load i64, i64* %8, align 8
  br label %"#Attr_#inc_2.exit"

"#Attr_#inc_2.exit":                              ; preds = %done320, %Then.i.i720
  %390 = phi i64 [ %get_refcount291, %done320 ], [ %.pre1444, %Then.i.i720 ]
  %.not.i.i.i721 = icmp eq i64 %390, 0
  br i1 %.not.i.i.i721, label %joinpointcont.backedge, label %Then.i.i.i722

Then.i.i.i722:                                    ; preds = %"#Attr_#inc_2.exit"
  %391 = add i64 %390, -1
  store i64 %391, i64* %8, align 8
  %392 = icmp eq i64 %390, -9223372036854775808
  br i1 %392, label %Then1.i.i.i723, label %joinpointcont.backedge

Then1.i.i.i723:                                   ; preds = %Then.i.i.i722
  tail call void @roc_dealloc(i8* %get_rc_ptr290, i32 8) #11
  br label %joinpointcont.backedge

joinpointcont.backedge:                           ; preds = %Then1.i.i.i723, %Then.i.i.i722, %"#Attr_#inc_2.exit", %"#Attr_#dec_8.exit"
  br label %joinpointcont
}

; Function Attrs: nounwind
define internal fastcc void @Arg_parseHelp_ec1d1386fb533c8aee1842424cc42554c2fffbb26c2d398f3cb191d6af132({ [0 x i64], [12 x i64] }* %"74", { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* readonly %"75", { [0 x i64], [7 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %struct_field.i.i1329 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1251 = alloca %str.RocStr, align 8
  %struct_field.i.i1208 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1139 = alloca %str.RocStr, align 8
  %struct_field.i.i1127 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1096 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i1022 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i948 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %struct_field2.i776 = alloca %str.RocStr, align 8
  %struct_field1.i777 = alloca %str.RocStr, align 8
  %struct_field.i778 = alloca %str.RocStr, align 8
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i701 = alloca %str.RocStr, align 8
  %result_value.i.i = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %result_value.i687.sroa.0 = alloca [9 x i64], align 8
  %result_value.i686 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %result_value1.i = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value.i = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field1.i643 = alloca %str.RocStr, align 8
  %struct_field.i644 = alloca %str.RocStr, align 8
  %struct_field2.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %load_at_index_ptr_old304.sroa.0 = alloca [10 x i64], align 8
  %const_str_store274 = alloca %str.RocStr, align 8
  %result_value191 = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %struct_field177 = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field = alloca %str.RocStr, align 8
  %result_value168 = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %result_value126 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %load_at_index_ptr_old106 = alloca { %str.RocStr, %str.RocStr }, align 8
  %load_at_index_ptr_old84 = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %load_at_index_ptr_old56 = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %load_at_index_ptr_old = alloca %str.RocStr, align 8
  %load_at_index_ptr_old304.sroa.0.0.sroa_cast = bitcast [10 x i64]* %load_at_index_ptr_old304.sroa.0 to i8*
  %1 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  %2 = bitcast %str.RocStr* %struct_field.i.i701 to i8*
  %load_str_to_stack.i.i.i708.elt913 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i701, i64 0, i32 2
  %load_at_index_ptr_old304.sroa.0.24.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old304.sroa.0, i64 0, i64 3
  %load_at_index_ptr_old304.sroa.0.24.sroa_cast = bitcast i64* %load_at_index_ptr_old304.sroa.0.24.sroa_idx to i8*
  %load_str_to_stack.i720.elt918 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %3 = bitcast %str.RocStr* %struct_field2.i776 to i8*
  %4 = bitcast %str.RocStr* %struct_field1.i777 to i8*
  %5 = bitcast %str.RocStr* %struct_field.i778 to i8*
  %load_str_to_stack.i.i780.elt923 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i778, i64 0, i32 2
  %load_str_to_stack.i794.elt928 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i777, i64 0, i32 2
  %load_at_index_ptr_old304.sroa.0.48.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %load_at_index_ptr_old304.sroa.0, i64 0, i64 6
  %load_at_index_ptr_old304.sroa.0.48.sroa_cast = bitcast i64* %load_at_index_ptr_old304.sroa.0.48.sroa_idx to i8*
  %load_str_to_stack.i806.elt933 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i776, i64 0, i32 2
  br label %joinpointcont

joinpointcont:                                    ; preds = %joinpointcont.backedge, %entry
  %joinpointarg = phi { [0 x i64], [12 x i64] }* [ %"74", %entry ], [ %load_at_index_ptr_old283634, %joinpointcont.backedge ]
  %to_int = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %6 = trunc i64 %to_int to i3
  switch i3 %6, label %default [
    i3 -4, label %branch4
    i3 1, label %branch1
    i3 2, label %branch2
    i3 3, label %branch3
    i3 0, label %branch0
  ]

default:                                          ; preds = %joinpointcont
  %masked276 = and i64 %to_int, 7
  %index277 = sub nsw i64 0, %masked276
  %cast_to_i8_ptr278 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr279 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %index277
  %7 = bitcast i8* %new_ptr279 to { [0 x i64], [12 x i64] }**
  %load_at_index_ptr_old283634 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %7, align 8
  %get_rc_ptr290.idx = sub nuw nsw i64 -8, %masked276
  %get_rc_ptr290 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %get_rc_ptr290.idx
  %8 = bitcast i8* %get_rc_ptr290 to i64*
  %get_refcount291 = load i64, i64* %8, align 8
  %is_one292 = icmp eq i64 %get_refcount291, -9223372036854775808
  br i1 %is_one292, label %then_block294, label %done320

branch4:                                          ; preds = %joinpointcont
  %to_int.le1460 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt20.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i = load i64, i64* %struct_field.elt20.i, align 8
  %struct_field.elt22.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i = load i64, i64* %struct_field.elt22.i, align 8
  %9 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack23.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#dec_17.exit.i", label %modification_list_block.i52.i

modification_list_block.i52.i:                    ; preds = %branch4
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack21.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i52.i
  %load_str_to_stack.i.elt9.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#dec_4.exit.i.i", %loop.preheader.i.i
  %next_index12.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#dec_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index12.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index12.i.i
  %10 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8* noundef nonnull align 8 dereferenceable(24) %10, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i = load i64, i64* %load_str_to_stack.i.elt9.i.i, align 8
  %is_big_str.i.i.i936 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i, 0
  br i1 %is_big_str.i.i.i936, label %modify_rc.i.i.i938, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i938:                               ; preds = %loop.i.i
  %call_builtin.i.i.i937 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i53.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i937, i64 -8
  %11 = bitcast i8* %get_rc_ptr.i.i53.i to i64*
  %12 = load i64, i64* %11, align 8
  %.not.i.i.i.i.i54.i = icmp eq i64 %12, 0
  br i1 %.not.i.i.i.i.i54.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i55.i

Then.i.i.i.i.i55.i:                               ; preds = %modify_rc.i.i.i938
  %13 = add i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %12, -9223372036854775808
  br i1 %14, label %Then1.i.i.i.i.i56.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i56.i:                              ; preds = %Then.i.i.i.i.i55.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i56.i, %Then.i.i.i.i.i55.i, %modify_rc.i.i.i938, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack21.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#dec_4.exit.i.i", %modification_list_block.i52.i
  %15 = ptrtoint i8* %struct_field.unpack.i to i64
  %16 = shl i64 %struct_field.unpack23.i, 1
  %.not.i.i.i57.i = icmp slt i64 %struct_field.unpack23.i, 0
  %17 = select i1 %.not.i.i.i57.i, i64 %16, i64 %15
  %as_usize_ptr.i58.i = inttoptr i64 %17 to i64*
  %get_rc_ptr.i59.i = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i, i64 -1
  %18 = load i64, i64* %get_rc_ptr.i59.i, align 8
  %.not.i.i.i.i60.i = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i60.i, label %"#Attr_#dec_17.exit.i", label %Then.i.i.i.i61.i

Then.i.i.i.i61.i:                                 ; preds = %after_loop.i.i
  %19 = add i64 %18, -1
  store i64 %19, i64* %get_rc_ptr.i59.i, align 8
  %20 = icmp eq i64 %18, -9223372036854775808
  br i1 %20, label %Then1.i.i.i.i62.i, label %"#Attr_#dec_17.exit.i"

Then1.i.i.i.i62.i:                                ; preds = %Then.i.i.i.i61.i
  %21 = bitcast i64* %get_rc_ptr.i59.i to i8*
  tail call void @roc_dealloc(i8* %21, i32 8) #11
  br label %"#Attr_#dec_17.exit.i"

"#Attr_#dec_17.exit.i":                           ; preds = %Then1.i.i.i.i62.i, %Then.i.i.i.i61.i, %after_loop.i.i, %branch4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %struct_field1.sroa.264.0..sroa_idx65.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_18.exit.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#dec_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %22 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %23 = shl i64 %struct_field1.sroa.264.0.copyload.i, 1
  %.not.i.i.i.i.i939 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i, 0
  %24 = select i1 %.not.i.i.i.i.i939, i64 %23, i64 %22
  %as_usize_ptr.i.i.i = inttoptr i64 %24 to i64*
  %get_rc_ptr.i.i.i940 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %25 = load i64, i64* %get_rc_ptr.i.i.i940, align 8
  %.not.i.i.i.i.i.i941 = icmp eq i64 %25, 0
  br i1 %.not.i.i.i.i.i.i941, label %"#Attr_#dec_18.exit.i", label %Then.i.i.i.i.i.i942

Then.i.i.i.i.i.i942:                              ; preds = %modification_list_block.i.i.i
  %26 = add i64 %25, -1
  store i64 %26, i64* %get_rc_ptr.i.i.i940, align 8
  %27 = icmp eq i64 %25, -9223372036854775808
  br i1 %27, label %Then1.i.i.i.i.i.i943, label %"#Attr_#dec_18.exit.i"

Then1.i.i.i.i.i.i943:                             ; preds = %Then.i.i.i.i.i.i942
  %28 = bitcast i64* %get_rc_ptr.i.i.i940 to i8*
  tail call void @roc_dealloc(i8* %28, i32 8) #11
  br label %"#Attr_#dec_18.exit.i"

"#Attr_#dec_18.exit.i":                           ; preds = %Then1.i.i.i.i.i.i943, %Then.i.i.i.i.i.i942, %modification_list_block.i.i.i, %"#Attr_#dec_17.exit.i"
  %"cap > 0.i5.not.i" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i, 0
  br i1 %"cap > 0.i5.not.i", label %"#Attr_#dec_10.exit.i", label %modification_list_block.i14.i

modification_list_block.i14.i:                    ; preds = %"#Attr_#dec_18.exit.i"
  %29 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %30 = shl i64 %struct_field1.sroa.468.0.copyload.i, 1
  %.not.i.i.i10.i = icmp slt i64 %struct_field1.sroa.468.0.copyload.i, 0
  %31 = select i1 %.not.i.i.i10.i, i64 %30, i64 %29
  %as_usize_ptr.i11.i = inttoptr i64 %31 to i64*
  %get_rc_ptr.i12.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i, i64 -1
  %32 = load i64, i64* %get_rc_ptr.i12.i, align 8
  %.not.i.i.i.i13.i = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i13.i, label %"#Attr_#dec_10.exit.i", label %Then.i.i.i.i15.i

Then.i.i.i.i15.i:                                 ; preds = %modification_list_block.i14.i
  %33 = add i64 %32, -1
  store i64 %33, i64* %get_rc_ptr.i12.i, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %Then1.i.i.i.i16.i, label %"#Attr_#dec_10.exit.i"

Then1.i.i.i.i16.i:                                ; preds = %Then.i.i.i.i15.i
  %35 = bitcast i64* %get_rc_ptr.i12.i to i8*
  tail call void @roc_dealloc(i8* %35, i32 8) #11
  br label %"#Attr_#dec_10.exit.i"

"#Attr_#dec_10.exit.i":                           ; preds = %Then1.i.i.i.i16.i, %Then.i.i.i.i15.i, %modification_list_block.i14.i, %"#Attr_#dec_18.exit.i"
  %"cap > 0.i.not.i" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i", label %"#Attr_#dec_16.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_10.exit.i"
  %36 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %37 = shl i64 %struct_field1.sroa.672.0.copyload.i, 1
  %.not.i.i.i.i944 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i, 0
  %38 = select i1 %.not.i.i.i.i944, i64 %37, i64 %36
  %as_usize_ptr.i.i = inttoptr i64 %38 to i64*
  %get_rc_ptr.i.i945 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %39 = load i64, i64* %get_rc_ptr.i.i945, align 8
  %.not.i.i.i.i2.i = icmp eq i64 %39, 0
  br i1 %.not.i.i.i.i2.i, label %"#Attr_#dec_16.exit", label %Then.i.i.i.i.i946

Then.i.i.i.i.i946:                                ; preds = %modification_list_block.i.i
  %40 = add i64 %39, -1
  store i64 %40, i64* %get_rc_ptr.i.i945, align 8
  %41 = icmp eq i64 %39, -9223372036854775808
  br i1 %41, label %Then1.i.i.i.i.i947, label %"#Attr_#dec_16.exit"

Then1.i.i.i.i.i947:                               ; preds = %Then.i.i.i.i.i946
  %42 = bitcast i64* %get_rc_ptr.i.i945 to i8*
  tail call void @roc_dealloc(i8* %42, i32 8) #11
  br label %"#Attr_#dec_16.exit"

"#Attr_#dec_16.exit":                             ; preds = %"#Attr_#dec_10.exit.i", %modification_list_block.i.i, %Then.i.i.i.i.i946, %Then1.i.i.i.i.i947
  %masked = and i64 %to_int.le1460, 7
  %index = sub nsw i64 0, %masked
  %cast_to_i8_ptr = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %index
  %43 = bitcast %str.RocStr* %load_at_index_ptr_old to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %43, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr, i64 24, i1 false)
  %get_rc_ptr.idx = sub nuw nsw i64 -8, %masked
  %get_rc_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %get_rc_ptr.idx
  %44 = bitcast i8* %get_rc_ptr to i64*
  %get_refcount = load i64, i64* %44, align 8
  %is_one = icmp eq i64 %get_refcount, -9223372036854775808
  br i1 %is_one, label %then_block, label %then

branch1:                                          ; preds = %joinpointcont
  %to_int.le1458 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i949 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i950 = load i8*, i8** %struct_field.elt.i949, align 8
  %struct_field.elt20.i951 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i952 = load i64, i64* %struct_field.elt20.i951, align 8
  %struct_field.elt22.i953 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i954 = load i64, i64* %struct_field.elt22.i953, align 8
  %45 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i948 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %"cap > 0.not.i.i955" = icmp eq i64 %struct_field.unpack23.i954, 0
  br i1 %"cap > 0.not.i.i955", label %"#Attr_#dec_17.exit.i993", label %modification_list_block.i52.i958

modification_list_block.i52.i958:                 ; preds = %branch1
  %cast_basic_basic.i.i956 = bitcast i8* %struct_field.unpack.i950 to %str.RocStr*
  %bounds_check.not.i.i957 = icmp eq i64 %struct_field.unpack21.i952, 0
  br i1 %bounds_check.not.i.i957, label %after_loop.i.i979, label %loop.preheader.i.i960

loop.preheader.i.i960:                            ; preds = %modification_list_block.i52.i958
  %load_str_to_stack.i.elt9.i.i959 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i948, i64 0, i32 2
  br label %loop.i.i966

loop.i.i966:                                      ; preds = %"#Attr_#dec_4.exit.i.i974", %loop.preheader.i.i960
  %next_index12.i.i961 = phi i64 [ 0, %loop.preheader.i.i960 ], [ %next_index.i.i962, %"#Attr_#dec_4.exit.i.i974" ]
  %next_index.i.i962 = add nuw i64 %next_index12.i.i961, 1
  %load_index.i.i963 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i956, i64 %next_index12.i.i961
  %46 = bitcast %str.RocStr* %load_index.i.i963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8* noundef nonnull align 8 dereferenceable(24) %46, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i964 = load i64, i64* %load_str_to_stack.i.elt9.i.i959, align 8
  %is_big_str.i.i.i965 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i964, 0
  br i1 %is_big_str.i.i.i965, label %modify_rc.i.i.i970, label %"#Attr_#dec_4.exit.i.i974"

modify_rc.i.i.i970:                               ; preds = %loop.i.i966
  %call_builtin.i.i.i967 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i948) #11
  %get_rc_ptr.i.i53.i968 = getelementptr inbounds i8, i8* %call_builtin.i.i.i967, i64 -8
  %47 = bitcast i8* %get_rc_ptr.i.i53.i968 to i64*
  %48 = load i64, i64* %47, align 8
  %.not.i.i.i.i.i54.i969 = icmp eq i64 %48, 0
  br i1 %.not.i.i.i.i.i54.i969, label %"#Attr_#dec_4.exit.i.i974", label %Then.i.i.i.i.i55.i971

Then.i.i.i.i.i55.i971:                            ; preds = %modify_rc.i.i.i970
  %49 = add i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp eq i64 %48, -9223372036854775808
  br i1 %50, label %Then1.i.i.i.i.i56.i972, label %"#Attr_#dec_4.exit.i.i974"

Then1.i.i.i.i.i56.i972:                           ; preds = %Then.i.i.i.i.i55.i971
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i968, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i974"

"#Attr_#dec_4.exit.i.i974":                       ; preds = %Then1.i.i.i.i.i56.i972, %Then.i.i.i.i.i55.i971, %modify_rc.i.i.i970, %loop.i.i966
  %exitcond.not.i973 = icmp eq i64 %next_index.i.i962, %struct_field.unpack21.i952
  br i1 %exitcond.not.i973, label %after_loop.i.i979, label %loop.i.i966

after_loop.i.i979:                                ; preds = %"#Attr_#dec_4.exit.i.i974", %modification_list_block.i52.i958
  %51 = ptrtoint i8* %struct_field.unpack.i950 to i64
  %52 = shl i64 %struct_field.unpack23.i954, 1
  %.not.i.i.i57.i975 = icmp slt i64 %struct_field.unpack23.i954, 0
  %53 = select i1 %.not.i.i.i57.i975, i64 %52, i64 %51
  %as_usize_ptr.i58.i976 = inttoptr i64 %53 to i64*
  %get_rc_ptr.i59.i977 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i976, i64 -1
  %54 = load i64, i64* %get_rc_ptr.i59.i977, align 8
  %.not.i.i.i.i60.i978 = icmp eq i64 %54, 0
  br i1 %.not.i.i.i.i60.i978, label %"#Attr_#dec_17.exit.i993", label %Then.i.i.i.i61.i980

Then.i.i.i.i61.i980:                              ; preds = %after_loop.i.i979
  %55 = add i64 %54, -1
  store i64 %55, i64* %get_rc_ptr.i59.i977, align 8
  %56 = icmp eq i64 %54, -9223372036854775808
  br i1 %56, label %Then1.i.i.i.i62.i981, label %"#Attr_#dec_17.exit.i993"

Then1.i.i.i.i62.i981:                             ; preds = %Then.i.i.i.i61.i980
  %57 = bitcast i64* %get_rc_ptr.i59.i977 to i8*
  tail call void @roc_dealloc(i8* %57, i32 8) #11
  br label %"#Attr_#dec_17.exit.i993"

"#Attr_#dec_17.exit.i993":                        ; preds = %Then1.i.i.i.i62.i981, %Then.i.i.i.i61.i980, %after_loop.i.i979, %branch1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  %struct_field1.sroa.264.0..sroa_idx65.i982 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i983 = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i982, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i984 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i985 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i984, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i986 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i987 = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i986, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i988 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i989 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i988, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i990 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i991 = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i990, align 8
  %"cap > 0.i.i.not.i992" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i983, 0
  br i1 %"cap > 0.i.i.not.i992", label %"#Attr_#dec_18.exit.i1004", label %modification_list_block.i.i.i1000

modification_list_block.i.i.i1000:                ; preds = %"#Attr_#dec_17.exit.i993"
  %struct_field1.sroa.0.0..sroa_idx.i994 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i995 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i994, align 8
  %58 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i995 to i64
  %59 = shl i64 %struct_field1.sroa.264.0.copyload.i983, 1
  %.not.i.i.i.i.i996 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i983, 0
  %60 = select i1 %.not.i.i.i.i.i996, i64 %59, i64 %58
  %as_usize_ptr.i.i.i997 = inttoptr i64 %60 to i64*
  %get_rc_ptr.i.i.i998 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i997, i64 -1
  %61 = load i64, i64* %get_rc_ptr.i.i.i998, align 8
  %.not.i.i.i.i.i.i999 = icmp eq i64 %61, 0
  br i1 %.not.i.i.i.i.i.i999, label %"#Attr_#dec_18.exit.i1004", label %Then.i.i.i.i.i.i1001

Then.i.i.i.i.i.i1001:                             ; preds = %modification_list_block.i.i.i1000
  %62 = add i64 %61, -1
  store i64 %62, i64* %get_rc_ptr.i.i.i998, align 8
  %63 = icmp eq i64 %61, -9223372036854775808
  br i1 %63, label %Then1.i.i.i.i.i.i1002, label %"#Attr_#dec_18.exit.i1004"

Then1.i.i.i.i.i.i1002:                            ; preds = %Then.i.i.i.i.i.i1001
  %64 = bitcast i64* %get_rc_ptr.i.i.i998 to i8*
  tail call void @roc_dealloc(i8* %64, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1004"

"#Attr_#dec_18.exit.i1004":                       ; preds = %Then1.i.i.i.i.i.i1002, %Then.i.i.i.i.i.i1001, %modification_list_block.i.i.i1000, %"#Attr_#dec_17.exit.i993"
  %"cap > 0.i5.not.i1003" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i987, 0
  br i1 %"cap > 0.i5.not.i1003", label %"#Attr_#dec_10.exit.i1013", label %modification_list_block.i14.i1009

modification_list_block.i14.i1009:                ; preds = %"#Attr_#dec_18.exit.i1004"
  %65 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i985 to i64
  %66 = shl i64 %struct_field1.sroa.468.0.copyload.i987, 1
  %.not.i.i.i10.i1005 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i987, 0
  %67 = select i1 %.not.i.i.i10.i1005, i64 %66, i64 %65
  %as_usize_ptr.i11.i1006 = inttoptr i64 %67 to i64*
  %get_rc_ptr.i12.i1007 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1006, i64 -1
  %68 = load i64, i64* %get_rc_ptr.i12.i1007, align 8
  %.not.i.i.i.i13.i1008 = icmp eq i64 %68, 0
  br i1 %.not.i.i.i.i13.i1008, label %"#Attr_#dec_10.exit.i1013", label %Then.i.i.i.i15.i1010

Then.i.i.i.i15.i1010:                             ; preds = %modification_list_block.i14.i1009
  %69 = add i64 %68, -1
  store i64 %69, i64* %get_rc_ptr.i12.i1007, align 8
  %70 = icmp eq i64 %68, -9223372036854775808
  br i1 %70, label %Then1.i.i.i.i16.i1011, label %"#Attr_#dec_10.exit.i1013"

Then1.i.i.i.i16.i1011:                            ; preds = %Then.i.i.i.i15.i1010
  %71 = bitcast i64* %get_rc_ptr.i12.i1007 to i8*
  tail call void @roc_dealloc(i8* %71, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1013"

"#Attr_#dec_10.exit.i1013":                       ; preds = %Then1.i.i.i.i16.i1011, %Then.i.i.i.i15.i1010, %modification_list_block.i14.i1009, %"#Attr_#dec_18.exit.i1004"
  %"cap > 0.i.not.i1012" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i991, 0
  br i1 %"cap > 0.i.not.i1012", label %"#Attr_#dec_16.exit1021", label %modification_list_block.i.i1018

modification_list_block.i.i1018:                  ; preds = %"#Attr_#dec_10.exit.i1013"
  %72 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i989 to i64
  %73 = shl i64 %struct_field1.sroa.672.0.copyload.i991, 1
  %.not.i.i.i.i1014 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i991, 0
  %74 = select i1 %.not.i.i.i.i1014, i64 %73, i64 %72
  %as_usize_ptr.i.i1015 = inttoptr i64 %74 to i64*
  %get_rc_ptr.i.i1016 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1015, i64 -1
  %75 = load i64, i64* %get_rc_ptr.i.i1016, align 8
  %.not.i.i.i.i2.i1017 = icmp eq i64 %75, 0
  br i1 %.not.i.i.i.i2.i1017, label %"#Attr_#dec_16.exit1021", label %Then.i.i.i.i.i1019

Then.i.i.i.i.i1019:                               ; preds = %modification_list_block.i.i1018
  %76 = add i64 %75, -1
  store i64 %76, i64* %get_rc_ptr.i.i1016, align 8
  %77 = icmp eq i64 %75, -9223372036854775808
  br i1 %77, label %Then1.i.i.i.i.i1020, label %"#Attr_#dec_16.exit1021"

Then1.i.i.i.i.i1020:                              ; preds = %Then.i.i.i.i.i1019
  %78 = bitcast i64* %get_rc_ptr.i.i1016 to i8*
  tail call void @roc_dealloc(i8* %78, i32 8) #11
  br label %"#Attr_#dec_16.exit1021"

"#Attr_#dec_16.exit1021":                         ; preds = %"#Attr_#dec_10.exit.i1013", %modification_list_block.i.i1018, %Then.i.i.i.i.i1019, %Then1.i.i.i.i.i1020
  %cast_to_i8_ptr36 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %masked38 = and i64 %to_int.le1458, 7
  %get_rc_ptr42.idx = sub nuw nsw i64 -8, %masked38
  %get_rc_ptr42 = getelementptr inbounds i8, i8* %cast_to_i8_ptr36, i64 %get_rc_ptr42.idx
  %79 = bitcast i8* %get_rc_ptr42 to i64*
  %get_refcount43 = load i64, i64* %79, align 8
  switch i64 %get_refcount43, label %Then.i.i.i640 [
    i64 -9223372036854775808, label %then_block46
    i64 0, label %joinpointcont35
  ]

branch2:                                          ; preds = %joinpointcont
  %to_int.le1456 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked77 = and i64 %to_int.le1456, 7
  %cast_to_i8_ptr79 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %at_index_struct_gep_data83.idx = sub nuw nsw i64 48, %masked77
  %at_index_struct_gep_data83 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %at_index_struct_gep_data83.idx
  %80 = bitcast %str.RocStr* %load_at_index_ptr_old84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %80, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data83, i64 24, i1 false)
  %get_rc_ptr92.idx = sub nuw nsw i64 -8, %masked77
  %get_rc_ptr92 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %get_rc_ptr92.idx
  %81 = bitcast i8* %get_rc_ptr92 to i64*
  %get_refcount93 = load i64, i64* %81, align 8
  %is_one94 = icmp eq i64 %get_refcount93, -9223372036854775808
  br i1 %is_one94, label %then_block96, label %then121

branch3:                                          ; preds = %joinpointcont
  %to_int.le1454 = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %masked128 = and i64 %to_int.le1454, 7
  %index129 = sub nsw i64 0, %masked128
  %cast_to_i8_ptr130 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %new_ptr131 = getelementptr inbounds i8, i8* %cast_to_i8_ptr130, i64 %index129
  %load_at_index_ptr_old135.elt = bitcast i8* %new_ptr131 to i8**
  %load_at_index_ptr_old135.unpack = load i8*, i8** %load_at_index_ptr_old135.elt, align 8
  %82 = insertvalue %list.RocList undef, i8* %load_at_index_ptr_old135.unpack, 0
  %load_at_index_ptr_old135.elt326 = getelementptr inbounds i8, i8* %new_ptr131, i64 8
  %83 = bitcast i8* %load_at_index_ptr_old135.elt326 to i64*
  %load_at_index_ptr_old135.unpack327 = load i64, i64* %83, align 8
  %84 = insertvalue %list.RocList %82, i64 %load_at_index_ptr_old135.unpack327, 1
  %load_at_index_ptr_old135.elt328 = getelementptr inbounds i8, i8* %new_ptr131, i64 16
  %85 = bitcast i8* %load_at_index_ptr_old135.elt328 to i64*
  %load_at_index_ptr_old135.unpack329 = load i64, i64* %85, align 8
  %load_at_index_ptr_old135330 = insertvalue %list.RocList %84, i64 %load_at_index_ptr_old135.unpack329, 2
  %get_rc_ptr143.idx = sub nuw nsw i64 -8, %masked128
  %get_rc_ptr143 = getelementptr inbounds i8, i8* %cast_to_i8_ptr130, i64 %get_rc_ptr143.idx
  %86 = bitcast i8* %get_rc_ptr143 to i64*
  %get_refcount144 = load i64, i64* %86, align 8
  %is_one145 = icmp eq i64 %get_refcount144, -9223372036854775808
  br i1 %is_one145, label %then_block147, label %then163

branch0:                                          ; preds = %joinpointcont
  %to_int.le = ptrtoint { [0 x i64], [12 x i64] }* %joinpointarg to i64
  %struct_field.elt.i1023 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1024 = load i8*, i8** %struct_field.elt.i1023, align 8
  %struct_field.elt20.i1025 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack21.i1026 = load i64, i64* %struct_field.elt20.i1025, align 8
  %struct_field.elt22.i1027 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack23.i1028 = load i64, i64* %struct_field.elt22.i1027, align 8
  %87 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1022 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %"cap > 0.not.i.i1029" = icmp eq i64 %struct_field.unpack23.i1028, 0
  br i1 %"cap > 0.not.i.i1029", label %"#Attr_#dec_17.exit.i1067", label %modification_list_block.i52.i1032

modification_list_block.i52.i1032:                ; preds = %branch0
  %cast_basic_basic.i.i1030 = bitcast i8* %struct_field.unpack.i1024 to %str.RocStr*
  %bounds_check.not.i.i1031 = icmp eq i64 %struct_field.unpack21.i1026, 0
  br i1 %bounds_check.not.i.i1031, label %after_loop.i.i1053, label %loop.preheader.i.i1034

loop.preheader.i.i1034:                           ; preds = %modification_list_block.i52.i1032
  %load_str_to_stack.i.elt9.i.i1033 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1022, i64 0, i32 2
  br label %loop.i.i1040

loop.i.i1040:                                     ; preds = %"#Attr_#dec_4.exit.i.i1048", %loop.preheader.i.i1034
  %next_index12.i.i1035 = phi i64 [ 0, %loop.preheader.i.i1034 ], [ %next_index.i.i1036, %"#Attr_#dec_4.exit.i.i1048" ]
  %next_index.i.i1036 = add nuw i64 %next_index12.i.i1035, 1
  %load_index.i.i1037 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1030, i64 %next_index12.i.i1035
  %88 = bitcast %str.RocStr* %load_index.i.i1037 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %87, i8* noundef nonnull align 8 dereferenceable(24) %88, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i1038 = load i64, i64* %load_str_to_stack.i.elt9.i.i1033, align 8
  %is_big_str.i.i.i1039 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i1038, 0
  br i1 %is_big_str.i.i.i1039, label %modify_rc.i.i.i1044, label %"#Attr_#dec_4.exit.i.i1048"

modify_rc.i.i.i1044:                              ; preds = %loop.i.i1040
  %call_builtin.i.i.i1041 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1022) #11
  %get_rc_ptr.i.i53.i1042 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1041, i64 -8
  %89 = bitcast i8* %get_rc_ptr.i.i53.i1042 to i64*
  %90 = load i64, i64* %89, align 8
  %.not.i.i.i.i.i54.i1043 = icmp eq i64 %90, 0
  br i1 %.not.i.i.i.i.i54.i1043, label %"#Attr_#dec_4.exit.i.i1048", label %Then.i.i.i.i.i55.i1045

Then.i.i.i.i.i55.i1045:                           ; preds = %modify_rc.i.i.i1044
  %91 = add i64 %90, -1
  store i64 %91, i64* %89, align 8
  %92 = icmp eq i64 %90, -9223372036854775808
  br i1 %92, label %Then1.i.i.i.i.i56.i1046, label %"#Attr_#dec_4.exit.i.i1048"

Then1.i.i.i.i.i56.i1046:                          ; preds = %Then.i.i.i.i.i55.i1045
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i1042, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i1048"

"#Attr_#dec_4.exit.i.i1048":                      ; preds = %Then1.i.i.i.i.i56.i1046, %Then.i.i.i.i.i55.i1045, %modify_rc.i.i.i1044, %loop.i.i1040
  %exitcond.not.i1047 = icmp eq i64 %next_index.i.i1036, %struct_field.unpack21.i1026
  br i1 %exitcond.not.i1047, label %after_loop.i.i1053, label %loop.i.i1040

after_loop.i.i1053:                               ; preds = %"#Attr_#dec_4.exit.i.i1048", %modification_list_block.i52.i1032
  %93 = ptrtoint i8* %struct_field.unpack.i1024 to i64
  %94 = shl i64 %struct_field.unpack23.i1028, 1
  %.not.i.i.i57.i1049 = icmp slt i64 %struct_field.unpack23.i1028, 0
  %95 = select i1 %.not.i.i.i57.i1049, i64 %94, i64 %93
  %as_usize_ptr.i58.i1050 = inttoptr i64 %95 to i64*
  %get_rc_ptr.i59.i1051 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i1050, i64 -1
  %96 = load i64, i64* %get_rc_ptr.i59.i1051, align 8
  %.not.i.i.i.i60.i1052 = icmp eq i64 %96, 0
  br i1 %.not.i.i.i.i60.i1052, label %"#Attr_#dec_17.exit.i1067", label %Then.i.i.i.i61.i1054

Then.i.i.i.i61.i1054:                             ; preds = %after_loop.i.i1053
  %97 = add i64 %96, -1
  store i64 %97, i64* %get_rc_ptr.i59.i1051, align 8
  %98 = icmp eq i64 %96, -9223372036854775808
  br i1 %98, label %Then1.i.i.i.i62.i1055, label %"#Attr_#dec_17.exit.i1067"

Then1.i.i.i.i62.i1055:                            ; preds = %Then.i.i.i.i61.i1054
  %99 = bitcast i64* %get_rc_ptr.i59.i1051 to i8*
  tail call void @roc_dealloc(i8* %99, i32 8) #11
  br label %"#Attr_#dec_17.exit.i1067"

"#Attr_#dec_17.exit.i1067":                       ; preds = %Then1.i.i.i.i62.i1055, %Then.i.i.i.i61.i1054, %after_loop.i.i1053, %branch0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  %struct_field1.sroa.264.0..sroa_idx65.i1056 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload.i1057 = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65.i1056, align 8
  %struct_field1.sroa.3.0..sroa_idx66.i1058 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1059 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66.i1058, align 8
  %struct_field1.sroa.468.0..sroa_idx69.i1060 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload.i1061 = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69.i1060, align 8
  %struct_field1.sroa.5.0..sroa_idx70.i1062 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1063 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70.i1062, align 8
  %struct_field1.sroa.672.0..sroa_idx73.i1064 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload.i1065 = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73.i1064, align 8
  %"cap > 0.i.i.not.i1066" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i1057, 0
  br i1 %"cap > 0.i.i.not.i1066", label %"#Attr_#dec_18.exit.i1078", label %modification_list_block.i.i.i1074

modification_list_block.i.i.i1074:                ; preds = %"#Attr_#dec_17.exit.i1067"
  %struct_field1.sroa.0.0..sroa_idx.i1068 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1069 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1068, align 8
  %100 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1069 to i64
  %101 = shl i64 %struct_field1.sroa.264.0.copyload.i1057, 1
  %.not.i.i.i.i.i1070 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i1057, 0
  %102 = select i1 %.not.i.i.i.i.i1070, i64 %101, i64 %100
  %as_usize_ptr.i.i.i1071 = inttoptr i64 %102 to i64*
  %get_rc_ptr.i.i.i1072 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1071, i64 -1
  %103 = load i64, i64* %get_rc_ptr.i.i.i1072, align 8
  %.not.i.i.i.i.i.i1073 = icmp eq i64 %103, 0
  br i1 %.not.i.i.i.i.i.i1073, label %"#Attr_#dec_18.exit.i1078", label %Then.i.i.i.i.i.i1075

Then.i.i.i.i.i.i1075:                             ; preds = %modification_list_block.i.i.i1074
  %104 = add i64 %103, -1
  store i64 %104, i64* %get_rc_ptr.i.i.i1072, align 8
  %105 = icmp eq i64 %103, -9223372036854775808
  br i1 %105, label %Then1.i.i.i.i.i.i1076, label %"#Attr_#dec_18.exit.i1078"

Then1.i.i.i.i.i.i1076:                            ; preds = %Then.i.i.i.i.i.i1075
  %106 = bitcast i64* %get_rc_ptr.i.i.i1072 to i8*
  tail call void @roc_dealloc(i8* %106, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1078"

"#Attr_#dec_18.exit.i1078":                       ; preds = %Then1.i.i.i.i.i.i1076, %Then.i.i.i.i.i.i1075, %modification_list_block.i.i.i1074, %"#Attr_#dec_17.exit.i1067"
  %"cap > 0.i5.not.i1077" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i1061, 0
  br i1 %"cap > 0.i5.not.i1077", label %"#Attr_#dec_10.exit.i1087", label %modification_list_block.i14.i1083

modification_list_block.i14.i1083:                ; preds = %"#Attr_#dec_18.exit.i1078"
  %107 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1059 to i64
  %108 = shl i64 %struct_field1.sroa.468.0.copyload.i1061, 1
  %.not.i.i.i10.i1079 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i1061, 0
  %109 = select i1 %.not.i.i.i10.i1079, i64 %108, i64 %107
  %as_usize_ptr.i11.i1080 = inttoptr i64 %109 to i64*
  %get_rc_ptr.i12.i1081 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1080, i64 -1
  %110 = load i64, i64* %get_rc_ptr.i12.i1081, align 8
  %.not.i.i.i.i13.i1082 = icmp eq i64 %110, 0
  br i1 %.not.i.i.i.i13.i1082, label %"#Attr_#dec_10.exit.i1087", label %Then.i.i.i.i15.i1084

Then.i.i.i.i15.i1084:                             ; preds = %modification_list_block.i14.i1083
  %111 = add i64 %110, -1
  store i64 %111, i64* %get_rc_ptr.i12.i1081, align 8
  %112 = icmp eq i64 %110, -9223372036854775808
  br i1 %112, label %Then1.i.i.i.i16.i1085, label %"#Attr_#dec_10.exit.i1087"

Then1.i.i.i.i16.i1085:                            ; preds = %Then.i.i.i.i15.i1084
  %113 = bitcast i64* %get_rc_ptr.i12.i1081 to i8*
  tail call void @roc_dealloc(i8* %113, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1087"

"#Attr_#dec_10.exit.i1087":                       ; preds = %Then1.i.i.i.i16.i1085, %Then.i.i.i.i15.i1084, %modification_list_block.i14.i1083, %"#Attr_#dec_18.exit.i1078"
  %"cap > 0.i.not.i1086" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i1065, 0
  br i1 %"cap > 0.i.not.i1086", label %"#Attr_#dec_16.exit1095", label %modification_list_block.i.i1092

modification_list_block.i.i1092:                  ; preds = %"#Attr_#dec_10.exit.i1087"
  %114 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1063 to i64
  %115 = shl i64 %struct_field1.sroa.672.0.copyload.i1065, 1
  %.not.i.i.i.i1088 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i1065, 0
  %116 = select i1 %.not.i.i.i.i1088, i64 %115, i64 %114
  %as_usize_ptr.i.i1089 = inttoptr i64 %116 to i64*
  %get_rc_ptr.i.i1090 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1089, i64 -1
  %117 = load i64, i64* %get_rc_ptr.i.i1090, align 8
  %.not.i.i.i.i2.i1091 = icmp eq i64 %117, 0
  br i1 %.not.i.i.i.i2.i1091, label %"#Attr_#dec_16.exit1095", label %Then.i.i.i.i.i1093

Then.i.i.i.i.i1093:                               ; preds = %modification_list_block.i.i1092
  %118 = add i64 %117, -1
  store i64 %118, i64* %get_rc_ptr.i.i1090, align 8
  %119 = icmp eq i64 %117, -9223372036854775808
  br i1 %119, label %Then1.i.i.i.i.i1094, label %"#Attr_#dec_16.exit1095"

Then1.i.i.i.i.i1094:                              ; preds = %Then.i.i.i.i.i1093
  %120 = bitcast i64* %get_rc_ptr.i.i1090 to i8*
  tail call void @roc_dealloc(i8* %120, i32 8) #11
  br label %"#Attr_#dec_16.exit1095"

"#Attr_#dec_16.exit1095":                         ; preds = %"#Attr_#dec_10.exit.i1087", %modification_list_block.i.i1092, %Then.i.i.i.i.i1093, %Then1.i.i.i.i.i1094
  %cast_to_i8_ptr243 = bitcast { [0 x i64], [12 x i64] }* %joinpointarg to i8*
  %masked245 = and i64 %to_int.le, 7
  %get_rc_ptr249.idx = sub nuw nsw i64 -8, %masked245
  %get_rc_ptr249 = getelementptr inbounds i8, i8* %cast_to_i8_ptr243, i64 %get_rc_ptr249.idx
  %121 = bitcast i8* %get_rc_ptr249 to i64*
  %get_refcount250 = load i64, i64* %121, align 8
  switch i64 %get_refcount250, label %Then.i.i.i698 [
    i64 -9223372036854775808, label %then_block253
    i64 0, label %joinpointcont242
  ]

then_block:                                       ; preds = %"#Attr_#dec_16.exit"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %44)
  %load_tag_to_put_in_struct.elt626.phi.trans.insert = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack627.pre = load i64, i64* %load_tag_to_put_in_struct.elt626.phi.trans.insert, align 8
  br label %joinpointcont3

then:                                             ; preds = %"#Attr_#dec_16.exit"
  %load_str_to_stack.i.elt908 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 2
  %load_str_to_stack.i.unpack909 = load i64, i64* %load_str_to_stack.i.elt908, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack909, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#inc_4.exit"

modify_rc.i:                                      ; preds = %then
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %122 = bitcast i8* %get_rc_ptr.i to i64*
  %123 = load i64, i64* %122, align 8
  %.not.i.i = icmp eq i64 %123, 0
  br i1 %.not.i.i, label %"#Attr_#inc_4.exit", label %Then.i.i

Then.i.i:                                         ; preds = %modify_rc.i
  %124 = add nsw i64 %123, 1
  store i64 %124, i64* %122, align 8
  %.pre1442 = load i64, i64* %44, align 8
  br label %"#Attr_#inc_4.exit"

"#Attr_#inc_4.exit":                              ; preds = %then, %modify_rc.i, %Then.i.i
  %125 = phi i64 [ %get_refcount, %then ], [ %get_refcount, %modify_rc.i ], [ %.pre1442, %Then.i.i ]
  %.not.i.i.i = icmp eq i64 %125, 0
  br i1 %.not.i.i.i, label %joinpointcont3, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %"#Attr_#inc_4.exit"
  %126 = add i64 %125, -1
  store i64 %126, i64* %44, align 8
  %127 = icmp eq i64 %125, -9223372036854775808
  br i1 %127, label %Then1.i.i.i, label %joinpointcont3

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  br label %joinpointcont3

common.ret:                                       ; preds = %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit, %"#Attr_#dec_19.exit", %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, %"#Attr_#inc_16.exit", %joinpointcont3
  %.sink1462 = phi i8* [ %365, %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit ], [ %335, %"#Attr_#dec_19.exit" ], [ %318, %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit ], [ %195, %"#Attr_#inc_16.exit" ], [ %130, %joinpointcont3 ]
  %.sink = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %.sink, i8* noundef nonnull align 8 dereferenceable(64) %.sink1462, i64 64, i1 false)
  ret void

joinpointcont3:                                   ; preds = %Then1.i.i.i, %Then.i.i.i, %"#Attr_#inc_4.exit", %then_block
  %load_tag_to_put_in_struct.unpack627 = phi i64 [ %load_str_to_stack.i.unpack909, %Then1.i.i.i ], [ %load_str_to_stack.i.unpack909, %Then.i.i.i ], [ %load_str_to_stack.i.unpack909, %"#Attr_#inc_4.exit" ], [ %load_tag_to_put_in_struct.unpack627.pre, %then_block ]
  %load_tag_to_put_in_struct.elt = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 0
  %load_tag_to_put_in_struct.unpack = load i8*, i8** %load_tag_to_put_in_struct.elt, align 8
  %load_tag_to_put_in_struct.elt624 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old, i64 0, i32 1
  %load_tag_to_put_in_struct.unpack625 = load i64, i64* %load_tag_to_put_in_struct.elt624, align 8
  %tag_alloca = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1
  %.repack629 = bitcast [7 x i64]* %data_buffer to i8**
  store i8* %load_tag_to_put_in_struct.unpack, i8** %.repack629, align 8
  %128 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack625, i64* %128, align 8
  %129 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack627, i64* %129, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr, align 8
  %130 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca to i8*
  br label %common.ret

then_block46:                                     ; preds = %"#Attr_#dec_16.exit1021"
  %index50 = sub nsw i64 0, %masked38
  %new_ptr52 = getelementptr inbounds i8, i8* %cast_to_i8_ptr36, i64 %index50
  %131 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %131, i8* noundef nonnull align 8 dereferenceable(80) %new_ptr52, i64 80, i1 false)
  %132 = bitcast %str.RocStr* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132)
  %133 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133)
  %134 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %134, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr52, i64 24, i1 false)
  %load_str_to_stack.i.i.elt893 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack894 = load i64, i64* %load_str_to_stack.i.i.elt893, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack894, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_3.exit"

modify_rc.i.i:                                    ; preds = %then_block46
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %135 = bitcast i8* %get_rc_ptr.i.i to i64*
  %136 = load i64, i64* %135, align 8
  %.not.i.i.i.i.i = icmp eq i64 %136, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_3.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %137 = add i64 %136, -1
  store i64 %137, i64* %135, align 8
  %138 = icmp eq i64 %136, -9223372036854775808
  br i1 %138, label %Then1.i.i.i.i.i, label %"#Attr_#dec_3.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_3.exit"

"#Attr_#dec_3.exit":                              ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %then_block46
  %struct_field_access_record_1.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56, i64 0, i32 1
  %139 = bitcast %str.RocStr* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %133, i8* noundef nonnull align 8 dereferenceable(24) %139, i64 24, i1 false) #11
  %load_str_to_stack.i740.elt898 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i740.unpack899 = load i64, i64* %load_str_to_stack.i740.elt898, align 8
  %is_big_str.i742 = icmp sgt i64 %load_str_to_stack.i740.unpack899, 0
  br i1 %is_big_str.i742, label %modify_rc.i747, label %"#Attr_#dec_4.exit751"

modify_rc.i747:                                   ; preds = %"#Attr_#dec_3.exit"
  %call_builtin.i743 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i745 = getelementptr inbounds i8, i8* %call_builtin.i743, i64 -8
  %140 = bitcast i8* %get_rc_ptr.i745 to i64*
  %141 = load i64, i64* %140, align 8
  %.not.i.i.i.i746 = icmp eq i64 %141, 0
  br i1 %.not.i.i.i.i746, label %"#Attr_#dec_4.exit751", label %Then.i.i.i.i748

Then.i.i.i.i748:                                  ; preds = %modify_rc.i747
  %142 = add i64 %141, -1
  store i64 %142, i64* %140, align 8
  %143 = icmp eq i64 %141, -9223372036854775808
  br i1 %143, label %Then1.i.i.i.i749, label %"#Attr_#dec_4.exit751"

Then1.i.i.i.i749:                                 ; preds = %Then.i.i.i.i748
  tail call void @roc_dealloc(i8* %get_rc_ptr.i745, i32 8) #11
  br label %"#Attr_#dec_4.exit751"

"#Attr_#dec_4.exit751":                           ; preds = %modify_rc.i747, %Then.i.i.i.i748, %Then1.i.i.i.i749, %"#Attr_#dec_3.exit"
  %struct_field_access_record_2.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %load_at_index_ptr_old56, i64 0, i32 2
  %144 = bitcast %str.RocStr* %struct_field_access_record_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %132, i8* noundef nonnull align 8 dereferenceable(24) %144, i64 24, i1 false) #11
  %load_str_to_stack.i752.elt903 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i, i64 0, i32 2
  %load_str_to_stack.i752.unpack904 = load i64, i64* %load_str_to_stack.i752.elt903, align 8
  %is_big_str.i754 = icmp sgt i64 %load_str_to_stack.i752.unpack904, 0
  br i1 %is_big_str.i754, label %modify_rc.i759, label %"#Attr_#dec_4.exit763"

modify_rc.i759:                                   ; preds = %"#Attr_#dec_4.exit751"
  %call_builtin.i755 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i) #11
  %get_rc_ptr.i757 = getelementptr inbounds i8, i8* %call_builtin.i755, i64 -8
  %145 = bitcast i8* %get_rc_ptr.i757 to i64*
  %146 = load i64, i64* %145, align 8
  %.not.i.i.i.i758 = icmp eq i64 %146, 0
  br i1 %.not.i.i.i.i758, label %"#Attr_#dec_4.exit763", label %Then.i.i.i.i760

Then.i.i.i.i760:                                  ; preds = %modify_rc.i759
  %147 = add i64 %146, -1
  store i64 %147, i64* %145, align 8
  %148 = icmp eq i64 %146, -9223372036854775808
  br i1 %148, label %Then1.i.i.i.i761, label %"#Attr_#dec_4.exit763"

Then1.i.i.i.i761:                                 ; preds = %Then.i.i.i.i760
  tail call void @roc_dealloc(i8* %get_rc_ptr.i757, i32 8) #11
  br label %"#Attr_#dec_4.exit763"

"#Attr_#dec_4.exit763":                           ; preds = %modify_rc.i759, %Then.i.i.i.i760, %Then1.i.i.i.i761, %"#Attr_#dec_4.exit751"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134)
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %79)
  br label %joinpointcont35

Then.i.i.i640:                                    ; preds = %"#Attr_#dec_16.exit1021"
  %149 = add nsw i64 %get_refcount43, -1
  store i64 %149, i64* %79, align 8
  br label %joinpointcont35

joinpointcont35:                                  ; preds = %"#Attr_#dec_16.exit1021", %Then.i.i.i640, %"#Attr_#dec_4.exit763"
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store.repack, align 8
  %const_str_store.repack622 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 73, i64* %const_str_store.repack622, align 8
  %const_str_store.repack623 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 73, i64* %const_str_store.repack623, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 0)
  unreachable

then_block96:                                     ; preds = %branch2
  %index100 = sub nsw i64 0, %masked77
  %new_ptr102 = getelementptr inbounds i8, i8* %cast_to_i8_ptr79, i64 %index100
  %150 = bitcast { %str.RocStr, %str.RocStr }* %load_at_index_ptr_old106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %150, i8* noundef nonnull align 8 dereferenceable(48) %new_ptr102, i64 48, i1 false)
  %151 = bitcast %str.RocStr* %struct_field1.i643 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151)
  %152 = bitcast %str.RocStr* %struct_field.i644 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %152, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr102, i64 24, i1 false)
  %load_str_to_stack.i.i646.elt883 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i644, i64 0, i32 2
  %load_str_to_stack.i.i646.unpack884 = load i64, i64* %load_str_to_stack.i.i646.elt883, align 8
  %is_big_str.i.i648 = icmp sgt i64 %load_str_to_stack.i.i646.unpack884, 0
  br i1 %is_big_str.i.i648, label %modify_rc.i.i653, label %"#Attr_#dec_5.exit"

modify_rc.i.i653:                                 ; preds = %then_block96
  %call_builtin.i.i649 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i644) #11
  %get_rc_ptr.i.i651 = getelementptr inbounds i8, i8* %call_builtin.i.i649, i64 -8
  %153 = bitcast i8* %get_rc_ptr.i.i651 to i64*
  %154 = load i64, i64* %153, align 8
  %.not.i.i.i.i.i652 = icmp eq i64 %154, 0
  br i1 %.not.i.i.i.i.i652, label %"#Attr_#dec_5.exit", label %Then.i.i.i.i.i654

Then.i.i.i.i.i654:                                ; preds = %modify_rc.i.i653
  %155 = add i64 %154, -1
  store i64 %155, i64* %153, align 8
  %156 = icmp eq i64 %154, -9223372036854775808
  br i1 %156, label %Then1.i.i.i.i.i655, label %"#Attr_#dec_5.exit"

Then1.i.i.i.i.i655:                               ; preds = %Then.i.i.i.i.i654
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i651, i32 8) #11
  br label %"#Attr_#dec_5.exit"

"#Attr_#dec_5.exit":                              ; preds = %modify_rc.i.i653, %Then.i.i.i.i.i654, %Then1.i.i.i.i.i655, %then_block96
  %struct_field_access_record_1.i657 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %load_at_index_ptr_old106, i64 0, i32 1
  %157 = bitcast %str.RocStr* %struct_field_access_record_1.i657 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %151, i8* noundef nonnull align 8 dereferenceable(24) %157, i64 24, i1 false) #11
  %load_str_to_stack.i764.elt888 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i643, i64 0, i32 2
  %load_str_to_stack.i764.unpack889 = load i64, i64* %load_str_to_stack.i764.elt888, align 8
  %is_big_str.i766 = icmp sgt i64 %load_str_to_stack.i764.unpack889, 0
  br i1 %is_big_str.i766, label %modify_rc.i771, label %"#Attr_#dec_4.exit775"

modify_rc.i771:                                   ; preds = %"#Attr_#dec_5.exit"
  %call_builtin.i767 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i643) #11
  %get_rc_ptr.i769 = getelementptr inbounds i8, i8* %call_builtin.i767, i64 -8
  %158 = bitcast i8* %get_rc_ptr.i769 to i64*
  %159 = load i64, i64* %158, align 8
  %.not.i.i.i.i770 = icmp eq i64 %159, 0
  br i1 %.not.i.i.i.i770, label %"#Attr_#dec_4.exit775", label %Then.i.i.i.i772

Then.i.i.i.i772:                                  ; preds = %modify_rc.i771
  %160 = add i64 %159, -1
  store i64 %160, i64* %158, align 8
  %161 = icmp eq i64 %159, -9223372036854775808
  br i1 %161, label %Then1.i.i.i.i773, label %"#Attr_#dec_4.exit775"

Then1.i.i.i.i773:                                 ; preds = %Then.i.i.i.i772
  tail call void @roc_dealloc(i8* %get_rc_ptr.i769, i32 8) #11
  br label %"#Attr_#dec_4.exit775"

"#Attr_#dec_4.exit775":                           ; preds = %modify_rc.i771, %Then.i.i.i.i772, %Then1.i.i.i.i773, %"#Attr_#dec_5.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152)
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %81)
  br label %joinpointcont85

then121:                                          ; preds = %branch2
  %load_str_to_stack.i658.elt878 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_at_index_ptr_old84, i64 0, i32 2
  %load_str_to_stack.i658.unpack879 = load i64, i64* %load_str_to_stack.i658.elt878, align 8
  %is_big_str.i660 = icmp sgt i64 %load_str_to_stack.i658.unpack879, 0
  br i1 %is_big_str.i660, label %modify_rc.i665, label %"#Attr_#inc_4.exit667"

modify_rc.i665:                                   ; preds = %then121
  %call_builtin.i661 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_at_index_ptr_old84) #11
  %get_rc_ptr.i663 = getelementptr inbounds i8, i8* %call_builtin.i661, i64 -8
  %162 = bitcast i8* %get_rc_ptr.i663 to i64*
  %163 = load i64, i64* %162, align 8
  %.not.i.i664 = icmp eq i64 %163, 0
  br i1 %.not.i.i664, label %"#Attr_#inc_4.exit667", label %Then.i.i666

Then.i.i666:                                      ; preds = %modify_rc.i665
  %164 = add nsw i64 %163, 1
  store i64 %164, i64* %162, align 8
  %.pre = load i64, i64* %81, align 8
  br label %"#Attr_#inc_4.exit667"

"#Attr_#inc_4.exit667":                           ; preds = %then121, %modify_rc.i665, %Then.i.i666
  %165 = phi i64 [ %get_refcount93, %then121 ], [ %get_refcount93, %modify_rc.i665 ], [ %.pre, %Then.i.i666 ]
  %.not.i.i.i668 = icmp eq i64 %165, 0
  br i1 %.not.i.i.i668, label %joinpointcont85, label %Then.i.i.i669

Then.i.i.i669:                                    ; preds = %"#Attr_#inc_4.exit667"
  %166 = add i64 %165, -1
  store i64 %166, i64* %81, align 8
  %167 = icmp eq i64 %165, -9223372036854775808
  br i1 %167, label %Then1.i.i.i670, label %joinpointcont85

Then1.i.i.i670:                                   ; preds = %Then.i.i.i669
  tail call void @roc_dealloc(i8* %get_rc_ptr92, i32 8) #11
  br label %joinpointcont85

joinpointcont85:                                  ; preds = %Then1.i.i.i670, %Then.i.i.i669, %"#Attr_#inc_4.exit667", %"#Attr_#dec_4.exit775"
  %168 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %168)
  %169 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %169)
  %struct_field.elt.i1097 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1098 = load i8*, i8** %struct_field.elt.i1097, align 8
  %struct_field.elt1.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack2.i = load i64, i64* %struct_field.elt1.i, align 8
  %struct_field.elt3.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack4.i = load i64, i64* %struct_field.elt3.i, align 8
  %170 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1096 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #11
  %"cap > 0.not.i.i1099" = icmp eq i64 %struct_field.unpack4.i, 0
  br i1 %"cap > 0.not.i.i1099", label %"#Attr_#inc_17.exit.i", label %modification_list_block.i.i1102

modification_list_block.i.i1102:                  ; preds = %joinpointcont85
  %cast_basic_basic.i.i1100 = bitcast i8* %struct_field.unpack.i1098 to %str.RocStr*
  %bounds_check.not.i.i1101 = icmp eq i64 %struct_field.unpack2.i, 0
  br i1 %bounds_check.not.i.i1101, label %after_loop.i.i1114, label %loop.preheader.i.i1103

loop.preheader.i.i1103:                           ; preds = %modification_list_block.i.i1102
  %load_str_to_stack.i.elt7.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1096, i64 0, i32 2
  br label %loop.i.i1107

loop.i.i1107:                                     ; preds = %"#Attr_#inc_4.exit.i.i", %loop.preheader.i.i1103
  %next_index10.i.i = phi i64 [ 0, %loop.preheader.i.i1103 ], [ %next_index.i.i1104, %"#Attr_#inc_4.exit.i.i" ]
  %next_index.i.i1104 = add nuw i64 %next_index10.i.i, 1
  %load_index.i.i1105 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1100, i64 %next_index10.i.i
  %171 = bitcast %str.RocStr* %load_index.i.i1105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %170, i8* noundef nonnull align 8 dereferenceable(24) %171, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i = load i64, i64* %load_str_to_stack.i.elt7.i.i, align 8
  %is_big_str.i.i.i1106 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i, 0
  br i1 %is_big_str.i.i.i1106, label %modify_rc.i.i.i1109, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i1109:                              ; preds = %loop.i.i1107
  %call_builtin.i.i.i1108 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1096) #11
  %get_rc_ptr.i.i33.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i1108, i64 -8
  %172 = bitcast i8* %get_rc_ptr.i.i33.i to i64*
  %173 = load i64, i64* %172, align 8
  %.not.i.i2.i.i = icmp eq i64 %173, 0
  br i1 %.not.i.i2.i.i, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i34.i

Then.i.i.i34.i:                                   ; preds = %modify_rc.i.i.i1109
  %174 = add nsw i64 %173, 1
  store i64 %174, i64* %172, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i34.i, %modify_rc.i.i.i1109, %loop.i.i1107
  %exitcond.not.i1110 = icmp eq i64 %next_index.i.i1104, %struct_field.unpack2.i
  br i1 %exitcond.not.i1110, label %after_loop.i.i1114, label %loop.i.i1107

after_loop.i.i1114:                               ; preds = %"#Attr_#inc_4.exit.i.i", %modification_list_block.i.i1102
  %175 = ptrtoint i8* %struct_field.unpack.i1098 to i64
  %176 = shl i64 %struct_field.unpack4.i, 1
  %.not.i.i.i35.i = icmp slt i64 %struct_field.unpack4.i, 0
  %177 = select i1 %.not.i.i.i35.i, i64 %176, i64 %175
  %as_usize_ptr.i.i1111 = inttoptr i64 %177 to i64*
  %get_rc_ptr.i.i1112 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1111, i64 -1
  %178 = load i64, i64* %get_rc_ptr.i.i1112, align 8
  %.not.i.i.i1113 = icmp eq i64 %178, 0
  br i1 %.not.i.i.i1113, label %"#Attr_#inc_17.exit.i", label %Then.i.i.i1115

Then.i.i.i1115:                                   ; preds = %after_loop.i.i1114
  %179 = add nsw i64 %178, 1
  store i64 %179, i64* %get_rc_ptr.i.i1112, align 8
  br label %"#Attr_#inc_17.exit.i"

"#Attr_#inc_17.exit.i":                           ; preds = %Then.i.i.i1115, %after_loop.i.i1114, %joinpointcont85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #11
  %struct_field1.sroa.237.0..sroa_idx38.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1116 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1117 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i, align 8
  %"cap > 0.i.i.not.i1118" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i1118", label %"#Attr_#inc_9.exit.i.i", label %modification_list_block.i.i.i1125

modification_list_block.i.i.i1125:                ; preds = %"#Attr_#inc_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i1119 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1120 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1119, align 8
  %180 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1120 to i64
  %181 = shl i64 %struct_field1.sroa.237.0.copyload.i, 1
  %.not.i.i.i.i.i1121 = icmp slt i64 %struct_field1.sroa.237.0.copyload.i, 0
  %182 = select i1 %.not.i.i.i.i.i1121, i64 %181, i64 %180
  %as_usize_ptr.i.i.i1122 = inttoptr i64 %182 to i64*
  %get_rc_ptr.i.i.i1123 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1122, i64 -1
  %183 = load i64, i64* %get_rc_ptr.i.i.i1123, align 8
  %.not.i.i.i.i1124 = icmp eq i64 %183, 0
  br i1 %.not.i.i.i.i1124, label %"#Attr_#inc_9.exit.i.i", label %Then.i.i.i.i1126

Then.i.i.i.i1126:                                 ; preds = %modification_list_block.i.i.i1125
  %184 = add nsw i64 %183, 1
  store i64 %184, i64* %get_rc_ptr.i.i.i1123, align 8
  br label %"#Attr_#inc_9.exit.i.i"

"#Attr_#inc_9.exit.i.i":                          ; preds = %Then.i.i.i.i1126, %modification_list_block.i.i.i1125, %"#Attr_#inc_17.exit.i"
  %"cap > 0.i18.i.not.i" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i, 0
  br i1 %"cap > 0.i18.i.not.i", label %"#Attr_#inc_10.exit.i.i", label %modification_list_block.i27.i.i

modification_list_block.i27.i.i:                  ; preds = %"#Attr_#inc_9.exit.i.i"
  %185 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1116 to i64
  %186 = shl i64 %struct_field1.sroa.441.0.copyload.i, 1
  %.not.i.i.i23.i.i = icmp slt i64 %struct_field1.sroa.441.0.copyload.i, 0
  %187 = select i1 %.not.i.i.i23.i.i, i64 %186, i64 %185
  %as_usize_ptr.i24.i.i = inttoptr i64 %187 to i64*
  %get_rc_ptr.i25.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i, i64 -1
  %188 = load i64, i64* %get_rc_ptr.i25.i.i, align 8
  %.not.i.i26.i.i = icmp eq i64 %188, 0
  br i1 %.not.i.i26.i.i, label %"#Attr_#inc_10.exit.i.i", label %Then.i.i28.i.i

Then.i.i28.i.i:                                   ; preds = %modification_list_block.i27.i.i
  %189 = add nsw i64 %188, 1
  store i64 %189, i64* %get_rc_ptr.i25.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i"

"#Attr_#inc_10.exit.i.i":                         ; preds = %Then.i.i28.i.i, %modification_list_block.i27.i.i, %"#Attr_#inc_9.exit.i.i"
  %"cap > 0.i5.i.not.i" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i, 0
  br i1 %"cap > 0.i5.i.not.i", label %"#Attr_#inc_16.exit", label %modification_list_block.i14.i.i

modification_list_block.i14.i.i:                  ; preds = %"#Attr_#inc_10.exit.i.i"
  %190 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1117 to i64
  %191 = shl i64 %struct_field1.sroa.645.0.copyload.i, 1
  %.not.i.i.i10.i.i = icmp slt i64 %struct_field1.sroa.645.0.copyload.i, 0
  %192 = select i1 %.not.i.i.i10.i.i, i64 %191, i64 %190
  %as_usize_ptr.i11.i.i = inttoptr i64 %192 to i64*
  %get_rc_ptr.i12.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i, i64 -1
  %193 = load i64, i64* %get_rc_ptr.i12.i.i, align 8
  %.not.i.i13.i.i = icmp eq i64 %193, 0
  br i1 %.not.i.i13.i.i, label %"#Attr_#inc_16.exit", label %Then.i.i15.i.i

Then.i.i15.i.i:                                   ; preds = %modification_list_block.i14.i.i
  %194 = add nsw i64 %193, 1
  store i64 %194, i64* %get_rc_ptr.i12.i.i, align 8
  br label %"#Attr_#inc_16.exit"

"#Attr_#inc_16.exit":                             ; preds = %"#Attr_#inc_10.exit.i.i", %modification_list_block.i14.i.i, %Then.i.i15.i.i
  call fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i) #11
  call fastcc void @Result_mapErr_6aefbf48562dfc8b90f8fa88c36a09d50313f33e538dd1c4b3a5ea41197cc31({ [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i, %str.RocStr* nonnull %load_at_index_ptr_old84, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i) #11
  call fastcc void @Result_map_951cd0dfb35f58212872b90ac2c97b3bf693b7e7df281541d7cc9c13a({ [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %168)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %169)
  call fastcc void @Result_map_8aa359bd749b8effde17d95d39df5dd5cfceb675b455e8288a857540333415({ [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value126)
  %195 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value126 to i8*
  br label %common.ret

then_block147:                                    ; preds = %branch3
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %86)
  br label %joinpointcont136

then163:                                          ; preds = %branch3
  %"cap > 0.not.i" = icmp eq i64 %load_at_index_ptr_old135.unpack329, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#inc_19.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %then163
  %cast_basic_basic.i = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %196 = bitcast %str.RocStr* %struct_field.i.i1127 to i8*
  %struct_field.i.repack.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 0
  %struct_field.i.repack13.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 1
  %struct_field.i.repack15.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1127, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#inc_14.exit.i", %loop.preheader.i
  %index.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#inc_14.exit.i" ]
  %next_index.i = add nuw i64 %index.i, 1
  %incrementing_element_loop_load.unpack.elt.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i, align 8
  %incrementing_element_loop_load.unpack.elt8.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i, align 8
  %incrementing_element_loop_load.unpack.elt10.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i, align 8
  %incrementing_element_loop_load.elt5.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i, i64 %index.i, i32 1
  %incrementing_element_loop_load.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i, i8** %struct_field.i.repack.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i, i64* %struct_field.i.repack13.i, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i, i64* %struct_field.i.repack15.i, align 8
  %is_big_str.i.i.i1128 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i, 0
  br i1 %is_big_str.i.i.i1128, label %modify_rc.i.i.i1132, label %"#Attr_#inc_4.exit.i.i1134"

modify_rc.i.i.i1132:                              ; preds = %loop.i
  %call_builtin.i.i.i1129 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1127) #11
  %get_rc_ptr.i.i.i1130 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1129, i64 -8
  %197 = bitcast i8* %get_rc_ptr.i.i.i1130 to i64*
  %198 = load i64, i64* %197, align 8
  %.not.i.i.i.i1131 = icmp eq i64 %198, 0
  br i1 %.not.i.i.i.i1131, label %"#Attr_#inc_4.exit.i.i1134", label %Then.i.i.i.i1133

Then.i.i.i.i1133:                                 ; preds = %modify_rc.i.i.i1132
  %199 = add nsw i64 %198, 1
  store i64 %199, i64* %197, align 8
  br label %"#Attr_#inc_4.exit.i.i1134"

"#Attr_#inc_4.exit.i.i1134":                      ; preds = %Then.i.i.i.i1133, %modify_rc.i.i.i1132, %loop.i
  %to_int1.i.i.i = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i64
  %masked.i.i.i = and i64 %to_int1.i.i.i, 7
  %cast_to_i8_ptr.i.i.i = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i to i8*
  %get_rc_ptr.i2.i.idx.i = sub nuw nsw i64 -8, %masked.i.i.i
  %get_rc_ptr.i2.i.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i, i64 %get_rc_ptr.i2.i.idx.i
  %200 = bitcast i8* %get_rc_ptr.i2.i.i to i64*
  %201 = load i64, i64* %200, align 8
  %.not.i.i3.i.i = icmp eq i64 %201, 0
  br i1 %.not.i.i3.i.i, label %"#Attr_#inc_14.exit.i", label %Then.i.i4.i.i

Then.i.i4.i.i:                                    ; preds = %"#Attr_#inc_4.exit.i.i1134"
  %202 = add nsw i64 %201, 1
  store i64 %202, i64* %200, align 8
  br label %"#Attr_#inc_14.exit.i"

"#Attr_#inc_14.exit.i":                           ; preds = %Then.i.i4.i.i, %"#Attr_#inc_4.exit.i.i1134"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #11
  %exitcond1440.not = icmp eq i64 %next_index.i, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond1440.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#inc_14.exit.i", %modification_list_block.i
  %203 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %204 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1135 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %205 = select i1 %.not.i.i.i1135, i64 %204, i64 %203
  %as_usize_ptr.i = inttoptr i64 %205 to i64*
  %get_rc_ptr.i1136 = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %206 = load i64, i64* %get_rc_ptr.i1136, align 8
  %.not.i.i1137 = icmp eq i64 %206, 0
  br i1 %.not.i.i1137, label %"#Attr_#inc_19.exitthread-pre-split", label %Then.i.i1138

Then.i.i1138:                                     ; preds = %after_loop.i
  %207 = add nsw i64 %206, 1
  store i64 %207, i64* %get_rc_ptr.i1136, align 8
  br label %"#Attr_#inc_19.exitthread-pre-split"

"#Attr_#inc_19.exitthread-pre-split":             ; preds = %Then.i.i1138, %after_loop.i
  %.pr = load i64, i64* %86, align 8
  br label %"#Attr_#inc_19.exit"

"#Attr_#inc_19.exit":                             ; preds = %"#Attr_#inc_19.exitthread-pre-split", %then163
  %208 = phi i64 [ %.pr, %"#Attr_#inc_19.exitthread-pre-split" ], [ %get_refcount144, %then163 ]
  %.not.i.i.i672 = icmp eq i64 %208, 0
  br i1 %.not.i.i.i672, label %joinpointcont136, label %Then.i.i.i673

Then.i.i.i673:                                    ; preds = %"#Attr_#inc_19.exit"
  %209 = add i64 %208, -1
  store i64 %209, i64* %86, align 8
  %210 = icmp eq i64 %208, -9223372036854775808
  br i1 %210, label %Then1.i.i.i674, label %joinpointcont136

Then1.i.i.i674:                                   ; preds = %Then.i.i.i673
  tail call void @roc_dealloc(i8* %get_rc_ptr143, i32 8) #11
  br label %joinpointcont136

joinpointcont136:                                 ; preds = %Then1.i.i.i674, %Then.i.i.i673, %"#Attr_#inc_19.exit", %then_block147
  %struct_field.elt.i1140 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 0
  %struct_field.unpack.i1141 = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field.elt1.i1142 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 1
  %struct_field.unpack2.i1143 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field.elt3.i1144 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 0, i32 2
  %struct_field.unpack4.i1145 = load i64, i64* %struct_field.elt3.i1144, align 8
  %211 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1139 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #11
  %"cap > 0.not.i.i1146" = icmp eq i64 %struct_field.unpack4.i1145, 0
  br i1 %"cap > 0.not.i.i1146", label %"#Attr_#inc_17.exit.i1182", label %modification_list_block.i.i1149

modification_list_block.i.i1149:                  ; preds = %joinpointcont136
  %cast_basic_basic.i.i1147 = bitcast i8* %struct_field.unpack.i1141 to %str.RocStr*
  %bounds_check.not.i.i1148 = icmp eq i64 %struct_field.unpack2.i1143, 0
  br i1 %bounds_check.not.i.i1148, label %after_loop.i.i1169, label %loop.preheader.i.i1151

loop.preheader.i.i1151:                           ; preds = %modification_list_block.i.i1149
  %load_str_to_stack.i.elt7.i.i1150 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1139, i64 0, i32 2
  br label %loop.i.i1157

loop.i.i1157:                                     ; preds = %"#Attr_#inc_4.exit.i.i1164", %loop.preheader.i.i1151
  %next_index10.i.i1152 = phi i64 [ 0, %loop.preheader.i.i1151 ], [ %next_index.i.i1153, %"#Attr_#inc_4.exit.i.i1164" ]
  %next_index.i.i1153 = add nuw i64 %next_index10.i.i1152, 1
  %load_index.i.i1154 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1147, i64 %next_index10.i.i1152
  %212 = bitcast %str.RocStr* %load_index.i.i1154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %211, i8* noundef nonnull align 8 dereferenceable(24) %212, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i1155 = load i64, i64* %load_str_to_stack.i.elt7.i.i1150, align 8
  %is_big_str.i.i.i1156 = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i1155, 0
  br i1 %is_big_str.i.i.i1156, label %modify_rc.i.i.i1161, label %"#Attr_#inc_4.exit.i.i1164"

modify_rc.i.i.i1161:                              ; preds = %loop.i.i1157
  %call_builtin.i.i.i1158 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1139) #11
  %get_rc_ptr.i.i33.i1159 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1158, i64 -8
  %213 = bitcast i8* %get_rc_ptr.i.i33.i1159 to i64*
  %214 = load i64, i64* %213, align 8
  %.not.i.i2.i.i1160 = icmp eq i64 %214, 0
  br i1 %.not.i.i2.i.i1160, label %"#Attr_#inc_4.exit.i.i1164", label %Then.i.i.i34.i1162

Then.i.i.i34.i1162:                               ; preds = %modify_rc.i.i.i1161
  %215 = add nsw i64 %214, 1
  store i64 %215, i64* %213, align 8
  br label %"#Attr_#inc_4.exit.i.i1164"

"#Attr_#inc_4.exit.i.i1164":                      ; preds = %Then.i.i.i34.i1162, %modify_rc.i.i.i1161, %loop.i.i1157
  %exitcond.not.i1163 = icmp eq i64 %next_index.i.i1153, %struct_field.unpack2.i1143
  br i1 %exitcond.not.i1163, label %after_loop.i.i1169, label %loop.i.i1157

after_loop.i.i1169:                               ; preds = %"#Attr_#inc_4.exit.i.i1164", %modification_list_block.i.i1149
  %216 = ptrtoint i8* %struct_field.unpack.i1141 to i64
  %217 = shl i64 %struct_field.unpack4.i1145, 1
  %.not.i.i.i35.i1165 = icmp slt i64 %struct_field.unpack4.i1145, 0
  %218 = select i1 %.not.i.i.i35.i1165, i64 %217, i64 %216
  %as_usize_ptr.i.i1166 = inttoptr i64 %218 to i64*
  %get_rc_ptr.i.i1167 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1166, i64 -1
  %219 = load i64, i64* %get_rc_ptr.i.i1167, align 8
  %.not.i.i.i1168 = icmp eq i64 %219, 0
  br i1 %.not.i.i.i1168, label %"#Attr_#inc_17.exit.i1182", label %Then.i.i.i1170

Then.i.i.i1170:                                   ; preds = %after_loop.i.i1169
  %220 = add nsw i64 %219, 1
  store i64 %220, i64* %get_rc_ptr.i.i1167, align 8
  br label %"#Attr_#inc_17.exit.i1182"

"#Attr_#inc_17.exit.i1182":                       ; preds = %Then.i.i.i1170, %after_loop.i.i1169, %joinpointcont136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #11
  %struct_field1.sroa.237.0..sroa_idx38.i1171 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i1172 = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i1171, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i1173 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i1174 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i1173, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i1175 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i1176 = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i1175, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i1177 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i1178 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i1177, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i1179 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i1180 = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i1179, align 8
  %"cap > 0.i.i.not.i1181" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i1172, 0
  br i1 %"cap > 0.i.i.not.i1181", label %"#Attr_#inc_9.exit.i.i1192", label %modification_list_block.i.i.i1189

modification_list_block.i.i.i1189:                ; preds = %"#Attr_#inc_17.exit.i1182"
  %struct_field1.sroa.0.0..sroa_idx.i1183 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1184 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1183, align 8
  %221 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1184 to i64
  %222 = shl i64 %struct_field1.sroa.237.0.copyload.i1172, 1
  %.not.i.i.i.i.i1185 = icmp slt i64 %struct_field1.sroa.237.0.copyload.i1172, 0
  %223 = select i1 %.not.i.i.i.i.i1185, i64 %222, i64 %221
  %as_usize_ptr.i.i.i1186 = inttoptr i64 %223 to i64*
  %get_rc_ptr.i.i.i1187 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1186, i64 -1
  %224 = load i64, i64* %get_rc_ptr.i.i.i1187, align 8
  %.not.i.i.i.i1188 = icmp eq i64 %224, 0
  br i1 %.not.i.i.i.i1188, label %"#Attr_#inc_9.exit.i.i1192", label %Then.i.i.i.i1190

Then.i.i.i.i1190:                                 ; preds = %modification_list_block.i.i.i1189
  %225 = add nsw i64 %224, 1
  store i64 %225, i64* %get_rc_ptr.i.i.i1187, align 8
  br label %"#Attr_#inc_9.exit.i.i1192"

"#Attr_#inc_9.exit.i.i1192":                      ; preds = %Then.i.i.i.i1190, %modification_list_block.i.i.i1189, %"#Attr_#inc_17.exit.i1182"
  %"cap > 0.i18.i.not.i1191" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i1176, 0
  br i1 %"cap > 0.i18.i.not.i1191", label %"#Attr_#inc_10.exit.i.i1200", label %modification_list_block.i27.i.i1197

modification_list_block.i27.i.i1197:              ; preds = %"#Attr_#inc_9.exit.i.i1192"
  %226 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1174 to i64
  %227 = shl i64 %struct_field1.sroa.441.0.copyload.i1176, 1
  %.not.i.i.i23.i.i1193 = icmp slt i64 %struct_field1.sroa.441.0.copyload.i1176, 0
  %228 = select i1 %.not.i.i.i23.i.i1193, i64 %227, i64 %226
  %as_usize_ptr.i24.i.i1194 = inttoptr i64 %228 to i64*
  %get_rc_ptr.i25.i.i1195 = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i1194, i64 -1
  %229 = load i64, i64* %get_rc_ptr.i25.i.i1195, align 8
  %.not.i.i26.i.i1196 = icmp eq i64 %229, 0
  br i1 %.not.i.i26.i.i1196, label %"#Attr_#inc_10.exit.i.i1200", label %Then.i.i28.i.i1198

Then.i.i28.i.i1198:                               ; preds = %modification_list_block.i27.i.i1197
  %230 = add nsw i64 %229, 1
  store i64 %230, i64* %get_rc_ptr.i25.i.i1195, align 8
  br label %"#Attr_#inc_10.exit.i.i1200"

"#Attr_#inc_10.exit.i.i1200":                     ; preds = %Then.i.i28.i.i1198, %modification_list_block.i27.i.i1197, %"#Attr_#inc_9.exit.i.i1192"
  %"cap > 0.i5.i.not.i1199" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i1180, 0
  br i1 %"cap > 0.i5.i.not.i1199", label %"#Attr_#inc_16.exit1207", label %modification_list_block.i14.i.i1205

modification_list_block.i14.i.i1205:              ; preds = %"#Attr_#inc_10.exit.i.i1200"
  %231 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1178 to i64
  %232 = shl i64 %struct_field1.sroa.645.0.copyload.i1180, 1
  %.not.i.i.i10.i.i1201 = icmp slt i64 %struct_field1.sroa.645.0.copyload.i1180, 0
  %233 = select i1 %.not.i.i.i10.i.i1201, i64 %232, i64 %231
  %as_usize_ptr.i11.i.i1202 = inttoptr i64 %233 to i64*
  %get_rc_ptr.i12.i.i1203 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i1202, i64 -1
  %234 = load i64, i64* %get_rc_ptr.i12.i.i1203, align 8
  %.not.i.i13.i.i1204 = icmp eq i64 %234, 0
  br i1 %.not.i.i13.i.i1204, label %"#Attr_#inc_16.exit1207", label %Then.i.i15.i.i1206

Then.i.i15.i.i1206:                               ; preds = %modification_list_block.i14.i.i1205
  %235 = add nsw i64 %234, 1
  store i64 %235, i64* %get_rc_ptr.i12.i.i1203, align 8
  br label %"#Attr_#inc_16.exit1207"

"#Attr_#inc_16.exit1207":                         ; preds = %"#Attr_#inc_10.exit.i.i1200", %modification_list_block.i14.i.i1205, %Then.i.i15.i.i1206
  call fastcc void @Arg_nextUnmarked_2bb5ebebc6a62738ccb27ab369f3d1ae17edeacf84573068fc9e45f3fed({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %"75", { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value168)
  %tag_id_ptr169 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr169, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block171, label %else_block172

then_block171:                                    ; preds = %"#Attr_#inc_16.exit1207"
  %"cap > 0.not.i1209" = icmp eq i64 %load_at_index_ptr_old135.unpack329, 0
  br i1 %"cap > 0.not.i1209", label %"#Attr_#inc_19.exit1250", label %modification_list_block.i1212

modification_list_block.i1212:                    ; preds = %then_block171
  %cast_basic_basic.i1210 = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i1211 = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i1211, label %after_loop.i1248, label %loop.preheader.i1216

loop.preheader.i1216:                             ; preds = %modification_list_block.i1212
  %236 = bitcast %str.RocStr* %struct_field.i.i1208 to i8*
  %struct_field.i.repack.i1213 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 0
  %struct_field.i.repack13.i1214 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 1
  %struct_field.i.repack15.i1215 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1208, i64 0, i32 2
  br label %loop.i1228

loop.i1228:                                       ; preds = %"#Attr_#inc_14.exit.i1243", %loop.preheader.i1216
  %index.i1217 = phi i64 [ 0, %loop.preheader.i1216 ], [ %next_index.i1218, %"#Attr_#inc_14.exit.i1243" ]
  %next_index.i1218 = add nuw i64 %index.i1217, 1
  %incrementing_element_loop_load.unpack.elt.i1219 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i1220 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i1219, align 8
  %incrementing_element_loop_load.unpack.elt8.i1221 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack9.i1222 = load i64, i64* %incrementing_element_loop_load.unpack.elt8.i1221, align 8
  %incrementing_element_loop_load.unpack.elt10.i1223 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack11.i1224 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i1223, align 8
  %incrementing_element_loop_load.elt5.i1225 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1210, i64 %index.i1217, i32 1
  %incrementing_element_loop_load.unpack6.i1226 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt5.i1225, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i1220, i8** %struct_field.i.repack.i1213, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack9.i1222, i64* %struct_field.i.repack13.i1214, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i1224, i64* %struct_field.i.repack15.i1215, align 8
  %is_big_str.i.i.i1227 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack11.i1224, 0
  br i1 %is_big_str.i.i.i1227, label %modify_rc.i.i.i1232, label %"#Attr_#inc_4.exit.i.i1240"

modify_rc.i.i.i1232:                              ; preds = %loop.i1228
  %call_builtin.i.i.i1229 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1208) #11
  %get_rc_ptr.i.i.i1230 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1229, i64 -8
  %237 = bitcast i8* %get_rc_ptr.i.i.i1230 to i64*
  %238 = load i64, i64* %237, align 8
  %.not.i.i.i.i1231 = icmp eq i64 %238, 0
  br i1 %.not.i.i.i.i1231, label %"#Attr_#inc_4.exit.i.i1240", label %Then.i.i.i.i1233

Then.i.i.i.i1233:                                 ; preds = %modify_rc.i.i.i1232
  %239 = add nsw i64 %238, 1
  store i64 %239, i64* %237, align 8
  br label %"#Attr_#inc_4.exit.i.i1240"

"#Attr_#inc_4.exit.i.i1240":                      ; preds = %Then.i.i.i.i1233, %modify_rc.i.i.i1232, %loop.i1228
  %to_int1.i.i.i1234 = ptrtoint { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i1226 to i64
  %masked.i.i.i1235 = and i64 %to_int1.i.i.i1234, 7
  %cast_to_i8_ptr.i.i.i1236 = bitcast { [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack6.i1226 to i8*
  %get_rc_ptr.i2.i.idx.i1237 = sub nuw nsw i64 -8, %masked.i.i.i1235
  %get_rc_ptr.i2.i.i1238 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i1236, i64 %get_rc_ptr.i2.i.idx.i1237
  %240 = bitcast i8* %get_rc_ptr.i2.i.i1238 to i64*
  %241 = load i64, i64* %240, align 8
  %.not.i.i3.i.i1239 = icmp eq i64 %241, 0
  br i1 %.not.i.i3.i.i1239, label %"#Attr_#inc_14.exit.i1243", label %Then.i.i4.i.i1241

Then.i.i4.i.i1241:                                ; preds = %"#Attr_#inc_4.exit.i.i1240"
  %242 = add nsw i64 %241, 1
  store i64 %242, i64* %240, align 8
  br label %"#Attr_#inc_14.exit.i1243"

"#Attr_#inc_14.exit.i1243":                       ; preds = %Then.i.i4.i.i1241, %"#Attr_#inc_4.exit.i.i1240"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #11
  %exitcond1439.not = icmp eq i64 %next_index.i1218, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond1439.not, label %after_loop.i1248, label %loop.i1228

after_loop.i1248:                                 ; preds = %"#Attr_#inc_14.exit.i1243", %modification_list_block.i1212
  %243 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %244 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1244 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %245 = select i1 %.not.i.i.i1244, i64 %244, i64 %243
  %as_usize_ptr.i1245 = inttoptr i64 %245 to i64*
  %get_rc_ptr.i1246 = getelementptr inbounds i64, i64* %as_usize_ptr.i1245, i64 -1
  %246 = load i64, i64* %get_rc_ptr.i1246, align 8
  %.not.i.i1247 = icmp eq i64 %246, 0
  br i1 %.not.i.i1247, label %"#Attr_#inc_19.exit1250", label %Then.i.i1249

Then.i.i1249:                                     ; preds = %after_loop.i1248
  %247 = add nsw i64 %246, 1
  store i64 %247, i64* %get_rc_ptr.i1246, align 8
  br label %"#Attr_#inc_19.exit1250"

"#Attr_#inc_19.exit1250":                         ; preds = %then_block171, %after_loop.i1248, %Then.i.i1249
  %load_element.elt = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 0
  %load_element.unpack = load i64, i64* %load_element.elt, align 8
  %load_element.elt395 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 1
  %load_element.unpack396.elt = bitcast i64* %load_element.elt395 to i8**
  %load_element.unpack396.unpack = load i8*, i8** %load_element.unpack396.elt, align 8
  %248 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 2
  %load_element.unpack396.unpack399 = load i64, i64* %248, align 8
  %249 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value168, i64 0, i32 1, i64 3
  %load_element.unpack396.unpack401 = load i64, i64* %249, align 8
  %struct_field.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 0
  store i8* %load_element.unpack396.unpack, i8** %struct_field.repack, align 8
  %struct_field.repack403 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %struct_field.repack403, align 8
  %struct_field.repack405 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %struct_field.repack405, align 8
  %is_big_str.i678 = icmp sgt i64 %load_element.unpack396.unpack401, 0
  br i1 %is_big_str.i678, label %modify_rc.i683, label %"#Attr_#inc_4.exit685"

modify_rc.i683:                                   ; preds = %"#Attr_#inc_19.exit1250"
  %call_builtin.i679 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i681 = getelementptr inbounds i8, i8* %call_builtin.i679, i64 -8
  %250 = bitcast i8* %get_rc_ptr.i681 to i64*
  %251 = load i64, i64* %250, align 8
  %.not.i.i682 = icmp eq i64 %251, 0
  br i1 %.not.i.i682, label %"#Attr_#inc_4.exit685", label %Then.i.i684

Then.i.i684:                                      ; preds = %modify_rc.i683
  %252 = add nsw i64 %251, 1
  store i64 %252, i64* %250, align 8
  br label %"#Attr_#inc_4.exit685"

"#Attr_#inc_4.exit685":                           ; preds = %"#Attr_#inc_19.exit1250", %modify_rc.i683, %Then.i.i684
  %struct_field175.unpack = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field175.unpack408 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field175.unpack410 = load i64, i64* %struct_field.elt3.i1144, align 8
  %struct_field_access_record_1176 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1
  %253 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field177 to i8*
  %254 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_field_access_record_1176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %253, i8* noundef nonnull align 8 dereferenceable(80) %254, i64 80, i1 false)
  %255 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %255)
  call fastcc void @Dict_insert_7021a1267c4dcce759ff3c69d1f7a94cad92b25126398dfd7d4f2ac85ef9cc({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_field177, i64 %load_element.unpack, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value.i686) #11
  %result_value178.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 0
  %result_value178.sroa.0.0.copyload = load i8*, i8** %result_value178.sroa.0.0..sroa_idx, align 8
  %result_value178.sroa.2.0..sroa_idx1391 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 1
  %result_value178.sroa.2.0.copyload = load i64, i64* %result_value178.sroa.2.0..sroa_idx1391, align 8
  %result_value178.sroa.3.0..sroa_idx1392 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 0, i32 2
  %result_value178.sroa.3.0.copyload = load i64, i64* %result_value178.sroa.3.0..sroa_idx1392, align 8
  %result_value178.sroa.4.0..sroa_idx1393 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 0
  %result_value178.sroa.4.0.copyload = load i8*, i8** %result_value178.sroa.4.0..sroa_idx1393, align 8
  %result_value178.sroa.5.0..sroa_idx1394 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 1
  %result_value178.sroa.5.0.copyload = load i64, i64* %result_value178.sroa.5.0..sroa_idx1394, align 8
  %result_value178.sroa.6.0..sroa_idx1395 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 1, i32 2
  %result_value178.sroa.6.0.copyload = load i64, i64* %result_value178.sroa.6.0..sroa_idx1395, align 8
  %result_value178.sroa.7.0..sroa_idx1396 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 0
  %result_value178.sroa.7.0.copyload = load i8*, i8** %result_value178.sroa.7.0..sroa_idx1396, align 8
  %result_value178.sroa.8.0..sroa_idx1397 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 1
  %result_value178.sroa.8.0.copyload = load i64, i64* %result_value178.sroa.8.0..sroa_idx1397, align 8
  %result_value178.sroa.9.0..sroa_idx1398 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 2, i32 2
  %result_value178.sroa.9.0.copyload = load i64, i64* %result_value178.sroa.9.0..sroa_idx1398, align 8
  %result_value178.sroa.10.0..sroa_idx1399 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %result_value.i686, i64 0, i32 3
  %result_value178.sroa.10.0.copyload = load i64, i64* %result_value178.sroa.10.0..sroa_idx1399, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %255)
  %tag_alloca182 = alloca { [0 x i64], [8 x i64], i8, [7 x i8] }, align 8
  %tag_id_ptr185 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %tag_alloca182, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr185, align 8
  %struct_alloca190 = alloca { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, align 8
  %struct_alloca190.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 0
  store i8* %load_element.unpack396.unpack, i8** %struct_alloca190.repack.repack, align 8
  %struct_alloca190.repack.repack495 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %struct_alloca190.repack.repack495, align 8
  %struct_alloca190.repack.repack497 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 0, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %struct_alloca190.repack.repack497, align 8
  %struct_alloca190.repack493.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 0
  store i8* %struct_field175.unpack, i8** %struct_alloca190.repack493.repack.repack, align 8
  %struct_alloca190.repack493.repack.repack501 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 1
  store i64 %struct_field175.unpack408, i64* %struct_alloca190.repack493.repack.repack501, align 8
  %struct_alloca190.repack493.repack.repack503 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 0, i32 2
  store i64 %struct_field175.unpack410, i64* %struct_alloca190.repack493.repack.repack503, align 8
  %struct_alloca190.repack493.repack499.repack.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 0
  store i8* %result_value178.sroa.0.0.copyload, i8** %struct_alloca190.repack493.repack499.repack.repack, align 8
  %struct_alloca190.repack493.repack499.repack.repack511 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 1
  store i64 %result_value178.sroa.2.0.copyload, i64* %struct_alloca190.repack493.repack499.repack.repack511, align 8
  %struct_alloca190.repack493.repack499.repack.repack513 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 0, i32 2
  store i64 %result_value178.sroa.3.0.copyload, i64* %struct_alloca190.repack493.repack499.repack.repack513, align 8
  %struct_alloca190.repack493.repack499.repack505.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 0
  store i8* %result_value178.sroa.4.0.copyload, i8** %struct_alloca190.repack493.repack499.repack505.repack, align 8
  %struct_alloca190.repack493.repack499.repack505.repack515 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 1
  store i64 %result_value178.sroa.5.0.copyload, i64* %struct_alloca190.repack493.repack499.repack505.repack515, align 8
  %struct_alloca190.repack493.repack499.repack505.repack517 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 1, i32 2
  store i64 %result_value178.sroa.6.0.copyload, i64* %struct_alloca190.repack493.repack499.repack505.repack517, align 8
  %struct_alloca190.repack493.repack499.repack507.repack = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 0
  store i8* %result_value178.sroa.7.0.copyload, i8** %struct_alloca190.repack493.repack499.repack507.repack, align 8
  %struct_alloca190.repack493.repack499.repack507.repack519 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 1
  store i64 %result_value178.sroa.8.0.copyload, i64* %struct_alloca190.repack493.repack499.repack507.repack519, align 8
  %struct_alloca190.repack493.repack499.repack507.repack521 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 2, i32 2
  store i64 %result_value178.sroa.9.0.copyload, i64* %struct_alloca190.repack493.repack499.repack507.repack521, align 8
  %struct_alloca190.repack493.repack499.repack509 = getelementptr inbounds { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* %struct_alloca190, i64 0, i32 1, i32 1, i32 3
  store i64 %result_value178.sroa.10.0.copyload, i64* %struct_alloca190.repack493.repack499.repack509, align 8
  %result_value.i687.sroa.0.0.sroa_cast1416 = bitcast [9 x i64]* %result_value.i687.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %result_value.i687.sroa.0.0.sroa_cast1416)
  %256 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %256) #11
  call fastcc void @List_iterHelp_b0bea8510982dc41afa71df5c1304ce6de87ac527e5dcd9b88c4cbf7e42f(%list.RocList %load_at_index_ptr_old135330, { [0 x i64], [8 x i64], i8, [7 x i8] }* nonnull %tag_alloca182, { %str.RocStr, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } } }* nonnull %struct_alloca190, i64 %load_at_index_ptr_old135.unpack327, { [0 x i64], [9 x i64], i8, [7 x i8] }* nonnull %result_value.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %result_value.i687.sroa.0.0.sroa_cast1416, i8* noundef nonnull align 8 dereferenceable(72) %256, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %256) #11
  %result_value.i687.sroa.0.0..sroa_cast1410 = bitcast { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(72) %result_value.i687.sroa.0.0..sroa_cast1410, i8* noundef nonnull align 8 dereferenceable(72) %result_value.i687.sroa.0.0.sroa_cast1416, i64 72, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %result_value.i687.sroa.0.0.sroa_cast1416)
  %tag_id_ptr192 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191, i64 0, i32 2
  %load_tag_id193 = load i8, i8* %tag_id_ptr192, align 8
  %eq_u8194 = icmp eq i8 %load_tag_id193, 1
  br i1 %eq_u8194, label %then_block196, label %else_block197

else_block172:                                    ; preds = %"#Attr_#inc_16.exit1207"
  %struct_field.unpack.i1253 = load i8*, i8** %struct_field.elt.i1140, align 8
  %struct_field.unpack21.i1255 = load i64, i64* %struct_field.elt1.i1142, align 8
  %struct_field.unpack23.i1257 = load i64, i64* %struct_field.elt3.i1144, align 8
  %257 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i1251 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #11
  %"cap > 0.not.i.i1258" = icmp eq i64 %struct_field.unpack23.i1257, 0
  br i1 %"cap > 0.not.i.i1258", label %"#Attr_#dec_17.exit.i1296", label %modification_list_block.i52.i1261

modification_list_block.i52.i1261:                ; preds = %else_block172
  %cast_basic_basic.i.i1259 = bitcast i8* %struct_field.unpack.i1253 to %str.RocStr*
  %bounds_check.not.i.i1260 = icmp eq i64 %struct_field.unpack21.i1255, 0
  br i1 %bounds_check.not.i.i1260, label %after_loop.i.i1282, label %loop.preheader.i.i1263

loop.preheader.i.i1263:                           ; preds = %modification_list_block.i52.i1261
  %load_str_to_stack.i.elt9.i.i1262 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i1251, i64 0, i32 2
  br label %loop.i.i1269

loop.i.i1269:                                     ; preds = %"#Attr_#dec_4.exit.i.i1277", %loop.preheader.i.i1263
  %next_index12.i.i1264 = phi i64 [ 0, %loop.preheader.i.i1263 ], [ %next_index.i.i1265, %"#Attr_#dec_4.exit.i.i1277" ]
  %next_index.i.i1265 = add nuw i64 %next_index12.i.i1264, 1
  %load_index.i.i1266 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i1259, i64 %next_index12.i.i1264
  %258 = bitcast %str.RocStr* %load_index.i.i1266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %257, i8* noundef nonnull align 8 dereferenceable(24) %258, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i.i1267 = load i64, i64* %load_str_to_stack.i.elt9.i.i1262, align 8
  %is_big_str.i.i.i1268 = icmp sgt i64 %load_str_to_stack.i.unpack10.i.i1267, 0
  br i1 %is_big_str.i.i.i1268, label %modify_rc.i.i.i1273, label %"#Attr_#dec_4.exit.i.i1277"

modify_rc.i.i.i1273:                              ; preds = %loop.i.i1269
  %call_builtin.i.i.i1270 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i1251) #11
  %get_rc_ptr.i.i53.i1271 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1270, i64 -8
  %259 = bitcast i8* %get_rc_ptr.i.i53.i1271 to i64*
  %260 = load i64, i64* %259, align 8
  %.not.i.i.i.i.i54.i1272 = icmp eq i64 %260, 0
  br i1 %.not.i.i.i.i.i54.i1272, label %"#Attr_#dec_4.exit.i.i1277", label %Then.i.i.i.i.i55.i1274

Then.i.i.i.i.i55.i1274:                           ; preds = %modify_rc.i.i.i1273
  %261 = add i64 %260, -1
  store i64 %261, i64* %259, align 8
  %262 = icmp eq i64 %260, -9223372036854775808
  br i1 %262, label %Then1.i.i.i.i.i56.i1275, label %"#Attr_#dec_4.exit.i.i1277"

Then1.i.i.i.i.i56.i1275:                          ; preds = %Then.i.i.i.i.i55.i1274
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i1271, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i1277"

"#Attr_#dec_4.exit.i.i1277":                      ; preds = %Then1.i.i.i.i.i56.i1275, %Then.i.i.i.i.i55.i1274, %modify_rc.i.i.i1273, %loop.i.i1269
  %exitcond.not.i1276 = icmp eq i64 %next_index.i.i1265, %struct_field.unpack21.i1255
  br i1 %exitcond.not.i1276, label %after_loop.i.i1282, label %loop.i.i1269

after_loop.i.i1282:                               ; preds = %"#Attr_#dec_4.exit.i.i1277", %modification_list_block.i52.i1261
  %263 = ptrtoint i8* %struct_field.unpack.i1253 to i64
  %264 = shl i64 %struct_field.unpack23.i1257, 1
  %.not.i.i.i57.i1278 = icmp slt i64 %struct_field.unpack23.i1257, 0
  %265 = select i1 %.not.i.i.i57.i1278, i64 %264, i64 %263
  %as_usize_ptr.i58.i1279 = inttoptr i64 %265 to i64*
  %get_rc_ptr.i59.i1280 = getelementptr inbounds i64, i64* %as_usize_ptr.i58.i1279, i64 -1
  %266 = load i64, i64* %get_rc_ptr.i59.i1280, align 8
  %.not.i.i.i.i60.i1281 = icmp eq i64 %266, 0
  br i1 %.not.i.i.i.i60.i1281, label %"#Attr_#dec_17.exit.i1296", label %Then.i.i.i.i61.i1283

Then.i.i.i.i61.i1283:                             ; preds = %after_loop.i.i1282
  %267 = add i64 %266, -1
  store i64 %267, i64* %get_rc_ptr.i59.i1280, align 8
  %268 = icmp eq i64 %266, -9223372036854775808
  br i1 %268, label %Then1.i.i.i.i62.i1284, label %"#Attr_#dec_17.exit.i1296"

Then1.i.i.i.i62.i1284:                            ; preds = %Then.i.i.i.i61.i1283
  %269 = bitcast i64* %get_rc_ptr.i59.i1280 to i8*
  tail call void @roc_dealloc(i8* %269, i32 8) #11
  br label %"#Attr_#dec_17.exit.i1296"

"#Attr_#dec_17.exit.i1296":                       ; preds = %Then1.i.i.i.i62.i1284, %Then.i.i.i.i61.i1283, %after_loop.i.i1282, %else_block172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #11
  %struct_field1.sroa.264.0.copyload.i1286 = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i1171, align 8
  %struct_field1.sroa.3.0.copyload.i1288 = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i1173, align 8
  %struct_field1.sroa.468.0.copyload.i1290 = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i1175, align 8
  %struct_field1.sroa.5.0.copyload.i1292 = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i1177, align 8
  %struct_field1.sroa.672.0.copyload.i1294 = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i1179, align 8
  %"cap > 0.i.i.not.i1295" = icmp eq i64 %struct_field1.sroa.264.0.copyload.i1286, 0
  br i1 %"cap > 0.i.i.not.i1295", label %"#Attr_#dec_18.exit.i1307", label %modification_list_block.i.i.i1303

modification_list_block.i.i.i1303:                ; preds = %"#Attr_#dec_17.exit.i1296"
  %struct_field1.sroa.0.0..sroa_idx.i1297 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"75", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i1298 = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i1297, align 8
  %270 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i1298 to i64
  %271 = shl i64 %struct_field1.sroa.264.0.copyload.i1286, 1
  %.not.i.i.i.i.i1299 = icmp slt i64 %struct_field1.sroa.264.0.copyload.i1286, 0
  %272 = select i1 %.not.i.i.i.i.i1299, i64 %271, i64 %270
  %as_usize_ptr.i.i.i1300 = inttoptr i64 %272 to i64*
  %get_rc_ptr.i.i.i1301 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i1300, i64 -1
  %273 = load i64, i64* %get_rc_ptr.i.i.i1301, align 8
  %.not.i.i.i.i.i.i1302 = icmp eq i64 %273, 0
  br i1 %.not.i.i.i.i.i.i1302, label %"#Attr_#dec_18.exit.i1307", label %Then.i.i.i.i.i.i1304

Then.i.i.i.i.i.i1304:                             ; preds = %modification_list_block.i.i.i1303
  %274 = add i64 %273, -1
  store i64 %274, i64* %get_rc_ptr.i.i.i1301, align 8
  %275 = icmp eq i64 %273, -9223372036854775808
  br i1 %275, label %Then1.i.i.i.i.i.i1305, label %"#Attr_#dec_18.exit.i1307"

Then1.i.i.i.i.i.i1305:                            ; preds = %Then.i.i.i.i.i.i1304
  %276 = bitcast i64* %get_rc_ptr.i.i.i1301 to i8*
  tail call void @roc_dealloc(i8* %276, i32 8) #11
  br label %"#Attr_#dec_18.exit.i1307"

"#Attr_#dec_18.exit.i1307":                       ; preds = %Then1.i.i.i.i.i.i1305, %Then.i.i.i.i.i.i1304, %modification_list_block.i.i.i1303, %"#Attr_#dec_17.exit.i1296"
  %"cap > 0.i5.not.i1306" = icmp eq i64 %struct_field1.sroa.468.0.copyload.i1290, 0
  br i1 %"cap > 0.i5.not.i1306", label %"#Attr_#dec_10.exit.i1316", label %modification_list_block.i14.i1312

modification_list_block.i14.i1312:                ; preds = %"#Attr_#dec_18.exit.i1307"
  %277 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i1288 to i64
  %278 = shl i64 %struct_field1.sroa.468.0.copyload.i1290, 1
  %.not.i.i.i10.i1308 = icmp slt i64 %struct_field1.sroa.468.0.copyload.i1290, 0
  %279 = select i1 %.not.i.i.i10.i1308, i64 %278, i64 %277
  %as_usize_ptr.i11.i1309 = inttoptr i64 %279 to i64*
  %get_rc_ptr.i12.i1310 = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i1309, i64 -1
  %280 = load i64, i64* %get_rc_ptr.i12.i1310, align 8
  %.not.i.i.i.i13.i1311 = icmp eq i64 %280, 0
  br i1 %.not.i.i.i.i13.i1311, label %"#Attr_#dec_10.exit.i1316", label %Then.i.i.i.i15.i1313

Then.i.i.i.i15.i1313:                             ; preds = %modification_list_block.i14.i1312
  %281 = add i64 %280, -1
  store i64 %281, i64* %get_rc_ptr.i12.i1310, align 8
  %282 = icmp eq i64 %280, -9223372036854775808
  br i1 %282, label %Then1.i.i.i.i16.i1314, label %"#Attr_#dec_10.exit.i1316"

Then1.i.i.i.i16.i1314:                            ; preds = %Then.i.i.i.i15.i1313
  %283 = bitcast i64* %get_rc_ptr.i12.i1310 to i8*
  tail call void @roc_dealloc(i8* %283, i32 8) #11
  br label %"#Attr_#dec_10.exit.i1316"

"#Attr_#dec_10.exit.i1316":                       ; preds = %Then1.i.i.i.i16.i1314, %Then.i.i.i.i15.i1313, %modification_list_block.i14.i1312, %"#Attr_#dec_18.exit.i1307"
  %"cap > 0.i.not.i1315" = icmp eq i64 %struct_field1.sroa.672.0.copyload.i1294, 0
  br i1 %"cap > 0.i.not.i1315", label %"#Attr_#dec_40.exit", label %modification_list_block.i.i1321

modification_list_block.i.i1321:                  ; preds = %"#Attr_#dec_10.exit.i1316"
  %284 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i1292 to i64
  %285 = shl i64 %struct_field1.sroa.672.0.copyload.i1294, 1
  %.not.i.i.i.i1317 = icmp slt i64 %struct_field1.sroa.672.0.copyload.i1294, 0
  %286 = select i1 %.not.i.i.i.i1317, i64 %285, i64 %284
  %as_usize_ptr.i.i1318 = inttoptr i64 %286 to i64*
  %get_rc_ptr.i.i1319 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i1318, i64 -1
  %287 = load i64, i64* %get_rc_ptr.i.i1319, align 8
  %.not.i.i.i.i2.i1320 = icmp eq i64 %287, 0
  br i1 %.not.i.i.i.i2.i1320, label %"#Attr_#dec_40.exit", label %Then.i.i.i.i.i1322

Then.i.i.i.i.i1322:                               ; preds = %modification_list_block.i.i1321
  %288 = add i64 %287, -1
  store i64 %288, i64* %get_rc_ptr.i.i1319, align 8
  %289 = icmp eq i64 %287, -9223372036854775808
  br i1 %289, label %Then1.i.i.i.i.i1323, label %"#Attr_#dec_40.exit"

Then1.i.i.i.i.i1323:                              ; preds = %Then.i.i.i.i.i1322
  %290 = bitcast i64* %get_rc_ptr.i.i1319 to i8*
  tail call void @roc_dealloc(i8* %290, i32 8) #11
  br label %"#Attr_#dec_40.exit"

"#Attr_#dec_40.exit":                             ; preds = %Then1.i.i.i.i.i1323, %Then.i.i.i.i.i1322, %modification_list_block.i.i1321, %"#Attr_#dec_10.exit.i1316"
  %.not.i.i1325 = icmp eq i8* %load_at_index_ptr_old135.unpack, null
  br i1 %.not.i.i1325, label %roc_builtins.list.map.exit.i, label %OptionalThen.i.i

OptionalThen.i.i:                                 ; preds = %"#Attr_#dec_40.exit"
  %291 = icmp ne i64 %load_at_index_ptr_old135.unpack327, 0
  tail call void @llvm.assume(i1 %291) #11
  %292 = icmp ugt i64 %load_at_index_ptr_old135.unpack327, 2
  %..i.i.i.i.i = select i1 %292, i64 %load_at_index_ptr_old135.unpack327, i64 2
  %293 = mul nuw i64 %..i.i.i.i.i, 24
  %294 = add nuw i64 %293, 8
  %295 = tail call i8* @roc_alloc(i64 %294, i32 8) #11, !noalias !637
  %296 = icmp ne i8* %295, null
  tail call void @llvm.assume(i1 %296) #11
  %297 = getelementptr inbounds i8, i8* %295, i64 8
  %298 = bitcast i8* %295 to i64*
  store i64 -9223372036854775808, i64* %298, align 8, !noalias !637
  br label %WhileBody.i.i

WhileBody.i.i:                                    ; preds = %WhileBody.i.i, %OptionalThen.i.i
  %i.010.i.i = phi i64 [ %306, %WhileBody.i.i ], [ 0, %OptionalThen.i.i ]
  %299 = shl nuw i64 %i.010.i.i, 5
  %300 = getelementptr inbounds i8, i8* %load_at_index_ptr_old135.unpack, i64 %299
  %301 = mul nuw i64 %i.010.i.i, 24
  %302 = getelementptr inbounds i8, i8* %297, i64 %301
  %zig_helper_load_opaque.i.unpack.elt.i = bitcast i8* %300 to i8**
  %zig_helper_load_opaque.i.unpack.unpack.i = load i8*, i8** %zig_helper_load_opaque.i.unpack.elt.i, align 8, !noalias !642
  %zig_helper_load_opaque.i.unpack.elt8.i = getelementptr inbounds i8, i8* %300, i64 8
  %303 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt8.i to i64*
  %zig_helper_load_opaque.i.unpack.unpack9.i = load i64, i64* %303, align 8, !noalias !642
  %zig_helper_load_opaque.i.unpack.elt10.i = getelementptr inbounds i8, i8* %300, i64 16
  %304 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt10.i to i64*
  %zig_helper_load_opaque.i.unpack.unpack11.i = load i64, i64* %304, align 8, !noalias !642
  %zig_helper_load_opaque.i.elt5.i = getelementptr inbounds i8, i8* %300, i64 24
  %305 = bitcast i8* %zig_helper_load_opaque.i.elt5.i to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.unpack6.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %305, align 8, !noalias !642
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.unpack6.i) #11, !noalias !642
  %result_value.i.sroa.0.0..sroa_cast.i = bitcast i8* %302 to i8**
  store i8* %zig_helper_load_opaque.i.unpack.unpack.i, i8** %result_value.i.sroa.0.0..sroa_cast.i, align 8, !noalias !642
  %result_value.i.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, i8* %302, i64 8
  %result_value.i.sroa.4.0..sroa_cast.i = bitcast i8* %result_value.i.sroa.4.0..sroa_idx.i to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack9.i, i64* %result_value.i.sroa.4.0..sroa_cast.i, align 8, !noalias !642
  %result_value.i.sroa.5.0..sroa_idx.i = getelementptr inbounds i8, i8* %302, i64 16
  %result_value.i.sroa.5.0..sroa_cast.i = bitcast i8* %result_value.i.sroa.5.0..sroa_idx.i to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack11.i, i64* %result_value.i.sroa.5.0..sroa_cast.i, align 8, !noalias !642
  %306 = add nuw i64 %i.010.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %306, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not.i.i, label %roc_builtins.list.map.exit.i.loopexit, label %WhileBody.i.i

roc_builtins.list.map.exit.i.loopexit:            ; preds = %WhileBody.i.i
  %phi.cast = ptrtoint i8* %297 to i64
  br label %roc_builtins.list.map.exit.i

roc_builtins.list.map.exit.i:                     ; preds = %roc_builtins.list.map.exit.i.loopexit, %"#Attr_#dec_40.exit"
  %list_alloca.sroa.0.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %phi.cast, %roc_builtins.list.map.exit.i.loopexit ]
  %list_alloca.sroa.3.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %load_at_index_ptr_old135.unpack327, %roc_builtins.list.map.exit.i.loopexit ]
  %list_alloca.sroa.5.0.i = phi i64 [ 0, %"#Attr_#dec_40.exit" ], [ %..i.i.i.i.i, %roc_builtins.list.map.exit.i.loopexit ]
  %307 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %308 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1326 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %309 = select i1 %.not.i.i.i1326, i64 %308, i64 %307
  %.not.i19.i = icmp eq i64 %309, 0
  br i1 %.not.i19.i, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, label %OptionalThen.i21.i

OptionalThen.i21.i:                               ; preds = %roc_builtins.list.map.exit.i
  %310 = inttoptr i64 %309 to i8*
  %311 = getelementptr inbounds i8, i8* %310, i64 -8
  %312 = bitcast i8* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %.not.i.i20.i = icmp eq i64 %313, 0
  br i1 %.not.i.i20.i, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit, label %Then.i.i.i1327

Then.i.i.i1327:                                   ; preds = %OptionalThen.i21.i
  %314 = add i64 %313, -1
  store i64 %314, i64* %312, align 8
  %315 = icmp eq i64 %313, -9223372036854775808
  br i1 %315, label %Then1.i.i.i1328, label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit

Then1.i.i.i1328:                                  ; preds = %Then.i.i.i1327
  tail call void @roc_dealloc(i8* %311, i32 8) #11
  br label %List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit

List_map_88739a7cabb68b3fb6393f1c97ee2fb5fba8296438306a903111ddffc546.exit: ; preds = %roc_builtins.list.map.exit.i, %OptionalThen.i21.i, %Then.i.i.i1327, %Then1.i.i.i1328
  %struct_alloca228 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack367.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 0
  store i64 %list_alloca.sroa.0.0.i, i64* %.repack367.repack, align 8
  %.repack367.repack373 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 1
  store i64 %list_alloca.sroa.3.0.i, i64* %.repack367.repack373, align 8
  %.repack367.repack375 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 1, i64 2
  store i64 %list_alloca.sroa.5.0.i, i64* %.repack367.repack375, align 8
  %.repack369 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228, i64 0, i32 0, i32 2
  store i8 4, i8* %.repack369, align 8
  %tag_alloca229 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer230 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229, i64 0, i32 1
  %316 = bitcast [7 x i64]* %data_buffer230 to i8*
  %317 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %316, i8* noundef nonnull align 8 dereferenceable(56) %317, i64 56, i1 false)
  %tag_id_ptr232 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr232, align 8
  %318 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca229 to i8*
  br label %common.ret

then_block196:                                    ; preds = %"#Attr_#inc_4.exit685"
  br i1 %is_big_str.i678, label %modify_rc.i696, label %"#Attr_#dec_4.exit"

modify_rc.i696:                                   ; preds = %then_block196
  %call_builtin.i693 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i695 = getelementptr inbounds i8, i8* %call_builtin.i693, i64 -8
  %319 = bitcast i8* %get_rc_ptr.i695 to i64*
  %320 = load i64, i64* %319, align 8
  %.not.i.i.i.i = icmp eq i64 %320, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i696
  %321 = add i64 %320, -1
  store i64 %321, i64* %319, align 8
  %322 = icmp eq i64 %320, -9223372036854775808
  br i1 %322, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i695, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i696, %Then.i.i.i.i, %Then1.i.i.i.i, %then_block196
  br i1 %"cap > 0.not.i1209", label %"#Attr_#dec_19.exit", label %modification_list_block.i1333

modification_list_block.i1333:                    ; preds = %"#Attr_#dec_4.exit"
  %cast_basic_basic.i1331 = bitcast i8* %load_at_index_ptr_old135.unpack to { %str.RocStr, { [0 x i64], [12 x i64] }* }*
  %bounds_check.not.i1332 = icmp eq i64 %load_at_index_ptr_old135.unpack327, 0
  br i1 %bounds_check.not.i1332, label %after_loop.i1356, label %loop.preheader.i1336

loop.preheader.i1336:                             ; preds = %modification_list_block.i1333
  %323 = bitcast %str.RocStr* %struct_field.i.i1329 to i8*
  %struct_field.i.repack.i1334 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 0
  %struct_field.i.repack15.i1335 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 1
  %struct_field.i.repack17.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i1329, i64 0, i32 2
  br label %loop.i1344

loop.i1344:                                       ; preds = %"#Attr_#dec_14.exit.i", %loop.preheader.i1336
  %index.i1337 = phi i64 [ 0, %loop.preheader.i1336 ], [ %next_index.i1338, %"#Attr_#dec_14.exit.i" ]
  %next_index.i1338 = add nuw i64 %index.i1337, 1
  %incrementing_element_loop_load.unpack.elt.i1339 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack.i1340 = load i8*, i8** %incrementing_element_loop_load.unpack.elt.i1339, align 8
  %incrementing_element_loop_load.unpack.elt10.i1341 = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11.i1342 = load i64, i64* %incrementing_element_loop_load.unpack.elt10.i1341, align 8
  %incrementing_element_loop_load.unpack.elt12.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13.i = load i64, i64* %incrementing_element_loop_load.unpack.elt12.i, align 8
  %incrementing_element_loop_load.elt7.i = getelementptr inbounds { %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, { [0 x i64], [12 x i64] }* }* %cast_basic_basic.i1331, i64 %index.i1337, i32 1
  %incrementing_element_loop_load.unpack8.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %incrementing_element_loop_load.elt7.i, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #11
  store i8* %incrementing_element_loop_load.unpack.unpack.i1340, i8** %struct_field.i.repack.i1334, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11.i1342, i64* %struct_field.i.repack15.i1335, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13.i, i64* %struct_field.i.repack17.i, align 8
  %is_big_str.i.i.i1343 = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13.i, 0
  br i1 %is_big_str.i.i.i1343, label %modify_rc.i.i.i1348, label %"#Attr_#dec_14.exit.i"

modify_rc.i.i.i1348:                              ; preds = %loop.i1344
  %call_builtin.i.i.i1345 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i1329) #11
  %get_rc_ptr.i.i.i1346 = getelementptr inbounds i8, i8* %call_builtin.i.i.i1345, i64 -8
  %324 = bitcast i8* %get_rc_ptr.i.i.i1346 to i64*
  %325 = load i64, i64* %324, align 8
  %.not.i.i.i.i.i.i1347 = icmp eq i64 %325, 0
  br i1 %.not.i.i.i.i.i.i1347, label %"#Attr_#dec_14.exit.i", label %Then.i.i.i.i.i.i1349

Then.i.i.i.i.i.i1349:                             ; preds = %modify_rc.i.i.i1348
  %326 = add i64 %325, -1
  store i64 %326, i64* %324, align 8
  %327 = icmp eq i64 %325, -9223372036854775808
  br i1 %327, label %Then1.i.i.i.i.i.i1350, label %"#Attr_#dec_14.exit.i"

Then1.i.i.i.i.i.i1350:                            ; preds = %Then.i.i.i.i.i.i1349
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i1346, i32 8) #11
  br label %"#Attr_#dec_14.exit.i"

"#Attr_#dec_14.exit.i":                           ; preds = %Then1.i.i.i.i.i.i1350, %Then.i.i.i.i.i.i1349, %modify_rc.i.i.i1348, %loop.i1344
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack8.i) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #11
  %exitcond.not = icmp eq i64 %next_index.i1338, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not, label %after_loop.i1356, label %loop.i1344

after_loop.i1356:                                 ; preds = %"#Attr_#dec_14.exit.i", %modification_list_block.i1333
  %328 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %329 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1352 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %330 = select i1 %.not.i.i.i1352, i64 %329, i64 %328
  %as_usize_ptr.i1353 = inttoptr i64 %330 to i64*
  %get_rc_ptr.i1354 = getelementptr inbounds i64, i64* %as_usize_ptr.i1353, i64 -1
  %331 = load i64, i64* %get_rc_ptr.i1354, align 8
  %.not.i.i.i.i1355 = icmp eq i64 %331, 0
  br i1 %.not.i.i.i.i1355, label %"#Attr_#dec_19.exit", label %Then.i.i.i.i1357

Then.i.i.i.i1357:                                 ; preds = %after_loop.i1356
  %332 = add i64 %331, -1
  store i64 %332, i64* %get_rc_ptr.i1354, align 8
  %333 = icmp eq i64 %331, -9223372036854775808
  br i1 %333, label %Then1.i.i.i.i1358, label %"#Attr_#dec_19.exit"

Then1.i.i.i.i1358:                                ; preds = %Then.i.i.i.i1357
  %334 = bitcast i64* %get_rc_ptr.i1354 to i8*
  tail call void @roc_dealloc(i8* %334, i32 8) #11
  br label %"#Attr_#dec_19.exit"

"#Attr_#dec_19.exit":                             ; preds = %"#Attr_#dec_4.exit", %after_loop.i1356, %Then.i.i.i.i1357, %Then1.i.i.i.i1358
  %get_opaque_data_ptr198 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %result_value191, i64 0, i32 1
  %335 = bitcast [8 x i64]* %get_opaque_data_ptr198 to i8*
  br label %common.ret

else_block197:                                    ; preds = %"#Attr_#inc_4.exit685"
  call fastcc void @"#Attr_#dec_35"({ [0 x i64], [8 x i64], i8, [7 x i8] }* nonnull %result_value191)
  %.not.i.i1359 = icmp eq i8* %load_at_index_ptr_old135.unpack, null
  br i1 %.not.i.i1359, label %roc_builtins.list.map.exit.i1383, label %OptionalThen.i.i1361

OptionalThen.i.i1361:                             ; preds = %else_block197
  %336 = icmp ne i64 %load_at_index_ptr_old135.unpack327, 0
  tail call void @llvm.assume(i1 %336) #11
  %337 = icmp ugt i64 %load_at_index_ptr_old135.unpack327, 2
  %..i.i.i.i.i1360 = select i1 %337, i64 %load_at_index_ptr_old135.unpack327, i64 2
  %338 = mul nuw i64 %..i.i.i.i.i1360, 24
  %339 = add nuw i64 %338, 8
  %340 = tail call i8* @roc_alloc(i64 %339, i32 8) #11, !noalias !643
  %341 = icmp ne i8* %340, null
  tail call void @llvm.assume(i1 %341) #11
  %342 = getelementptr inbounds i8, i8* %340, i64 8
  %343 = bitcast i8* %340 to i64*
  store i64 -9223372036854775808, i64* %343, align 8, !noalias !643
  br label %WhileBody.i.i1377

WhileBody.i.i1377:                                ; preds = %WhileBody.i.i1377, %OptionalThen.i.i1361
  %i.010.i.i1362 = phi i64 [ %351, %WhileBody.i.i1377 ], [ 0, %OptionalThen.i.i1361 ]
  %344 = shl nuw i64 %i.010.i.i1362, 5
  %345 = getelementptr inbounds i8, i8* %load_at_index_ptr_old135.unpack, i64 %344
  %346 = mul nuw i64 %i.010.i.i1362, 24
  %347 = getelementptr inbounds i8, i8* %342, i64 %346
  %zig_helper_load_opaque.i.unpack.elt.i1363 = bitcast i8* %345 to i8**
  %zig_helper_load_opaque.i.unpack.unpack.i1364 = load i8*, i8** %zig_helper_load_opaque.i.unpack.elt.i1363, align 8, !noalias !648
  %zig_helper_load_opaque.i.unpack.elt8.i1365 = getelementptr inbounds i8, i8* %345, i64 8
  %348 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt8.i1365 to i64*
  %zig_helper_load_opaque.i.unpack.unpack9.i1366 = load i64, i64* %348, align 8, !noalias !648
  %zig_helper_load_opaque.i.unpack.elt10.i1367 = getelementptr inbounds i8, i8* %345, i64 16
  %349 = bitcast i8* %zig_helper_load_opaque.i.unpack.elt10.i1367 to i64*
  %zig_helper_load_opaque.i.unpack.unpack11.i1368 = load i64, i64* %349, align 8, !noalias !648
  %zig_helper_load_opaque.i.elt5.i1369 = getelementptr inbounds i8, i8* %345, i64 24
  %350 = bitcast i8* %zig_helper_load_opaque.i.elt5.i1369 to { [0 x i64], [12 x i64] }**
  %zig_helper_load_opaque.i.unpack6.i1370 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %350, align 8, !noalias !648
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %zig_helper_load_opaque.i.unpack6.i1370) #11, !noalias !648
  %result_value.i.sroa.0.0..sroa_cast.i1371 = bitcast i8* %347 to i8**
  store i8* %zig_helper_load_opaque.i.unpack.unpack.i1364, i8** %result_value.i.sroa.0.0..sroa_cast.i1371, align 8, !noalias !648
  %result_value.i.sroa.4.0..sroa_idx.i1372 = getelementptr inbounds i8, i8* %347, i64 8
  %result_value.i.sroa.4.0..sroa_cast.i1373 = bitcast i8* %result_value.i.sroa.4.0..sroa_idx.i1372 to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack9.i1366, i64* %result_value.i.sroa.4.0..sroa_cast.i1373, align 8, !noalias !648
  %result_value.i.sroa.5.0..sroa_idx.i1374 = getelementptr inbounds i8, i8* %347, i64 16
  %result_value.i.sroa.5.0..sroa_cast.i1375 = bitcast i8* %result_value.i.sroa.5.0..sroa_idx.i1374 to i64*
  store i64 %zig_helper_load_opaque.i.unpack.unpack11.i1368, i64* %result_value.i.sroa.5.0..sroa_cast.i1375, align 8, !noalias !648
  %351 = add nuw i64 %i.010.i.i1362, 1
  %exitcond.not.i.i1376 = icmp eq i64 %351, %load_at_index_ptr_old135.unpack327
  br i1 %exitcond.not.i.i1376, label %roc_builtins.list.map.exit.i1383, label %WhileBody.i.i1377

roc_builtins.list.map.exit.i1383:                 ; preds = %WhileBody.i.i1377, %else_block197
  %list_alloca.sroa.0.0.i1378 = phi i8* [ null, %else_block197 ], [ %342, %WhileBody.i.i1377 ]
  %list_alloca.sroa.3.0.i1379 = phi i64 [ 0, %else_block197 ], [ %load_at_index_ptr_old135.unpack327, %WhileBody.i.i1377 ]
  %list_alloca.sroa.5.0.i1380 = phi i64 [ 0, %else_block197 ], [ %..i.i.i.i.i1360, %WhileBody.i.i1377 ]
  %352 = ptrtoint i8* %load_at_index_ptr_old135.unpack to i64
  %353 = shl i64 %load_at_index_ptr_old135.unpack329, 1
  %.not.i.i.i1381 = icmp slt i64 %load_at_index_ptr_old135.unpack329, 0
  %354 = select i1 %.not.i.i.i1381, i64 %353, i64 %352
  %.not.i19.i1382 = icmp eq i64 %354, 0
  br i1 %.not.i19.i1382, label %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit, label %OptionalThen.i21.i1385

OptionalThen.i21.i1385:                           ; preds = %roc_builtins.list.map.exit.i1383
  %355 = inttoptr i64 %354 to i8*
  %356 = getelementptr inbounds i8, i8* %355, i64 -8
  %357 = bitcast i8* %356 to i64*
  %358 = load i64, i64* %357, align 8
  %.not.i.i20.i1384 = icmp eq i64 %358, 0
  br i1 %.not.i.i20.i1384, label %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit, label %Then.i.i.i1386

Then.i.i.i1386:                                   ; preds = %OptionalThen.i21.i1385
  %359 = add i64 %358, -1
  store i64 %359, i64* %357, align 8
  %360 = icmp eq i64 %358, -9223372036854775808
  br i1 %360, label %Then1.i.i.i1387, label %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit

Then1.i.i.i1387:                                  ; preds = %Then.i.i.i1386
  tail call void @roc_dealloc(i8* %356, i32 8) #11
  br label %List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit

List_map_cf3d178b5ea6d1cbf9f2dd9833bbeabfbbbe7ade03cec9748ab7aa5fc290.exit: ; preds = %roc_builtins.list.map.exit.i1383, %OptionalThen.i21.i1385, %Then.i.i.i1386, %Then1.i.i.i1387
  %struct_alloca208 = alloca { { %list.RocList, %str.RocStr } }, align 8
  %.repack551.repack = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 0
  store i8* %list_alloca.sroa.0.0.i1378, i8** %.repack551.repack, align 8
  %.repack551.repack554 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 1
  store i64 %list_alloca.sroa.3.0.i1379, i64* %.repack551.repack554, align 8
  %.repack551.repack556 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 0, i32 2
  store i64 %list_alloca.sroa.5.0.i1380, i64* %.repack551.repack556, align 8
  %.repack552.repack = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 0
  store i8* %load_element.unpack396.unpack, i8** %.repack552.repack, align 8
  %.repack552.repack558 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 1
  store i64 %load_element.unpack396.unpack399, i64* %.repack552.repack558, align 8
  %.repack552.repack560 = getelementptr inbounds { { %list.RocList, %str.RocStr } }, { { %list.RocList, %str.RocStr } }* %struct_alloca208, i64 0, i32 0, i32 1, i32 2
  store i64 %load_element.unpack396.unpack401, i64* %.repack552.repack560, align 8
  %tag_alloca209 = alloca { [0 x i64], [6 x i64], i8, [7 x i8] }, align 8
  %data_buffer210 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1
  %361 = bitcast [6 x i64]* %data_buffer210 to i8*
  %362 = bitcast { { %list.RocList, %str.RocStr } }* %struct_alloca208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %361, i8* noundef nonnull align 8 dereferenceable(48) %362, i64 48, i1 false)
  %tag_id_ptr212 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr212, align 8
  %load_tag_to_put_in_struct213.unpack563.elt = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct213.unpack563.unpack = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt, align 8
  %load_tag_to_put_in_struct213.unpack563.elt569 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct213.unpack563.unpack570 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt569, align 8
  %load_tag_to_put_in_struct213.unpack563.elt571 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct213.unpack563.unpack572 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt571, align 8
  %load_tag_to_put_in_struct213.unpack563.elt573 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct213.unpack563.unpack574 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt573, align 8
  %load_tag_to_put_in_struct213.unpack563.elt575 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 4
  %load_tag_to_put_in_struct213.unpack563.unpack576 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt575, align 8
  %load_tag_to_put_in_struct213.unpack563.elt577 = getelementptr inbounds { [0 x i64], [6 x i64], i8, [7 x i8] }, { [0 x i64], [6 x i64], i8, [7 x i8] }* %tag_alloca209, i64 0, i32 1, i64 5
  %load_tag_to_put_in_struct213.unpack563.unpack578 = load i64, i64* %load_tag_to_put_in_struct213.unpack563.elt577, align 8
  %struct_alloca215 = alloca { { [0 x i64], [6 x i64], i8, [7 x i8] } }, align 8
  %.repack594.repack = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 0
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack, i64* %.repack594.repack, align 8
  %.repack594.repack600 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack570, i64* %.repack594.repack600, align 8
  %.repack594.repack602 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack572, i64* %.repack594.repack602, align 8
  %.repack594.repack604 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack574, i64* %.repack594.repack604, align 8
  %.repack594.repack606 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 4
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack576, i64* %.repack594.repack606, align 8
  %.repack594.repack608 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 1, i64 5
  store i64 %load_tag_to_put_in_struct213.unpack563.unpack578, i64* %.repack594.repack608, align 8
  %.repack596 = getelementptr inbounds { { [0 x i64], [6 x i64], i8, [7 x i8] } }, { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215, i64 0, i32 0, i32 2
  store i8 0, i8* %.repack596, align 8
  %tag_alloca216 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %data_buffer217 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216, i64 0, i32 1
  %363 = bitcast [7 x i64]* %data_buffer217 to i8*
  %364 = bitcast { { [0 x i64], [6 x i64], i8, [7 x i8] } }* %struct_alloca215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %363, i8* noundef nonnull align 8 dereferenceable(56) %364, i64 56, i1 false)
  %tag_id_ptr219 = getelementptr inbounds { [0 x i64], [7 x i64], i8, [7 x i8] }, { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr219, align 8
  %365 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %tag_alloca216 to i8*
  br label %common.ret

then_block253:                                    ; preds = %"#Attr_#dec_16.exit1095"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %121)
  br label %joinpointcont242

Then.i.i.i698:                                    ; preds = %"#Attr_#dec_16.exit1095"
  %366 = add nsw i64 %get_refcount250, -1
  store i64 %366, i64* %121, align 8
  br label %joinpointcont242

joinpointcont242:                                 ; preds = %"#Attr_#dec_16.exit1095", %Then.i.i.i698, %then_block253
  %const_str_store274.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store274.repack, align 8
  %const_str_store274.repack324 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 1
  store i64 73, i64* %const_str_store274.repack324, align 8
  %const_str_store274.repack325 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store274, i64 0, i32 2
  store i64 73, i64* %const_str_store274.repack325, align 8
  call void @roc_panic(%str.RocStr* %const_str_store274, i32 0)
  unreachable

then_block294:                                    ; preds = %default
  %at_index_struct_gep_data303.idx = sub nuw nsw i64 8, %masked276
  %at_index_struct_gep_data303 = getelementptr inbounds i8, i8* %cast_to_i8_ptr278, i64 %at_index_struct_gep_data303.idx
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %load_at_index_ptr_old304.sroa.0.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %at_index_struct_gep_data303, i64 80, i1 false)
  %load_at_index_ptr_old304.sroa.6.0.at_index_struct_gep_data303.sroa_raw_idx = getelementptr inbounds i8, i8* %at_index_struct_gep_data303, i64 80
  %load_at_index_ptr_old304.sroa.6.0.copyload = load i8, i8* %load_at_index_ptr_old304.sroa.6.0.at_index_struct_gep_data303.sroa_raw_idx, align 8
  switch i8 %load_at_index_ptr_old304.sroa.6.0.copyload, label %"#Attr_#dec_8.exit" [
    i8 0, label %tag_id_modify.i707
    i8 1, label %tag_id_modify1.i
  ]

tag_id_modify.i707:                               ; preds = %then_block294
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data303, i64 24, i1 false)
  %load_str_to_stack.i.i780.unpack924 = load i64, i64* %load_str_to_stack.i.i780.elt923, align 8
  %is_big_str.i.i782 = icmp sgt i64 %load_str_to_stack.i.i780.unpack924, 0
  br i1 %is_big_str.i.i782, label %modify_rc.i.i787, label %"#Attr_#dec_3.exit793"

modify_rc.i.i787:                                 ; preds = %tag_id_modify.i707
  %call_builtin.i.i783 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i778) #11
  %get_rc_ptr.i.i785 = getelementptr inbounds i8, i8* %call_builtin.i.i783, i64 -8
  %367 = bitcast i8* %get_rc_ptr.i.i785 to i64*
  %368 = load i64, i64* %367, align 8
  %.not.i.i.i.i.i786 = icmp eq i64 %368, 0
  br i1 %.not.i.i.i.i.i786, label %"#Attr_#dec_3.exit793", label %Then.i.i.i.i.i788

Then.i.i.i.i.i788:                                ; preds = %modify_rc.i.i787
  %369 = add i64 %368, -1
  store i64 %369, i64* %367, align 8
  %370 = icmp eq i64 %368, -9223372036854775808
  br i1 %370, label %Then1.i.i.i.i.i789, label %"#Attr_#dec_3.exit793"

Then1.i.i.i.i.i789:                               ; preds = %Then.i.i.i.i.i788
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i785, i32 8) #11
  br label %"#Attr_#dec_3.exit793"

"#Attr_#dec_3.exit793":                           ; preds = %modify_rc.i.i787, %Then.i.i.i.i.i788, %Then1.i.i.i.i.i789, %tag_id_modify.i707
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i794.unpack929 = load i64, i64* %load_str_to_stack.i794.elt928, align 8
  %is_big_str.i796 = icmp sgt i64 %load_str_to_stack.i794.unpack929, 0
  br i1 %is_big_str.i796, label %modify_rc.i801, label %"#Attr_#dec_4.exit805"

modify_rc.i801:                                   ; preds = %"#Attr_#dec_3.exit793"
  %call_builtin.i797 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i777) #11
  %get_rc_ptr.i799 = getelementptr inbounds i8, i8* %call_builtin.i797, i64 -8
  %371 = bitcast i8* %get_rc_ptr.i799 to i64*
  %372 = load i64, i64* %371, align 8
  %.not.i.i.i.i800 = icmp eq i64 %372, 0
  br i1 %.not.i.i.i.i800, label %"#Attr_#dec_4.exit805", label %Then.i.i.i.i802

Then.i.i.i.i802:                                  ; preds = %modify_rc.i801
  %373 = add i64 %372, -1
  store i64 %373, i64* %371, align 8
  %374 = icmp eq i64 %372, -9223372036854775808
  br i1 %374, label %Then1.i.i.i.i803, label %"#Attr_#dec_4.exit805"

Then1.i.i.i.i803:                                 ; preds = %Then.i.i.i.i802
  tail call void @roc_dealloc(i8* %get_rc_ptr.i799, i32 8) #11
  br label %"#Attr_#dec_4.exit805"

"#Attr_#dec_4.exit805":                           ; preds = %modify_rc.i801, %Then.i.i.i.i802, %Then1.i.i.i.i803, %"#Attr_#dec_3.exit793"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.48.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i806.unpack934 = load i64, i64* %load_str_to_stack.i806.elt933, align 8
  %is_big_str.i808 = icmp sgt i64 %load_str_to_stack.i806.unpack934, 0
  br i1 %is_big_str.i808, label %modify_rc.i813, label %"#Attr_#dec_4.exit817"

modify_rc.i813:                                   ; preds = %"#Attr_#dec_4.exit805"
  %call_builtin.i809 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i776) #11
  %get_rc_ptr.i811 = getelementptr inbounds i8, i8* %call_builtin.i809, i64 -8
  %375 = bitcast i8* %get_rc_ptr.i811 to i64*
  %376 = load i64, i64* %375, align 8
  %.not.i.i.i.i812 = icmp eq i64 %376, 0
  br i1 %.not.i.i.i.i812, label %"#Attr_#dec_4.exit817", label %Then.i.i.i.i814

Then.i.i.i.i814:                                  ; preds = %modify_rc.i813
  %377 = add i64 %376, -1
  store i64 %377, i64* %375, align 8
  %378 = icmp eq i64 %376, -9223372036854775808
  br i1 %378, label %Then1.i.i.i.i815, label %"#Attr_#dec_4.exit817"

Then1.i.i.i.i815:                                 ; preds = %Then.i.i.i.i814
  tail call void @roc_dealloc(i8* %get_rc_ptr.i811, i32 8) #11
  br label %"#Attr_#dec_4.exit817"

"#Attr_#dec_4.exit817":                           ; preds = %modify_rc.i813, %Then.i.i.i.i814, %Then1.i.i.i.i815, %"#Attr_#dec_4.exit805"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  br label %"#Attr_#dec_8.exit"

tag_id_modify1.i:                                 ; preds = %then_block294
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %2, i8* noundef nonnull align 8 dereferenceable(24) %at_index_struct_gep_data303, i64 24, i1 false)
  %load_str_to_stack.i.i.i708.unpack914 = load i64, i64* %load_str_to_stack.i.i.i708.elt913, align 8
  %is_big_str.i.i.i710 = icmp sgt i64 %load_str_to_stack.i.i.i708.unpack914, 0
  br i1 %is_big_str.i.i.i710, label %modify_rc.i.i.i715, label %"#Attr_#dec_5.exit.i"

modify_rc.i.i.i715:                               ; preds = %tag_id_modify1.i
  %call_builtin.i.i.i711 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i701) #11
  %get_rc_ptr.i.i.i713 = getelementptr inbounds i8, i8* %call_builtin.i.i.i711, i64 -8
  %379 = bitcast i8* %get_rc_ptr.i.i.i713 to i64*
  %380 = load i64, i64* %379, align 8
  %.not.i.i.i.i.i.i714 = icmp eq i64 %380, 0
  br i1 %.not.i.i.i.i.i.i714, label %"#Attr_#dec_5.exit.i", label %Then.i.i.i.i.i.i716

Then.i.i.i.i.i.i716:                              ; preds = %modify_rc.i.i.i715
  %381 = add i64 %380, -1
  store i64 %381, i64* %379, align 8
  %382 = icmp eq i64 %380, -9223372036854775808
  br i1 %382, label %Then1.i.i.i.i.i.i717, label %"#Attr_#dec_5.exit.i"

Then1.i.i.i.i.i.i717:                             ; preds = %Then.i.i.i.i.i.i716
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i713, i32 8) #11
  br label %"#Attr_#dec_5.exit.i"

"#Attr_#dec_5.exit.i":                            ; preds = %modify_rc.i.i.i715, %Then.i.i.i.i.i.i716, %Then1.i.i.i.i.i.i717, %tag_id_modify1.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %load_at_index_ptr_old304.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i720.unpack919 = load i64, i64* %load_str_to_stack.i720.elt918, align 8
  %is_big_str.i722 = icmp sgt i64 %load_str_to_stack.i720.unpack919, 0
  br i1 %is_big_str.i722, label %modify_rc.i727, label %"#Attr_#dec_4.exit731"

modify_rc.i727:                                   ; preds = %"#Attr_#dec_5.exit.i"
  %call_builtin.i723 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i725 = getelementptr inbounds i8, i8* %call_builtin.i723, i64 -8
  %383 = bitcast i8* %get_rc_ptr.i725 to i64*
  %384 = load i64, i64* %383, align 8
  %.not.i.i.i.i726 = icmp eq i64 %384, 0
  br i1 %.not.i.i.i.i726, label %"#Attr_#dec_4.exit731", label %Then.i.i.i.i728

Then.i.i.i.i728:                                  ; preds = %modify_rc.i727
  %385 = add i64 %384, -1
  store i64 %385, i64* %383, align 8
  %386 = icmp eq i64 %384, -9223372036854775808
  br i1 %386, label %Then1.i.i.i.i729, label %"#Attr_#dec_4.exit731"

Then1.i.i.i.i729:                                 ; preds = %Then.i.i.i.i728
  tail call void @roc_dealloc(i8* %get_rc_ptr.i725, i32 8) #11
  br label %"#Attr_#dec_4.exit731"

"#Attr_#dec_4.exit731":                           ; preds = %modify_rc.i727, %Then.i.i.i.i728, %Then1.i.i.i.i729, %"#Attr_#dec_5.exit.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #11
  br label %"#Attr_#dec_8.exit"

"#Attr_#dec_8.exit":                              ; preds = %then_block294, %"#Attr_#dec_4.exit817", %"#Attr_#dec_4.exit731"
  tail call fastcc void @roc_builtins.utils.free_rc_ptr(i64* nonnull %8)
  br label %joinpointcont.backedge

done320:                                          ; preds = %default
  %to_int1.i = ptrtoint { [0 x i64], [12 x i64] }* %load_at_index_ptr_old283634 to i64
  %masked.i = and i64 %to_int1.i, 7
  %cast_to_i8_ptr.i = bitcast { [0 x i64], [12 x i64] }* %load_at_index_ptr_old283634 to i8*
  %get_rc_ptr.i733.idx = sub nuw nsw i64 -8, %masked.i
  %get_rc_ptr.i733 = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i, i64 %get_rc_ptr.i733.idx
  %387 = bitcast i8* %get_rc_ptr.i733 to i64*
  %388 = load i64, i64* %387, align 8
  %.not.i.i734 = icmp eq i64 %388, 0
  br i1 %.not.i.i734, label %"#Attr_#inc_2.exit", label %Then.i.i735

Then.i.i735:                                      ; preds = %done320
  %389 = add nsw i64 %388, 1
  store i64 %389, i64* %387, align 8
  %.pre1444 = load i64, i64* %8, align 8
  br label %"#Attr_#inc_2.exit"

"#Attr_#inc_2.exit":                              ; preds = %done320, %Then.i.i735
  %390 = phi i64 [ %get_refcount291, %done320 ], [ %.pre1444, %Then.i.i735 ]
  %.not.i.i.i736 = icmp eq i64 %390, 0
  br i1 %.not.i.i.i736, label %joinpointcont.backedge, label %Then.i.i.i737

Then.i.i.i737:                                    ; preds = %"#Attr_#inc_2.exit"
  %391 = add i64 %390, -1
  store i64 %391, i64* %8, align 8
  %392 = icmp eq i64 %390, -9223372036854775808
  br i1 %392, label %Then1.i.i.i738, label %joinpointcont.backedge

Then1.i.i.i738:                                   ; preds = %Then.i.i.i737
  tail call void @roc_dealloc(i8* %get_rc_ptr290, i32 8) #11
  br label %joinpointcont.backedge

joinpointcont.backedge:                           ; preds = %Then1.i.i.i738, %Then.i.i.i737, %"#Attr_#inc_2.exit", %"#Attr_#dec_8.exit"
  br label %joinpointcont
}

; Function Attrs: noreturn nounwind
define internal fastcc void @_90_b3bb49567cdbb595b49369de8e1c42d7de76b24d02ede68adab215437b96c61() unnamed_addr #14 {
entry:
  %const_str_store = alloca %str.RocStr, align 8
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @_str_literal_14773762520492002118, i64 0, i64 8), i8** %const_str_store.repack, align 8
  %const_str_store.repack1 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 73, i64* %const_str_store.repack1, align 8
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 73, i64* %const_str_store.repack2, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 0)
  unreachable
}

; Function Attrs: nounwind
define internal fastcc void @Dict_maybeRehash_afdad4ce2583f139e38144aba5570615aaa08b5ab66dd411bb77eec63827e({ %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture readonly %"550", { %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field1.elt20 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 1, i32 1
  %struct_field1.unpack21 = load i64, i64* %struct_field1.elt20, align 8
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 3
  %struct_field3 = load i64, i64* %struct_field_access_record_3, align 8
  %int_shift_right_zf.i = lshr i64 %struct_field1.unpack21, 3
  %call.i = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %struct_field1.unpack21, i64 %int_shift_right_zf.i) #11
  %has_overflowed.i = extractvalue { i64, i1 } %call.i, 1
  br i1 %has_overflowed.i, label %throw_block.i, label %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit

throw_block.i:                                    ; preds = %entry
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit: ; preds = %entry
  %struct_field2.elt27 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 2, i32 2
  %struct_field2.unpack28 = load i64, i64* %struct_field2.elt27, align 8
  %struct_field2.elt25 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 2, i32 1
  %struct_field2.unpack26 = load i64, i64* %struct_field2.elt25, align 8
  %struct_field2.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 2, i32 0
  %struct_field2.unpack = load i8*, i8** %struct_field2.elt, align 8
  %struct_field1.elt22 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 1, i32 2
  %struct_field1.unpack23 = load i64, i64* %struct_field1.elt22, align 8
  %struct_field1.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 1, i32 0
  %struct_field1.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field.elt17 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 0, i32 2
  %struct_field.unpack18 = load i64, i64* %struct_field.elt17, align 8
  %struct_field.elt15 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 0, i32 1
  %struct_field.unpack16 = load i64, i64* %struct_field.elt15, align 8
  %struct_field.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 0, i32 0
  %struct_field.unpack = load i8*, i8** %struct_field.elt, align 8
  %operation_result.i = extractvalue { i64, i1 } %call.i, 0
  %gt_uint.i = icmp ugt i64 %struct_field3, %operation_result.i
  %struct_alloca = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca.repack.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 0
  store i8* %struct_field.unpack, i8** %struct_alloca.repack.repack, align 8
  %struct_alloca.repack.repack54 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 1
  store i64 %struct_field.unpack16, i64* %struct_alloca.repack.repack54, align 8
  %struct_alloca.repack.repack56 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 2
  store i64 %struct_field.unpack18, i64* %struct_alloca.repack.repack56, align 8
  %struct_alloca.repack48.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 0
  store i8* %struct_field1.unpack, i8** %struct_alloca.repack48.repack, align 8
  %struct_alloca.repack48.repack58 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack21, i64* %struct_alloca.repack48.repack58, align 8
  %struct_alloca.repack48.repack60 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 2
  store i64 %struct_field1.unpack23, i64* %struct_alloca.repack48.repack60, align 8
  %struct_alloca.repack50.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 0
  store i8* %struct_field2.unpack, i8** %struct_alloca.repack50.repack, align 8
  %struct_alloca.repack50.repack62 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack26, i64* %struct_alloca.repack50.repack62, align 8
  %struct_alloca.repack50.repack64 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 2
  store i64 %struct_field2.unpack28, i64* %struct_alloca.repack50.repack64, align 8
  %struct_alloca.repack52 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3
  store i64 %struct_field3, i64* %struct_alloca.repack52, align 8
  br i1 %gt_uint.i, label %then_block, label %common.ret

common.ret:                                       ; preds = %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit, %then_block
  %struct_alloca.sink = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %result_value, %then_block ], [ %struct_alloca, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit ]
  %1 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %0 to i8*
  %2 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %1, i8* noundef nonnull align 8 dereferenceable(80) %2, i64 80, i1 false)
  ret void

then_block:                                       ; preds = %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit
  call fastcc void @Dict_rehash_17f19c543a6f7c357f3f1e8e618519e9b5458fb1af4602cc57fe81f77596({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_alloca, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Dict_maybeRehash_922133a322eca5f989b59c16de354928864aa2246622ff4e01750630af36ed({ %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture readonly %"550", { %list.RocList, %list.RocList, %list.RocList, i64 }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_field1.elt20 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 1, i32 1
  %struct_field1.unpack21 = load i64, i64* %struct_field1.elt20, align 8
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 3
  %struct_field3 = load i64, i64* %struct_field_access_record_3, align 8
  %int_shift_right_zf.i = lshr i64 %struct_field1.unpack21, 3
  %call.i = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %struct_field1.unpack21, i64 %int_shift_right_zf.i) #11
  %has_overflowed.i = extractvalue { i64, i1 } %call.i, 1
  br i1 %has_overflowed.i, label %throw_block.i, label %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit

throw_block.i:                                    ; preds = %entry
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit: ; preds = %entry
  %struct_field2.elt27 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 2, i32 2
  %struct_field2.unpack28 = load i64, i64* %struct_field2.elt27, align 8
  %struct_field2.elt25 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 2, i32 1
  %struct_field2.unpack26 = load i64, i64* %struct_field2.elt25, align 8
  %struct_field2.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 2, i32 0
  %struct_field2.unpack = load i8*, i8** %struct_field2.elt, align 8
  %struct_field1.elt22 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 1, i32 2
  %struct_field1.unpack23 = load i64, i64* %struct_field1.elt22, align 8
  %struct_field1.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 1, i32 0
  %struct_field1.unpack = load i8*, i8** %struct_field1.elt, align 8
  %struct_field.elt17 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 0, i32 2
  %struct_field.unpack18 = load i64, i64* %struct_field.elt17, align 8
  %struct_field.elt15 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 0, i32 1
  %struct_field.unpack16 = load i64, i64* %struct_field.elt15, align 8
  %struct_field.elt = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %"550", i64 0, i32 0, i32 0
  %struct_field.unpack = load i8*, i8** %struct_field.elt, align 8
  %operation_result.i = extractvalue { i64, i1 } %call.i, 0
  %gt_uint.i = icmp ugt i64 %struct_field3, %operation_result.i
  %struct_alloca = alloca { %list.RocList, %list.RocList, %list.RocList, i64 }, align 8
  %struct_alloca.repack.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 0
  store i8* %struct_field.unpack, i8** %struct_alloca.repack.repack, align 8
  %struct_alloca.repack.repack54 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 1
  store i64 %struct_field.unpack16, i64* %struct_alloca.repack.repack54, align 8
  %struct_alloca.repack.repack56 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 0, i32 2
  store i64 %struct_field.unpack18, i64* %struct_alloca.repack.repack56, align 8
  %struct_alloca.repack48.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 0
  store i8* %struct_field1.unpack, i8** %struct_alloca.repack48.repack, align 8
  %struct_alloca.repack48.repack58 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 1
  store i64 %struct_field1.unpack21, i64* %struct_alloca.repack48.repack58, align 8
  %struct_alloca.repack48.repack60 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 1, i32 2
  store i64 %struct_field1.unpack23, i64* %struct_alloca.repack48.repack60, align 8
  %struct_alloca.repack50.repack = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 0
  store i8* %struct_field2.unpack, i8** %struct_alloca.repack50.repack, align 8
  %struct_alloca.repack50.repack62 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 1
  store i64 %struct_field2.unpack26, i64* %struct_alloca.repack50.repack62, align 8
  %struct_alloca.repack50.repack64 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 2, i32 2
  store i64 %struct_field2.unpack28, i64* %struct_alloca.repack50.repack64, align 8
  %struct_alloca.repack52 = getelementptr inbounds { %list.RocList, %list.RocList, %list.RocList, i64 }, { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca, i64 0, i32 3
  store i64 %struct_field3, i64* %struct_alloca.repack52, align 8
  br i1 %gt_uint.i, label %then_block, label %common.ret

common.ret:                                       ; preds = %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit, %then_block
  %struct_alloca.sink = phi { %list.RocList, %list.RocList, %list.RocList, i64 }* [ %result_value, %then_block ], [ %struct_alloca, %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit ]
  %1 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %0 to i8*
  %2 = bitcast { %list.RocList, %list.RocList, %list.RocList, i64 }* %struct_alloca.sink to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %1, i8* noundef nonnull align 8 dereferenceable(80) %2, i64 80, i1 false)
  ret void

then_block:                                       ; preds = %Num_sub_f546dbb59d457f687486be20f6ee35e22f6e4872a9f667b3586c01da6db4349.exit
  call fastcc void @Dict_rehash_edf6d69235ca9a7dabdbc8c8ebf72afef4568da2e52ffda9b7112c25a3a6d52({ %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %struct_alloca, { %list.RocList, %list.RocList, %list.RocList, i64 }* nonnull %result_value)
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Dict_findIndexHelper_e47c9feb62d02dbc5afe27826eafa0261cd425616a549be729759631e1bdb82c(%list.RocList %"91", %list.RocList %"92", %list.RocList %"93", i8 %"94", i64 %"95", { i64, i64, i64 } %"96", { [0 x i64], [1 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %list_capacity_or_ref_ptr.i67 = extractvalue %list.RocList %"91", 2
  %"cap > 0.i68.not" = icmp eq i64 %list_capacity_or_ref_ptr.i67, 0
  %"91.elt53" = extractvalue %list.RocList %"91", 0
  %1 = ptrtoint i8* %"91.elt53" to i64
  %2 = shl i64 %list_capacity_or_ref_ptr.i67, 1
  %.not.i.i.i73 = icmp slt i64 %list_capacity_or_ref_ptr.i67, 0
  %3 = select i1 %.not.i.i.i73, i64 %2, i64 %1
  %as_usize_ptr.i74 = inttoptr i64 %3 to i64*
  %get_rc_ptr.i75 = getelementptr inbounds i64, i64* %as_usize_ptr.i74, i64 -1
  %4 = bitcast i64* %get_rc_ptr.i75 to i8*
  %list_capacity_or_ref_ptr.i193 = extractvalue %list.RocList %"92", 2
  %"cap > 0.i194.not" = icmp eq i64 %list_capacity_or_ref_ptr.i193, 0
  %"92.elt28" = extractvalue %list.RocList %"92", 0
  %5 = ptrtoint i8* %"92.elt28" to i64
  %6 = shl i64 %list_capacity_or_ref_ptr.i193, 1
  %.not.i.i.i199 = icmp slt i64 %list_capacity_or_ref_ptr.i193, 0
  %7 = select i1 %.not.i.i.i199, i64 %6, i64 %5
  %as_usize_ptr.i200 = inttoptr i64 %7 to i64*
  %get_rc_ptr.i201 = getelementptr inbounds i64, i64* %as_usize_ptr.i200, i64 -1
  %cast_basic_basic.i126102 = bitcast i8* %"92.elt28" to i64*
  %8 = bitcast i64* %get_rc_ptr.i201 to i8*
  %list_capacity_or_ref_ptr.i112 = extractvalue %list.RocList %"93", 2
  %"cap > 0.i113.not" = icmp eq i64 %list_capacity_or_ref_ptr.i112, 0
  %"93.elt18" = extractvalue %list.RocList %"93", 0
  %9 = ptrtoint i8* %"93.elt18" to i64
  %10 = shl i64 %list_capacity_or_ref_ptr.i112, 1
  %.not.i.i.i118 = icmp slt i64 %list_capacity_or_ref_ptr.i112, 0
  %11 = select i1 %.not.i.i.i118, i64 %10, i64 %9
  %as_usize_ptr.i119 = inttoptr i64 %11 to i64*
  %get_rc_ptr.i120 = getelementptr inbounds i64, i64* %as_usize_ptr.i119, i64 -1
  %cast_basic_basic.i110 = bitcast i8* %"93.elt18" to { i64, {} }*
  %12 = bitcast i64* %get_rc_ptr.i120 to i8*
  br label %joinpointcont.outer

joinpointcont.outer:                              ; preds = %joinpointcont.outer.backedge, %entry
  %joinpointarg5.ph = phi { i64, i64, i64 } [ %"96", %entry ], [ %joinpointarg5.ph.be, %joinpointcont.outer.backedge ]
  %struct_field_access_record_2 = extractvalue { i64, i64, i64 } %joinpointarg5.ph, 2
  %int_shift_left.i.i = shl i64 %struct_field_access_record_2, 3
  br i1 %"cap > 0.i68.not", label %joinpointcont.us.preheader, label %joinpointcont

joinpointcont.us.preheader:                       ; preds = %joinpointcont.outer
  %list_get_element.i.us191 = getelementptr inbounds i8, i8* %"91.elt53", i64 %int_shift_left.i.i
  %list_get_load_element.i.us192 = load i8, i8* %list_get_element.i.us191, align 1
  %eq_i8.i.us193 = icmp eq i8 %list_get_load_element.i.us192, -128
  br i1 %eq_i8.i.us193, label %then_block, label %else_block.us

else_block.us:                                    ; preds = %joinpointcont.us.preheader, %joinpointcont.backedge.us
  %list_get_load_element.i.us196 = phi i8 [ %list_get_load_element.i.us, %joinpointcont.backedge.us ], [ %list_get_load_element.i.us192, %joinpointcont.us.preheader ]
  %add_int_wrap.i50.us195 = phi i64 [ %add_int_wrap.i50.us, %joinpointcont.backedge.us ], [ %int_shift_left.i.i, %joinpointcont.us.preheader ]
  %joinpointarg6.us194 = phi i64 [ %joinpointarg6.be.us, %joinpointcont.backedge.us ], [ 0, %joinpointcont.us.preheader ]
  %eq_i8.i191.us = icmp eq i8 %list_get_load_element.i.us196, %"94"
  br i1 %eq_i8.i191.us, label %then_block13.us, label %else_block14.us

else_block14.us:                                  ; preds = %else_block.us
  %eq_u64.i93.us = icmp eq i64 %joinpointarg6.us194, 7
  br i1 %eq_u64.i93.us, label %joinpointcont.outer.backedge, label %joinpointcont.backedge.us

then_block13.us:                                  ; preds = %else_block.us
  br i1 %"cap > 0.i194.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split, label %modification_list_block.i203.us

modification_list_block.i203.us:                  ; preds = %then_block13.us
  %13 = load i64, i64* %get_rc_ptr.i201, align 8
  %.not.i.i202.us = icmp eq i64 %13, 0
  br i1 %.not.i.i202.us, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split, label %modification_list_block.i.i139.us

modification_list_block.i.i139.us:                ; preds = %modification_list_block.i203.us
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %get_rc_ptr.i201, align 8
  %list_get_element.i127103.us = getelementptr inbounds i64, i64* %cast_basic_basic.i126102, i64 %add_int_wrap.i50.us195
  %list_get_load_element.i128104.us = load i64, i64* %list_get_element.i127103.us, align 8
  %.not.i.i.i.i.i138.us = icmp eq i64 %14, 0
  %spec.store.select = select i1 %.not.i.i.i.i.i138.us, i64 0, i64 %13
  store i64 %spec.store.select, i64* %get_rc_ptr.i201, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split: ; preds = %then_block13.us, %modification_list_block.i203.us
  %list_get_element.i127103.us152 = getelementptr inbounds i64, i64* %cast_basic_basic.i126102, i64 %add_int_wrap.i50.us195
  %list_get_load_element.i128104.us153 = load i64, i64* %list_get_element.i127103.us152, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us: ; preds = %modification_list_block.i.i139.us, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split
  %list_get_load_element.i128108.us = phi i64 [ %list_get_load_element.i128104.us, %modification_list_block.i.i139.us ], [ %list_get_load_element.i128104.us153, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split ]
  br i1 %"cap > 0.i113.not", label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split, label %modification_list_block.i122.us

modification_list_block.i122.us:                  ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us
  %15 = load i64, i64* %get_rc_ptr.i120, align 8
  %.not.i.i121.us = icmp eq i64 %15, 0
  br i1 %.not.i.i121.us, label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split, label %modification_list_block.i.i107.us

modification_list_block.i.i107.us:                ; preds = %modification_list_block.i122.us
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %get_rc_ptr.i120, align 8
  %list_get_load_element.elt.i111.us = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i110, i64 %list_get_load_element.i128108.us, i32 0
  %list_get_load_element.unpack.i112.us = load i64, i64* %list_get_load_element.elt.i111.us, align 8
  %.not.i.i.i.i.i106.us = icmp eq i64 %16, 0
  %spec.store.select197 = select i1 %.not.i.i.i.i.i106.us, i64 0, i64 %15
  store i64 %spec.store.select197, i64* %get_rc_ptr.i120, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us, %modification_list_block.i122.us
  %list_get_load_element.elt.i111.us155 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i110, i64 %list_get_load_element.i128108.us, i32 0
  %list_get_load_element.unpack.i112.us156 = load i64, i64* %list_get_load_element.elt.i111.us155, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us: ; preds = %modification_list_block.i.i107.us, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split
  %list_get_load_element.unpack.i116.us = phi i64 [ %list_get_load_element.unpack.i112.us, %modification_list_block.i.i107.us ], [ %list_get_load_element.unpack.i112.us156, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split ]
  %eq_u64.i94.us = icmp eq i64 %list_get_load_element.unpack.i116.us, %"95"
  br i1 %eq_u64.i94.us, label %then_block19, label %else_block20.us

else_block20.us:                                  ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us
  %eq_u64.i.us = icmp eq i64 %joinpointarg6.us194, 7
  br i1 %eq_u64.i.us, label %joinpointcont.outer.backedge, label %joinpointcont.backedge.us

joinpointcont.backedge.us:                        ; preds = %else_block20.us, %else_block14.us
  %joinpointarg6.be.us = add i64 %joinpointarg6.us194, 1
  %add_int_wrap.i50.us = add i64 %joinpointarg6.be.us, %int_shift_left.i.i
  %list_get_element.i.us = getelementptr inbounds i8, i8* %"91.elt53", i64 %add_int_wrap.i50.us
  %list_get_load_element.i.us = load i8, i8* %list_get_element.i.us, align 1
  %eq_i8.i.us = icmp eq i8 %list_get_load_element.i.us, -128
  br i1 %eq_i8.i.us, label %then_block, label %else_block.us

joinpointcont:                                    ; preds = %joinpointcont.outer, %joinpointcont.backedge
  %joinpointarg6 = phi i64 [ %joinpointarg6.be, %joinpointcont.backedge ], [ 0, %joinpointcont.outer ]
  %add_int_wrap.i50 = add i64 %joinpointarg6, %int_shift_left.i.i
  %17 = load i64, i64* %get_rc_ptr.i75, align 8
  %.not.i.i = icmp eq i64 %17, 0
  br i1 %.not.i.i, label %modification_list_block.i.i.thread, label %modification_list_block.i.i

modification_list_block.i.i.thread:               ; preds = %joinpointcont
  %list_get_element.i95158 = getelementptr inbounds i8, i8* %"91.elt53", i64 %add_int_wrap.i50
  %list_get_load_element.i96159 = load i8, i8* %list_get_element.i95158, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit

modification_list_block.i.i:                      ; preds = %joinpointcont
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %get_rc_ptr.i75, align 8
  %list_get_element.i95 = getelementptr inbounds i8, i8* %"91.elt53", i64 %add_int_wrap.i50
  %list_get_load_element.i96 = load i8, i8* %list_get_element.i95, align 1
  %.not.i.i.i.i.i = icmp eq i64 %18, 0
  %spec.store.select198 = select i1 %.not.i.i.i.i.i, i64 0, i64 %17
  store i64 %spec.store.select198, i64* %get_rc_ptr.i75, align 8
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit: ; preds = %modification_list_block.i.i, %modification_list_block.i.i.thread
  %list_get_load_element.i96161 = phi i8 [ %list_get_load_element.i96159, %modification_list_block.i.i.thread ], [ %list_get_load_element.i96, %modification_list_block.i.i ]
  %eq_i8.i = icmp eq i8 %list_get_load_element.i96161, -128
  br i1 %eq_i8.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_11.exit", %"#Attr_#dec_11.exit190"
  %tag_alloca21.sink179 = phi { [0 x i64], [1 x i64], i8, [7 x i8] }* [ %tag_alloca21, %"#Attr_#dec_11.exit" ], [ %tag_alloca, %"#Attr_#dec_11.exit190" ]
  %.sink = phi i8 [ 1, %"#Attr_#dec_11.exit" ], [ 0, %"#Attr_#dec_11.exit190" ]
  %tag_id_ptr24 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca21.sink179, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr24, align 8
  %19 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %0 to i8*
  %20 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca21.sink179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %19, i8* noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  ret void

then_block:                                       ; preds = %joinpointcont.us.preheader, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit, %joinpointcont.backedge.us
  br i1 %"cap > 0.i194.not", label %"#Attr_#dec_10.exit158", label %modification_list_block.i154

modification_list_block.i154:                     ; preds = %then_block
  %21 = load i64, i64* %get_rc_ptr.i201, align 8
  %.not.i.i.i.i153 = icmp eq i64 %21, 0
  br i1 %.not.i.i.i.i153, label %"#Attr_#dec_10.exit158", label %Then.i.i.i.i155

Then.i.i.i.i155:                                  ; preds = %modification_list_block.i154
  %22 = add i64 %21, -1
  store i64 %22, i64* %get_rc_ptr.i201, align 8
  %23 = icmp eq i64 %21, -9223372036854775808
  br i1 %23, label %Then1.i.i.i.i156, label %"#Attr_#dec_10.exit158"

Then1.i.i.i.i156:                                 ; preds = %Then.i.i.i.i155
  tail call void @roc_dealloc(i8* %8, i32 8) #11
  br label %"#Attr_#dec_10.exit158"

"#Attr_#dec_10.exit158":                          ; preds = %modification_list_block.i154, %Then.i.i.i.i155, %Then1.i.i.i.i156, %then_block
  br i1 %"cap > 0.i113.not", label %"#Attr_#dec_9.exit174", label %modification_list_block.i170

modification_list_block.i170:                     ; preds = %"#Attr_#dec_10.exit158"
  %24 = load i64, i64* %get_rc_ptr.i120, align 8
  %.not.i.i.i.i169 = icmp eq i64 %24, 0
  br i1 %.not.i.i.i.i169, label %"#Attr_#dec_9.exit174", label %Then.i.i.i.i171

Then.i.i.i.i171:                                  ; preds = %modification_list_block.i170
  %25 = add i64 %24, -1
  store i64 %25, i64* %get_rc_ptr.i120, align 8
  %26 = icmp eq i64 %24, -9223372036854775808
  br i1 %26, label %Then1.i.i.i.i172, label %"#Attr_#dec_9.exit174"

Then1.i.i.i.i172:                                 ; preds = %Then.i.i.i.i171
  tail call void @roc_dealloc(i8* %12, i32 8) #11
  br label %"#Attr_#dec_9.exit174"

"#Attr_#dec_9.exit174":                           ; preds = %modification_list_block.i170, %Then.i.i.i.i171, %Then1.i.i.i.i172, %"#Attr_#dec_10.exit158"
  br i1 %"cap > 0.i68.not", label %"#Attr_#dec_11.exit190", label %modification_list_block.i186

modification_list_block.i186:                     ; preds = %"#Attr_#dec_9.exit174"
  %27 = load i64, i64* %get_rc_ptr.i75, align 8
  %.not.i.i.i.i185 = icmp eq i64 %27, 0
  br i1 %.not.i.i.i.i185, label %"#Attr_#dec_11.exit190", label %Then.i.i.i.i187

Then.i.i.i.i187:                                  ; preds = %modification_list_block.i186
  %28 = add i64 %27, -1
  store i64 %28, i64* %get_rc_ptr.i75, align 8
  %29 = icmp eq i64 %27, -9223372036854775808
  br i1 %29, label %Then1.i.i.i.i188, label %"#Attr_#dec_11.exit190"

Then1.i.i.i.i188:                                 ; preds = %Then.i.i.i.i187
  tail call void @roc_dealloc(i8* %4, i32 8) #11
  br label %"#Attr_#dec_11.exit190"

"#Attr_#dec_11.exit190":                          ; preds = %modification_list_block.i186, %Then.i.i.i.i187, %Then1.i.i.i.i188, %"#Attr_#dec_9.exit174"
  %tag_alloca = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

else_block:                                       ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit
  %eq_i8.i191 = icmp eq i8 %list_get_load_element.i96161, %"94"
  br i1 %eq_i8.i191, label %then_block13, label %else_block14

then_block13:                                     ; preds = %else_block
  br i1 %"cap > 0.i194.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split, label %modification_list_block.i203

modification_list_block.i203:                     ; preds = %then_block13
  %30 = load i64, i64* %get_rc_ptr.i201, align 8
  %.not.i.i202 = icmp eq i64 %30, 0
  br i1 %.not.i.i202, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split, label %modification_list_block.i.i139

modification_list_block.i.i139:                   ; preds = %modification_list_block.i203
  %31 = add nsw i64 %30, 1
  store i64 %31, i64* %get_rc_ptr.i201, align 8
  %list_get_element.i127103 = getelementptr inbounds i64, i64* %cast_basic_basic.i126102, i64 %add_int_wrap.i50
  %list_get_load_element.i128104 = load i64, i64* %list_get_element.i127103, align 8
  %.not.i.i.i.i.i138 = icmp eq i64 %31, 0
  %spec.store.select199 = select i1 %.not.i.i.i.i.i138, i64 0, i64 %30
  store i64 %spec.store.select199, i64* %get_rc_ptr.i201, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split: ; preds = %then_block13, %modification_list_block.i203
  %list_get_element.i127103162 = getelementptr inbounds i64, i64* %cast_basic_basic.i126102, i64 %add_int_wrap.i50
  %list_get_load_element.i128104163 = load i64, i64* %list_get_element.i127103162, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit: ; preds = %modification_list_block.i.i139, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split
  %list_get_load_element.i128108 = phi i64 [ %list_get_load_element.i128104, %modification_list_block.i.i139 ], [ %list_get_load_element.i128104163, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split ]
  br i1 %"cap > 0.i113.not", label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split, label %modification_list_block.i122

modification_list_block.i122:                     ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit
  %32 = load i64, i64* %get_rc_ptr.i120, align 8
  %.not.i.i121 = icmp eq i64 %32, 0
  br i1 %.not.i.i121, label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split, label %modification_list_block.i.i107

modification_list_block.i.i107:                   ; preds = %modification_list_block.i122
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %get_rc_ptr.i120, align 8
  %list_get_load_element.elt.i111 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i110, i64 %list_get_load_element.i128108, i32 0
  %list_get_load_element.unpack.i112 = load i64, i64* %list_get_load_element.elt.i111, align 8
  %.not.i.i.i.i.i106 = icmp eq i64 %33, 0
  %spec.store.select200 = select i1 %.not.i.i.i.i.i106, i64 0, i64 %32
  store i64 %spec.store.select200, i64* %get_rc_ptr.i120, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit, %modification_list_block.i122
  %list_get_load_element.elt.i111165 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i110, i64 %list_get_load_element.i128108, i32 0
  %list_get_load_element.unpack.i112166 = load i64, i64* %list_get_load_element.elt.i111165, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit: ; preds = %modification_list_block.i.i107, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split
  %list_get_load_element.unpack.i116 = phi i64 [ %list_get_load_element.unpack.i112, %modification_list_block.i.i107 ], [ %list_get_load_element.unpack.i112166, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split ]
  %eq_u64.i94 = icmp eq i64 %list_get_load_element.unpack.i116, %"95"
  br i1 %eq_u64.i94, label %then_block19, label %else_block20

else_block14:                                     ; preds = %else_block
  %eq_u64.i93 = icmp eq i64 %joinpointarg6, 7
  br i1 %eq_u64.i93, label %joinpointcont.outer.backedge, label %joinpointcont.backedge

then_block19:                                     ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us
  %add_int_wrap.i50.lcssa124 = phi i64 [ %add_int_wrap.i50.us195, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us ], [ %add_int_wrap.i50, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit ]
  br i1 %"cap > 0.i194.not", label %"#Attr_#dec_10.exit", label %modification_list_block.i88

modification_list_block.i88:                      ; preds = %then_block19
  %34 = load i64, i64* %get_rc_ptr.i201, align 8
  %.not.i.i.i.i87 = icmp eq i64 %34, 0
  br i1 %.not.i.i.i.i87, label %"#Attr_#dec_10.exit", label %Then.i.i.i.i89

Then.i.i.i.i89:                                   ; preds = %modification_list_block.i88
  %35 = add i64 %34, -1
  store i64 %35, i64* %get_rc_ptr.i201, align 8
  %36 = icmp eq i64 %34, -9223372036854775808
  br i1 %36, label %Then1.i.i.i.i90, label %"#Attr_#dec_10.exit"

Then1.i.i.i.i90:                                  ; preds = %Then.i.i.i.i89
  tail call void @roc_dealloc(i8* %8, i32 8) #11
  br label %"#Attr_#dec_10.exit"

"#Attr_#dec_10.exit":                             ; preds = %modification_list_block.i88, %Then.i.i.i.i89, %Then1.i.i.i.i90, %then_block19
  br i1 %"cap > 0.i113.not", label %"#Attr_#dec_9.exit", label %modification_list_block.i62

modification_list_block.i62:                      ; preds = %"#Attr_#dec_10.exit"
  %37 = load i64, i64* %get_rc_ptr.i120, align 8
  %.not.i.i.i.i61 = icmp eq i64 %37, 0
  br i1 %.not.i.i.i.i61, label %"#Attr_#dec_9.exit", label %Then.i.i.i.i63

Then.i.i.i.i63:                                   ; preds = %modification_list_block.i62
  %38 = add i64 %37, -1
  store i64 %38, i64* %get_rc_ptr.i120, align 8
  %39 = icmp eq i64 %37, -9223372036854775808
  br i1 %39, label %Then1.i.i.i.i64, label %"#Attr_#dec_9.exit"

Then1.i.i.i.i64:                                  ; preds = %Then.i.i.i.i63
  tail call void @roc_dealloc(i8* %12, i32 8) #11
  br label %"#Attr_#dec_9.exit"

"#Attr_#dec_9.exit":                              ; preds = %modification_list_block.i62, %Then.i.i.i.i63, %Then1.i.i.i.i64, %"#Attr_#dec_10.exit"
  br i1 %"cap > 0.i68.not", label %"#Attr_#dec_11.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %"#Attr_#dec_9.exit"
  %40 = load i64, i64* %get_rc_ptr.i75, align 8
  %.not.i.i.i.i = icmp eq i64 %40, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_11.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %41 = add i64 %40, -1
  store i64 %41, i64* %get_rc_ptr.i75, align 8
  %42 = icmp eq i64 %40, -9223372036854775808
  br i1 %42, label %Then1.i.i.i.i, label %"#Attr_#dec_11.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %4, i32 8) #11
  br label %"#Attr_#dec_11.exit"

"#Attr_#dec_11.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_9.exit"
  %tag_alloca21 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %43 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca21, i64 0, i32 1, i64 0
  store i64 %add_int_wrap.i50.lcssa124, i64* %43, align 8
  br label %common.ret

else_block20:                                     ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit
  %eq_u64.i = icmp eq i64 %joinpointarg6, 7
  br i1 %eq_u64.i, label %joinpointcont.outer.backedge, label %joinpointcont.backedge

joinpointcont.outer.backedge:                     ; preds = %else_block14, %else_block20, %else_block14.us, %else_block20.us
  %struct_field_access_record_0.i41.sink = extractvalue { i64, i64, i64 } %joinpointarg5.ph, 0
  %struct_field_access_record_1.i42.sink = extractvalue { i64, i64, i64 } %joinpointarg5.ph, 1
  %add_int_wrap.i.i44 = add i64 %struct_field_access_record_2, %struct_field_access_record_1.i42.sink
  %int_bitwise_and.i.i45 = and i64 %add_int_wrap.i.i44, %struct_field_access_record_0.i41.sink
  %add_int_wrap.i5.i.pn = add i64 %struct_field_access_record_1.i42.sink, 1
  %insert_record_field.i.pn = insertvalue { i64, i64, i64 } zeroinitializer, i64 %struct_field_access_record_0.i41.sink, 0
  %insert_record_field3.i.pn = insertvalue { i64, i64, i64 } %insert_record_field.i.pn, i64 %add_int_wrap.i5.i.pn, 1
  %joinpointarg5.ph.be = insertvalue { i64, i64, i64 } %insert_record_field3.i.pn, i64 %int_bitwise_and.i.i45, 2
  br label %joinpointcont.outer

joinpointcont.backedge:                           ; preds = %else_block14, %else_block20
  %joinpointarg6.be = add i64 %joinpointarg6, 1
  br label %joinpointcont
}

; Function Attrs: nounwind
define internal fastcc void @Dict_findIndexHelper_ed169764ca9d337498c6be1dfb74e7ca1e917efa1f3a396b19453fd5d3901cc1(%list.RocList %"91", %list.RocList %"92", %list.RocList %"93", i8 %"94", i64 %"95", { i64, i64, i64 } %"96", { [0 x i64], [1 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %list_capacity_or_ref_ptr.i67 = extractvalue %list.RocList %"91", 2
  %"cap > 0.i68.not" = icmp eq i64 %list_capacity_or_ref_ptr.i67, 0
  %"91.elt53" = extractvalue %list.RocList %"91", 0
  %1 = ptrtoint i8* %"91.elt53" to i64
  %2 = shl i64 %list_capacity_or_ref_ptr.i67, 1
  %.not.i.i.i73 = icmp slt i64 %list_capacity_or_ref_ptr.i67, 0
  %3 = select i1 %.not.i.i.i73, i64 %2, i64 %1
  %as_usize_ptr.i74 = inttoptr i64 %3 to i64*
  %get_rc_ptr.i75 = getelementptr inbounds i64, i64* %as_usize_ptr.i74, i64 -1
  %4 = bitcast i64* %get_rc_ptr.i75 to i8*
  %list_capacity_or_ref_ptr.i193 = extractvalue %list.RocList %"92", 2
  %"cap > 0.i194.not" = icmp eq i64 %list_capacity_or_ref_ptr.i193, 0
  %"92.elt28" = extractvalue %list.RocList %"92", 0
  %5 = ptrtoint i8* %"92.elt28" to i64
  %6 = shl i64 %list_capacity_or_ref_ptr.i193, 1
  %.not.i.i.i199 = icmp slt i64 %list_capacity_or_ref_ptr.i193, 0
  %7 = select i1 %.not.i.i.i199, i64 %6, i64 %5
  %as_usize_ptr.i200 = inttoptr i64 %7 to i64*
  %get_rc_ptr.i201 = getelementptr inbounds i64, i64* %as_usize_ptr.i200, i64 -1
  %cast_basic_basic.i126102 = bitcast i8* %"92.elt28" to i64*
  %8 = bitcast i64* %get_rc_ptr.i201 to i8*
  %list_capacity_or_ref_ptr.i112 = extractvalue %list.RocList %"93", 2
  %"cap > 0.i113.not" = icmp eq i64 %list_capacity_or_ref_ptr.i112, 0
  %"93.elt18" = extractvalue %list.RocList %"93", 0
  %9 = ptrtoint i8* %"93.elt18" to i64
  %10 = shl i64 %list_capacity_or_ref_ptr.i112, 1
  %.not.i.i.i118 = icmp slt i64 %list_capacity_or_ref_ptr.i112, 0
  %11 = select i1 %.not.i.i.i118, i64 %10, i64 %9
  %as_usize_ptr.i119 = inttoptr i64 %11 to i64*
  %get_rc_ptr.i120 = getelementptr inbounds i64, i64* %as_usize_ptr.i119, i64 -1
  %cast_basic_basic.i110 = bitcast i8* %"93.elt18" to { i64, {} }*
  %12 = bitcast i64* %get_rc_ptr.i120 to i8*
  br label %joinpointcont.outer

joinpointcont.outer:                              ; preds = %joinpointcont.outer.backedge, %entry
  %joinpointarg5.ph = phi { i64, i64, i64 } [ %"96", %entry ], [ %joinpointarg5.ph.be, %joinpointcont.outer.backedge ]
  %struct_field_access_record_2 = extractvalue { i64, i64, i64 } %joinpointarg5.ph, 2
  %int_shift_left.i.i = shl i64 %struct_field_access_record_2, 3
  br i1 %"cap > 0.i68.not", label %joinpointcont.us.preheader, label %joinpointcont

joinpointcont.us.preheader:                       ; preds = %joinpointcont.outer
  %list_get_element.i.us191 = getelementptr inbounds i8, i8* %"91.elt53", i64 %int_shift_left.i.i
  %list_get_load_element.i.us192 = load i8, i8* %list_get_element.i.us191, align 1
  %eq_i8.i.us193 = icmp eq i8 %list_get_load_element.i.us192, -128
  br i1 %eq_i8.i.us193, label %then_block, label %else_block.us

else_block.us:                                    ; preds = %joinpointcont.us.preheader, %joinpointcont.backedge.us
  %list_get_load_element.i.us196 = phi i8 [ %list_get_load_element.i.us, %joinpointcont.backedge.us ], [ %list_get_load_element.i.us192, %joinpointcont.us.preheader ]
  %add_int_wrap.i50.us195 = phi i64 [ %add_int_wrap.i50.us, %joinpointcont.backedge.us ], [ %int_shift_left.i.i, %joinpointcont.us.preheader ]
  %joinpointarg6.us194 = phi i64 [ %joinpointarg6.be.us, %joinpointcont.backedge.us ], [ 0, %joinpointcont.us.preheader ]
  %eq_i8.i191.us = icmp eq i8 %list_get_load_element.i.us196, %"94"
  br i1 %eq_i8.i191.us, label %then_block13.us, label %else_block14.us

else_block14.us:                                  ; preds = %else_block.us
  %eq_u64.i93.us = icmp eq i64 %joinpointarg6.us194, 7
  br i1 %eq_u64.i93.us, label %joinpointcont.outer.backedge, label %joinpointcont.backedge.us

then_block13.us:                                  ; preds = %else_block.us
  br i1 %"cap > 0.i194.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split, label %modification_list_block.i203.us

modification_list_block.i203.us:                  ; preds = %then_block13.us
  %13 = load i64, i64* %get_rc_ptr.i201, align 8
  %.not.i.i202.us = icmp eq i64 %13, 0
  br i1 %.not.i.i202.us, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split, label %modification_list_block.i.i139.us

modification_list_block.i.i139.us:                ; preds = %modification_list_block.i203.us
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %get_rc_ptr.i201, align 8
  %list_get_element.i127103.us = getelementptr inbounds i64, i64* %cast_basic_basic.i126102, i64 %add_int_wrap.i50.us195
  %list_get_load_element.i128104.us = load i64, i64* %list_get_element.i127103.us, align 8
  %.not.i.i.i.i.i138.us = icmp eq i64 %14, 0
  %spec.store.select = select i1 %.not.i.i.i.i.i138.us, i64 0, i64 %13
  store i64 %spec.store.select, i64* %get_rc_ptr.i201, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split: ; preds = %then_block13.us, %modification_list_block.i203.us
  %list_get_element.i127103.us152 = getelementptr inbounds i64, i64* %cast_basic_basic.i126102, i64 %add_int_wrap.i50.us195
  %list_get_load_element.i128104.us153 = load i64, i64* %list_get_element.i127103.us152, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us: ; preds = %modification_list_block.i.i139.us, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split
  %list_get_load_element.i128108.us = phi i64 [ %list_get_load_element.i128104.us, %modification_list_block.i.i139.us ], [ %list_get_load_element.i128104.us153, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us.sink.split ]
  br i1 %"cap > 0.i113.not", label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split, label %modification_list_block.i122.us

modification_list_block.i122.us:                  ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us
  %15 = load i64, i64* %get_rc_ptr.i120, align 8
  %.not.i.i121.us = icmp eq i64 %15, 0
  br i1 %.not.i.i121.us, label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split, label %modification_list_block.i.i107.us

modification_list_block.i.i107.us:                ; preds = %modification_list_block.i122.us
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %get_rc_ptr.i120, align 8
  %list_get_load_element.elt.i111.us = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i110, i64 %list_get_load_element.i128108.us, i32 0
  %list_get_load_element.unpack.i112.us = load i64, i64* %list_get_load_element.elt.i111.us, align 8
  %.not.i.i.i.i.i106.us = icmp eq i64 %16, 0
  %spec.store.select197 = select i1 %.not.i.i.i.i.i106.us, i64 0, i64 %15
  store i64 %spec.store.select197, i64* %get_rc_ptr.i120, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.us, %modification_list_block.i122.us
  %list_get_load_element.elt.i111.us155 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i110, i64 %list_get_load_element.i128108.us, i32 0
  %list_get_load_element.unpack.i112.us156 = load i64, i64* %list_get_load_element.elt.i111.us155, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us: ; preds = %modification_list_block.i.i107.us, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split
  %list_get_load_element.unpack.i116.us = phi i64 [ %list_get_load_element.unpack.i112.us, %modification_list_block.i.i107.us ], [ %list_get_load_element.unpack.i112.us156, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us.sink.split ]
  %eq_u64.i94.us = icmp eq i64 %list_get_load_element.unpack.i116.us, %"95"
  br i1 %eq_u64.i94.us, label %then_block19, label %else_block20.us

else_block20.us:                                  ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us
  %eq_u64.i.us = icmp eq i64 %joinpointarg6.us194, 7
  br i1 %eq_u64.i.us, label %joinpointcont.outer.backedge, label %joinpointcont.backedge.us

joinpointcont.backedge.us:                        ; preds = %else_block20.us, %else_block14.us
  %joinpointarg6.be.us = add i64 %joinpointarg6.us194, 1
  %add_int_wrap.i50.us = add i64 %joinpointarg6.be.us, %int_shift_left.i.i
  %list_get_element.i.us = getelementptr inbounds i8, i8* %"91.elt53", i64 %add_int_wrap.i50.us
  %list_get_load_element.i.us = load i8, i8* %list_get_element.i.us, align 1
  %eq_i8.i.us = icmp eq i8 %list_get_load_element.i.us, -128
  br i1 %eq_i8.i.us, label %then_block, label %else_block.us

joinpointcont:                                    ; preds = %joinpointcont.outer, %joinpointcont.backedge
  %joinpointarg6 = phi i64 [ %joinpointarg6.be, %joinpointcont.backedge ], [ 0, %joinpointcont.outer ]
  %add_int_wrap.i50 = add i64 %joinpointarg6, %int_shift_left.i.i
  %17 = load i64, i64* %get_rc_ptr.i75, align 8
  %.not.i.i = icmp eq i64 %17, 0
  br i1 %.not.i.i, label %modification_list_block.i.i.thread, label %modification_list_block.i.i

modification_list_block.i.i.thread:               ; preds = %joinpointcont
  %list_get_element.i95158 = getelementptr inbounds i8, i8* %"91.elt53", i64 %add_int_wrap.i50
  %list_get_load_element.i96159 = load i8, i8* %list_get_element.i95158, align 1
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit

modification_list_block.i.i:                      ; preds = %joinpointcont
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %get_rc_ptr.i75, align 8
  %list_get_element.i95 = getelementptr inbounds i8, i8* %"91.elt53", i64 %add_int_wrap.i50
  %list_get_load_element.i96 = load i8, i8* %list_get_element.i95, align 1
  %.not.i.i.i.i.i = icmp eq i64 %18, 0
  %spec.store.select198 = select i1 %.not.i.i.i.i.i, i64 0, i64 %17
  store i64 %spec.store.select198, i64* %get_rc_ptr.i75, align 8
  br label %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit

Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit: ; preds = %modification_list_block.i.i, %modification_list_block.i.i.thread
  %list_get_load_element.i96161 = phi i8 [ %list_get_load_element.i96159, %modification_list_block.i.i.thread ], [ %list_get_load_element.i96, %modification_list_block.i.i ]
  %eq_i8.i = icmp eq i8 %list_get_load_element.i96161, -128
  br i1 %eq_i8.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_11.exit", %"#Attr_#dec_11.exit190"
  %tag_alloca21.sink179 = phi { [0 x i64], [1 x i64], i8, [7 x i8] }* [ %tag_alloca21, %"#Attr_#dec_11.exit" ], [ %tag_alloca, %"#Attr_#dec_11.exit190" ]
  %.sink = phi i8 [ 1, %"#Attr_#dec_11.exit" ], [ 0, %"#Attr_#dec_11.exit190" ]
  %tag_id_ptr24 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca21.sink179, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr24, align 8
  %19 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %0 to i8*
  %20 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca21.sink179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %19, i8* noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  ret void

then_block:                                       ; preds = %joinpointcont.us.preheader, %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit, %joinpointcont.backedge.us
  br i1 %"cap > 0.i194.not", label %"#Attr_#dec_10.exit158", label %modification_list_block.i154

modification_list_block.i154:                     ; preds = %then_block
  %21 = load i64, i64* %get_rc_ptr.i201, align 8
  %.not.i.i.i.i153 = icmp eq i64 %21, 0
  br i1 %.not.i.i.i.i153, label %"#Attr_#dec_10.exit158", label %Then.i.i.i.i155

Then.i.i.i.i155:                                  ; preds = %modification_list_block.i154
  %22 = add i64 %21, -1
  store i64 %22, i64* %get_rc_ptr.i201, align 8
  %23 = icmp eq i64 %21, -9223372036854775808
  br i1 %23, label %Then1.i.i.i.i156, label %"#Attr_#dec_10.exit158"

Then1.i.i.i.i156:                                 ; preds = %Then.i.i.i.i155
  tail call void @roc_dealloc(i8* %8, i32 8) #11
  br label %"#Attr_#dec_10.exit158"

"#Attr_#dec_10.exit158":                          ; preds = %modification_list_block.i154, %Then.i.i.i.i155, %Then1.i.i.i.i156, %then_block
  br i1 %"cap > 0.i113.not", label %"#Attr_#dec_9.exit174", label %modification_list_block.i170

modification_list_block.i170:                     ; preds = %"#Attr_#dec_10.exit158"
  %24 = load i64, i64* %get_rc_ptr.i120, align 8
  %.not.i.i.i.i169 = icmp eq i64 %24, 0
  br i1 %.not.i.i.i.i169, label %"#Attr_#dec_9.exit174", label %Then.i.i.i.i171

Then.i.i.i.i171:                                  ; preds = %modification_list_block.i170
  %25 = add i64 %24, -1
  store i64 %25, i64* %get_rc_ptr.i120, align 8
  %26 = icmp eq i64 %24, -9223372036854775808
  br i1 %26, label %Then1.i.i.i.i172, label %"#Attr_#dec_9.exit174"

Then1.i.i.i.i172:                                 ; preds = %Then.i.i.i.i171
  tail call void @roc_dealloc(i8* %12, i32 8) #11
  br label %"#Attr_#dec_9.exit174"

"#Attr_#dec_9.exit174":                           ; preds = %modification_list_block.i170, %Then.i.i.i.i171, %Then1.i.i.i.i172, %"#Attr_#dec_10.exit158"
  br i1 %"cap > 0.i68.not", label %"#Attr_#dec_11.exit190", label %modification_list_block.i186

modification_list_block.i186:                     ; preds = %"#Attr_#dec_9.exit174"
  %27 = load i64, i64* %get_rc_ptr.i75, align 8
  %.not.i.i.i.i185 = icmp eq i64 %27, 0
  br i1 %.not.i.i.i.i185, label %"#Attr_#dec_11.exit190", label %Then.i.i.i.i187

Then.i.i.i.i187:                                  ; preds = %modification_list_block.i186
  %28 = add i64 %27, -1
  store i64 %28, i64* %get_rc_ptr.i75, align 8
  %29 = icmp eq i64 %27, -9223372036854775808
  br i1 %29, label %Then1.i.i.i.i188, label %"#Attr_#dec_11.exit190"

Then1.i.i.i.i188:                                 ; preds = %Then.i.i.i.i187
  tail call void @roc_dealloc(i8* %4, i32 8) #11
  br label %"#Attr_#dec_11.exit190"

"#Attr_#dec_11.exit190":                          ; preds = %modification_list_block.i186, %Then.i.i.i.i187, %Then1.i.i.i.i188, %"#Attr_#dec_9.exit174"
  %tag_alloca = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  br label %common.ret

else_block:                                       ; preds = %Dict_listGetUnsafe_ce14e9ea696873a0f11478941d22eb9ae523ecd85871d8b2b2c6560d7db49a.exit
  %eq_i8.i191 = icmp eq i8 %list_get_load_element.i96161, %"94"
  br i1 %eq_i8.i191, label %then_block13, label %else_block14

then_block13:                                     ; preds = %else_block
  br i1 %"cap > 0.i194.not", label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split, label %modification_list_block.i203

modification_list_block.i203:                     ; preds = %then_block13
  %30 = load i64, i64* %get_rc_ptr.i201, align 8
  %.not.i.i202 = icmp eq i64 %30, 0
  br i1 %.not.i.i202, label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split, label %modification_list_block.i.i139

modification_list_block.i.i139:                   ; preds = %modification_list_block.i203
  %31 = add nsw i64 %30, 1
  store i64 %31, i64* %get_rc_ptr.i201, align 8
  %list_get_element.i127103 = getelementptr inbounds i64, i64* %cast_basic_basic.i126102, i64 %add_int_wrap.i50
  %list_get_load_element.i128104 = load i64, i64* %list_get_element.i127103, align 8
  %.not.i.i.i.i.i138 = icmp eq i64 %31, 0
  %spec.store.select199 = select i1 %.not.i.i.i.i.i138, i64 0, i64 %30
  store i64 %spec.store.select199, i64* %get_rc_ptr.i201, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split: ; preds = %then_block13, %modification_list_block.i203
  %list_get_element.i127103162 = getelementptr inbounds i64, i64* %cast_basic_basic.i126102, i64 %add_int_wrap.i50
  %list_get_load_element.i128104163 = load i64, i64* %list_get_element.i127103162, align 8
  br label %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit

Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit: ; preds = %modification_list_block.i.i139, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split
  %list_get_load_element.i128108 = phi i64 [ %list_get_load_element.i128104, %modification_list_block.i.i139 ], [ %list_get_load_element.i128104163, %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit.sink.split ]
  br i1 %"cap > 0.i113.not", label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split, label %modification_list_block.i122

modification_list_block.i122:                     ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit
  %32 = load i64, i64* %get_rc_ptr.i120, align 8
  %.not.i.i121 = icmp eq i64 %32, 0
  br i1 %.not.i.i121, label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split, label %modification_list_block.i.i107

modification_list_block.i.i107:                   ; preds = %modification_list_block.i122
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %get_rc_ptr.i120, align 8
  %list_get_load_element.elt.i111 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i110, i64 %list_get_load_element.i128108, i32 0
  %list_get_load_element.unpack.i112 = load i64, i64* %list_get_load_element.elt.i111, align 8
  %.not.i.i.i.i.i106 = icmp eq i64 %33, 0
  %spec.store.select200 = select i1 %.not.i.i.i.i.i106, i64 0, i64 %32
  store i64 %spec.store.select200, i64* %get_rc_ptr.i120, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split: ; preds = %Dict_listGetUnsafe_637c3624935f29f820b31588501b814cb8899d4543d2bcb49f239c683c7cde3.exit, %modification_list_block.i122
  %list_get_load_element.elt.i111165 = getelementptr inbounds { i64, {} }, { i64, {} }* %cast_basic_basic.i110, i64 %list_get_load_element.i128108, i32 0
  %list_get_load_element.unpack.i112166 = load i64, i64* %list_get_load_element.elt.i111165, align 8
  br label %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit

Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit: ; preds = %modification_list_block.i.i107, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split
  %list_get_load_element.unpack.i116 = phi i64 [ %list_get_load_element.unpack.i112, %modification_list_block.i.i107 ], [ %list_get_load_element.unpack.i112166, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.sink.split ]
  %eq_u64.i94 = icmp eq i64 %list_get_load_element.unpack.i116, %"95"
  br i1 %eq_u64.i94, label %then_block19, label %else_block20

else_block14:                                     ; preds = %else_block
  %eq_u64.i93 = icmp eq i64 %joinpointarg6, 7
  br i1 %eq_u64.i93, label %joinpointcont.outer.backedge, label %joinpointcont.backedge

then_block19:                                     ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us
  %add_int_wrap.i50.lcssa124 = phi i64 [ %add_int_wrap.i50.us195, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit.us ], [ %add_int_wrap.i50, %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit ]
  br i1 %"cap > 0.i194.not", label %"#Attr_#dec_10.exit", label %modification_list_block.i88

modification_list_block.i88:                      ; preds = %then_block19
  %34 = load i64, i64* %get_rc_ptr.i201, align 8
  %.not.i.i.i.i87 = icmp eq i64 %34, 0
  br i1 %.not.i.i.i.i87, label %"#Attr_#dec_10.exit", label %Then.i.i.i.i89

Then.i.i.i.i89:                                   ; preds = %modification_list_block.i88
  %35 = add i64 %34, -1
  store i64 %35, i64* %get_rc_ptr.i201, align 8
  %36 = icmp eq i64 %34, -9223372036854775808
  br i1 %36, label %Then1.i.i.i.i90, label %"#Attr_#dec_10.exit"

Then1.i.i.i.i90:                                  ; preds = %Then.i.i.i.i89
  tail call void @roc_dealloc(i8* %8, i32 8) #11
  br label %"#Attr_#dec_10.exit"

"#Attr_#dec_10.exit":                             ; preds = %modification_list_block.i88, %Then.i.i.i.i89, %Then1.i.i.i.i90, %then_block19
  br i1 %"cap > 0.i113.not", label %"#Attr_#dec_9.exit", label %modification_list_block.i62

modification_list_block.i62:                      ; preds = %"#Attr_#dec_10.exit"
  %37 = load i64, i64* %get_rc_ptr.i120, align 8
  %.not.i.i.i.i61 = icmp eq i64 %37, 0
  br i1 %.not.i.i.i.i61, label %"#Attr_#dec_9.exit", label %Then.i.i.i.i63

Then.i.i.i.i63:                                   ; preds = %modification_list_block.i62
  %38 = add i64 %37, -1
  store i64 %38, i64* %get_rc_ptr.i120, align 8
  %39 = icmp eq i64 %37, -9223372036854775808
  br i1 %39, label %Then1.i.i.i.i64, label %"#Attr_#dec_9.exit"

Then1.i.i.i.i64:                                  ; preds = %Then.i.i.i.i63
  tail call void @roc_dealloc(i8* %12, i32 8) #11
  br label %"#Attr_#dec_9.exit"

"#Attr_#dec_9.exit":                              ; preds = %modification_list_block.i62, %Then.i.i.i.i63, %Then1.i.i.i.i64, %"#Attr_#dec_10.exit"
  br i1 %"cap > 0.i68.not", label %"#Attr_#dec_11.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %"#Attr_#dec_9.exit"
  %40 = load i64, i64* %get_rc_ptr.i75, align 8
  %.not.i.i.i.i = icmp eq i64 %40, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_11.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %41 = add i64 %40, -1
  store i64 %41, i64* %get_rc_ptr.i75, align 8
  %42 = icmp eq i64 %40, -9223372036854775808
  br i1 %42, label %Then1.i.i.i.i, label %"#Attr_#dec_11.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %4, i32 8) #11
  br label %"#Attr_#dec_11.exit"

"#Attr_#dec_11.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_9.exit"
  %tag_alloca21 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %43 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca21, i64 0, i32 1, i64 0
  store i64 %add_int_wrap.i50.lcssa124, i64* %43, align 8
  br label %common.ret

else_block20:                                     ; preds = %Dict_listGetUnsafe_b095208171c1c72c5739fdfc703f9a39849c28fc45e1e84cb576a3d7b979d.exit
  %eq_u64.i = icmp eq i64 %joinpointarg6, 7
  br i1 %eq_u64.i, label %joinpointcont.outer.backedge, label %joinpointcont.backedge

joinpointcont.outer.backedge:                     ; preds = %else_block14, %else_block20, %else_block14.us, %else_block20.us
  %struct_field_access_record_0.i41.sink = extractvalue { i64, i64, i64 } %joinpointarg5.ph, 0
  %struct_field_access_record_1.i42.sink = extractvalue { i64, i64, i64 } %joinpointarg5.ph, 1
  %add_int_wrap.i.i44 = add i64 %struct_field_access_record_2, %struct_field_access_record_1.i42.sink
  %int_bitwise_and.i.i45 = and i64 %add_int_wrap.i.i44, %struct_field_access_record_0.i41.sink
  %add_int_wrap.i5.i.pn = add i64 %struct_field_access_record_1.i42.sink, 1
  %insert_record_field.i.pn = insertvalue { i64, i64, i64 } zeroinitializer, i64 %struct_field_access_record_0.i41.sink, 0
  %insert_record_field3.i.pn = insertvalue { i64, i64, i64 } %insert_record_field.i.pn, i64 %add_int_wrap.i5.i.pn, 1
  %joinpointarg5.ph.be = insertvalue { i64, i64, i64 } %insert_record_field3.i.pn, i64 %int_bitwise_and.i.i45, 2
  br label %joinpointcont.outer

joinpointcont.backedge:                           ; preds = %else_block14, %else_block20
  %joinpointarg6.be = add i64 %joinpointarg6, 1
  br label %joinpointcont
}

; Function Attrs: nounwind
define internal fastcc void @List_last_deb68aa7af341ff4b89cb152327848b7ca14b05d435651625c81f0d8fa516(%list.RocList %list, { [0 x i64], [1 x i64], i8, [7 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %result_value = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %list_len.i = extractvalue %list.RocList %list, 1
  %call.i = tail call i64 @llvm.usub.sat.i64(i64 %list_len.i, i64 1) #11
  call fastcc void @List_get_88ecaf34605d4babf11d9fca1495df88ce587924eefcbe1079cfc8adccdfc7db(%list.RocList %list, i64 %call.i, { [0 x i64], [1 x i64], i8, [7 x i8] }* nonnull %result_value)
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 8
  %eq_u8 = icmp eq i8 %load_tag_id, 1
  br i1 %eq_u8, label %then_block, label %else_block

common.ret:                                       ; preds = %else_block, %then_block
  %tag_alloca4.sink9 = phi { [0 x i64], [1 x i64], i8, [7 x i8] }* [ %tag_alloca4, %else_block ], [ %tag_alloca, %then_block ]
  %.sink = phi i8 [ 0, %else_block ], [ 1, %then_block ]
  %tag_id_ptr7 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca4.sink9, i64 0, i32 2
  store i8 %.sink, i8* %tag_id_ptr7, align 8
  %1 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %0 to i8*
  %2 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca4.sink9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %1, i8* noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  ret void

then_block:                                       ; preds = %entry
  %get_opaque_data_ptr2 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value, i64 0, i32 1, i64 0
  %load_element = load i64, i64* %get_opaque_data_ptr2, align 8
  %tag_alloca = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %3 = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %tag_alloca, i64 0, i32 1, i64 0
  store i64 %load_element, i64* %3, align 8
  br label %common.ret

else_block:                                       ; preds = %entry
  %tag_alloca4 = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  br label %common.ret
}

; Function Attrs: nounwind
define internal fastcc void @Arg_formatHelp_5c516f89ea1e31b287b38913ed386287c31e3b5f58cdcf4bae54c31396b65d1({ %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nocapture readonly %"708", %str.RocStr* nocapture %0) unnamed_addr #11 {
entry:
  %result_value.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i = alloca %str.RocStr, align 8
  %result_value6 = alloca %str.RocStr, align 8
  %result_value5 = alloca %str.RocStr, align 8
  %result_value4 = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %result_value3 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %struct_field1 = alloca %str.RocStr, align 8
  %struct_field = alloca %str.RocStr, align 8
  %1 = bitcast %str.RocStr* %struct_field to i8*
  %2 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"708" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  %struct_field_access_record_1 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"708", i64 0, i32 1
  %3 = bitcast %str.RocStr* %struct_field1 to i8*
  %4 = bitcast %str.RocStr* %struct_field_access_record_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false)
  %struct_field_access_record_2 = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %"708", i64 0, i32 2
  %struct_field2 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_2, align 8
  %call_builtin.i.i = call fastcc i64 @roc_builtins.str.number_of_bytes(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %str_len_is_zero.i.i = icmp eq i64 %call_builtin.i.i, 0
  br i1 %str_len_is_zero.i.i, label %then_block.i, label %else_block.i

then_block.i:                                     ; preds = %entry
  %5 = bitcast %str.RocStr* %result_value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  br label %Arg_mapNonEmptyStr_4ddae99c1b85c299ce6a71514495bbb3c85f170536822bba92f337f4f96c2d.exit

else_block.i:                                     ; preds = %entry
  %result_value.i.i.0.sroa_cast = bitcast %str.RocStr* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %result_value.i.i.0.sroa_cast)
  %6 = bitcast %str.RocStr* %const_str_store.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %const_str_store.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 0
  store i8* inttoptr (i64 10 to i8*), i8** %const_str_store.repack.i.i, align 8
  %const_str_store.repack1.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store.repack1.i.i, align 8
  %const_str_store.repack2.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store.repack2.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i, %str.RocStr* nocapture nonnull readonly %struct_field) #11
  %load_str_to_stack.i.i.i.elt40 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field, i64 0, i32 2
  %load_str_to_stack.i.i.i.unpack41 = load i64, i64* %load_str_to_stack.i.i.i.elt40, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack41, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %Arg_465_a1993131ac0ddeabba8fffeca93768df14281f7aec37381a9461c75245ec24b.exit.i

modify_rc.i.i.i:                                  ; preds = %else_block.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %7 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %8 = load i64, i64* %7, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %8, 0
  br i1 %.not.i.i.i.i.i.i, label %Arg_465_a1993131ac0ddeabba8fffeca93768df14281f7aec37381a9461c75245ec24b.exit.i, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %9 = add i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %8, -9223372036854775808
  br i1 %10, label %Then1.i.i.i.i.i.i, label %Arg_465_a1993131ac0ddeabba8fffeca93768df14281f7aec37381a9461c75245ec24b.exit.i

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %Arg_465_a1993131ac0ddeabba8fffeca93768df14281f7aec37381a9461c75245ec24b.exit.i

Arg_465_a1993131ac0ddeabba8fffeca93768df14281f7aec37381a9461c75245ec24b.exit.i: ; preds = %modify_rc.i.i.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %else_block.i
  %result_value64 = bitcast %str.RocStr* %result_value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %result_value64, i8* noundef nonnull align 8 dereferenceable(24) %result_value.i.i.0.sroa_cast, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %result_value.i.i.0.sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  br label %Arg_mapNonEmptyStr_4ddae99c1b85c299ce6a71514495bbb3c85f170536822bba92f337f4f96c2d.exit

Arg_mapNonEmptyStr_4ddae99c1b85c299ce6a71514495bbb3c85f170536822bba92f337f4f96c2d.exit: ; preds = %then_block.i, %Arg_465_a1993131ac0ddeabba8fffeca93768df14281f7aec37381a9461c75245ec24b.exit.i
  %call.i = tail call fastcc { [0 x i64], [3 x i64] }* @Arg_toHelpHelper_b4a1ce1cc6482a6eb4e497188770c2a53ecfdb6ca89a71ba81bb9e1b77f5d151({ [0 x i64], [12 x i64] }* %struct_field2) #11
  call fastcc void @Arg_formatHelpHelp_3be6299315d35c9efc205b8b814047b2fa1b123fde69cf32b75a0d03c346ab3(i64 0, { [0 x i64], [3 x i64] }* nonnull %call.i, %str.RocStr* nonnull %result_value3)
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* inttoptr (i64 10 to i8*), i8** %const_str_store.repack, align 8
  %const_str_store.repack7 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 0, i64* %const_str_store.repack7, align 8
  %const_str_store.repack8 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 -9151314442816847872, i64* %const_str_store.repack8, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value4, %str.RocStr* nonnull readonly %const_str_store, %str.RocStr* nocapture nonnull readonly %result_value3) #11
  %load_str_to_stack.i.elt45 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value3, i64 0, i32 2
  %load_str_to_stack.i.unpack46 = load i64, i64* %load_str_to_stack.i.elt45, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack46, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %Arg_mapNonEmptyStr_4ddae99c1b85c299ce6a71514495bbb3c85f170536822bba92f337f4f96c2d.exit
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value3) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %11 = bitcast i8* %get_rc_ptr.i to i64*
  %12 = load i64, i64* %11, align 8
  %.not.i.i.i.i = icmp eq i64 %12, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %13 = add i64 %12, -1
  store i64 %13, i64* %11, align 8
  %14 = icmp eq i64 %12, -9223372036854775808
  br i1 %14, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %Arg_mapNonEmptyStr_4ddae99c1b85c299ce6a71514495bbb3c85f170536822bba92f337f4f96c2d.exit
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value5, %str.RocStr* nonnull readonly %result_value, %str.RocStr* nocapture nonnull readonly %result_value4) #11
  %load_str_to_stack.i10.elt50 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value4, i64 0, i32 2
  %load_str_to_stack.i10.unpack51 = load i64, i64* %load_str_to_stack.i10.elt50, align 8
  %is_big_str.i12 = icmp sgt i64 %load_str_to_stack.i10.unpack51, 0
  br i1 %is_big_str.i12, label %modify_rc.i17, label %"#Attr_#dec_4.exit21"

modify_rc.i17:                                    ; preds = %"#Attr_#dec_4.exit"
  %call_builtin.i13 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value4) #11
  %get_rc_ptr.i15 = getelementptr inbounds i8, i8* %call_builtin.i13, i64 -8
  %15 = bitcast i8* %get_rc_ptr.i15 to i64*
  %16 = load i64, i64* %15, align 8
  %.not.i.i.i.i16 = icmp eq i64 %16, 0
  br i1 %.not.i.i.i.i16, label %"#Attr_#dec_4.exit21", label %Then.i.i.i.i18

Then.i.i.i.i18:                                   ; preds = %modify_rc.i17
  %17 = add i64 %16, -1
  store i64 %17, i64* %15, align 8
  %18 = icmp eq i64 %16, -9223372036854775808
  br i1 %18, label %Then1.i.i.i.i19, label %"#Attr_#dec_4.exit21"

Then1.i.i.i.i19:                                  ; preds = %Then.i.i.i.i18
  tail call void @roc_dealloc(i8* %get_rc_ptr.i15, i32 8) #11
  br label %"#Attr_#dec_4.exit21"

"#Attr_#dec_4.exit21":                            ; preds = %modify_rc.i17, %Then.i.i.i.i18, %Then1.i.i.i.i19, %"#Attr_#dec_4.exit"
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value6, %str.RocStr* nonnull readonly %struct_field1, %str.RocStr* nocapture nonnull readonly %result_value5) #11
  %load_str_to_stack.i23.elt55 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value5, i64 0, i32 2
  %load_str_to_stack.i23.unpack56 = load i64, i64* %load_str_to_stack.i23.elt55, align 8
  %is_big_str.i25 = icmp sgt i64 %load_str_to_stack.i23.unpack56, 0
  br i1 %is_big_str.i25, label %modify_rc.i30, label %"#Attr_#dec_4.exit34"

modify_rc.i30:                                    ; preds = %"#Attr_#dec_4.exit21"
  %call_builtin.i26 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value5) #11
  %get_rc_ptr.i28 = getelementptr inbounds i8, i8* %call_builtin.i26, i64 -8
  %19 = bitcast i8* %get_rc_ptr.i28 to i64*
  %20 = load i64, i64* %19, align 8
  %.not.i.i.i.i29 = icmp eq i64 %20, 0
  br i1 %.not.i.i.i.i29, label %"#Attr_#dec_4.exit34", label %Then.i.i.i.i31

Then.i.i.i.i31:                                   ; preds = %modify_rc.i30
  %21 = add i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %20, -9223372036854775808
  br i1 %22, label %Then1.i.i.i.i32, label %"#Attr_#dec_4.exit34"

Then1.i.i.i.i32:                                  ; preds = %Then.i.i.i.i31
  tail call void @roc_dealloc(i8* %get_rc_ptr.i28, i32 8) #11
  br label %"#Attr_#dec_4.exit34"

"#Attr_#dec_4.exit34":                            ; preds = %modify_rc.i30, %Then.i.i.i.i31, %Then1.i.i.i.i32, %"#Attr_#dec_4.exit21"
  %23 = bitcast %str.RocStr* %result_value6 to i8*
  %24 = bitcast %str.RocStr* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %24, i8* noundef nonnull align 8 dereferenceable(24) %23, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind
define internal fastcc void @List_get_4bc3befd4127054416125539e7bc161699db1de9fc4587f06d2ee1b827f164(%list.RocList %list, i64 %index, { [0 x i8], [1 x i8], i8, [0 x i8] }* nocapture %0) unnamed_addr #11 {
entry:
  %list_len.i = extractvalue %list.RocList %list, 1
  %lt_uint.i = icmp ugt i64 %list_len.i, %index
  br i1 %lt_uint.i, label %then_block, label %else_block

common.ret:                                       ; preds = %"#Attr_#dec_29.exit", %"#Attr_#dec_29.exit23"
  ret void

then_block:                                       ; preds = %entry
  %read_list_ptr.i = extractvalue %list.RocList %list, 0
  %list_get_element.i = getelementptr inbounds i8, i8* %read_list_ptr.i, i64 %index
  %list_get_load_element.i = load i8, i8* %list_get_element.i, align 1
  %list_capacity_or_ref_ptr.i9 = extractvalue %list.RocList %list, 2
  %"cap > 0.i10.not" = icmp eq i64 %list_capacity_or_ref_ptr.i9, 0
  br i1 %"cap > 0.i10.not", label %"#Attr_#dec_29.exit23", label %modification_list_block.i19

modification_list_block.i19:                      ; preds = %then_block
  %1 = ptrtoint i8* %read_list_ptr.i to i64
  %2 = shl i64 %list_capacity_or_ref_ptr.i9, 1
  %.not.i.i.i15 = icmp slt i64 %list_capacity_or_ref_ptr.i9, 0
  %3 = select i1 %.not.i.i.i15, i64 %2, i64 %1
  %as_usize_ptr.i16 = inttoptr i64 %3 to i64*
  %get_rc_ptr.i17 = getelementptr inbounds i64, i64* %as_usize_ptr.i16, i64 -1
  %4 = load i64, i64* %get_rc_ptr.i17, align 8
  %.not.i.i.i.i18 = icmp eq i64 %4, 0
  br i1 %.not.i.i.i.i18, label %"#Attr_#dec_29.exit23", label %Then.i.i.i.i20

Then.i.i.i.i20:                                   ; preds = %modification_list_block.i19
  %5 = add i64 %4, -1
  store i64 %5, i64* %get_rc_ptr.i17, align 8
  %6 = icmp eq i64 %4, -9223372036854775808
  br i1 %6, label %Then1.i.i.i.i21, label %"#Attr_#dec_29.exit23"

Then1.i.i.i.i21:                                  ; preds = %Then.i.i.i.i20
  %7 = bitcast i64* %get_rc_ptr.i17 to i8*
  tail call void @roc_dealloc(i8* %7, i32 8) #11
  br label %"#Attr_#dec_29.exit23"

"#Attr_#dec_29.exit23":                           ; preds = %modification_list_block.i19, %Then.i.i.i.i20, %Then1.i.i.i.i21, %then_block
  %tag_alloca = alloca i16, align 8
  %tmpcast7 = bitcast i16* %tag_alloca to { [0 x i8], [1 x i8], i8, [0 x i8] }*
  %8 = bitcast i16* %tag_alloca to i8*
  store i8 %list_get_load_element.i, i8* %8, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %tmpcast7, i64 0, i32 2
  store i8 1, i8* %tag_id_ptr, align 1
  %9 = bitcast { [0 x i8], [1 x i8], i8, [0 x i8] }* %0 to i16*
  %10 = load i16, i16* %tag_alloca, align 8
  store i16 %10, i16* %9, align 1
  br label %common.ret

else_block:                                       ; preds = %entry
  %list_capacity_or_ref_ptr.i = extractvalue %list.RocList %list, 2
  %"cap > 0.i.not" = icmp eq i64 %list_capacity_or_ref_ptr.i, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#dec_29.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %else_block
  %list.elt = extractvalue %list.RocList %list, 0
  %11 = ptrtoint i8* %list.elt to i64
  %12 = shl i64 %list_capacity_or_ref_ptr.i, 1
  %.not.i.i.i = icmp slt i64 %list_capacity_or_ref_ptr.i, 0
  %13 = select i1 %.not.i.i.i, i64 %12, i64 %11
  %as_usize_ptr.i = inttoptr i64 %13 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %14 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_29.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %15 = add i64 %14, -1
  store i64 %15, i64* %get_rc_ptr.i, align 8
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i, label %"#Attr_#dec_29.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %17 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %17, i32 8) #11
  br label %"#Attr_#dec_29.exit"

"#Attr_#dec_29.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %else_block
  %tag_alloca3 = alloca i16, align 8
  %tmpcast = bitcast i16* %tag_alloca3 to { [0 x i8], [1 x i8], i8, [0 x i8] }*
  %tag_id_ptr6 = getelementptr inbounds { [0 x i8], [1 x i8], i8, [0 x i8] }, { [0 x i8], [1 x i8], i8, [0 x i8] }* %tmpcast, i64 0, i32 2
  store i8 0, i8* %tag_id_ptr6, align 1
  %18 = bitcast { [0 x i8], [1 x i8], i8, [0 x i8] }* %0 to i16*
  %19 = load i16, i16* %tag_alloca3, align 8
  store i16 %19, i16* %18, align 1
  br label %common.ret
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %"#arg1") unnamed_addr #11 {
entry:
  %struct_field2.i72 = alloca %str.RocStr, align 8
  %struct_field1.i73 = alloca %str.RocStr, align 8
  %struct_field.i74 = alloca %str.RocStr, align 8
  %struct_field1.i33 = alloca %str.RocStr, align 8
  %struct_field.i34 = alloca %str.RocStr, align 8
  %struct_field2.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %decrement_struct_field20.sroa.0 = alloca [10 x i64], align 8
  %decrement_struct_field15 = alloca %str.RocStr, align 8
  %decrement_struct_field7 = alloca %str.RocStr, align 8
  %decrement_struct_field5 = alloca { %str.RocStr, %str.RocStr }, align 8
  %decrement_struct_field = alloca { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, align 8
  %decrement_struct_field20.sroa.0.0.sroa_cast = bitcast [10 x i64]* %decrement_struct_field20.sroa.0 to i8*
  %0 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  %1 = bitcast %str.RocStr* %struct_field.i.i to i8*
  %load_str_to_stack.i.i.i.elt223 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  %decrement_struct_field20.sroa.0.24.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %decrement_struct_field20.sroa.0, i64 0, i64 3
  %decrement_struct_field20.sroa.0.24.sroa_cast = bitcast i64* %decrement_struct_field20.sroa.0.24.sroa_idx to i8*
  %load_str_to_stack.i90.elt228 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %2 = bitcast %str.RocStr* %struct_field2.i72 to i8*
  %3 = bitcast %str.RocStr* %struct_field1.i73 to i8*
  %4 = bitcast %str.RocStr* %struct_field.i74 to i8*
  %load_str_to_stack.i.i76.elt233 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i74, i64 0, i32 2
  %load_str_to_stack.i138.elt238 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i73, i64 0, i32 2
  %decrement_struct_field20.sroa.0.48.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %decrement_struct_field20.sroa.0, i64 0, i64 6
  %decrement_struct_field20.sroa.0.48.sroa_cast = bitcast i64* %decrement_struct_field20.sroa.0.48.sroa_idx to i8*
  %load_str_to_stack.i150.elt243 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i72, i64 0, i32 2
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %"#arg1.tr" = phi { [0 x i64], [12 x i64] }* [ %"#arg1", %entry ], [ %load_recursive_pointer220, %tailrecurse.backedge ]
  %to_int1 = ptrtoint { [0 x i64], [12 x i64] }* %"#arg1.tr" to i64
  %masked = and i64 %to_int1, 7
  %index = sub nsw i64 0, %masked
  %cast_to_i8_ptr = bitcast { [0 x i64], [12 x i64] }* %"#arg1.tr" to i8*
  %new_ptr = getelementptr inbounds i8, i8* %cast_to_i8_ptr, i64 %index
  %get_rc_ptr = getelementptr inbounds i8, i8* %new_ptr, i64 -8
  %5 = bitcast i8* %get_rc_ptr to i64*
  %get_refcount = load i64, i64* %5, align 8
  switch i64 %get_refcount, label %Then.i.i.i22 [
    i64 -9223372036854775808, label %do_recurse
    i64 0, label %common.ret
  ]

do_recurse:                                       ; preds = %tailrecurse
  %6 = trunc i64 %to_int1 to i3
  switch i3 %6, label %Then1.i.i.i [
    i3 -3, label %decrement_refcounted_ptr_8.exit55
    i3 -4, label %decrement_refcounted_ptr_8.exit59
    i3 3, label %decrement_refcounted_ptr_8.exit51
    i3 2, label %decrement_refcounted_ptr_8.exit32
    i3 1, label %decrement_refcounted_ptr_8.exit28
  ]

common.ret:                                       ; preds = %tailrecurse, %Then.i.i.i22, %Then1.i.i.i, %decrement_refcounted_ptr_8.exit59, %Then1.i.i.i.i69, %Then.i.i.i.i68, %modify_rc.i67, %"#Attr_#dec_4.exit137", %Then1.i.i.i.i, %Then.i.i.i.i, %modify_rc.i, %decrement_refcounted_ptr_8.exit51, %"#Attr_#dec_4.exit125"
  ret void

Then.i.i.i22:                                     ; preds = %tailrecurse
  %7 = bitcast i8* %get_rc_ptr to i64*
  %8 = add nsw i64 %get_refcount, -1
  store i64 %8, i64* %7, align 8
  br label %common.ret

decrement_refcounted_ptr_8.exit28:                ; preds = %do_recurse
  %9 = bitcast i8* %get_rc_ptr to i64*
  %10 = bitcast { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %decrement_struct_field to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %10, i8* noundef nonnull align 8 dereferenceable(80) %new_ptr, i64 80, i1 false)
  store i64 9223372036854775807, i64* %9, align 8
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  %11 = bitcast %str.RocStr* %struct_field2.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11)
  %12 = bitcast %str.RocStr* %struct_field1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12)
  %13 = bitcast %str.RocStr* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %13, i8* noundef nonnull align 8 dereferenceable(24) %10, i64 24, i1 false) #11
  %load_str_to_stack.i.i.elt182 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i.i.unpack183 = load i64, i64* %load_str_to_stack.i.i.elt182, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack183, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_3.exit"

modify_rc.i.i:                                    ; preds = %decrement_refcounted_ptr_8.exit28
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %14 = bitcast i8* %get_rc_ptr.i.i to i64*
  %15 = load i64, i64* %14, align 8
  %.not.i.i.i.i.i = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_3.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %15, -9223372036854775808
  br i1 %17, label %Then1.i.i.i.i.i, label %"#Attr_#dec_3.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_3.exit"

"#Attr_#dec_3.exit":                              ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %decrement_refcounted_ptr_8.exit28
  %struct_field_access_record_1.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %decrement_struct_field, i64 0, i32 1
  %18 = bitcast %str.RocStr* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %12, i8* noundef nonnull align 8 dereferenceable(24) %18, i64 24, i1 false) #11
  %load_str_to_stack.i102.elt187 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %load_str_to_stack.i102.unpack188 = load i64, i64* %load_str_to_stack.i102.elt187, align 8
  %is_big_str.i104 = icmp sgt i64 %load_str_to_stack.i102.unpack188, 0
  br i1 %is_big_str.i104, label %modify_rc.i109, label %"#Attr_#dec_4.exit113"

modify_rc.i109:                                   ; preds = %"#Attr_#dec_3.exit"
  %call_builtin.i105 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i107 = getelementptr inbounds i8, i8* %call_builtin.i105, i64 -8
  %19 = bitcast i8* %get_rc_ptr.i107 to i64*
  %20 = load i64, i64* %19, align 8
  %.not.i.i.i.i108 = icmp eq i64 %20, 0
  br i1 %.not.i.i.i.i108, label %"#Attr_#dec_4.exit113", label %Then.i.i.i.i110

Then.i.i.i.i110:                                  ; preds = %modify_rc.i109
  %21 = add i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %20, -9223372036854775808
  br i1 %22, label %Then1.i.i.i.i111, label %"#Attr_#dec_4.exit113"

Then1.i.i.i.i111:                                 ; preds = %Then.i.i.i.i110
  tail call void @roc_dealloc(i8* %get_rc_ptr.i107, i32 8) #11
  br label %"#Attr_#dec_4.exit113"

"#Attr_#dec_4.exit113":                           ; preds = %modify_rc.i109, %Then.i.i.i.i110, %Then1.i.i.i.i111, %"#Attr_#dec_3.exit"
  %struct_field_access_record_2.i = getelementptr inbounds { %str.RocStr, %str.RocStr, %str.RocStr, i8 }, { %str.RocStr, %str.RocStr, %str.RocStr, i8 }* %decrement_struct_field, i64 0, i32 2
  %23 = bitcast %str.RocStr* %struct_field_access_record_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %11, i8* noundef nonnull align 8 dereferenceable(24) %23, i64 24, i1 false) #11
  %load_str_to_stack.i114.elt192 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i, i64 0, i32 2
  %load_str_to_stack.i114.unpack193 = load i64, i64* %load_str_to_stack.i114.elt192, align 8
  %is_big_str.i116 = icmp sgt i64 %load_str_to_stack.i114.unpack193, 0
  br i1 %is_big_str.i116, label %modify_rc.i121, label %"#Attr_#dec_4.exit125"

modify_rc.i121:                                   ; preds = %"#Attr_#dec_4.exit113"
  %call_builtin.i117 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i) #11
  %get_rc_ptr.i119 = getelementptr inbounds i8, i8* %call_builtin.i117, i64 -8
  %24 = bitcast i8* %get_rc_ptr.i119 to i64*
  %25 = load i64, i64* %24, align 8
  %.not.i.i.i.i120 = icmp eq i64 %25, 0
  br i1 %.not.i.i.i.i120, label %"#Attr_#dec_4.exit125", label %Then.i.i.i.i122

Then.i.i.i.i122:                                  ; preds = %modify_rc.i121
  %26 = add i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %25, -9223372036854775808
  br i1 %27, label %Then1.i.i.i.i123, label %"#Attr_#dec_4.exit125"

Then1.i.i.i.i123:                                 ; preds = %Then.i.i.i.i122
  tail call void @roc_dealloc(i8* %get_rc_ptr.i119, i32 8) #11
  br label %"#Attr_#dec_4.exit125"

"#Attr_#dec_4.exit125":                           ; preds = %modify_rc.i121, %Then.i.i.i.i122, %Then1.i.i.i.i123, %"#Attr_#dec_4.exit113"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  br label %common.ret

decrement_refcounted_ptr_8.exit32:                ; preds = %do_recurse
  %28 = bitcast i8* %get_rc_ptr to i64*
  %29 = bitcast { %str.RocStr, %str.RocStr }* %decrement_struct_field5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %29, i8* noundef nonnull align 8 dereferenceable(48) %new_ptr, i64 48, i1 false)
  %gep_recursive_pointer6 = getelementptr inbounds i8, i8* %new_ptr, i64 48
  %30 = bitcast %str.RocStr* %decrement_struct_field7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %30, i8* noundef nonnull align 8 dereferenceable(24) %gep_recursive_pointer6, i64 24, i1 false)
  store i64 9223372036854775807, i64* %28, align 8
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  %31 = bitcast %str.RocStr* %struct_field1.i33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %str.RocStr* %struct_field.i34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %32, i8* noundef nonnull align 8 dereferenceable(24) %29, i64 24, i1 false) #11
  %load_str_to_stack.i.i36.elt197 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i34, i64 0, i32 2
  %load_str_to_stack.i.i36.unpack198 = load i64, i64* %load_str_to_stack.i.i36.elt197, align 8
  %is_big_str.i.i38 = icmp sgt i64 %load_str_to_stack.i.i36.unpack198, 0
  br i1 %is_big_str.i.i38, label %modify_rc.i.i43, label %"#Attr_#dec_5.exit"

modify_rc.i.i43:                                  ; preds = %decrement_refcounted_ptr_8.exit32
  %call_builtin.i.i39 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i34) #11
  %get_rc_ptr.i.i41 = getelementptr inbounds i8, i8* %call_builtin.i.i39, i64 -8
  %33 = bitcast i8* %get_rc_ptr.i.i41 to i64*
  %34 = load i64, i64* %33, align 8
  %.not.i.i.i.i.i42 = icmp eq i64 %34, 0
  br i1 %.not.i.i.i.i.i42, label %"#Attr_#dec_5.exit", label %Then.i.i.i.i.i44

Then.i.i.i.i.i44:                                 ; preds = %modify_rc.i.i43
  %35 = add i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %34, -9223372036854775808
  br i1 %36, label %Then1.i.i.i.i.i45, label %"#Attr_#dec_5.exit"

Then1.i.i.i.i.i45:                                ; preds = %Then.i.i.i.i.i44
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i41, i32 8) #11
  br label %"#Attr_#dec_5.exit"

"#Attr_#dec_5.exit":                              ; preds = %modify_rc.i.i43, %Then.i.i.i.i.i44, %Then1.i.i.i.i.i45, %decrement_refcounted_ptr_8.exit32
  %struct_field_access_record_1.i47 = getelementptr inbounds { %str.RocStr, %str.RocStr }, { %str.RocStr, %str.RocStr }* %decrement_struct_field5, i64 0, i32 1
  %37 = bitcast %str.RocStr* %struct_field_access_record_1.i47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %31, i8* noundef nonnull align 8 dereferenceable(24) %37, i64 24, i1 false) #11
  %load_str_to_stack.i126.elt202 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i33, i64 0, i32 2
  %load_str_to_stack.i126.unpack203 = load i64, i64* %load_str_to_stack.i126.elt202, align 8
  %is_big_str.i128 = icmp sgt i64 %load_str_to_stack.i126.unpack203, 0
  br i1 %is_big_str.i128, label %modify_rc.i133, label %"#Attr_#dec_4.exit137"

modify_rc.i133:                                   ; preds = %"#Attr_#dec_5.exit"
  %call_builtin.i129 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i33) #11
  %get_rc_ptr.i131 = getelementptr inbounds i8, i8* %call_builtin.i129, i64 -8
  %38 = bitcast i8* %get_rc_ptr.i131 to i64*
  %39 = load i64, i64* %38, align 8
  %.not.i.i.i.i132 = icmp eq i64 %39, 0
  br i1 %.not.i.i.i.i132, label %"#Attr_#dec_4.exit137", label %Then.i.i.i.i134

Then.i.i.i.i134:                                  ; preds = %modify_rc.i133
  %40 = add i64 %39, -1
  store i64 %40, i64* %38, align 8
  %41 = icmp eq i64 %39, -9223372036854775808
  br i1 %41, label %Then1.i.i.i.i135, label %"#Attr_#dec_4.exit137"

Then1.i.i.i.i135:                                 ; preds = %Then.i.i.i.i134
  tail call void @roc_dealloc(i8* %get_rc_ptr.i131, i32 8) #11
  br label %"#Attr_#dec_4.exit137"

"#Attr_#dec_4.exit137":                           ; preds = %modify_rc.i133, %Then.i.i.i.i134, %Then1.i.i.i.i135, %"#Attr_#dec_5.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %load_str_to_stack.i.elt207 = getelementptr inbounds %str.RocStr, %str.RocStr* %decrement_struct_field7, i64 0, i32 2
  %load_str_to_stack.i.unpack208 = load i64, i64* %load_str_to_stack.i.elt207, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack208, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %common.ret

modify_rc.i:                                      ; preds = %"#Attr_#dec_4.exit137"
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %decrement_struct_field7) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %42 = bitcast i8* %get_rc_ptr.i to i64*
  %43 = load i64, i64* %42, align 8
  %.not.i.i.i.i = icmp eq i64 %43, 0
  br i1 %.not.i.i.i.i, label %common.ret, label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %44 = add i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp eq i64 %43, -9223372036854775808
  br i1 %45, label %Then1.i.i.i.i, label %common.ret

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %common.ret

decrement_refcounted_ptr_8.exit51:                ; preds = %do_recurse
  %46 = bitcast i8* %get_rc_ptr to i64*
  %decrement_struct_field11.elt = bitcast i8* %new_ptr to i8**
  %decrement_struct_field11.unpack = load i8*, i8** %decrement_struct_field11.elt, align 8
  %47 = insertvalue %list.RocList undef, i8* %decrement_struct_field11.unpack, 0
  %decrement_struct_field11.elt210 = getelementptr inbounds i8, i8* %new_ptr, i64 8
  %48 = bitcast i8* %decrement_struct_field11.elt210 to i64*
  %decrement_struct_field11.unpack211 = load i64, i64* %48, align 8
  %49 = insertvalue %list.RocList %47, i64 %decrement_struct_field11.unpack211, 1
  %decrement_struct_field11.elt212 = getelementptr inbounds i8, i8* %new_ptr, i64 16
  %50 = bitcast i8* %decrement_struct_field11.elt212 to i64*
  %decrement_struct_field11.unpack213 = load i64, i64* %50, align 8
  %decrement_struct_field11214 = insertvalue %list.RocList %49, i64 %decrement_struct_field11.unpack213, 2
  store i64 9223372036854775807, i64* %46, align 8
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  tail call fastcc void @"#Attr_#dec_6"(%list.RocList %decrement_struct_field11214)
  br label %common.ret

decrement_refcounted_ptr_8.exit59:                ; preds = %do_recurse
  %51 = bitcast i8* %get_rc_ptr to i64*
  %52 = bitcast %str.RocStr* %decrement_struct_field15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %52, i8* noundef nonnull align 8 dereferenceable(24) %new_ptr, i64 24, i1 false)
  store i64 9223372036854775807, i64* %51, align 8
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  %load_str_to_stack.i60.elt217 = getelementptr inbounds %str.RocStr, %str.RocStr* %decrement_struct_field15, i64 0, i32 2
  %load_str_to_stack.i60.unpack218 = load i64, i64* %load_str_to_stack.i60.elt217, align 8
  %is_big_str.i62 = icmp sgt i64 %load_str_to_stack.i60.unpack218, 0
  br i1 %is_big_str.i62, label %modify_rc.i67, label %common.ret

modify_rc.i67:                                    ; preds = %decrement_refcounted_ptr_8.exit59
  %call_builtin.i63 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %decrement_struct_field15) #11
  %get_rc_ptr.i65 = getelementptr inbounds i8, i8* %call_builtin.i63, i64 -8
  %53 = bitcast i8* %get_rc_ptr.i65 to i64*
  %54 = load i64, i64* %53, align 8
  %.not.i.i.i.i66 = icmp eq i64 %54, 0
  br i1 %.not.i.i.i.i66, label %common.ret, label %Then.i.i.i.i68

Then.i.i.i.i68:                                   ; preds = %modify_rc.i67
  %55 = add i64 %54, -1
  store i64 %55, i64* %53, align 8
  %56 = icmp eq i64 %54, -9223372036854775808
  br i1 %56, label %Then1.i.i.i.i69, label %common.ret

Then1.i.i.i.i69:                                  ; preds = %Then.i.i.i.i68
  tail call void @roc_dealloc(i8* %get_rc_ptr.i65, i32 8) #11
  br label %common.ret

decrement_refcounted_ptr_8.exit55:                ; preds = %do_recurse
  %57 = bitcast i8* %new_ptr to { [0 x i64], [12 x i64] }**
  %load_recursive_pointer220 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %57, align 8
  %decrement_struct_field20.sroa.0.0.gep_recursive_pointer19.sroa_raw_idx = getelementptr inbounds i8, i8* %new_ptr, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %decrement_struct_field20.sroa.0.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %decrement_struct_field20.sroa.0.0.gep_recursive_pointer19.sroa_raw_idx, i64 80, i1 false)
  %decrement_struct_field20.sroa.6.0.gep_recursive_pointer19.sroa_raw_idx = getelementptr inbounds i8, i8* %new_ptr, i64 88
  %decrement_struct_field20.sroa.6.0.copyload = load i8, i8* %decrement_struct_field20.sroa.6.0.gep_recursive_pointer19.sroa_raw_idx, align 8
  store i64 9223372036854775807, i64* %5, align 8
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  switch i8 %decrement_struct_field20.sroa.6.0.copyload, label %tailrecurse.backedge [
    i8 0, label %tag_id_modify.i
    i8 1, label %tag_id_modify1.i
  ]

tailrecurse.backedge:                             ; preds = %decrement_refcounted_ptr_8.exit55, %"#Attr_#dec_4.exit161", %"#Attr_#dec_4.exit101"
  br label %tailrecurse

tag_id_modify.i:                                  ; preds = %decrement_refcounted_ptr_8.exit55
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %decrement_struct_field20.sroa.0.0.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i.i76.unpack234 = load i64, i64* %load_str_to_stack.i.i76.elt233, align 8
  %is_big_str.i.i78 = icmp sgt i64 %load_str_to_stack.i.i76.unpack234, 0
  br i1 %is_big_str.i.i78, label %modify_rc.i.i83, label %"#Attr_#dec_3.exit89"

modify_rc.i.i83:                                  ; preds = %tag_id_modify.i
  %call_builtin.i.i79 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i74) #11
  %get_rc_ptr.i.i81 = getelementptr inbounds i8, i8* %call_builtin.i.i79, i64 -8
  %58 = bitcast i8* %get_rc_ptr.i.i81 to i64*
  %59 = load i64, i64* %58, align 8
  %.not.i.i.i.i.i82 = icmp eq i64 %59, 0
  br i1 %.not.i.i.i.i.i82, label %"#Attr_#dec_3.exit89", label %Then.i.i.i.i.i84

Then.i.i.i.i.i84:                                 ; preds = %modify_rc.i.i83
  %60 = add i64 %59, -1
  store i64 %60, i64* %58, align 8
  %61 = icmp eq i64 %59, -9223372036854775808
  br i1 %61, label %Then1.i.i.i.i.i85, label %"#Attr_#dec_3.exit89"

Then1.i.i.i.i.i85:                                ; preds = %Then.i.i.i.i.i84
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i81, i32 8) #11
  br label %"#Attr_#dec_3.exit89"

"#Attr_#dec_3.exit89":                            ; preds = %modify_rc.i.i83, %Then.i.i.i.i.i84, %Then1.i.i.i.i.i85, %tag_id_modify.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %decrement_struct_field20.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i138.unpack239 = load i64, i64* %load_str_to_stack.i138.elt238, align 8
  %is_big_str.i140 = icmp sgt i64 %load_str_to_stack.i138.unpack239, 0
  br i1 %is_big_str.i140, label %modify_rc.i145, label %"#Attr_#dec_4.exit149"

modify_rc.i145:                                   ; preds = %"#Attr_#dec_3.exit89"
  %call_builtin.i141 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i73) #11
  %get_rc_ptr.i143 = getelementptr inbounds i8, i8* %call_builtin.i141, i64 -8
  %62 = bitcast i8* %get_rc_ptr.i143 to i64*
  %63 = load i64, i64* %62, align 8
  %.not.i.i.i.i144 = icmp eq i64 %63, 0
  br i1 %.not.i.i.i.i144, label %"#Attr_#dec_4.exit149", label %Then.i.i.i.i146

Then.i.i.i.i146:                                  ; preds = %modify_rc.i145
  %64 = add i64 %63, -1
  store i64 %64, i64* %62, align 8
  %65 = icmp eq i64 %63, -9223372036854775808
  br i1 %65, label %Then1.i.i.i.i147, label %"#Attr_#dec_4.exit149"

Then1.i.i.i.i147:                                 ; preds = %Then.i.i.i.i146
  tail call void @roc_dealloc(i8* %get_rc_ptr.i143, i32 8) #11
  br label %"#Attr_#dec_4.exit149"

"#Attr_#dec_4.exit149":                           ; preds = %modify_rc.i145, %Then.i.i.i.i146, %Then1.i.i.i.i147, %"#Attr_#dec_3.exit89"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %2, i8* noundef nonnull align 8 dereferenceable(24) %decrement_struct_field20.sroa.0.48.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i150.unpack244 = load i64, i64* %load_str_to_stack.i150.elt243, align 8
  %is_big_str.i152 = icmp sgt i64 %load_str_to_stack.i150.unpack244, 0
  br i1 %is_big_str.i152, label %modify_rc.i157, label %"#Attr_#dec_4.exit161"

modify_rc.i157:                                   ; preds = %"#Attr_#dec_4.exit149"
  %call_builtin.i153 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i72) #11
  %get_rc_ptr.i155 = getelementptr inbounds i8, i8* %call_builtin.i153, i64 -8
  %66 = bitcast i8* %get_rc_ptr.i155 to i64*
  %67 = load i64, i64* %66, align 8
  %.not.i.i.i.i156 = icmp eq i64 %67, 0
  br i1 %.not.i.i.i.i156, label %"#Attr_#dec_4.exit161", label %Then.i.i.i.i158

Then.i.i.i.i158:                                  ; preds = %modify_rc.i157
  %68 = add i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp eq i64 %67, -9223372036854775808
  br i1 %69, label %Then1.i.i.i.i159, label %"#Attr_#dec_4.exit161"

Then1.i.i.i.i159:                                 ; preds = %Then.i.i.i.i158
  tail call void @roc_dealloc(i8* %get_rc_ptr.i155, i32 8) #11
  br label %"#Attr_#dec_4.exit161"

"#Attr_#dec_4.exit161":                           ; preds = %modify_rc.i157, %Then.i.i.i.i158, %Then1.i.i.i.i159, %"#Attr_#dec_4.exit149"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  br label %tailrecurse.backedge

tag_id_modify1.i:                                 ; preds = %decrement_refcounted_ptr_8.exit55
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %decrement_struct_field20.sroa.0.0.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i.i.i.unpack224 = load i64, i64* %load_str_to_stack.i.i.i.elt223, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack224, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_5.exit.i"

modify_rc.i.i.i:                                  ; preds = %tag_id_modify1.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %70 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %71 = load i64, i64* %70, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %71, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_5.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %72 = add i64 %71, -1
  store i64 %72, i64* %70, align 8
  %73 = icmp eq i64 %71, -9223372036854775808
  br i1 %73, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_5.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %"#Attr_#dec_5.exit.i"

"#Attr_#dec_5.exit.i":                            ; preds = %modify_rc.i.i.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %tag_id_modify1.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %0, i8* noundef nonnull align 8 dereferenceable(24) %decrement_struct_field20.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i90.unpack229 = load i64, i64* %load_str_to_stack.i90.elt228, align 8
  %is_big_str.i92 = icmp sgt i64 %load_str_to_stack.i90.unpack229, 0
  br i1 %is_big_str.i92, label %modify_rc.i97, label %"#Attr_#dec_4.exit101"

modify_rc.i97:                                    ; preds = %"#Attr_#dec_5.exit.i"
  %call_builtin.i93 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i95 = getelementptr inbounds i8, i8* %call_builtin.i93, i64 -8
  %74 = bitcast i8* %get_rc_ptr.i95 to i64*
  %75 = load i64, i64* %74, align 8
  %.not.i.i.i.i96 = icmp eq i64 %75, 0
  br i1 %.not.i.i.i.i96, label %"#Attr_#dec_4.exit101", label %Then.i.i.i.i98

Then.i.i.i.i98:                                   ; preds = %modify_rc.i97
  %76 = add i64 %75, -1
  store i64 %76, i64* %74, align 8
  %77 = icmp eq i64 %75, -9223372036854775808
  br i1 %77, label %Then1.i.i.i.i99, label %"#Attr_#dec_4.exit101"

Then1.i.i.i.i99:                                  ; preds = %Then.i.i.i.i98
  tail call void @roc_dealloc(i8* %get_rc_ptr.i95, i32 8) #11
  br label %"#Attr_#dec_4.exit101"

"#Attr_#dec_4.exit101":                           ; preds = %modify_rc.i97, %Then.i.i.i.i98, %Then1.i.i.i.i99, %"#Attr_#dec_5.exit.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  br label %tailrecurse.backedge

Then1.i.i.i:                                      ; preds = %do_recurse
  %78 = bitcast i8* %get_rc_ptr to i64*
  store i64 9223372036854775807, i64* %78, align 8
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  br label %common.ret
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_4"(%str.RocStr* nocapture readonly %"#arg1") unnamed_addr #11 {
entry:
  %load_str_to_stack.elt3 = getelementptr inbounds %str.RocStr, %str.RocStr* %"#arg1", i64 0, i32 2
  %load_str_to_stack.unpack4 = load i64, i64* %load_str_to_stack.elt3, align 8
  %is_big_str = icmp sgt i64 %load_str_to_stack.unpack4, 0
  br i1 %is_big_str, label %modify_rc, label %modify_rc_str_cont

modify_rc_str_cont:                               ; preds = %Then1.i.i.i, %Then.i.i.i, %modify_rc, %entry
  ret void

modify_rc:                                        ; preds = %entry
  %call_builtin = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %"#arg1")
  %get_rc_ptr = getelementptr inbounds i8, i8* %call_builtin, i64 -8
  %0 = bitcast i8* %get_rc_ptr to i64*
  %1 = load i64, i64* %0, align 8
  %.not.i.i.i = icmp eq i64 %1, 0
  br i1 %.not.i.i.i, label %modify_rc_str_cont, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modify_rc
  %2 = add i64 %1, -1
  store i64 %2, i64* %0, align 8
  %3 = icmp eq i64 %1, -9223372036854775808
  br i1 %3, label %Then1.i.i.i, label %modify_rc_str_cont

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr, i32 8) #11
  br label %modify_rc_str_cont
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_6"(%list.RocList %"#arg1") unnamed_addr #11 {
entry:
  %struct_field.i = alloca %str.RocStr, align 8
  %list_capacity_or_ref_ptr = extractvalue %list.RocList %"#arg1", 2
  %"cap > 0.not" = icmp eq i64 %list_capacity_or_ref_ptr, 0
  br i1 %"cap > 0.not", label %modify_rc_list_cont, label %modification_list_block

modification_list_block:                          ; preds = %entry
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0
  %cast_basic_basic = bitcast i8* %read_list_ptr to { %str.RocStr, i64* }*
  %list_len = extractvalue %list.RocList %"#arg1", 1
  %bounds_check.not = icmp eq i64 %list_len, 0
  br i1 %bounds_check.not, label %after_loop, label %loop.preheader

loop.preheader:                                   ; preds = %modification_list_block
  %0 = bitcast %str.RocStr* %struct_field.i to i8*
  %struct_field.i.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 0
  %struct_field.i.repack15 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 1
  %struct_field.i.repack17 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  br label %loop

modify_rc_list_cont:                              ; preds = %Then1.i.i.i, %Then.i.i.i, %after_loop, %entry
  ret void

loop:                                             ; preds = %loop.preheader, %"#Attr_#dec_7.exit"
  %index = phi i64 [ 0, %loop.preheader ], [ %next_index, %"#Attr_#dec_7.exit" ]
  %next_index = add nuw i64 %index, 1
  %incrementing_element_loop_load.unpack.elt = getelementptr inbounds { %str.RocStr, i64* }, { %str.RocStr, i64* }* %cast_basic_basic, i64 %index, i32 0, i32 0
  %incrementing_element_loop_load.unpack.unpack = load i8*, i8** %incrementing_element_loop_load.unpack.elt, align 8
  %incrementing_element_loop_load.unpack.elt10 = getelementptr inbounds { %str.RocStr, i64* }, { %str.RocStr, i64* }* %cast_basic_basic, i64 %index, i32 0, i32 1
  %incrementing_element_loop_load.unpack.unpack11 = load i64, i64* %incrementing_element_loop_load.unpack.elt10, align 8
  %incrementing_element_loop_load.unpack.elt12 = getelementptr inbounds { %str.RocStr, i64* }, { %str.RocStr, i64* }* %cast_basic_basic, i64 %index, i32 0, i32 2
  %incrementing_element_loop_load.unpack.unpack13 = load i64, i64* %incrementing_element_loop_load.unpack.elt12, align 8
  %incrementing_element_loop_load.elt7 = getelementptr inbounds { %str.RocStr, i64* }, { %str.RocStr, i64* }* %cast_basic_basic, i64 %index, i32 1
  %1 = bitcast i64** %incrementing_element_loop_load.elt7 to { [0 x i64], [12 x i64] }**
  %incrementing_element_loop_load.unpack824 = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %1, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  store i8* %incrementing_element_loop_load.unpack.unpack, i8** %struct_field.i.repack, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack11, i64* %struct_field.i.repack15, align 8
  store i64 %incrementing_element_loop_load.unpack.unpack13, i64* %struct_field.i.repack17, align 8
  %is_big_str.i.i = icmp sgt i64 %incrementing_element_loop_load.unpack.unpack13, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_7.exit"

modify_rc.i.i:                                    ; preds = %loop
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %2 = bitcast i8* %get_rc_ptr.i.i to i64*
  %3 = load i64, i64* %2, align 8
  %.not.i.i.i.i.i = icmp eq i64 %3, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_7.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %4 = add i64 %3, -1
  store i64 %4, i64* %2, align 8
  %5 = icmp eq i64 %3, -9223372036854775808
  br i1 %5, label %Then1.i.i.i.i.i, label %"#Attr_#dec_7.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_7.exit"

"#Attr_#dec_7.exit":                              ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %loop
  tail call fastcc void @"#Attr_#dec_2"({ [0 x i64], [12 x i64] }* %incrementing_element_loop_load.unpack824) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0)
  %bounds_check1 = icmp ult i64 %next_index, %list_len
  br i1 %bounds_check1, label %loop, label %after_loop

after_loop:                                       ; preds = %"#Attr_#dec_7.exit", %modification_list_block
  %6 = ptrtoint i8* %read_list_ptr to i64
  %7 = shl i64 %list_capacity_or_ref_ptr, 1
  %.not.i.i = icmp slt i64 %list_capacity_or_ref_ptr, 0
  %8 = select i1 %.not.i.i, i64 %7, i64 %6
  %as_usize_ptr = inttoptr i64 %8 to i64*
  %get_rc_ptr = getelementptr inbounds i64, i64* %as_usize_ptr, i64 -1
  %9 = load i64, i64* %get_rc_ptr, align 8
  %.not.i.i.i = icmp eq i64 %9, 0
  br i1 %.not.i.i.i, label %modify_rc_list_cont, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %after_loop
  %10 = add i64 %9, -1
  store i64 %10, i64* %get_rc_ptr, align 8
  %11 = icmp eq i64 %9, -9223372036854775808
  br i1 %11, label %Then1.i.i.i, label %modify_rc_list_cont

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  %12 = bitcast i64* %get_rc_ptr to i8*
  tail call void @roc_dealloc(i8* %12, i32 8) #11
  br label %modify_rc_list_cont
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_16"({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nocapture readonly %"#arg1") unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %struct_field.elt = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 0, i32 0
  %struct_field.unpack = load i8*, i8** %struct_field.elt, align 8
  %struct_field.elt20 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 0, i32 1
  %struct_field.unpack21 = load i64, i64* %struct_field.elt20, align 8
  %struct_field.elt22 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 0, i32 2
  %struct_field.unpack23 = load i64, i64* %struct_field.elt22, align 8
  %0 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %"cap > 0.not.i" = icmp eq i64 %struct_field.unpack23, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit", label %modification_list_block.i52

modification_list_block.i52:                      ; preds = %entry
  %cast_basic_basic.i = bitcast i8* %struct_field.unpack to %str.RocStr*
  %bounds_check.not.i = icmp eq i64 %struct_field.unpack21, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i52
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i
  %next_index12.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_4.exit.i" ]
  %next_index.i = add nuw i64 %next_index12.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %1 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %0, i8* noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i:                                    ; preds = %loop.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i53 = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %2 = bitcast i8* %get_rc_ptr.i.i53 to i64*
  %3 = load i64, i64* %2, align 8
  %.not.i.i.i.i.i54 = icmp eq i64 %3, 0
  br i1 %.not.i.i.i.i.i54, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i55

Then.i.i.i.i.i55:                                 ; preds = %modify_rc.i.i
  %4 = add i64 %3, -1
  store i64 %4, i64* %2, align 8
  %5 = icmp eq i64 %3, -9223372036854775808
  br i1 %5, label %Then1.i.i.i.i.i56, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i56:                                ; preds = %Then.i.i.i.i.i55
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i56, %Then.i.i.i.i.i55, %modify_rc.i.i, %loop.i
  %exitcond.not = icmp eq i64 %next_index.i, %struct_field.unpack21
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_4.exit.i", %modification_list_block.i52
  %6 = ptrtoint i8* %struct_field.unpack to i64
  %7 = shl i64 %struct_field.unpack23, 1
  %.not.i.i.i57 = icmp slt i64 %struct_field.unpack23, 0
  %8 = select i1 %.not.i.i.i57, i64 %7, i64 %6
  %as_usize_ptr.i58 = inttoptr i64 %8 to i64*
  %get_rc_ptr.i59 = getelementptr inbounds i64, i64* %as_usize_ptr.i58, i64 -1
  %9 = load i64, i64* %get_rc_ptr.i59, align 8
  %.not.i.i.i.i60 = icmp eq i64 %9, 0
  br i1 %.not.i.i.i.i60, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i61

Then.i.i.i.i61:                                   ; preds = %after_loop.i
  %10 = add i64 %9, -1
  store i64 %10, i64* %get_rc_ptr.i59, align 8
  %11 = icmp eq i64 %9, -9223372036854775808
  br i1 %11, label %Then1.i.i.i.i62, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i62:                                  ; preds = %Then.i.i.i.i61
  %12 = bitcast i64* %get_rc_ptr.i59 to i8*
  tail call void @roc_dealloc(i8* %12, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %entry, %after_loop.i, %Then.i.i.i.i61, %Then1.i.i.i.i62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0)
  %struct_field1.sroa.264.0..sroa_idx65 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.264.0.copyload = load i64, i64* %struct_field1.sroa.264.0..sroa_idx65, align 8
  %struct_field1.sroa.3.0..sroa_idx66 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx66, align 8
  %struct_field1.sroa.468.0..sroa_idx69 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.468.0.copyload = load i64, i64* %struct_field1.sroa.468.0..sroa_idx69, align 8
  %struct_field1.sroa.5.0..sroa_idx70 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx70, align 8
  %struct_field1.sroa.672.0..sroa_idx73 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.672.0.copyload = load i64, i64* %struct_field1.sroa.672.0..sroa_idx73, align 8
  %"cap > 0.i.i.not" = icmp eq i64 %struct_field1.sroa.264.0.copyload, 0
  br i1 %"cap > 0.i.i.not", label %"#Attr_#dec_18.exit", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %"#Attr_#dec_17.exit"
  %struct_field1.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %"#arg1", i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx, align 8
  %13 = ptrtoint i8* %struct_field1.sroa.0.0.copyload to i64
  %14 = shl i64 %struct_field1.sroa.264.0.copyload, 1
  %.not.i.i.i.i = icmp slt i64 %struct_field1.sroa.264.0.copyload, 0
  %15 = select i1 %.not.i.i.i.i, i64 %14, i64 %13
  %as_usize_ptr.i.i = inttoptr i64 %15 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %16 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i.i.i = icmp eq i64 %16, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_18.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i.i
  %17 = add i64 %16, -1
  store i64 %17, i64* %get_rc_ptr.i.i, align 8
  %18 = icmp eq i64 %16, -9223372036854775808
  br i1 %18, label %Then1.i.i.i.i.i, label %"#Attr_#dec_18.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  %19 = bitcast i64* %get_rc_ptr.i.i to i8*
  tail call void @roc_dealloc(i8* %19, i32 8) #11
  br label %"#Attr_#dec_18.exit"

"#Attr_#dec_18.exit":                             ; preds = %modification_list_block.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %"#Attr_#dec_17.exit"
  %"cap > 0.i5.not" = icmp eq i64 %struct_field1.sroa.468.0.copyload, 0
  br i1 %"cap > 0.i5.not", label %"#Attr_#dec_10.exit", label %modification_list_block.i14

modification_list_block.i14:                      ; preds = %"#Attr_#dec_18.exit"
  %20 = ptrtoint i8* %struct_field1.sroa.3.0.copyload to i64
  %21 = shl i64 %struct_field1.sroa.468.0.copyload, 1
  %.not.i.i.i10 = icmp slt i64 %struct_field1.sroa.468.0.copyload, 0
  %22 = select i1 %.not.i.i.i10, i64 %21, i64 %20
  %as_usize_ptr.i11 = inttoptr i64 %22 to i64*
  %get_rc_ptr.i12 = getelementptr inbounds i64, i64* %as_usize_ptr.i11, i64 -1
  %23 = load i64, i64* %get_rc_ptr.i12, align 8
  %.not.i.i.i.i13 = icmp eq i64 %23, 0
  br i1 %.not.i.i.i.i13, label %"#Attr_#dec_10.exit", label %Then.i.i.i.i15

Then.i.i.i.i15:                                   ; preds = %modification_list_block.i14
  %24 = add i64 %23, -1
  store i64 %24, i64* %get_rc_ptr.i12, align 8
  %25 = icmp eq i64 %23, -9223372036854775808
  br i1 %25, label %Then1.i.i.i.i16, label %"#Attr_#dec_10.exit"

Then1.i.i.i.i16:                                  ; preds = %Then.i.i.i.i15
  %26 = bitcast i64* %get_rc_ptr.i12 to i8*
  tail call void @roc_dealloc(i8* %26, i32 8) #11
  br label %"#Attr_#dec_10.exit"

"#Attr_#dec_10.exit":                             ; preds = %modification_list_block.i14, %Then.i.i.i.i15, %Then1.i.i.i.i16, %"#Attr_#dec_18.exit"
  %"cap > 0.i.not" = icmp eq i64 %struct_field1.sroa.672.0.copyload, 0
  br i1 %"cap > 0.i.not", label %"#Attr_#dec_11.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %"#Attr_#dec_10.exit"
  %27 = ptrtoint i8* %struct_field1.sroa.5.0.copyload to i64
  %28 = shl i64 %struct_field1.sroa.672.0.copyload, 1
  %.not.i.i.i = icmp slt i64 %struct_field1.sroa.672.0.copyload, 0
  %29 = select i1 %.not.i.i.i, i64 %28, i64 %27
  %as_usize_ptr.i = inttoptr i64 %29 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %30 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i2 = icmp eq i64 %30, 0
  br i1 %.not.i.i.i.i2, label %"#Attr_#dec_11.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i
  %31 = add i64 %30, -1
  store i64 %31, i64* %get_rc_ptr.i, align 8
  %32 = icmp eq i64 %30, -9223372036854775808
  br i1 %32, label %Then1.i.i.i.i, label %"#Attr_#dec_11.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %33 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %33, i32 8) #11
  br label %"#Attr_#dec_11.exit"

"#Attr_#dec_11.exit":                             ; preds = %modification_list_block.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_10.exit"
  ret void
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_20"(%list.RocList %"#arg1") unnamed_addr #11 {
entry:
  %struct_field2.i = alloca %str.RocStr, align 8
  %struct_field1.i = alloca %str.RocStr, align 8
  %struct_field.i = alloca %str.RocStr, align 8
  %struct_field1.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.sroa.0 = alloca [10 x i64], align 8
  %list_capacity_or_ref_ptr = extractvalue %list.RocList %"#arg1", 2
  %"cap > 0.not" = icmp eq i64 %list_capacity_or_ref_ptr, 0
  br i1 %"cap > 0.not", label %modify_rc_list_cont, label %modification_list_block

modification_list_block:                          ; preds = %entry
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0
  %cast_basic_basic = bitcast i8* %read_list_ptr to { [0 x i64], [10 x i64], i8, [7 x i8] }*
  %list_len = extractvalue %list.RocList %"#arg1", 1
  %bounds_check.not = icmp eq i64 %list_len, 0
  br i1 %bounds_check.not, label %after_loop, label %loop.preheader

loop.preheader:                                   ; preds = %modification_list_block
  %incrementing_element_loop_load.sroa.0.0.sroa_cast = bitcast [10 x i64]* %incrementing_element_loop_load.sroa.0 to i8*
  %0 = bitcast %str.RocStr* %struct_field1.i.i to i8*
  %1 = bitcast %str.RocStr* %struct_field.i.i to i8*
  %load_str_to_stack.i.i.i.elt37 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  %incrementing_element_loop_load.sroa.0.24.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %incrementing_element_loop_load.sroa.0, i64 0, i64 3
  %incrementing_element_loop_load.sroa.0.24.sroa_cast = bitcast i64* %incrementing_element_loop_load.sroa.0.24.sroa_idx to i8*
  %load_str_to_stack.i.elt42 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i, i64 0, i32 2
  %2 = bitcast %str.RocStr* %struct_field2.i to i8*
  %3 = bitcast %str.RocStr* %struct_field1.i to i8*
  %4 = bitcast %str.RocStr* %struct_field.i to i8*
  %load_str_to_stack.i.i.elt47 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i, i64 0, i32 2
  %load_str_to_stack.i2.elt52 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i, i64 0, i32 2
  %incrementing_element_loop_load.sroa.0.48.sroa_idx = getelementptr inbounds [10 x i64], [10 x i64]* %incrementing_element_loop_load.sroa.0, i64 0, i64 6
  %incrementing_element_loop_load.sroa.0.48.sroa_cast = bitcast i64* %incrementing_element_loop_load.sroa.0.48.sroa_idx to i8*
  %load_str_to_stack.i14.elt57 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field2.i, i64 0, i32 2
  br label %loop

modify_rc_list_cont:                              ; preds = %Then1.i.i.i, %Then.i.i.i, %after_loop, %entry
  ret void

loop:                                             ; preds = %loop.preheader, %"#Attr_#dec_8.exit"
  %index = phi i64 [ 0, %loop.preheader ], [ %next_index, %"#Attr_#dec_8.exit" ]
  %next_index = add nuw i64 %index, 1
  %load_index = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %cast_basic_basic, i64 %index
  %incrementing_element_loop_load.sroa.0.0..sroa_cast = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %load_index to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %incrementing_element_loop_load.sroa.0.0.sroa_cast, i8* noundef nonnull align 8 dereferenceable(80) %incrementing_element_loop_load.sroa.0.0..sroa_cast, i64 80, i1 false)
  %incrementing_element_loop_load.sroa.6.0..sroa_idx = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %cast_basic_basic, i64 %index, i32 2
  %incrementing_element_loop_load.sroa.6.0.copyload = load i8, i8* %incrementing_element_loop_load.sroa.6.0..sroa_idx, align 8
  switch i8 %incrementing_element_loop_load.sroa.6.0.copyload, label %"#Attr_#dec_8.exit" [
    i8 0, label %tag_id_modify.i
    i8 1, label %tag_id_modify1.i
  ]

tag_id_modify.i:                                  ; preds = %loop
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.0..sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i.i.unpack48 = load i64, i64* %load_str_to_stack.i.i.elt47, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack48, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %"#Attr_#dec_3.exit"

modify_rc.i.i:                                    ; preds = %tag_id_modify.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %5 = bitcast i8* %get_rc_ptr.i.i to i64*
  %6 = load i64, i64* %5, align 8
  %.not.i.i.i.i.i = icmp eq i64 %6, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#dec_3.exit", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8
  %8 = icmp eq i64 %6, -9223372036854775808
  br i1 %8, label %Then1.i.i.i.i.i, label %"#Attr_#dec_3.exit"

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %"#Attr_#dec_3.exit"

"#Attr_#dec_3.exit":                              ; preds = %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %tag_id_modify.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i2.unpack53 = load i64, i64* %load_str_to_stack.i2.elt52, align 8
  %is_big_str.i4 = icmp sgt i64 %load_str_to_stack.i2.unpack53, 0
  br i1 %is_big_str.i4, label %modify_rc.i9, label %"#Attr_#dec_4.exit13"

modify_rc.i9:                                     ; preds = %"#Attr_#dec_3.exit"
  %call_builtin.i5 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i) #11
  %get_rc_ptr.i7 = getelementptr inbounds i8, i8* %call_builtin.i5, i64 -8
  %9 = bitcast i8* %get_rc_ptr.i7 to i64*
  %10 = load i64, i64* %9, align 8
  %.not.i.i.i.i8 = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i8, label %"#Attr_#dec_4.exit13", label %Then.i.i.i.i10

Then.i.i.i.i10:                                   ; preds = %modify_rc.i9
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i11, label %"#Attr_#dec_4.exit13"

Then1.i.i.i.i11:                                  ; preds = %Then.i.i.i.i10
  tail call void @roc_dealloc(i8* %get_rc_ptr.i7, i32 8) #11
  br label %"#Attr_#dec_4.exit13"

"#Attr_#dec_4.exit13":                            ; preds = %modify_rc.i9, %Then.i.i.i.i10, %Then1.i.i.i.i11, %"#Attr_#dec_3.exit"
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %2, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.48.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i14.unpack58 = load i64, i64* %load_str_to_stack.i14.elt57, align 8
  %is_big_str.i16 = icmp sgt i64 %load_str_to_stack.i14.unpack58, 0
  br i1 %is_big_str.i16, label %modify_rc.i21, label %"#Attr_#dec_4.exit25"

modify_rc.i21:                                    ; preds = %"#Attr_#dec_4.exit13"
  %call_builtin.i17 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field2.i) #11
  %get_rc_ptr.i19 = getelementptr inbounds i8, i8* %call_builtin.i17, i64 -8
  %13 = bitcast i8* %get_rc_ptr.i19 to i64*
  %14 = load i64, i64* %13, align 8
  %.not.i.i.i.i20 = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i20, label %"#Attr_#dec_4.exit25", label %Then.i.i.i.i22

Then.i.i.i.i22:                                   ; preds = %modify_rc.i21
  %15 = add i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i23, label %"#Attr_#dec_4.exit25"

Then1.i.i.i.i23:                                  ; preds = %Then.i.i.i.i22
  tail call void @roc_dealloc(i8* %get_rc_ptr.i19, i32 8) #11
  br label %"#Attr_#dec_4.exit25"

"#Attr_#dec_4.exit25":                            ; preds = %modify_rc.i21, %Then.i.i.i.i22, %Then1.i.i.i.i23, %"#Attr_#dec_4.exit13"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  br label %"#Attr_#dec_8.exit"

tag_id_modify1.i:                                 ; preds = %loop
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %1, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.0..sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i.i.i.unpack38 = load i64, i64* %load_str_to_stack.i.i.i.elt37, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack38, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_5.exit.i"

modify_rc.i.i.i:                                  ; preds = %tag_id_modify1.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %17 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %18 = load i64, i64* %17, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i.i.i, label %"#Attr_#dec_5.exit.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %19 = add i64 %18, -1
  store i64 %19, i64* %17, align 8
  %20 = icmp eq i64 %18, -9223372036854775808
  br i1 %20, label %Then1.i.i.i.i.i.i, label %"#Attr_#dec_5.exit.i"

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %"#Attr_#dec_5.exit.i"

"#Attr_#dec_5.exit.i":                            ; preds = %modify_rc.i.i.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %tag_id_modify1.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %0, i8* noundef nonnull align 8 dereferenceable(24) %incrementing_element_loop_load.sroa.0.24.sroa_cast, i64 24, i1 false)
  %load_str_to_stack.i.unpack43 = load i64, i64* %load_str_to_stack.i.elt42, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack43, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %"#Attr_#dec_4.exit"

modify_rc.i:                                      ; preds = %"#Attr_#dec_5.exit.i"
  %call_builtin.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %21 = bitcast i8* %get_rc_ptr.i to i64*
  %22 = load i64, i64* %21, align 8
  %.not.i.i.i.i = icmp eq i64 %22, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_4.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %23 = add i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %22, -9223372036854775808
  br i1 %24, label %Then1.i.i.i.i, label %"#Attr_#dec_4.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %"#Attr_#dec_4.exit"

"#Attr_#dec_4.exit":                              ; preds = %modify_rc.i, %Then.i.i.i.i, %Then1.i.i.i.i, %"#Attr_#dec_5.exit.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  br label %"#Attr_#dec_8.exit"

"#Attr_#dec_8.exit":                              ; preds = %loop, %"#Attr_#dec_4.exit25", %"#Attr_#dec_4.exit"
  %bounds_check1 = icmp ult i64 %next_index, %list_len
  br i1 %bounds_check1, label %loop, label %after_loop

after_loop:                                       ; preds = %"#Attr_#dec_8.exit", %modification_list_block
  %25 = ptrtoint i8* %read_list_ptr to i64
  %26 = shl i64 %list_capacity_or_ref_ptr, 1
  %.not.i.i = icmp slt i64 %list_capacity_or_ref_ptr, 0
  %27 = select i1 %.not.i.i, i64 %26, i64 %25
  %as_usize_ptr = inttoptr i64 %27 to i64*
  %get_rc_ptr = getelementptr inbounds i64, i64* %as_usize_ptr, i64 -1
  %28 = load i64, i64* %get_rc_ptr, align 8
  %.not.i.i.i = icmp eq i64 %28, 0
  br i1 %.not.i.i.i, label %modify_rc_list_cont, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %after_loop
  %29 = add i64 %28, -1
  store i64 %29, i64* %get_rc_ptr, align 8
  %30 = icmp eq i64 %28, -9223372036854775808
  br i1 %30, label %Then1.i.i.i, label %modify_rc_list_cont

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  %31 = bitcast i64* %get_rc_ptr to i8*
  tail call void @roc_dealloc(i8* %31, i32 8) #11
  br label %modify_rc_list_cont
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_29"(%list.RocList %"#arg1") unnamed_addr #11 {
entry:
  %list_capacity_or_ref_ptr = extractvalue %list.RocList %"#arg1", 2
  %"cap > 0.not" = icmp eq i64 %list_capacity_or_ref_ptr, 0
  br i1 %"cap > 0.not", label %modify_rc_list_cont, label %modification_list_block

modification_list_block:                          ; preds = %entry
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0
  %0 = ptrtoint i8* %"#arg1.elt" to i64
  %1 = shl i64 %list_capacity_or_ref_ptr, 1
  %.not.i.i = icmp slt i64 %list_capacity_or_ref_ptr, 0
  %2 = select i1 %.not.i.i, i64 %1, i64 %0
  %as_usize_ptr = inttoptr i64 %2 to i64*
  %get_rc_ptr = getelementptr inbounds i64, i64* %as_usize_ptr, i64 -1
  %3 = load i64, i64* %get_rc_ptr, align 8
  %.not.i.i.i = icmp eq i64 %3, 0
  br i1 %.not.i.i.i, label %modify_rc_list_cont, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modification_list_block
  %4 = add i64 %3, -1
  store i64 %4, i64* %get_rc_ptr, align 8
  %5 = icmp eq i64 %3, -9223372036854775808
  br i1 %5, label %Then1.i.i.i, label %modify_rc_list_cont

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  %6 = bitcast i64* %get_rc_ptr to i8*
  tail call void @roc_dealloc(i8* %6, i32 8) #11
  br label %modify_rc_list_cont

modify_rc_list_cont:                              ; preds = %Then1.i.i.i, %Then.i.i.i, %modification_list_block, %entry
  ret void
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_31"({ [0 x i64], [3 x i64], i8, [7 x i8] }* nocapture readonly %"#arg1") unnamed_addr #11 {
entry:
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %cond = icmp eq i8 %load_tag_id, 1
  br i1 %cond, label %tag_id_modify, label %modify_rc_union_merge

modify_rc_union_merge:                            ; preds = %tag_id_modify, %Then1.i.i.i.i, %Then.i.i.i.i, %modify_rc.i, %entry
  ret void

tag_id_modify:                                    ; preds = %entry
  %0 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 2
  %load_str_to_stack.i.unpack4 = load i64, i64* %0, align 8
  %is_big_str.i = icmp sgt i64 %load_str_to_stack.i.unpack4, 0
  br i1 %is_big_str.i, label %modify_rc.i, label %modify_rc_union_merge

modify_rc.i:                                      ; preds = %tag_id_modify
  %field_ptr = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1
  %modify_tag_field = bitcast [3 x i64]* %field_ptr to %str.RocStr*
  %call_builtin.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field) #11
  %get_rc_ptr.i = getelementptr inbounds i8, i8* %call_builtin.i, i64 -8
  %1 = bitcast i8* %get_rc_ptr.i to i64*
  %2 = load i64, i64* %1, align 8
  %.not.i.i.i.i = icmp eq i64 %2, 0
  br i1 %.not.i.i.i.i, label %modify_rc_union_merge, label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modify_rc.i
  %3 = add i64 %2, -1
  store i64 %3, i64* %1, align 8
  %4 = icmp eq i64 %2, -9223372036854775808
  br i1 %4, label %Then1.i.i.i.i, label %modify_rc_union_merge

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i, i32 8) #11
  br label %modify_rc_union_merge
}

; Function Attrs: cold noinline noreturn nounwind
define internal fastcc void @throw_on_overflow() unnamed_addr #15 {
entry:
  %const_str_store = alloca %str.RocStr, align 8
  %const_str_store.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 0
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_str_literal_15501312488748916623, i64 0, i64 8), i8** %const_str_store.repack, align 8
  %const_str_store.repack1 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 1
  store i64 34, i64* %const_str_store.repack1, align 8
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store, i64 0, i32 2
  store i64 34, i64* %const_str_store.repack2, align 8
  call void @roc_panic(%str.RocStr* %const_str_store, i32 0)
  unreachable
}

declare void @roc_fx_fileReadBytes({ [0 x i64], [5 x i64], i8, [7 x i8] }* sret({ [0 x i64], [5 x i64], i8, [7 x i8] }), { i8*, i64, i64 }*) local_unnamed_addr

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define void @roc__mainForHost_20_caller(%list.RocList* nocapture readonly %0, {}* nocapture readnone %1, %list.RocList* nocapture %2) local_unnamed_addr #16 {
entry:
  %load_param.elt = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 0
  %load_param.unpack = load i8*, i8** %load_param.elt, align 8
  %load_param.elt2 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 1
  %load_param.unpack3 = load i64, i64* %load_param.elt2, align 8
  %load_param.elt4 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 2
  %load_param.unpack5 = load i64, i64* %load_param.elt4, align 8
  %.repack = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 0
  store i8* %load_param.unpack, i8** %.repack, align 8
  %.repack7 = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 1
  store i64 %load_param.unpack3, i64* %.repack7, align 8
  %.repack9 = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 2
  store i64 %load_param.unpack5, i64* %.repack9, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_20_result_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_20_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: nounwind
define void @roc__mainForHost_15_caller(%list.RocList* nocapture readonly %0, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nocapture readonly %1, { [0 x i64], [10 x i64], i8, [7 x i8] }* nocapture %2) local_unnamed_addr #11 {
entry:
  %list_alloca.i.i3.i.i.i = alloca %list.RocList, align 8
  %load_element9.i.i.i.i = alloca %str.RocStr, align 8
  %struct_field1.i.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i.i = alloca %str.RocStr, align 8
  %result_value1.i.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value.i.i = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value7.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %load_element6.i = alloca %str.RocStr, align 8
  %load_param.elt = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 0
  %load_param.unpack = load i8*, i8** %load_param.elt, align 8
  %3 = insertvalue %list.RocList undef, i8* %load_param.unpack, 0
  %load_param.elt1 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 1
  %load_param.unpack2 = load i64, i64* %load_param.elt1, align 8
  %4 = insertvalue %list.RocList %3, i64 %load_param.unpack2, 1
  %load_param.elt3 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 2
  %load_param.unpack4 = load i64, i64* %load_param.elt3, align 8
  %load_param5 = insertvalue %list.RocList %4, i64 %load_param.unpack4, 2
  %5 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5)
  %6 = bitcast %str.RocStr* %load_element6.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  %8 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #11
  %9 = bitcast %str.RocStr* %struct_field1.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %str.RocStr* %struct_field.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8* noundef nonnull align 8 dereferenceable(24) %11, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.elt21.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i, i64 0, i32 2
  %load_str_to_stack.i.i.i.unpack22.i = load i64, i64* %load_str_to_stack.i.i.i.elt21.i, align 8
  %is_big_str.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack22.i, 0
  br i1 %is_big_str.i.i.i.i, label %modify_rc.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i"

modify_rc.i.i.i.i:                                ; preds = %entry
  %call_builtin.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i) #11
  %get_rc_ptr.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i, i64 -8
  %12 = bitcast i8* %get_rc_ptr.i.i.i.i to i64*
  %13 = load i64, i64* %12, align 8
  %.not.i.i.i.i.i = icmp eq i64 %13, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i.i.i
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %12, align 8
  br label %"#Attr_#inc_4.exit.i.i.i"

"#Attr_#inc_4.exit.i.i.i":                        ; preds = %Then.i.i.i.i.i, %modify_rc.i.i.i.i, %entry
  %struct_field_access_record_1.i.i.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %1, i64 0, i32 1
  %15 = bitcast %str.RocStr* %struct_field_access_record_1.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8* noundef nonnull align 8 dereferenceable(24) %15, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.i.elt26.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i, i64 0, i32 2
  %load_str_to_stack.i3.i.i.unpack27.i = load i64, i64* %load_str_to_stack.i3.i.i.elt26.i, align 8
  %is_big_str.i5.i.i.i = icmp sgt i64 %load_str_to_stack.i3.i.i.unpack27.i, 0
  br i1 %is_big_str.i5.i.i.i, label %modify_rc.i10.i.i.i, label %"#Attr_#inc_4.exit12.i.i.i"

modify_rc.i10.i.i.i:                              ; preds = %"#Attr_#inc_4.exit.i.i.i"
  %call_builtin.i6.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i) #11
  %get_rc_ptr.i8.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i6.i.i.i, i64 -8
  %16 = bitcast i8* %get_rc_ptr.i8.i.i.i to i64*
  %17 = load i64, i64* %16, align 8
  %.not.i.i9.i.i.i = icmp eq i64 %17, 0
  br i1 %.not.i.i9.i.i.i, label %"#Attr_#inc_4.exit12.i.i.i", label %Then.i.i11.i.i.i

Then.i.i11.i.i.i:                                 ; preds = %modify_rc.i10.i.i.i
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8
  br label %"#Attr_#inc_4.exit12.i.i.i"

"#Attr_#inc_4.exit12.i.i.i":                      ; preds = %Then.i.i11.i.i.i, %modify_rc.i10.i.i.i, %"#Attr_#inc_4.exit.i.i.i"
  %struct_field_access_record_2.i.i.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %1, i64 0, i32 2
  %struct_field2.i.i.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_2.i.i.i, align 8
  %to_int1.i.i.i.i = ptrtoint { [0 x i64], [12 x i64] }* %struct_field2.i.i.i to i64
  %masked.i.i.i.i = and i64 %to_int1.i.i.i.i, 7
  %cast_to_i8_ptr.i.i.i.i = bitcast { [0 x i64], [12 x i64] }* %struct_field2.i.i.i to i8*
  %get_rc_ptr.i14.i.i.idx.i = sub nuw nsw i64 -8, %masked.i.i.i.i
  %get_rc_ptr.i14.i.i.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i.i, i64 %get_rc_ptr.i14.i.i.idx.i
  %19 = bitcast i8* %get_rc_ptr.i14.i.i.i to i64*
  %20 = load i64, i64* %19, align 8
  %.not.i.i15.i.i.i = icmp eq i64 %20, 0
  br i1 %.not.i.i15.i.i.i, label %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i, label %Then.i.i16.i.i.i

Then.i.i16.i.i.i:                                 ; preds = %"#Attr_#inc_4.exit12.i.i.i"
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i

Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i: ; preds = %Then.i.i16.i.i.i, %"#Attr_#inc_4.exit12.i.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call fastcc void @Arg_parse_3f95465e904bca7190247a1fbb41e2fb7548d72d51b572257b32d12e6faa67e2({ %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nonnull %1, %list.RocList %load_param5, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value.i.i) #11
  call fastcc void @Result_mapErr_bd7ee0b61d48f635ca49c34d781c67a50ded34ea29b86dec499286b58b2d4a({ [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value.i.i, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nonnull %1, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value1.i.i) #11
  %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast.sroa_cast.i = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i to i8**
  %result_value.sroa.0.sroa.0.0.copyload.i = load i8*, i8** %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast.sroa_cast.i, align 8
  %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast.sroa_idx51.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i, i64 0, i32 1, i64 1
  %result_value.sroa.0.sroa.3.0.copyload.i = load i64, i64* %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast.sroa_idx51.i, align 8
  %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast.sroa_idx54.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i, i64 0, i32 1, i64 2
  %result_value.sroa.0.sroa.4.0.copyload.i = load i64, i64* %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast.sroa_idx54.i, align 8
  %result_value.sroa.3.0..sroa_idx.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i, i64 0, i32 2
  %result_value.sroa.3.0.copyload.i = load i8, i8* %result_value.sroa.3.0..sroa_idx.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #11
  %eq_u8.i = icmp eq i8 %result_value.sroa.3.0.copyload.i, 0
  br i1 %eq_u8.i, label %"#UserApp_24_28472a228e8d485c471dc94b155eeeadf9212bf12345bd6b528f8d5ef8682.exit", label %else_block.i

else_block.i:                                     ; preds = %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i
  %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast36.sroa_idx.i = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i, i64 0, i32 0
  store i8* %result_value.sroa.0.sroa.0.0.copyload.i, i8** %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast36.sroa_idx.i, align 8
  %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast36.sroa_idx52.i = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i, i64 0, i32 1
  store i64 %result_value.sroa.0.sroa.3.0.copyload.i, i64* %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast36.sroa_idx52.i, align 8
  %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast36.sroa_idx55.i = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i, i64 0, i32 2
  store i64 %result_value.sroa.0.sroa.4.0.copyload.i, i64* %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast36.sroa_idx55.i, align 8
  %is_big_str.i.i = icmp sgt i64 %result_value.sroa.0.sroa.4.0.copyload.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %tag_id_modify6.i.i.i.i

modify_rc.i.i:                                    ; preds = %else_block.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_element6.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %22 = bitcast i8* %get_rc_ptr.i.i to i64*
  %23 = load i64, i64* %22, align 8
  %.not.i.i.i = icmp eq i64 %23, 0
  br i1 %.not.i.i.i, label %tag_id_modify6.i.i.i.i, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modify_rc.i.i
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %22, align 8
  br label %tag_id_modify6.i.i.i.i

tag_id_modify6.i.i.i.i:                           ; preds = %Then.i.i.i, %modify_rc.i.i, %else_block.i
  %result_value.i12.sroa.0.0..sroa_cast.i = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8**
  store i8* %result_value.sroa.0.sroa.0.0.copyload.i, i8** %result_value.i12.sroa.0.0..sroa_cast.i, align 8
  %result_value.i12.sroa.4.0..sroa_idx103.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 1
  store i64 %result_value.sroa.0.sroa.3.0.copyload.i, i64* %result_value.i12.sroa.4.0..sroa_idx103.i, align 8
  %result_value.i12.sroa.5.0..sroa_idx105.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 2
  store i64 %result_value.sroa.0.sroa.4.0.copyload.i, i64* %result_value.i12.sroa.5.0..sroa_idx105.i, align 8
  %result_value.i12.sroa.6.0..sroa_idx.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 2
  store i8 2, i8* %result_value.i12.sroa.6.0..sroa_idx.i, align 8
  %25 = ptrtoint i8* %result_value.sroa.0.sroa.0.0.copyload.i to i64
  br i1 %is_big_str.i.i, label %modify_rc.i.i.i.i.i, label %"#Attr_#inc_28.exit.i.thread.i.i"

"#Attr_#inc_28.exit.i.thread.i.i":                ; preds = %tag_id_modify6.i.i.i.i
  %26 = bitcast %str.RocStr* %load_element9.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  br label %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i

modify_rc.i.i.i.i.i:                              ; preds = %tag_id_modify6.i.i.i.i
  %field_ptr7.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1
  %modify_tag_field9.i.i.i.i = bitcast [3 x i64]* %field_ptr7.i.i.i.i to %str.RocStr*
  %call_builtin.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i.i) #11
  %get_rc_ptr.i11.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i, i64 -8
  %27 = bitcast i8* %get_rc_ptr.i11.i.i.i.i to i64*
  %28 = load i64, i64* %27, align 8
  %.not.i.i12.i.i.i.i = icmp eq i64 %28, 0
  br i1 %.not.i.i12.i.i.i.i, label %"#Attr_#inc_28.exit.i.i.i", label %"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i.i"

"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i.i": ; preds = %modify_rc.i.i.i.i.i
  %29 = add nsw i64 %28, 1
  store i64 %29, i64* %27, align 8
  br label %"#Attr_#inc_28.exit.i.i.i"

"#Attr_#inc_28.exit.i.i.i":                       ; preds = %"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i.i", %modify_rc.i.i.i.i.i
  %30 = bitcast %str.RocStr* %load_element9.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  br label %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i

File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i: ; preds = %"#Attr_#inc_28.exit.i.i.i", %"#Attr_#inc_28.exit.i.thread.i.i"
  %.pre-phi.i.pre-phi.i.pre-phi = bitcast %str.RocStr* %load_element9.i.i.i.i to i8*
  %get_opaque_data_ptr6.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1
  %31 = bitcast [3 x i64]* %get_opaque_data_ptr6.i.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %.pre-phi.i.pre-phi.i.pre-phi, i8* noundef nonnull align 8 dereferenceable(24) %31, i64 24, i1 false) #11
  %32 = bitcast %list.RocList* %list_alloca.i.i3.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  call fastcc void @roc_builtins.str.to_utf8(%list.RocList* noalias nocapture nonnull %list_alloca.i.i3.i.i.i, %str.RocStr* nocapture nonnull readonly %load_element9.i.i.i.i) #11
  %load_list.elt.i.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i.i, i64 0, i32 0
  %load_list.unpack.i.i.i.i.i = load i8*, i8** %load_list.elt.i.i.i.i.i, align 8
  %load_list.elt1.i.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i.i, i64 0, i32 1
  %load_list.unpack2.i.i.i.i.i = load i64, i64* %load_list.elt1.i.i.i.i.i, align 8
  %load_list.elt3.i.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i.i, i64 0, i32 2
  %load_list.unpack4.i.i.i.i.i = load i64, i64* %load_list.elt3.i.i.i.i.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %.pre-phi.i.pre-phi.i.pre-phi) #11
  br label %"#UserApp_24_28472a228e8d485c471dc94b155eeeadf9212bf12345bd6b528f8d5ef8682.exit"

"#UserApp_24_28472a228e8d485c471dc94b155eeeadf9212bf12345bd6b528f8d5ef8682.exit": ; preds = %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i
  %result_value.i.sroa.9.0 = phi i64 [ %25, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ undef, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  %result_value.i.sroa.7.0 = phi i64 [ %load_list.unpack4.i.i.i.i.i, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ %result_value.sroa.0.sroa.4.0.copyload.i, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  %result_value.i.sroa.5.0 = phi i64 [ %load_list.unpack2.i.i.i.i.i, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ %result_value.sroa.0.sroa.3.0.copyload.i, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  %result_value.i.sroa.0.0 = phi i8* [ %load_list.unpack.i.i.i.i.i, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ %result_value.sroa.0.sroa.0.0.copyload.i, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  %.sink.i = phi i8 [ 0, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ 1, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  %result_value.sroa.0.0..sroa_cast = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %2 to i8**
  store i8* %result_value.i.sroa.0.0, i8** %result_value.sroa.0.0..sroa_cast, align 8
  %result_value.sroa.2.0..sroa_idx27 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 1
  store i64 %result_value.i.sroa.5.0, i64* %result_value.sroa.2.0..sroa_idx27, align 8
  %result_value.sroa.3.0..sroa_idx28 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 2
  store i64 %result_value.i.sroa.7.0, i64* %result_value.sroa.3.0..sroa_idx28, align 8
  %result_value.sroa.4.0..sroa_idx29 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 3
  store i64 %result_value.i.sroa.9.0, i64* %result_value.sroa.4.0..sroa_idx29, align 8
  %result_value.sroa.5.0..sroa_idx30 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 4
  store i64 %result_value.sroa.0.sroa.3.0.copyload.i, i64* %result_value.sroa.5.0..sroa_idx30, align 8
  %result_value.sroa.6.0..sroa_idx31 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 5
  store i64 %result_value.sroa.0.sroa.4.0.copyload.i, i64* %result_value.sroa.6.0..sroa_idx31, align 8
  %result_value.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 6
  %result_value.sroa.7.0..sroa_cast = bitcast i64* %result_value.sroa.7.0..sroa_idx to i8*
  store i8 2, i8* %result_value.sroa.7.0..sroa_cast, align 8
  %result_value.sroa.15.0..sroa_idx32 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 7
  %result_value.sroa.15.0..sroa_cast = bitcast i64* %result_value.sroa.15.0..sroa_idx32 to i8**
  store i8* %result_value.sroa.0.sroa.0.0.copyload.i, i8** %result_value.sroa.15.0..sroa_cast, align 8
  %result_value.sroa.16.0..sroa_idx33 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 8
  store i64 %result_value.sroa.0.sroa.3.0.copyload.i, i64* %result_value.sroa.16.0..sroa_idx33, align 8
  %result_value.sroa.17.0..sroa_idx34 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 9
  store i64 %result_value.sroa.0.sroa.4.0.copyload.i, i64* %result_value.sroa.17.0..sroa_idx34, align 8
  %result_value.sroa.18.0..sroa_idx = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 2
  store i8 %.sink.i, i8* %result_value.sroa.18.0..sroa_idx, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_15_result_size() local_unnamed_addr #12 {
entry:
  ret i64 88
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_15_size() local_unnamed_addr #12 {
entry:
  ret i64 56
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define void @roc__mainForHost_7_caller({}* nocapture %0, {}* nocapture %1, {}* nocapture %2) local_unnamed_addr #12 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_7_result_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_7_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define void @roc__mainForHost_3_caller({}* nocapture %0, {}* nocapture %1, {}* nocapture %2) local_unnamed_addr #12 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_3_result_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_3_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

define void @roc__mainForHost_8_caller({}* nocapture readnone %0, %str.RocStr* %1, {}* nocapture readnone %2) local_unnamed_addr {
entry:
  %to_cc_type_ptr.i.i.i = bitcast %str.RocStr* %1 to { i8*, i64, i64 }*
  tail call void @roc_fx_stdoutLine({ i8*, i64, i64 }* %to_cc_type_ptr.i.i.i)
  %load_str_to_stack.i.i.i.elt3 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 2
  %load_str_to_stack.i.i.i.unpack4 = load i64, i64* %load_str_to_stack.i.i.i.elt3, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack4, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %_37_40ec8821d728e99d2ea524d9b24bd845ae91cb71937f1b40f7b8bb7e961e7.exit

modify_rc.i.i.i:                                  ; preds = %entry
  %call_builtin.i.i.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %1) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %3 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %4 = load i64, i64* %3, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i.i.i.i.i, label %_37_40ec8821d728e99d2ea524d9b24bd845ae91cb71937f1b40f7b8bb7e961e7.exit, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %5 = add i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = icmp eq i64 %4, -9223372036854775808
  br i1 %6, label %Then1.i.i.i.i.i.i, label %_37_40ec8821d728e99d2ea524d9b24bd845ae91cb71937f1b40f7b8bb7e961e7.exit

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %_37_40ec8821d728e99d2ea524d9b24bd845ae91cb71937f1b40f7b8bb7e961e7.exit

_37_40ec8821d728e99d2ea524d9b24bd845ae91cb71937f1b40f7b8bb7e961e7.exit: ; preds = %modify_rc.i.i.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_8_result_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_8_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

define void @roc__mainForHost_10_caller({}* nocapture readnone %0, { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }* nocapture readonly %1, { [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture %2) local_unnamed_addr {
entry:
  %param_alloca.i.i.i = alloca %list.RocList, align 8
  %result_value.i.i = alloca { [0 x i64], [5 x i64], i8, [7 x i8] }, align 8
  %struct_field.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %3 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3)
  %struct_field_access_record_1.i = getelementptr inbounds { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }, { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }* %1, i64 0, i32 1
  %4 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field_access_record_1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %3, i8* noundef nonnull align 8 dereferenceable(32) %4, i64 32, i1 false)
  %struct_field1.elt.i = getelementptr inbounds { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }, { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }* %1, i64 0, i32 0, i32 0
  %struct_field1.unpack.i = load i8*, i8** %struct_field1.elt.i, align 8
  %struct_field1.elt4.i = getelementptr inbounds { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }, { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }* %1, i64 0, i32 0, i32 1
  %struct_field1.unpack5.i = load i64, i64* %struct_field1.elt4.i, align 8
  %struct_field1.elt6.i = getelementptr inbounds { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }, { %list.RocList, { [0 x i64], [3 x i64], i8, [7 x i8] } }* %1, i64 0, i32 0, i32 2
  %struct_field1.unpack7.i = load i64, i64* %struct_field1.elt6.i, align 8
  %5 = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5)
  %6 = bitcast %list.RocList* %param_alloca.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %param_alloca.i.i.repack.i = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 0
  store i8* %struct_field1.unpack.i, i8** %param_alloca.i.i.repack.i, align 8
  %param_alloca.i.i.repack1.i = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 1
  store i64 %struct_field1.unpack5.i, i64* %param_alloca.i.i.repack1.i, align 8
  %param_alloca.i.i.repack3.i = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 2
  store i64 %struct_field1.unpack7.i, i64* %param_alloca.i.i.repack3.i, align 8
  %to_cc_type_ptr.i.i.i = bitcast %list.RocList* %param_alloca.i.i.i to { i8*, i64, i64 }*
  call void @roc_fx_fileReadBytes({ [0 x i64], [5 x i64], i8, [7 x i8] }* nonnull %result_value.i.i, { i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.unpack7.i, 0
  br i1 %"cap > 0.i.i.not.i", label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i, label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %entry
  %7 = ptrtoint i8* %struct_field1.unpack.i to i64
  %8 = shl i64 %struct_field1.unpack7.i, 1
  %.not.i.i.i.i.i = icmp slt i64 %struct_field1.unpack7.i, 0
  %9 = select i1 %.not.i.i.i.i.i, i64 %8, i64 %7
  %as_usize_ptr.i.i.i = inttoptr i64 %9 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %10 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %10, 0
  br i1 %.not.i.i.i.i.i.i, label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %11 = add i64 %10, -1
  store i64 %11, i64* %get_rc_ptr.i.i.i, align 8
  %12 = icmp eq i64 %10, -9223372036854775808
  br i1 %12, label %Then1.i.i.i.i.i.i, label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %13 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  call void @roc_dealloc(i8* %13, i32 8) #11
  br label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i

Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i: ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modification_list_block.i.i.i, %entry
  %result_value.sroa.0.0..sroa_cast.i = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i to i8**
  %result_value.sroa.0.0.copyload.i = load i8*, i8** %result_value.sroa.0.0..sroa_cast.i, align 8
  %result_value.sroa.3.0..sroa_idx34.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 1
  %result_value.sroa.3.0.copyload.i = load i64, i64* %result_value.sroa.3.0..sroa_idx34.i, align 8
  %result_value.sroa.4.0..sroa_idx37.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 2
  %result_value.sroa.4.0.copyload.i = load i64, i64* %result_value.sroa.4.0..sroa_idx37.i, align 8
  %result_value.sroa.5.sroa.0.0.result_value.sroa.5.0..sroa_cast.sroa_idx.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 3
  %result_value.sroa.5.sroa.0.0.copyload.i = load i64, i64* %result_value.sroa.5.sroa.0.0.result_value.sroa.5.0..sroa_cast.sroa_idx.i, align 8
  %result_value.sroa.5.sroa.2.0.result_value.sroa.5.0..sroa_cast.sroa_idx.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 4
  %result_value.sroa.5.sroa.2.0.result_value.sroa.5.0..sroa_cast.sroa_cast.i = bitcast i64* %result_value.sroa.5.sroa.2.0.result_value.sroa.5.0..sroa_cast.sroa_idx.i to i8*
  %result_value.sroa.5.sroa.2.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.2.0.result_value.sroa.5.0..sroa_cast.sroa_cast.i, align 8
  %result_value.sroa.5.sroa.3.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %5, i64 33
  %result_value.sroa.5.sroa.3.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.3.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value.sroa.5.sroa.4.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %5, i64 34
  %result_value.sroa.5.sroa.4.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.4.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 2
  %result_value.sroa.5.sroa.5.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %5, i64 35
  %result_value.sroa.5.sroa.5.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.5.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value.sroa.5.sroa.6.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %5, i64 36
  %result_value.sroa.5.sroa.6.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.6.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 4
  %result_value.sroa.5.sroa.7.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %5, i64 37
  %result_value.sroa.5.sroa.7.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.7.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value.sroa.5.sroa.8.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %5, i64 38
  %result_value.sroa.5.sroa.8.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.8.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 2
  %result_value.sroa.5.sroa.9.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %5, i64 39
  %result_value.sroa.5.sroa.9.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.9.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value.sroa.543.0..sroa_idx.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 2
  %result_value.sroa.543.0.copyload.i = load i8, i8* %result_value.sroa.543.0..sroa_idx.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5)
  %eq_u8.i.i = icmp eq i8 %result_value.sroa.543.0.copyload.i, 1
  br i1 %eq_u8.i.i, label %then_block.i.i, label %else_block.i.i

then_block.i.i:                                   ; preds = %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i
  %tag_id_ptr.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 2
  %load_tag_id.i.i.i = load i8, i8* %tag_id_ptr.i.i.i, align 8
  switch i8 %load_tag_id.i.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit [
    i8 0, label %tag_id_modify.i.i.i
    i8 1, label %tag_id_modify1.i.i.i
    i8 2, label %tag_id_modify6.i.i.i
  ]

tag_id_modify.i.i.i:                              ; preds = %then_block.i.i
  %14 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 2
  %field_value.i.i.unpack22.i = load i64, i64* %14, align 8
  %"cap > 0.i.i.i.not.i" = icmp eq i64 %field_value.i.i.unpack22.i, 0
  br i1 %"cap > 0.i.i.i.not.i", label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %modification_list_block.i.i.i.i

modification_list_block.i.i.i.i:                  ; preds = %tag_id_modify.i.i.i
  %field_ptr.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1
  %field_value.i.i.elt.i = bitcast [3 x i64]* %field_ptr.i.i.i to i8**
  %field_value.i.i.unpack.i = load i8*, i8** %field_value.i.i.elt.i, align 8
  %15 = ptrtoint i8* %field_value.i.i.unpack.i to i64
  %16 = shl i64 %field_value.i.i.unpack22.i, 1
  %.not.i.i.i.i.i11.i = icmp slt i64 %field_value.i.i.unpack22.i, 0
  %17 = select i1 %.not.i.i.i.i.i11.i, i64 %16, i64 %15
  %as_usize_ptr.i.i.i.i = inttoptr i64 %17 to i64*
  %get_rc_ptr.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i, i64 -1
  %18 = load i64, i64* %get_rc_ptr.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i.i.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %modification_list_block.i.i.i.i
  %19 = add i64 %18, -1
  store i64 %19, i64* %get_rc_ptr.i.i.i.i, align 8
  %20 = icmp eq i64 %18, -9223372036854775808
  br i1 %20, label %Then1.i.i.i.i.i.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

Then1.i.i.i.i.i.i.i:                              ; preds = %Then.i.i.i.i.i.i.i
  %21 = bitcast i64* %get_rc_ptr.i.i.i.i to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i"

tag_id_modify1.i.i.i:                             ; preds = %then_block.i.i
  %22 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 2
  %field_value5.i.i.unpack13.i = load i64, i64* %22, align 8
  %"cap > 0.i.i12.not.i" = icmp eq i64 %field_value5.i.i.unpack13.i, 0
  br i1 %"cap > 0.i.i12.not.i", label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %modification_list_block.i.i18.i

modification_list_block.i.i18.i:                  ; preds = %tag_id_modify1.i.i.i
  %field_ptr2.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1
  %field_value5.i.i.elt.i = bitcast [3 x i64]* %field_ptr2.i.i.i to i8**
  %field_value5.i.i.unpack.i = load i8*, i8** %field_value5.i.i.elt.i, align 8
  %23 = ptrtoint i8* %field_value5.i.i.unpack.i to i64
  %24 = shl i64 %field_value5.i.i.unpack13.i, 1
  %.not.i.i.i.i17.i = icmp slt i64 %field_value5.i.i.unpack13.i, 0
  %25 = select i1 %.not.i.i.i.i17.i, i64 %24, i64 %23
  %as_usize_ptr.i16.i.i = inttoptr i64 %25 to i64*
  %get_rc_ptr.i17.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i16.i.i, i64 -1
  %26 = load i64, i64* %get_rc_ptr.i17.i.i, align 8
  %.not.i.i.i.i18.i.i = icmp eq i64 %26, 0
  br i1 %.not.i.i.i.i18.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %Then.i.i.i.i19.i.i

Then.i.i.i.i19.i.i:                               ; preds = %modification_list_block.i.i18.i
  %27 = add i64 %26, -1
  store i64 %27, i64* %get_rc_ptr.i17.i.i, align 8
  %28 = icmp eq i64 %26, -9223372036854775808
  br i1 %28, label %Then1.i.i.i.i20.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

Then1.i.i.i.i20.i.i:                              ; preds = %Then.i.i.i.i19.i.i
  %29 = bitcast i64* %get_rc_ptr.i17.i.i to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i"

tag_id_modify6.i.i.i:                             ; preds = %then_block.i.i
  %30 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.unpack8.i = load i64, i64* %30, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack8.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

modify_rc.i.i.i:                                  ; preds = %tag_id_modify6.i.i.i
  %field_ptr7.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1
  %modify_tag_field9.i.i.i = bitcast [3 x i64]* %field_ptr7.i.i.i to %str.RocStr*
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i) #11
  %get_rc_ptr.i.i20.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %31 = bitcast i8* %get_rc_ptr.i.i20.i to i64*
  %32 = load i64, i64* %31, align 8
  %.not.i.i.i.i15.i.i = icmp eq i64 %32, 0
  br i1 %.not.i.i.i.i15.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %Then.i.i.i.i.i21.i

Then.i.i.i.i.i21.i:                               ; preds = %modify_rc.i.i.i
  %33 = add i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp eq i64 %32, -9223372036854775808
  br i1 %34, label %"#Attr_#dec_28.exit.i.sink.split.i", label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

"#Attr_#dec_28.exit.i.sink.split.i":              ; preds = %Then.i.i.i.i.i21.i, %Then1.i.i.i.i20.i.i, %Then1.i.i.i.i.i.i.i
  %get_rc_ptr.i.i20.sink.i = phi i8* [ %29, %Then1.i.i.i.i20.i.i ], [ %21, %Then1.i.i.i.i.i.i.i ], [ %get_rc_ptr.i.i20.i, %Then.i.i.i.i.i21.i ]
  call void @roc_dealloc(i8* %get_rc_ptr.i.i20.sink.i, i32 8) #11
  br label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

else_block.i.i:                                   ; preds = %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i
  %35 = ptrtoint i8* %result_value.sroa.0.0.copyload.i to i64
  %load_tag_to_put_in_struct.unpack4.elt.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct.unpack4.unpack.i.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt.i.i.i, align 8
  %load_tag_to_put_in_struct.unpack4.elt10.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct.unpack4.unpack11.i.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt10.i.i.i, align 8
  %load_tag_to_put_in_struct.unpack4.elt12.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct.unpack4.unpack13.i.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt12.i.i.i, align 8
  %load_tag_to_put_in_struct.elt5.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack6.i.i.i = load i8, i8* %load_tag_to_put_in_struct.elt5.i.i.i, align 8
  %load_tag_to_put_in_struct.unpack8.elt.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct.unpack8.unpack.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt15.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct.unpack8.unpack16.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt15.i.i.i, align 2
  %load_tag_to_put_in_struct.unpack8.elt17.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct.unpack8.unpack18.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt17.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt19.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct.unpack8.unpack20.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt19.i.i.i, align 4
  %load_tag_to_put_in_struct.unpack8.elt21.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct.unpack8.unpack22.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt21.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt23.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct.unpack8.unpack24.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt23.i.i.i, align 2
  %load_tag_to_put_in_struct.unpack8.elt25.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct.unpack8.unpack26.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt25.i.i.i, align 1
  %36 = inttoptr i64 %load_tag_to_put_in_struct.unpack4.unpack.i.i.i to i8*
  br label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit: ; preds = %then_block.i.i, %tag_id_modify.i.i.i, %modification_list_block.i.i.i.i, %Then.i.i.i.i.i.i.i, %tag_id_modify1.i.i.i, %modification_list_block.i.i18.i, %Then.i.i.i.i19.i.i, %tag_id_modify6.i.i.i, %modify_rc.i.i.i, %Then.i.i.i.i.i21.i, %"#Attr_#dec_28.exit.i.sink.split.i", %else_block.i.i
  %result_value2.sroa.0.0.i = phi i8* [ %36, %else_block.i.i ], [ %result_value.sroa.0.0.copyload.i, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ %result_value.sroa.0.0.copyload.i, %Then.i.i.i.i.i21.i ], [ %result_value.sroa.0.0.copyload.i, %modify_rc.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %tag_id_modify6.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %Then.i.i.i.i19.i.i ], [ %result_value.sroa.0.0.copyload.i, %modification_list_block.i.i18.i ], [ %result_value.sroa.0.0.copyload.i, %tag_id_modify1.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %Then.i.i.i.i.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %modification_list_block.i.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %tag_id_modify.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %then_block.i.i ]
  %result_value2.sroa.3.0.i = phi i64 [ %load_tag_to_put_in_struct.unpack4.unpack11.i.i.i, %else_block.i.i ], [ %result_value.sroa.3.0.copyload.i, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ %result_value.sroa.3.0.copyload.i, %Then.i.i.i.i.i21.i ], [ %result_value.sroa.3.0.copyload.i, %modify_rc.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %tag_id_modify6.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %Then.i.i.i.i19.i.i ], [ %result_value.sroa.3.0.copyload.i, %modification_list_block.i.i18.i ], [ %result_value.sroa.3.0.copyload.i, %tag_id_modify1.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %Then.i.i.i.i.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %modification_list_block.i.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %tag_id_modify.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %then_block.i.i ]
  %result_value2.sroa.4.0.i = phi i64 [ %load_tag_to_put_in_struct.unpack4.unpack13.i.i.i, %else_block.i.i ], [ %result_value.sroa.4.0.copyload.i, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ %result_value.sroa.4.0.copyload.i, %Then.i.i.i.i.i21.i ], [ %result_value.sroa.4.0.copyload.i, %modify_rc.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %tag_id_modify6.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %Then.i.i.i.i19.i.i ], [ %result_value.sroa.4.0.copyload.i, %modification_list_block.i.i18.i ], [ %result_value.sroa.4.0.copyload.i, %tag_id_modify1.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %Then.i.i.i.i.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %modification_list_block.i.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %tag_id_modify.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %then_block.i.i ]
  %result_value2.sroa.6.0.i = phi i8 [ 0, %else_block.i.i ], [ 1, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ 1, %Then.i.i.i.i.i21.i ], [ 1, %modify_rc.i.i.i ], [ 1, %tag_id_modify6.i.i.i ], [ 1, %Then.i.i.i.i19.i.i ], [ 1, %modification_list_block.i.i18.i ], [ 1, %tag_id_modify1.i.i.i ], [ 1, %Then.i.i.i.i.i.i.i ], [ 1, %modification_list_block.i.i.i.i ], [ 1, %tag_id_modify.i.i.i ], [ 1, %then_block.i.i ]
  %result_value2.sroa.5.sroa.0.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack6.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.3.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.4.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack16.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.5.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack18.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.6.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack20.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.7.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack22.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.8.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack24.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.9.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack26.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.10.0.i = phi i64 [ %35, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3)
  %result_value.sroa.0.0..sroa_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %2 to i8**
  store i8* %result_value2.sroa.0.0.i, i8** %result_value.sroa.0.0..sroa_cast, align 8
  %result_value.sroa.2.0..sroa_idx18 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 1
  store i64 %result_value2.sroa.3.0.i, i64* %result_value.sroa.2.0..sroa_idx18, align 8
  %result_value.sroa.3.0..sroa_idx19 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 2
  store i64 %result_value2.sroa.4.0.i, i64* %result_value.sroa.3.0..sroa_idx19, align 8
  %result_value.sroa.4.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 3
  %result_value.sroa.4.0..sroa_cast = bitcast i64* %result_value.sroa.4.0..sroa_idx to i8*
  store i8 %result_value2.sroa.5.sroa.0.0.i, i8* %result_value.sroa.4.0..sroa_cast, align 8
  %result_value.sroa.5.0..sroa_raw_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %2 to i8*
  %result_value.sroa.5.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 25
  store i8 %result_value2.sroa.5.sroa.3.0.i, i8* %result_value.sroa.5.0..sroa_raw_idx, align 1
  %result_value.sroa.6.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 26
  store i8 %result_value2.sroa.5.sroa.4.0.i, i8* %result_value.sroa.6.0..sroa_raw_idx, align 2
  %result_value.sroa.7.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 27
  store i8 %result_value2.sroa.5.sroa.5.0.i, i8* %result_value.sroa.7.0..sroa_raw_idx, align 1
  %result_value.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 28
  store i8 %result_value2.sroa.5.sroa.6.0.i, i8* %result_value.sroa.8.0..sroa_raw_idx, align 4
  %result_value.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 29
  store i8 %result_value2.sroa.5.sroa.7.0.i, i8* %result_value.sroa.9.0..sroa_raw_idx, align 1
  %result_value.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 30
  store i8 %result_value2.sroa.5.sroa.8.0.i, i8* %result_value.sroa.10.0..sroa_raw_idx, align 2
  %result_value.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 31
  store i8 %result_value2.sroa.5.sroa.9.0.i, i8* %result_value.sroa.11.0..sroa_raw_idx, align 1
  %result_value.sroa.12.0..sroa_idx20 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 4
  store i64 %result_value2.sroa.5.sroa.10.0.i, i64* %result_value.sroa.12.0..sroa_idx20, align 8
  %result_value.sroa.13.0..sroa_idx21 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 5
  store i64 %result_value.sroa.3.0.copyload.i, i64* %result_value.sroa.13.0..sroa_idx21, align 8
  %result_value.sroa.14.0..sroa_idx22 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 6
  store i64 %result_value.sroa.4.0.copyload.i, i64* %result_value.sroa.14.0..sroa_idx22, align 8
  %result_value.sroa.15.0..sroa_idx23 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 7
  store i64 %result_value.sroa.5.sroa.0.0.copyload.i, i64* %result_value.sroa.15.0..sroa_idx23, align 8
  %result_value.sroa.16.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 8
  %result_value.sroa.16.0..sroa_cast = bitcast i64* %result_value.sroa.16.0..sroa_idx to i8*
  store i8 %result_value.sroa.5.sroa.2.0.copyload.i, i8* %result_value.sroa.16.0..sroa_cast, align 8
  %result_value.sroa.17.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 65
  store i8 %result_value.sroa.5.sroa.3.0.copyload.i, i8* %result_value.sroa.17.0..sroa_raw_idx, align 1
  %result_value.sroa.18.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 66
  store i8 %result_value.sroa.5.sroa.4.0.copyload.i, i8* %result_value.sroa.18.0..sroa_raw_idx, align 2
  %result_value.sroa.19.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 67
  store i8 %result_value.sroa.5.sroa.5.0.copyload.i, i8* %result_value.sroa.19.0..sroa_raw_idx, align 1
  %result_value.sroa.20.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 68
  store i8 %result_value.sroa.5.sroa.6.0.copyload.i, i8* %result_value.sroa.20.0..sroa_raw_idx, align 4
  %result_value.sroa.21.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 69
  store i8 %result_value.sroa.5.sroa.7.0.copyload.i, i8* %result_value.sroa.21.0..sroa_raw_idx, align 1
  %result_value.sroa.22.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 70
  store i8 %result_value.sroa.5.sroa.8.0.copyload.i, i8* %result_value.sroa.22.0..sroa_raw_idx, align 2
  %result_value.sroa.23.0..sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.5.0..sroa_raw_cast, i64 71
  store i8 %result_value.sroa.5.sroa.9.0.copyload.i, i8* %result_value.sroa.23.0..sroa_raw_idx, align 1
  %result_value.sroa.24.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 2
  store i8 %result_value2.sroa.6.0.i, i8* %result_value.sroa.24.0..sroa_idx, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_10_result_size() local_unnamed_addr #12 {
entry:
  ret i64 80
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_10_size() local_unnamed_addr #12 {
entry:
  ret i64 56
}

define void @roc__mainForHost_4_caller({}* nocapture readnone %0, %str.RocStr* %1, {}* nocapture readnone %2) local_unnamed_addr {
entry:
  %to_cc_type_ptr.i.i.i = bitcast %str.RocStr* %1 to { i8*, i64, i64 }*
  tail call void @roc_fx_stdoutLine({ i8*, i64, i64 }* %to_cc_type_ptr.i.i.i)
  %load_str_to_stack.i.i.i.elt3 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 2
  %load_str_to_stack.i.i.i.unpack4 = load i64, i64* %load_str_to_stack.i.i.i.elt3, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack4, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %_55_f4a15e08f69824e8a7e25cdb7df496975f07e801aa78fa4c21380eea668c84e.exit

modify_rc.i.i.i:                                  ; preds = %entry
  %call_builtin.i.i.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %1) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %3 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %4 = load i64, i64* %3, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i.i.i.i.i, label %_55_f4a15e08f69824e8a7e25cdb7df496975f07e801aa78fa4c21380eea668c84e.exit, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %5 = add i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = icmp eq i64 %4, -9223372036854775808
  br i1 %6, label %Then1.i.i.i.i.i.i, label %_55_f4a15e08f69824e8a7e25cdb7df496975f07e801aa78fa4c21380eea668c84e.exit

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %_55_f4a15e08f69824e8a7e25cdb7df496975f07e801aa78fa4c21380eea668c84e.exit

_55_f4a15e08f69824e8a7e25cdb7df496975f07e801aa78fa4c21380eea668c84e.exit: ; preds = %modify_rc.i.i.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_4_result_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_4_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: nounwind
define void @roc__mainForHost_9_caller({ [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture readonly %0, %str.RocStr* nocapture readonly %1, { %str.RocStr, {} }* nocapture %2) local_unnamed_addr #11 {
entry:
  %result_value.i.i.i.i.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %result_value.i.i.i.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_alloca.i = alloca { i64, %list.RocList, %list.RocList }, align 8
  %struct_field1.i.i = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %struct_field.i.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %str_alloca.i31.i.i = alloca %str.RocStr, align 8
  %const_str_store14.i.i = alloca %str.RocStr, align 8
  %result_value7.i.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value5.i.i = alloca { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, align 8
  %result_value.i.i = alloca %str.RocStr, align 8
  %const_str_store1.i.i = alloca %str.RocStr, align 8
  %const_str_store.i.i = alloca %str.RocStr, align 8
  %3 = bitcast %str.RocStr* %const_str_store14.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  %5 = bitcast { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #11
  %6 = bitcast %str.RocStr* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %str.RocStr* %const_str_store1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %str.RocStr* %const_str_store.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %tag_id_ptr.i.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %0, i64 0, i32 2
  %load_tag_id.i.i = load i8, i8* %tag_id_ptr.i.i, align 1
  %eq_u8.i.i = icmp eq i8 %load_tag_id.i.i, 0
  br i1 %eq_u8.i.i, label %tag_id_modify.i, label %else_block.i.i

tag_id_modify.i:                                  ; preds = %entry
  %field_ptr.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %0, i64 0, i32 1
  %9 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #11
  %10 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = bitcast [9 x i64]* %field_ptr.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %10, i8* noundef nonnull align 8 dereferenceable(32) %11, i64 32, i1 false) #11
  %tag_id_ptr.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i, i64 0, i32 2
  %load_tag_id.i.i.i = load i8, i8* %tag_id_ptr.i.i.i, align 8
  switch i8 %load_tag_id.i.i.i, label %"#Attr_#dec_28.exit.i.i" [
    i8 0, label %tag_id_modify.i.i.i
    i8 1, label %tag_id_modify1.i.i.i
    i8 2, label %tag_id_modify6.i.i.i
  ]

tag_id_modify.i.i.i:                              ; preds = %tag_id_modify.i
  %12 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i, i64 0, i32 1, i64 2
  %field_value.i.i.unpack41.i = load i64, i64* %12, align 8
  %"cap > 0.i.i.i.not.i" = icmp eq i64 %field_value.i.i.unpack41.i, 0
  br i1 %"cap > 0.i.i.i.not.i", label %"#Attr_#dec_28.exit.i.i", label %modification_list_block.i.i.i.i

modification_list_block.i.i.i.i:                  ; preds = %tag_id_modify.i.i.i
  %field_ptr.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i, i64 0, i32 1
  %field_value.i.i.elt.i = bitcast [3 x i64]* %field_ptr.i.i.i to i8**
  %field_value.i.i.unpack.i = load i8*, i8** %field_value.i.i.elt.i, align 8
  %13 = ptrtoint i8* %field_value.i.i.unpack.i to i64
  %14 = shl i64 %field_value.i.i.unpack41.i, 1
  %.not.i.i.i.i.i.i38 = icmp slt i64 %field_value.i.i.unpack41.i, 0
  %15 = select i1 %.not.i.i.i.i.i.i38, i64 %14, i64 %13
  %as_usize_ptr.i.i.i.i = inttoptr i64 %15 to i64*
  %get_rc_ptr.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i, i64 -1
  %16 = load i64, i64* %get_rc_ptr.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i = icmp eq i64 %16, 0
  br i1 %.not.i.i.i.i.i.i.i, label %"#Attr_#dec_28.exit.i.i", label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %modification_list_block.i.i.i.i
  %17 = add i64 %16, -1
  store i64 %17, i64* %get_rc_ptr.i.i.i.i, align 8
  %18 = icmp eq i64 %16, -9223372036854775808
  br i1 %18, label %Then1.i.i.i.i.i.i.i, label %"#Attr_#dec_28.exit.i.i"

Then1.i.i.i.i.i.i.i:                              ; preds = %Then.i.i.i.i.i.i.i
  %19 = bitcast i64* %get_rc_ptr.i.i.i.i to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i"

tag_id_modify1.i.i.i:                             ; preds = %tag_id_modify.i
  %20 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i, i64 0, i32 1, i64 2
  %field_value5.i.i.unpack32.i = load i64, i64* %20, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %field_value5.i.i.unpack32.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#dec_28.exit.i.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %tag_id_modify1.i.i.i
  %field_ptr2.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i, i64 0, i32 1
  %field_value5.i.i.elt.i = bitcast [3 x i64]* %field_ptr2.i.i.i to i8**
  %field_value5.i.i.unpack.i = load i8*, i8** %field_value5.i.i.elt.i, align 8
  %21 = ptrtoint i8* %field_value5.i.i.unpack.i to i64
  %22 = shl i64 %field_value5.i.i.unpack32.i, 1
  %.not.i.i.i.i.i = icmp slt i64 %field_value5.i.i.unpack32.i, 0
  %23 = select i1 %.not.i.i.i.i.i, i64 %22, i64 %21
  %as_usize_ptr.i15.i.i = inttoptr i64 %23 to i64*
  %get_rc_ptr.i16.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i15.i.i, i64 -1
  %24 = load i64, i64* %get_rc_ptr.i16.i.i, align 8
  %.not.i.i.i.i17.i.i = icmp eq i64 %24, 0
  br i1 %.not.i.i.i.i17.i.i, label %"#Attr_#dec_28.exit.i.i", label %Then.i.i.i.i18.i.i

Then.i.i.i.i18.i.i:                               ; preds = %modification_list_block.i.i.i
  %25 = add i64 %24, -1
  store i64 %25, i64* %get_rc_ptr.i16.i.i, align 8
  %26 = icmp eq i64 %24, -9223372036854775808
  br i1 %26, label %Then1.i.i.i.i19.i.i, label %"#Attr_#dec_28.exit.i.i"

Then1.i.i.i.i19.i.i:                              ; preds = %Then.i.i.i.i18.i.i
  %27 = bitcast i64* %get_rc_ptr.i16.i.i to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i"

tag_id_modify6.i.i.i:                             ; preds = %tag_id_modify.i
  %28 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.unpack22.i = load i64, i64* %28, align 8
  %is_big_str.i.i.i39 = icmp sgt i64 %load_str_to_stack.i.i.unpack22.i, 0
  br i1 %is_big_str.i.i.i39, label %modify_rc.i.i.i42, label %"#Attr_#dec_28.exit.i.i"

modify_rc.i.i.i42:                                ; preds = %tag_id_modify6.i.i.i
  %field_ptr7.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i, i64 0, i32 1
  %modify_tag_field9.i.i.i = bitcast [3 x i64]* %field_ptr7.i.i.i to %str.RocStr*
  %call_builtin.i.i.i40 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i) #11
  %get_rc_ptr.i.i.i41 = getelementptr inbounds i8, i8* %call_builtin.i.i.i40, i64 -8
  %29 = bitcast i8* %get_rc_ptr.i.i.i41 to i64*
  %30 = load i64, i64* %29, align 8
  %.not.i.i.i.i2.i.i = icmp eq i64 %30, 0
  br i1 %.not.i.i.i.i2.i.i, label %"#Attr_#dec_28.exit.i.i", label %Then.i.i.i.i.i.i43

Then.i.i.i.i.i.i43:                               ; preds = %modify_rc.i.i.i42
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %30, -9223372036854775808
  br i1 %32, label %"#Attr_#dec_28.exit.i.sink.split.i", label %"#Attr_#dec_28.exit.i.i"

"#Attr_#dec_28.exit.i.sink.split.i":              ; preds = %Then.i.i.i.i.i.i43, %Then1.i.i.i.i19.i.i, %Then1.i.i.i.i.i.i.i
  %get_rc_ptr.i.i.sink.i = phi i8* [ %27, %Then1.i.i.i.i19.i.i ], [ %19, %Then1.i.i.i.i.i.i.i ], [ %get_rc_ptr.i.i.i41, %Then.i.i.i.i.i.i43 ]
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.sink.i, i32 8) #11
  br label %"#Attr_#dec_28.exit.i.i"

"#Attr_#dec_28.exit.i.i":                         ; preds = %"#Attr_#dec_28.exit.i.sink.split.i", %Then.i.i.i.i.i.i43, %modify_rc.i.i.i42, %tag_id_modify6.i.i.i, %Then.i.i.i.i18.i.i, %modification_list_block.i.i.i, %tag_id_modify1.i.i.i, %Then.i.i.i.i.i.i.i, %modification_list_block.i.i.i.i, %tag_id_modify.i.i.i, %tag_id_modify.i
  %struct_field_access_record_1.i.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 4
  %33 = bitcast i64* %struct_field_access_record_1.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %9, i8* noundef nonnull align 8 dereferenceable(40) %33, i64 40, i1 false) #11
  %tag_id_ptr.i3.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i, i64 0, i32 2
  %load_tag_id.i4.i.i = load i8, i8* %tag_id_ptr.i3.i.i, align 8
  %cond.i.i.i = icmp eq i8 %load_tag_id.i4.i.i, 9
  br i1 %cond.i.i.i, label %tag_id_modify.i8.i.i, label %"#Attr_#dec_4.exit.i.i"

tag_id_modify.i8.i.i:                             ; preds = %"#Attr_#dec_28.exit.i.i"
  %34 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.i.unpack27.i = load i64, i64* %34, align 8
  %is_big_str.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack27.i, 0
  br i1 %is_big_str.i.i.i.i, label %modify_rc.i.i.i.i, label %"#Attr_#dec_4.exit.i.i"

modify_rc.i.i.i.i:                                ; preds = %tag_id_modify.i8.i.i
  %field_ptr.i5.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %struct_field1.i.i, i64 0, i32 1
  %modify_tag_field.i7.i.i = bitcast [4 x i64]* %field_ptr.i5.i.i to %str.RocStr*
  %call_builtin.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field.i7.i.i) #11
  %get_rc_ptr.i.i10.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i, i64 -8
  %35 = bitcast i8* %get_rc_ptr.i.i10.i.i to i64*
  %36 = load i64, i64* %35, align 8
  %.not.i.i.i.i.i11.i.i = icmp eq i64 %36, 0
  br i1 %.not.i.i.i.i.i11.i.i, label %"#Attr_#dec_4.exit.i.i", label %Then.i.i.i.i.i12.i.i

Then.i.i.i.i.i12.i.i:                             ; preds = %modify_rc.i.i.i.i
  %37 = add i64 %36, -1
  store i64 %37, i64* %35, align 8
  %38 = icmp eq i64 %36, -9223372036854775808
  br i1 %38, label %Then1.i.i.i.i.i13.i.i, label %"#Attr_#dec_4.exit.i.i"

Then1.i.i.i.i.i13.i.i:                            ; preds = %Then.i.i.i.i.i12.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i10.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit.i.i"

"#Attr_#dec_4.exit.i.i":                          ; preds = %Then1.i.i.i.i.i13.i.i, %Then.i.i.i.i.i12.i.i, %modify_rc.i.i.i.i, %tag_id_modify.i8.i.i, %"#Attr_#dec_28.exit.i.i"
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  %const_str_store.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_str_literal_17100216405140828939, i64 0, i64 8), i8** %const_str_store.repack.i.i, align 8
  %const_str_store.repack27.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 1
  store i64 31, i64* %const_str_store.repack27.i.i, align 8
  %const_str_store.repack28.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store.i.i, i64 0, i32 2
  store i64 31, i64* %const_str_store.repack28.i.i, align 8
  %const_str_store1.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 0
  store i8* inttoptr (i64 11872 to i8*), i8** %const_str_store1.repack.i.i, align 8
  %const_str_store1.repack29.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 1
  store i64 0, i64* %const_str_store1.repack29.i.i, align 8
  %const_str_store1.repack30.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store1.i.i, i64 0, i32 2
  store i64 -9079256848778919936, i64* %const_str_store1.repack30.i.i, align 8
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %result_value.i.i, %str.RocStr* nonnull readonly %1, %str.RocStr* nocapture nonnull readonly %const_str_store1.i.i) #11
  %39 = bitcast %str.RocStr* %str_alloca.i31.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  call fastcc void @roc_builtins.str.concat(%str.RocStr* noalias nocapture nonnull %str_alloca.i31.i.i, %str.RocStr* nonnull readonly %const_str_store.i.i, %str.RocStr* nocapture nonnull readonly %result_value.i.i) #11
  %result_value2.i.i.sroa.0.0..sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i.i, i64 0, i32 0
  %result_value2.i.i.sroa.0.0.copyload = load i8*, i8** %result_value2.i.i.sroa.0.0..sroa_idx, align 8
  %result_value2.i.i.sroa.4.0..sroa_idx61 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i.i, i64 0, i32 1
  %result_value2.i.i.sroa.4.0.copyload = load i64, i64* %result_value2.i.i.sroa.4.0..sroa_idx61, align 8
  %result_value2.i.i.sroa.5.0..sroa_idx63 = getelementptr inbounds %str.RocStr, %str.RocStr* %str_alloca.i31.i.i, i64 0, i32 2
  %result_value2.i.i.sroa.5.0.copyload = load i64, i64* %result_value2.i.i.sroa.5.0..sroa_idx63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  %load_str_to_stack.i32.i.i.elt35 = getelementptr inbounds %str.RocStr, %str.RocStr* %result_value.i.i, i64 0, i32 2
  %load_str_to_stack.i32.i.i.unpack36 = load i64, i64* %load_str_to_stack.i32.i.i.elt35, align 8
  %is_big_str.i34.i.i = icmp sgt i64 %load_str_to_stack.i32.i.i.unpack36, 0
  br i1 %is_big_str.i34.i.i, label %modify_rc.i39.i.i, label %_40_809645d8dd9f9691c41622fdd376e1ed5766b63b151afbc5fe20e17fec6d61f6.exit

modify_rc.i39.i.i:                                ; preds = %"#Attr_#dec_4.exit.i.i"
  %call_builtin.i35.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %result_value.i.i) #11
  %get_rc_ptr.i37.i.i = getelementptr inbounds i8, i8* %call_builtin.i35.i.i, i64 -8
  %40 = bitcast i8* %get_rc_ptr.i37.i.i to i64*
  %41 = load i64, i64* %40, align 8
  %.not.i.i.i.i38.i.i = icmp eq i64 %41, 0
  br i1 %.not.i.i.i.i38.i.i, label %_40_809645d8dd9f9691c41622fdd376e1ed5766b63b151afbc5fe20e17fec6d61f6.exit, label %Then.i.i.i.i40.i.i

Then.i.i.i.i40.i.i:                               ; preds = %modify_rc.i39.i.i
  %42 = add i64 %41, -1
  store i64 %42, i64* %40, align 8
  %43 = icmp eq i64 %41, -9223372036854775808
  br i1 %43, label %Then1.i.i.i.i41.i.i, label %_40_809645d8dd9f9691c41622fdd376e1ed5766b63b151afbc5fe20e17fec6d61f6.exit

Then1.i.i.i.i41.i.i:                              ; preds = %Then.i.i.i.i40.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i37.i.i, i32 8) #11
  br label %_40_809645d8dd9f9691c41622fdd376e1ed5766b63b151afbc5fe20e17fec6d61f6.exit

else_block.i.i:                                   ; preds = %entry
  %load_str_to_stack.i44.i.i.elt15 = getelementptr inbounds %str.RocStr, %str.RocStr* %1, i64 0, i32 2
  %load_str_to_stack.i44.i.i.unpack16 = load i64, i64* %load_str_to_stack.i44.i.i.elt15, align 8
  %is_big_str.i46.i.i = icmp sgt i64 %load_str_to_stack.i44.i.i.unpack16, 0
  br i1 %is_big_str.i46.i.i, label %modify_rc.i51.i.i, label %"#Attr_#dec_4.exit55.i.i"

modify_rc.i51.i.i:                                ; preds = %else_block.i.i
  %call_builtin.i47.i.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %1) #11
  %get_rc_ptr.i49.i.i = getelementptr inbounds i8, i8* %call_builtin.i47.i.i, i64 -8
  %44 = bitcast i8* %get_rc_ptr.i49.i.i to i64*
  %45 = load i64, i64* %44, align 8
  %.not.i.i.i.i50.i.i = icmp eq i64 %45, 0
  br i1 %.not.i.i.i.i50.i.i, label %"#Attr_#dec_4.exit55.i.i", label %Then.i.i.i.i52.i.i

Then.i.i.i.i52.i.i:                               ; preds = %modify_rc.i51.i.i
  %46 = add i64 %45, -1
  store i64 %46, i64* %44, align 8
  %47 = icmp eq i64 %45, -9223372036854775808
  br i1 %47, label %Then1.i.i.i.i53.i.i, label %"#Attr_#dec_4.exit55.i.i"

Then1.i.i.i.i53.i.i:                              ; preds = %Then.i.i.i.i52.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i49.i.i, i32 8) #11
  br label %"#Attr_#dec_4.exit55.i.i"

"#Attr_#dec_4.exit55.i.i":                        ; preds = %modify_rc.i51.i.i, %Then.i.i.i.i52.i.i, %Then1.i.i.i.i53.i.i, %else_block.i.i
  %get_opaque_data_ptr.i.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %0, i64 0, i32 1
  %load_element.elt.i.i = bitcast [9 x i64]* %get_opaque_data_ptr.i.i to i8**
  %load_element.unpack.i.i = load i8*, i8** %load_element.elt.i.i, align 8
  %48 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 1
  %load_element.unpack21.i.i = load i64, i64* %48, align 8
  %49 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 2
  %load_element.unpack23.i.i = load i64, i64* %49, align 8
  %50 = bitcast { i64, %list.RocList, %list.RocList }* %struct_alloca.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %50)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %50, i8 0, i64 56, i1 false) #11
  %51 = bitcast { i64, %list.RocList, %list.RocList }* %result_value.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %51) #11
  %52 = bitcast { i64, %list.RocList, %list.RocList }* %result_value.i.i.i.i.i to i8*
  %lt_uint.i.i.i.i50.not.i = icmp eq i64 %load_element.unpack21.i.i, 0
  br i1 %lt_uint.i.i.i.i50.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.preheader.i

then_block.i.i.i.preheader.i:                     ; preds = %"#Attr_#dec_4.exit55.i.i"
  %list_get_load_element.i.i.i.i.peel.i = load i8, i8* %load_element.unpack.i.i, align 1
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %52) #11
  call fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nonnull %struct_alloca.i, i8 %list_get_load_element.i.i.i.i.peel.i, { i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %51, i8* noundef nonnull align 8 dereferenceable(56) %52, i64 56, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %52) #11
  %exitcond.peel.not.i = icmp eq i64 %load_element.unpack21.i.i, 1
  br i1 %exitcond.peel.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.i

then_block.i.i.i.i:                               ; preds = %then_block.i.i.i.preheader.i, %then_block.i.i.i.i
  %joinpointarg3.i.i.i52.i = phi i64 [ %call.i.i.i.i49.i, %then_block.i.i.i.i ], [ 1, %then_block.i.i.i.preheader.i ]
  %list_get_element.i.i.i.i.i = getelementptr inbounds i8, i8* %load_element.unpack.i.i, i64 %joinpointarg3.i.i.i52.i
  %list_get_load_element.i.i.i.i.i = load i8, i8* %list_get_element.i.i.i.i.i, align 1
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %52) #11
  call fastcc void @"#UserApp_tokenizeOne_c8bf2436a9aeae3cd058bc366dff2bf0f34b57376c632fe4053b166eac"({ i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i, i8 %list_get_load_element.i.i.i.i.i, { i64, %list.RocList, %list.RocList }* nonnull %result_value.i.i.i.i.i) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %51, i8* noundef nonnull align 8 dereferenceable(56) %52, i64 56, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %52) #11
  %call.i.i.i.i49.i = add nuw i64 %joinpointarg3.i.i.i52.i, 1
  %exitcond.not.i = icmp eq i64 %call.i.i.i.i49.i, %load_element.unpack21.i.i
  br i1 %exitcond.not.i, label %else_block.i.i.i.i, label %then_block.i.i.i.i, !llvm.loop !263

else_block.i.i.i.i:                               ; preds = %then_block.i.i.i.i, %then_block.i.i.i.preheader.i, %"#Attr_#dec_4.exit55.i.i"
  %joinpointarg1.i.i.i.lcssa.i = phi { i64, %list.RocList, %list.RocList }* [ %struct_alloca.i, %"#Attr_#dec_4.exit55.i.i" ], [ %result_value.i.i.i.i, %then_block.i.i.i.preheader.i ], [ %result_value.i.i.i.i, %then_block.i.i.i.i ]
  %"cap > 0.i.i.i.i.not.i" = icmp eq i64 %load_element.unpack23.i.i, 0
  br i1 %"cap > 0.i.i.i.i.not.i", label %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i, label %modification_list_block.i.i.i.i.i

modification_list_block.i.i.i.i.i:                ; preds = %else_block.i.i.i.i
  %53 = ptrtoint i8* %load_element.unpack.i.i to i64
  %54 = shl i64 %load_element.unpack23.i.i, 1
  %.not.i.i.i.i.i.i.i44 = icmp slt i64 %load_element.unpack23.i.i, 0
  %55 = select i1 %.not.i.i.i.i.i.i.i44, i64 %54, i64 %53
  %as_usize_ptr.i.i.i.i.i = inttoptr i64 %55 to i64*
  %get_rc_ptr.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i.i, i64 -1
  %56 = load i64, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %56, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %modification_list_block.i.i.i.i.i
  %57 = add i64 %56, -1
  store i64 %57, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %58 = icmp eq i64 %56, -9223372036854775808
  br i1 %58, label %Then1.i.i.i.i.i.i.i.i, label %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  %59 = bitcast i64* %get_rc_ptr.i.i.i.i.i to i8*
  tail call void @roc_dealloc(i8* %59, i32 8) #11
  br label %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i

List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i: ; preds = %Then1.i.i.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %modification_list_block.i.i.i.i.i, %else_block.i.i.i.i
  %result_value.i.i.sroa.4.0..sroa_idx34.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 0
  %result_value.i.i.sroa.4.0.copyload.i = load i8*, i8** %result_value.i.i.sroa.4.0..sroa_idx34.i, align 8
  %result_value.i.i.sroa.5.0..sroa_idx36.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 1
  %result_value.i.i.sroa.5.0.copyload.i = load i64, i64* %result_value.i.i.sroa.5.0..sroa_idx36.i, align 8
  %result_value.i.i.sroa.6.0..sroa_idx38.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 1, i32 2
  %result_value.i.i.sroa.6.0.copyload.i = load i64, i64* %result_value.i.i.sroa.6.0..sroa_idx38.i, align 8
  %result_value.i.i.sroa.7.0..sroa_idx40.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 2, i32 0
  %result_value.i.i.sroa.7.0.copyload.i = load i8*, i8** %result_value.i.i.sroa.7.0..sroa_idx40.i, align 8
  %result_value.i.i.sroa.9.0..sroa_idx44.i = getelementptr inbounds { i64, %list.RocList, %list.RocList }, { i64, %list.RocList, %list.RocList }* %joinpointarg1.i.i.i.lcssa.i, i64 0, i32 2, i32 2
  %result_value.i.i.sroa.9.0.copyload.i = load i64, i64* %result_value.i.i.sroa.9.0..sroa_idx44.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %51) #11
  %"cap > 0.i.not.i45" = icmp eq i64 %result_value.i.i.sroa.9.0.copyload.i, 0
  br i1 %"cap > 0.i.not.i45", label %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit", label %modification_list_block.i.i50

modification_list_block.i.i50:                    ; preds = %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i
  %60 = ptrtoint i8* %result_value.i.i.sroa.7.0.copyload.i to i64
  %61 = shl i64 %result_value.i.i.sroa.9.0.copyload.i, 1
  %.not.i.i.i.i46 = icmp slt i64 %result_value.i.i.sroa.9.0.copyload.i, 0
  %62 = select i1 %.not.i.i.i.i46, i64 %61, i64 %60
  %as_usize_ptr.i.i47 = inttoptr i64 %62 to i64*
  %get_rc_ptr.i.i48 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i47, i64 -1
  %63 = load i64, i64* %get_rc_ptr.i.i48, align 8
  %.not.i.i.i.i.i49 = icmp eq i64 %63, 0
  br i1 %.not.i.i.i.i.i49, label %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit", label %Then.i.i.i.i.i51

Then.i.i.i.i.i51:                                 ; preds = %modification_list_block.i.i50
  %64 = add i64 %63, -1
  store i64 %64, i64* %get_rc_ptr.i.i48, align 8
  %65 = icmp eq i64 %63, -9223372036854775808
  br i1 %65, label %Then1.i.i.i.i.i52, label %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit"

Then1.i.i.i.i.i52:                                ; preds = %Then.i.i.i.i.i51
  %66 = bitcast i64* %get_rc_ptr.i.i48 to i8*
  tail call void @roc_dealloc(i8* %66, i32 8) #11
  br label %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit"

"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit": ; preds = %List_walk_778f2bddc5c6ffd5c589c3efde818fa9f22d4621fa7a6c432faa5092b4e3.exit.i, %modification_list_block.i.i50, %Then.i.i.i.i.i51, %Then1.i.i.i.i.i52
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %50)
  %67 = tail call i8* @roc_alloc(i64 1008, i32 8) #11, !noalias !649
  %68 = icmp ne i8* %67, null
  tail call void @llvm.assume(i1 %68) #11, !noalias !658
  %69 = getelementptr inbounds i8, i8* %67, i64 8
  %70 = bitcast i8* %67 to i64*
  store i64 -9223372036854775808, i64* %70, align 8, !noalias !649
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1000) %69, i8 0, i64 1000, i1 false) #11
  %struct_alloca.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i, i64 0, i32 0, i32 0
  store i8* %69, i8** %struct_alloca.sroa.0.0..sroa_idx.i, align 8
  %struct_alloca.sroa.2.0..sroa_idx27.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i, i64 0, i32 0, i32 1
  store i64 1000, i64* %struct_alloca.sroa.2.0..sroa_idx27.i, align 8
  %struct_alloca.sroa.3.0..sroa_idx28.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i, i64 0, i32 0, i32 2
  store i64 1000, i64* %struct_alloca.sroa.3.0..sroa_idx28.i, align 8
  %struct_alloca.sroa.4.0..sroa_idx.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i, i64 0, i32 1
  %struct_alloca.sroa.4.0..sroa_cast.i = bitcast i64* %struct_alloca.sroa.4.0..sroa_idx.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %struct_alloca.sroa.4.0..sroa_cast.i, i8 0, i64 40, i1 false) #11
  %struct_alloca.sroa.5.0..sroa_idx29.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i, i64 0, i32 4, i32 0
  store i8* %result_value.i.i.sroa.4.0.copyload.i, i8** %struct_alloca.sroa.5.0..sroa_idx29.i, align 8
  %struct_alloca.sroa.6.0..sroa_idx30.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i, i64 0, i32 4, i32 1
  store i64 %result_value.i.i.sroa.5.0.copyload.i, i64* %struct_alloca.sroa.6.0..sroa_idx30.i, align 8
  %struct_alloca.sroa.7.0..sroa_idx31.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i, i64 0, i32 4, i32 2
  store i64 %result_value.i.i.sroa.6.0.copyload.i, i64* %struct_alloca.sroa.7.0..sroa_idx31.i, align 8
  %struct_alloca.sroa.8.0..sroa_idx32.i = getelementptr inbounds { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }, { %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* %result_value5.i.i, i64 0, i32 5
  store i64 0, i64* %struct_alloca.sroa.8.0..sroa_idx32.i, align 8
  %call6.i.i = call fastcc { i8*, i64, i64 } @"#UserApp_run_cd9485bcd826cd7441fe8b77ca3d11f7f6c7eccd1a861b4655c321fceb12"({ %list.RocList, i64, i64, %list.RocList, %list.RocList, i64 }* nonnull %result_value5.i.i) #11
  %newret7 = extractvalue { i8*, i64, i64 } %call6.i.i, 0
  %oldret8 = insertvalue %list.RocList undef, i8* %newret7, 0
  %newret9 = extractvalue { i8*, i64, i64 } %call6.i.i, 1
  %oldret10 = insertvalue %list.RocList %oldret8, i64 %newret9, 1
  %newret11 = extractvalue { i8*, i64, i64 } %call6.i.i, 2
  %oldret12 = insertvalue %list.RocList %oldret10, i64 %newret11, 2
  call fastcc void @Str_fromUtf8_698af71e682dce72e1b119d817a61329283ecf2354d63fc9f9be62aa47c3(%list.RocList %oldret12, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value7.i.i) #11
  %tag_id_ptr8.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i, i64 0, i32 2
  %load_tag_id9.i.i = load i8, i8* %tag_id_ptr8.i.i, align 8
  %eq_u810.i.i = icmp eq i8 %load_tag_id9.i.i, 0
  br i1 %eq_u810.i.i, label %then_block12.i.i, label %else_block13.i.i

then_block12.i.i:                                 ; preds = %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit"
  call fastcc void @"#Attr_#dec_31"({ [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value7.i.i) #11
  %const_str_store14.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i.i, i64 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_str_literal_12062936082858867291, i64 0, i64 8), i8** %const_str_store14.repack.i.i, align 8
  %const_str_store14.repack25.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i.i, i64 0, i32 1
  store i64 26, i64* %const_str_store14.repack25.i.i, align 8
  %const_str_store14.repack26.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %const_str_store14.i.i, i64 0, i32 2
  store i64 26, i64* %const_str_store14.repack26.i.i, align 8
  call void @roc_panic(%str.RocStr* %const_str_store14.i.i, i32 1) #11
  unreachable

else_block13.i.i:                                 ; preds = %"#UserApp_tokenize_8702cde93da1c836ea7d1c59105ef807c6bb1ac3a515fede8397fbc352b32.exit"
  %load_element18.i.i.sroa.0.0..sroa_cast = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i to i8**
  %load_element18.i.i.sroa.0.0.copyload = load i8*, i8** %load_element18.i.i.sroa.0.0..sroa_cast, align 8
  %load_element18.i.i.sroa.4.0..sroa_idx71 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i, i64 0, i32 1, i64 1
  %load_element18.i.i.sroa.4.0.copyload = load i64, i64* %load_element18.i.i.sroa.4.0..sroa_idx71, align 8
  %load_element18.i.i.sroa.5.0..sroa_idx73 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i, i64 0, i32 1, i64 2
  %load_element18.i.i.sroa.5.0.copyload = load i64, i64* %load_element18.i.i.sroa.5.0..sroa_idx73, align 8
  br label %_40_809645d8dd9f9691c41622fdd376e1ed5766b63b151afbc5fe20e17fec6d61f6.exit

_40_809645d8dd9f9691c41622fdd376e1ed5766b63b151afbc5fe20e17fec6d61f6.exit: ; preds = %"#Attr_#dec_4.exit.i.i", %Then1.i.i.i.i41.i.i, %Then.i.i.i.i40.i.i, %modify_rc.i39.i.i, %else_block13.i.i
  %load_tag_to_put_in_struct.unpack.i.i.i.i.pn = phi i8* [ %load_element18.i.i.sroa.0.0.copyload, %else_block13.i.i ], [ %result_value2.i.i.sroa.0.0.copyload, %modify_rc.i39.i.i ], [ %result_value2.i.i.sroa.0.0.copyload, %Then.i.i.i.i40.i.i ], [ %result_value2.i.i.sroa.0.0.copyload, %Then1.i.i.i.i41.i.i ], [ %result_value2.i.i.sroa.0.0.copyload, %"#Attr_#dec_4.exit.i.i" ]
  %load_tag_to_put_in_struct.unpack3.i.i.i.i.pn = phi i64 [ %load_element18.i.i.sroa.4.0.copyload, %else_block13.i.i ], [ %result_value2.i.i.sroa.4.0.copyload, %modify_rc.i39.i.i ], [ %result_value2.i.i.sroa.4.0.copyload, %Then.i.i.i.i40.i.i ], [ %result_value2.i.i.sroa.4.0.copyload, %Then1.i.i.i.i41.i.i ], [ %result_value2.i.i.sroa.4.0.copyload, %"#Attr_#dec_4.exit.i.i" ]
  %load_tag_to_put_in_struct.unpack5.i.i.i.i.pn = phi i64 [ %load_element18.i.i.sroa.5.0.copyload, %else_block13.i.i ], [ %result_value2.i.i.sroa.5.0.copyload, %modify_rc.i39.i.i ], [ %result_value2.i.i.sroa.5.0.copyload, %Then.i.i.i.i40.i.i ], [ %result_value2.i.i.sroa.5.0.copyload, %Then1.i.i.i.i41.i.i ], [ %result_value2.i.i.sroa.5.0.copyload, %"#Attr_#dec_4.exit.i.i" ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  %.repack.repack = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %2, i64 0, i32 0, i32 0
  store i8* %load_tag_to_put_in_struct.unpack.i.i.i.i.pn, i8** %.repack.repack, align 8
  %.repack.repack24 = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %2, i64 0, i32 0, i32 1
  store i64 %load_tag_to_put_in_struct.unpack3.i.i.i.i.pn, i64* %.repack.repack24, align 8
  %.repack.repack26 = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %2, i64 0, i32 0, i32 2
  store i64 %load_tag_to_put_in_struct.unpack5.i.i.i.i.pn, i64* %.repack.repack26, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_9_result_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_9_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

define void @roc__mainForHost_0_caller({}* nocapture readnone %0, { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* nocapture readonly %1, {}* nocapture readnone %2) local_unnamed_addr {
entry:
  %list_alloca.i.i3.i.i = alloca %list.RocList, align 8
  %load_element9.i.i.i = alloca %str.RocStr, align 8
  %load_element5.i17.i.i = alloca %str.RocStr, align 8
  %struct_field.i7.i.i.i = alloca %str.RocStr, align 8
  %param_alloca.i.i.i.i.i.i = alloca %list.RocList, align 8
  %result_value.i.i.i9.i.i = alloca { [0 x i64], [5 x i64], i8, [7 x i8] }, align 8
  %struct_field.i.i.i.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value.i12.i.i = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %load_element.i.i.i = alloca %str.RocStr, align 8
  %struct_field1.i.i.i.i.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i.i.i.i.i = alloca %str.RocStr, align 8
  %result_value1.i.i.i.i.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value.i.i.i.i.i = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value7.i.i.i.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %load_element6.i.i.i.i = alloca %str.RocStr, align 8
  %return_value.i.i.i.i.i = alloca %list.RocList, align 8
  %struct_field1.i.i = alloca { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, align 8
  %3 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %struct_field1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3)
  %4 = bitcast { { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { {}, {} } }* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(56) %3, i8* noundef nonnull align 8 dereferenceable(56) %4, i64 56, i1 false)
  %5 = bitcast %list.RocList* %return_value.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  call void @roc_fx_args(%list.RocList* nonnull %return_value.i.i.i.i.i)
  %read_result.i.i.i.i.i.elt = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i.i.i, i64 0, i32 0
  %read_result.i.i.i.i.i.unpack = load i8*, i8** %read_result.i.i.i.i.i.elt, align 8
  %6 = insertvalue %list.RocList undef, i8* %read_result.i.i.i.i.i.unpack, 0
  %read_result.i.i.i.i.i.elt10 = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i.i.i, i64 0, i32 1
  %read_result.i.i.i.i.i.unpack11 = load i64, i64* %read_result.i.i.i.i.i.elt10, align 8
  %7 = insertvalue %list.RocList %6, i64 %read_result.i.i.i.i.i.unpack11, 1
  %read_result.i.i.i.i.i.elt12 = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i.i.i, i64 0, i32 2
  %read_result.i.i.i.i.i.unpack13 = load i64, i64* %read_result.i.i.i.i.i.elt12, align 8
  %read_result.i.i.i.i.i14 = insertvalue %list.RocList %7, i64 %read_result.i.i.i.i.i.unpack13, 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  %8 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = bitcast %str.RocStr* %load_element6.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #11
  %12 = bitcast %str.RocStr* %struct_field1.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast %str.RocStr* %struct_field.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %13, i8* noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.i.i.i.i.elt17 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i.i.i.i, i64 0, i32 2
  %load_str_to_stack.i.i.i.i.i.i.i.unpack18 = load i64, i64* %load_str_to_stack.i.i.i.i.i.i.i.elt17, align 8
  %is_big_str.i.i.i.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.i.i.i.i.unpack18, 0
  br i1 %is_big_str.i.i.i.i.i.i.i, label %modify_rc.i.i.i.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i.i.i.i"

modify_rc.i.i.i.i.i.i.i:                          ; preds = %entry
  %call_builtin.i.i.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i.i.i.i) #11
  %get_rc_ptr.i.i.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i.i.i, i64 -8
  %14 = bitcast i8* %get_rc_ptr.i.i.i.i.i.i.i to i64*
  %15 = load i64, i64* %14, align 8
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i.i.i.i", label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %modify_rc.i.i.i.i.i.i.i
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8
  br label %"#Attr_#inc_4.exit.i.i.i.i.i.i"

"#Attr_#inc_4.exit.i.i.i.i.i.i":                  ; preds = %Then.i.i.i.i.i.i.i.i, %modify_rc.i.i.i.i.i.i.i, %entry
  %struct_field_access_record_1.i.i.i.i.i.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %struct_field1.i.i, i64 0, i32 1
  %17 = bitcast %str.RocStr* %struct_field_access_record_1.i.i.i.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %12, i8* noundef nonnull align 8 dereferenceable(24) %17, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.i.i.i.i.i.elt22 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i.i.i.i, i64 0, i32 2
  %load_str_to_stack.i3.i.i.i.i.i.i.unpack23 = load i64, i64* %load_str_to_stack.i3.i.i.i.i.i.i.elt22, align 8
  %is_big_str.i5.i.i.i.i.i.i = icmp sgt i64 %load_str_to_stack.i3.i.i.i.i.i.i.unpack23, 0
  br i1 %is_big_str.i5.i.i.i.i.i.i, label %modify_rc.i10.i.i.i.i.i.i, label %"#Attr_#inc_4.exit12.i.i.i.i.i.i"

modify_rc.i10.i.i.i.i.i.i:                        ; preds = %"#Attr_#inc_4.exit.i.i.i.i.i.i"
  %call_builtin.i6.i.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i.i.i.i) #11
  %get_rc_ptr.i8.i.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i6.i.i.i.i.i.i, i64 -8
  %18 = bitcast i8* %get_rc_ptr.i8.i.i.i.i.i.i to i64*
  %19 = load i64, i64* %18, align 8
  %.not.i.i9.i.i.i.i.i.i = icmp eq i64 %19, 0
  br i1 %.not.i.i9.i.i.i.i.i.i, label %"#Attr_#inc_4.exit12.i.i.i.i.i.i", label %Then.i.i11.i.i.i.i.i.i

Then.i.i11.i.i.i.i.i.i:                           ; preds = %modify_rc.i10.i.i.i.i.i.i
  %20 = add nsw i64 %19, 1
  store i64 %20, i64* %18, align 8
  br label %"#Attr_#inc_4.exit12.i.i.i.i.i.i"

"#Attr_#inc_4.exit12.i.i.i.i.i.i":                ; preds = %Then.i.i11.i.i.i.i.i.i, %modify_rc.i10.i.i.i.i.i.i, %"#Attr_#inc_4.exit.i.i.i.i.i.i"
  %struct_field_access_record_2.i.i.i.i.i.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %struct_field1.i.i, i64 0, i32 2
  %struct_field2.i.i.i.i.i.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_2.i.i.i.i.i.i, align 8
  %to_int1.i.i.i.i.i.i.i = ptrtoint { [0 x i64], [12 x i64] }* %struct_field2.i.i.i.i.i.i to i64
  %masked.i.i.i.i.i.i.i = and i64 %to_int1.i.i.i.i.i.i.i, 7
  %cast_to_i8_ptr.i.i.i.i.i.i.i = bitcast { [0 x i64], [12 x i64] }* %struct_field2.i.i.i.i.i.i to i8*
  %get_rc_ptr.i14.i.i.i.i.i.i.idx = sub nuw nsw i64 -8, %masked.i.i.i.i.i.i.i
  %get_rc_ptr.i14.i.i.i.i.i.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i.i.i.i.i, i64 %get_rc_ptr.i14.i.i.i.i.i.i.idx
  %21 = bitcast i8* %get_rc_ptr.i14.i.i.i.i.i.i to i64*
  %22 = load i64, i64* %21, align 8
  %.not.i.i15.i.i.i.i.i.i = icmp eq i64 %22, 0
  br i1 %.not.i.i15.i.i.i.i.i.i, label %Arg_parseFormatted_a153a8cd6925850a48cb361686545494b38b6b7cf3ec909dae9cdba162313.exit.i.i.i.i, label %Then.i.i16.i.i.i.i.i.i

Then.i.i16.i.i.i.i.i.i:                           ; preds = %"#Attr_#inc_4.exit12.i.i.i.i.i.i"
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8
  br label %Arg_parseFormatted_a153a8cd6925850a48cb361686545494b38b6b7cf3ec909dae9cdba162313.exit.i.i.i.i

Arg_parseFormatted_a153a8cd6925850a48cb361686545494b38b6b7cf3ec909dae9cdba162313.exit.i.i.i.i: ; preds = %Then.i.i16.i.i.i.i.i.i, %"#Attr_#inc_4.exit12.i.i.i.i.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  call fastcc void @Arg_parse_ea8cd3f9e69d28db5b7124744c3e946a0cb3efa454a29a8dabf2d158514f({ %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nonnull %struct_field1.i.i, %list.RocList %read_result.i.i.i.i.i14, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i.i) #11
  call fastcc void @Result_mapErr_2746327e51fdcb1dc64558817d88aa8cbfee5e0d4a4b214c753ebba27f81dfa({ [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i.i, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nonnull %struct_field1.i.i, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value1.i.i.i.i.i) #11
  %result_value.i.i.i.i.sroa.0.sroa.0.0.result_value.i.i.i.i.sroa.0.0..sroa_cast.sroa_cast = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i.i.i.i to i8**
  %result_value.i.i.i.i.sroa.0.sroa.0.0.copyload = load i8*, i8** %result_value.i.i.i.i.sroa.0.sroa.0.0.result_value.i.i.i.i.sroa.0.0..sroa_cast.sroa_cast, align 8
  %result_value.i.i.i.i.sroa.0.sroa.5.0.result_value.i.i.i.i.sroa.0.0..sroa_cast.sroa_idx174 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i.i.i.i, i64 0, i32 1, i64 1
  %result_value.i.i.i.i.sroa.0.sroa.5.0.copyload = load i64, i64* %result_value.i.i.i.i.sroa.0.sroa.5.0.result_value.i.i.i.i.sroa.0.0..sroa_cast.sroa_idx174, align 8
  %result_value.i.i.i.i.sroa.0.sroa.6.0.result_value.i.i.i.i.sroa.0.0..sroa_cast.sroa_idx178 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i.i.i.i, i64 0, i32 1, i64 2
  %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload = load i64, i64* %result_value.i.i.i.i.sroa.0.sroa.6.0.result_value.i.i.i.i.sroa.0.0..sroa_cast.sroa_idx178, align 8
  %result_value.i.i.i.i.sroa.5.0..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i.i.i.i, i64 0, i32 2
  %result_value.i.i.i.i.sroa.5.0.copyload = load i8, i8* %result_value.i.i.i.i.sroa.5.0..sroa_idx, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #11
  %eq_u8.i.i.i.i = icmp eq i8 %result_value.i.i.i.i.sroa.5.0.copyload, 0
  br i1 %eq_u8.i.i.i.i, label %branch1.i.i, label %else_block.i.i.i.i

else_block.i.i.i.i:                               ; preds = %Arg_parseFormatted_a153a8cd6925850a48cb361686545494b38b6b7cf3ec909dae9cdba162313.exit.i.i.i.i
  %result_value.i.i.i.i.sroa.0.sroa.0.0.result_value.i.i.i.i.sroa.0.0..sroa_cast116.sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i.i.i.i, i64 0, i32 0
  store i8* %result_value.i.i.i.i.sroa.0.sroa.0.0.copyload, i8** %result_value.i.i.i.i.sroa.0.sroa.0.0.result_value.i.i.i.i.sroa.0.0..sroa_cast116.sroa_idx, align 8
  %result_value.i.i.i.i.sroa.0.sroa.5.0.result_value.i.i.i.i.sroa.0.0..sroa_cast116.sroa_idx175 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i.i.i.i, i64 0, i32 1
  store i64 %result_value.i.i.i.i.sroa.0.sroa.5.0.copyload, i64* %result_value.i.i.i.i.sroa.0.sroa.5.0.result_value.i.i.i.i.sroa.0.0..sroa_cast116.sroa_idx175, align 8
  %result_value.i.i.i.i.sroa.0.sroa.6.0.result_value.i.i.i.i.sroa.0.0..sroa_cast116.sroa_idx179 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i.i.i.i, i64 0, i32 2
  store i64 %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload, i64* %result_value.i.i.i.i.sroa.0.sroa.6.0.result_value.i.i.i.i.sroa.0.0..sroa_cast116.sroa_idx179, align 8
  %is_big_str.i.i.i.i.i = icmp sgt i64 %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload, 0
  br i1 %is_big_str.i.i.i.i.i, label %modify_rc.i.i.i.i.i, label %tag_id_modify6.i.i.i

modify_rc.i.i.i.i.i:                              ; preds = %else_block.i.i.i.i
  %call_builtin.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_element6.i.i.i.i) #11
  %get_rc_ptr.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i, i64 -8
  %24 = bitcast i8* %get_rc_ptr.i.i.i.i.i to i64*
  %25 = load i64, i64* %24, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %25, 0
  br i1 %.not.i.i.i.i.i.i, label %tag_id_modify6.i.i.i, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i.i.i
  %26 = add nsw i64 %25, 1
  store i64 %26, i64* %24, align 8
  br label %tag_id_modify6.i.i.i

tag_id_modify6.i.i.i:                             ; preds = %else_block.i.i.i.i, %modify_rc.i.i.i.i.i, %Then.i.i.i.i.i.i
  %result_value.i12.i.i.i.i.sroa.0.0..sroa_cast = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i to i8**
  store i8* %result_value.i.i.i.i.sroa.0.sroa.0.0.copyload, i8** %result_value.i12.i.i.i.i.sroa.0.0..sroa_cast, align 8
  %result_value.i12.i.i.i.i.sroa.4.0..sroa_idx287 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 1, i64 1
  store i64 %result_value.i.i.i.i.sroa.0.sroa.5.0.copyload, i64* %result_value.i12.i.i.i.i.sroa.4.0..sroa_idx287, align 8
  %result_value.i12.i.i.i.i.sroa.5.0..sroa_idx289 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 1, i64 2
  store i64 %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload, i64* %result_value.i12.i.i.i.i.sroa.5.0..sroa_idx289, align 8
  %result_value.i12.i.i.i.i.sroa.6.0..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 2
  store i8 2, i8* %result_value.i12.i.i.i.i.sroa.6.0..sroa_idx, align 8
  %result_value.i12.i.i.i.i.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 3, i64 0
  %27 = ptrtoint i8* %result_value.i.i.i.i.sroa.0.sroa.0.0.copyload to i64
  br i1 %is_big_str.i.i.i.i.i, label %modify_rc.i.i.i.i, label %"#Attr_#inc_28.exit.i.thread.i"

"#Attr_#inc_28.exit.i.thread.i":                  ; preds = %tag_id_modify6.i.i.i
  %28 = bitcast %str.RocStr* %load_element9.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  br label %branch0.i.i

modify_rc.i.i.i.i:                                ; preds = %tag_id_modify6.i.i.i
  %field_ptr7.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 1
  %modify_tag_field9.i.i.i = bitcast [3 x i64]* %field_ptr7.i.i.i to %str.RocStr*
  %call_builtin.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i) #11
  %get_rc_ptr.i11.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i, i64 -8
  %29 = bitcast i8* %get_rc_ptr.i11.i.i.i to i64*
  %30 = load i64, i64* %29, align 8
  %.not.i.i12.i.i.i = icmp eq i64 %30, 0
  br i1 %.not.i.i12.i.i.i, label %"#Attr_#inc_28.exit.i.i", label %"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i"

"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i": ; preds = %modify_rc.i.i.i.i
  %31 = add nsw i64 %30, 1
  store i64 %31, i64* %29, align 8
  br label %"#Attr_#inc_28.exit.i.i"

"#Attr_#inc_28.exit.i.i":                         ; preds = %modify_rc.i.i.i.i, %"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i"
  %32 = bitcast %str.RocStr* %load_element9.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  br label %branch0.i.i

branch0.i.i:                                      ; preds = %"#Attr_#inc_28.exit.i.thread.i", %"#Attr_#inc_28.exit.i.i"
  %.pre-phi.i.pre-phi = bitcast %str.RocStr* %load_element9.i.i.i to i8*
  %get_opaque_data_ptr6.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 1
  %33 = bitcast [3 x i64]* %get_opaque_data_ptr6.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %.pre-phi.i.pre-phi, i8* noundef nonnull align 8 dereferenceable(24) %33, i64 24, i1 false) #11
  %34 = bitcast %list.RocList* %list_alloca.i.i3.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  call fastcc void @roc_builtins.str.to_utf8(%list.RocList* noalias nocapture nonnull %list_alloca.i.i3.i.i, %str.RocStr* nocapture nonnull readonly %load_element9.i.i.i) #11
  %load_list.elt.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i, i64 0, i32 0
  %load_list.unpack.i.i.i.i = load i8*, i8** %load_list.elt.i.i.i.i, align 8
  %load_list.elt1.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i, i64 0, i32 1
  %load_list.unpack2.i.i.i.i = load i64, i64* %load_list.elt1.i.i.i.i, align 8
  %load_list.elt3.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i, i64 0, i32 2
  %load_list.unpack4.i.i.i.i = load i64, i64* %load_list.elt3.i.i.i.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  %.pre-phi = bitcast %str.RocStr* %load_element9.i.i.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %.pre-phi) #11
  %load_tag_to_put_in_struct.unpack7.unpack.i.i.i.i = load i8, i8* %result_value.i12.i.i.i.i.sroa.7.0..sroa_idx, align 1
  %load_tag_to_put_in_struct.unpack7.elt14.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct.unpack7.unpack15.i.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack7.elt14.i.i.i.i, align 2
  %load_tag_to_put_in_struct.unpack7.elt16.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct.unpack7.unpack17.i.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack7.elt16.i.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack7.elt18.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct.unpack7.unpack19.i.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack7.elt18.i.i.i.i, align 4
  %load_tag_to_put_in_struct.unpack7.elt20.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct.unpack7.unpack21.i.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack7.elt20.i.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack7.elt22.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct.unpack7.unpack23.i.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack7.elt22.i.i.i.i, align 2
  %load_tag_to_put_in_struct.unpack7.elt24.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i.i.i.i, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct.unpack7.unpack25.i.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack7.elt24.i.i.i.i, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %35 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %35)
  %36 = bitcast %str.RocStr* %load_element.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  %result_value.i.i.sroa.0.sroa.7.sroa.14.32.result_value.i.i.sroa.0.sroa.7.56.result_value.i.i.sroa.0.56..sroa_cast.sroa_cast.sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i.i, i64 0, i32 0
  store i8* %result_value.i.i.i.i.sroa.0.sroa.0.0.copyload, i8** %result_value.i.i.sroa.0.sroa.7.sroa.14.32.result_value.i.i.sroa.0.sroa.7.56.result_value.i.i.sroa.0.56..sroa_cast.sroa_cast.sroa_idx, align 8
  %result_value.i.i.sroa.0.sroa.7.sroa.16.32.result_value.i.i.sroa.0.sroa.7.56.result_value.i.i.sroa.0.56..sroa_cast.sroa_cast.sroa_idx406 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i.i, i64 0, i32 1
  store i64 %result_value.i.i.i.i.sroa.0.sroa.5.0.copyload, i64* %result_value.i.i.sroa.0.sroa.7.sroa.16.32.result_value.i.i.sroa.0.sroa.7.56.result_value.i.i.sroa.0.56..sroa_cast.sroa_cast.sroa_idx406, align 8
  %result_value.i.i.sroa.0.sroa.7.sroa.17.32.result_value.i.i.sroa.0.sroa.7.56.result_value.i.i.sroa.0.56..sroa_cast.sroa_cast.sroa_idx408 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element.i.i.i, i64 0, i32 2
  store i64 %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload, i64* %result_value.i.i.sroa.0.sroa.7.sroa.17.32.result_value.i.i.sroa.0.sroa.7.56.result_value.i.i.sroa.0.56..sroa_cast.sroa_cast.sroa_idx408, align 8
  %37 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37)
  %load_element5.i.i.i.sroa.8.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 0, i64 0
  store i64 %27, i64* %load_element5.i.i.i.sroa.8.24..sroa_idx, align 8
  %load_element5.i.i.i.sroa.10.24..sroa_idx453 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 1, i64 1
  store i64 %result_value.i.i.i.i.sroa.0.sroa.5.0.copyload, i64* %load_element5.i.i.i.sroa.10.24..sroa_idx453, align 8
  %load_element5.i.i.i.sroa.11.24..sroa_idx455 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 1, i64 2
  store i64 %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload, i64* %load_element5.i.i.i.sroa.11.24..sroa_idx455, align 8
  %load_element5.i.i.i.sroa.12.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 2
  store i8 2, i8* %load_element5.i.i.i.sroa.12.24..sroa_idx, align 8
  %load_element5.i.i.i.sroa.13.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct.unpack7.unpack.i.i.i.i, i8* %load_element5.i.i.i.sroa.13.24..sroa_idx, align 1
  %load_element5.i.i.i.sroa.14.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct.unpack7.unpack15.i.i.i.i, i8* %load_element5.i.i.i.sroa.14.24..sroa_idx, align 2
  %load_element5.i.i.i.sroa.15.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct.unpack7.unpack17.i.i.i.i, i8* %load_element5.i.i.i.sroa.15.24..sroa_idx, align 1
  %load_element5.i.i.i.sroa.16.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct.unpack7.unpack19.i.i.i.i, i8* %load_element5.i.i.i.sroa.16.24..sroa_idx, align 4
  %load_element5.i.i.i.sroa.17.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct.unpack7.unpack21.i.i.i.i, i8* %load_element5.i.i.i.sroa.17.24..sroa_idx, align 1
  %load_element5.i.i.i.sroa.18.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct.unpack7.unpack23.i.i.i.i, i8* %load_element5.i.i.i.sroa.18.24..sroa_idx, align 2
  %load_element5.i.i.i.sroa.19.24..sroa_idx = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct.unpack7.unpack25.i.i.i.i, i8* %load_element5.i.i.i.sroa.19.24..sroa_idx, align 1
  %38 = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i.i9.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38)
  %39 = bitcast %list.RocList* %param_alloca.i.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %param_alloca.i.i.i.i.i.i.repack = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i.i.i.i, i64 0, i32 0
  store i8* %load_list.unpack.i.i.i.i, i8** %param_alloca.i.i.i.i.i.i.repack, align 8
  %param_alloca.i.i.i.i.i.i.repack35 = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i.i.i.i, i64 0, i32 1
  store i64 %load_list.unpack2.i.i.i.i, i64* %param_alloca.i.i.i.i.i.i.repack35, align 8
  %param_alloca.i.i.i.i.i.i.repack37 = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i.i.i.i, i64 0, i32 2
  store i64 %load_list.unpack4.i.i.i.i, i64* %param_alloca.i.i.i.i.i.i.repack37, align 8
  %to_cc_type_ptr.i.i.i.i.i.i = bitcast %list.RocList* %param_alloca.i.i.i.i.i.i to { i8*, i64, i64 }*
  call void @roc_fx_fileReadBytes({ [0 x i64], [5 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i9.i.i, { i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i.i.i.i)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  %"cap > 0.i.i.i.i.i.i.not" = icmp eq i64 %load_list.unpack4.i.i.i.i, 0
  br i1 %"cap > 0.i.i.i.i.i.i.not", label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i.i.i.i, label %modification_list_block.i.i.i.i.i.i

modification_list_block.i.i.i.i.i.i:              ; preds = %branch0.i.i
  %40 = ptrtoint i8* %load_list.unpack.i.i.i.i to i64
  %41 = shl i64 %load_list.unpack4.i.i.i.i, 1
  %.not.i.i.i.i.i.i13.i.i = icmp slt i64 %load_list.unpack4.i.i.i.i, 0
  %42 = select i1 %.not.i.i.i.i.i.i13.i.i, i64 %41, i64 %40
  %as_usize_ptr.i.i.i.i.i.i = inttoptr i64 %42 to i64*
  %get_rc_ptr.i.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i.i.i, i64 -1
  %43 = load i64, i64* %get_rc_ptr.i.i.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i.i.i = icmp eq i64 %43, 0
  br i1 %.not.i.i.i.i.i.i.i.i.i, label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i.i.i.i, label %Then.i.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i.i:                           ; preds = %modification_list_block.i.i.i.i.i.i
  %44 = add i64 %43, -1
  store i64 %44, i64* %get_rc_ptr.i.i.i.i.i.i, align 8
  %45 = icmp eq i64 %43, -9223372036854775808
  br i1 %45, label %Then1.i.i.i.i.i.i.i.i.i, label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i.i.i.i

Then1.i.i.i.i.i.i.i.i.i:                          ; preds = %Then.i.i.i.i.i.i.i.i.i
  %46 = bitcast i64* %get_rc_ptr.i.i.i.i.i.i to i8*
  call void @roc_dealloc(i8* %46, i32 8) #11
  br label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i.i.i.i

Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i.i.i.i: ; preds = %modification_list_block.i.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i.i, %branch0.i.i
  %result_value.i.i11.i.i.sroa.0.0..sroa_cast = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i.i9.i.i to i8**
  %result_value.i.i11.i.i.sroa.0.0.copyload = load i8*, i8** %result_value.i.i11.i.i.sroa.0.0..sroa_cast, align 8
  %result_value.i.i11.i.i.sroa.5.0..sroa_idx459 = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i.i9.i.i, i64 0, i32 1, i64 1
  %result_value.i.i11.i.i.sroa.5.0.copyload = load i64, i64* %result_value.i.i11.i.i.sroa.5.0..sroa_idx459, align 8
  %result_value.i.i11.i.i.sroa.6.0..sroa_idx463 = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i.i9.i.i, i64 0, i32 1, i64 2
  %result_value.i.i11.i.i.sroa.6.0.copyload = load i64, i64* %result_value.i.i11.i.i.sroa.6.0..sroa_idx463, align 8
  %result_value.i.i11.i.i.sroa.7.sroa.0.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_idx = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i.i9.i.i, i64 0, i32 1, i64 3
  %result_value.i.i11.i.i.sroa.7.sroa.0.0.copyload = load i64, i64* %result_value.i.i11.i.i.sroa.7.sroa.0.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_idx, align 8
  %result_value.i.i11.i.i.sroa.7.sroa.4.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_idx = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i.i9.i.i, i64 0, i32 1, i64 4
  %result_value.i.i11.i.i.sroa.7.sroa.4.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_cast = bitcast i64* %result_value.i.i11.i.i.sroa.7.sroa.4.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_idx to i8*
  %result_value.i.i11.i.i.sroa.7.sroa.4.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7.sroa.4.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_cast, align 8
  %result_value.i.i11.i.i.sroa.7.sroa.5.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %38, i64 33
  %result_value.i.i11.i.i.sroa.7.sroa.5.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7.sroa.5.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.i.i11.i.i.sroa.7.sroa.6.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %38, i64 34
  %result_value.i.i11.i.i.sroa.7.sroa.6.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7.sroa.6.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx, align 2
  %result_value.i.i11.i.i.sroa.7.sroa.7.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %38, i64 35
  %result_value.i.i11.i.i.sroa.7.sroa.7.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7.sroa.7.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.i.i11.i.i.sroa.7.sroa.8.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %38, i64 36
  %result_value.i.i11.i.i.sroa.7.sroa.8.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7.sroa.8.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx, align 4
  %result_value.i.i11.i.i.sroa.7.sroa.9.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %38, i64 37
  %result_value.i.i11.i.i.sroa.7.sroa.9.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7.sroa.9.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.i.i11.i.i.sroa.7.sroa.10.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %38, i64 38
  %result_value.i.i11.i.i.sroa.7.sroa.10.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7.sroa.10.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx, align 2
  %result_value.i.i11.i.i.sroa.7.sroa.11.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %38, i64 39
  %result_value.i.i11.i.i.sroa.7.sroa.11.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7.sroa.11.0.result_value.i.i11.i.i.sroa.7.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.i.i11.i.i.sroa.7472.0..sroa_idx = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i.i9.i.i, i64 0, i32 2
  %result_value.i.i11.i.i.sroa.7472.0.copyload = load i8, i8* %result_value.i.i11.i.i.sroa.7472.0..sroa_idx, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38)
  %eq_u8.i.i.i.i.i = icmp eq i8 %result_value.i.i11.i.i.sroa.7472.0.copyload, 1
  br i1 %eq_u8.i.i.i.i.i, label %tag_id_modify6.i.i.i.i.i.i, label %else_block.i.i.i.i.i

tag_id_modify6.i.i.i.i.i.i:                       ; preds = %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i.i.i.i
  %is_big_str.i.i.i.i.i.i = icmp sgt i64 %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload, 0
  br i1 %is_big_str.i.i.i.i.i.i, label %modify_rc.i.i.i.i.i.i, label %Effect_effect_after_inner_8634efb476ae985ec72ccf7051aa42f18ce45e45f5a65923b784140dfbeddc.exit.i.i.i

modify_rc.i.i.i.i.i.i:                            ; preds = %tag_id_modify6.i.i.i.i.i.i
  %field_ptr7.i.i.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i.i.i.i, i64 0, i32 1
  %modify_tag_field9.i.i.i.i.i.i = bitcast [3 x i64]* %field_ptr7.i.i.i.i.i.i to %str.RocStr*
  %call_builtin.i.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i.i.i.i) #11
  %get_rc_ptr.i.i20.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i.i, i64 -8
  %47 = bitcast i8* %get_rc_ptr.i.i20.i.i.i.i to i64*
  %48 = load i64, i64* %47, align 8
  %.not.i.i.i.i15.i.i.i.i.i = icmp eq i64 %48, 0
  br i1 %.not.i.i.i.i15.i.i.i.i.i, label %Effect_effect_after_inner_8634efb476ae985ec72ccf7051aa42f18ce45e45f5a65923b784140dfbeddc.exit.i.i.i, label %Then.i.i.i.i.i21.i.i.i.i

Then.i.i.i.i.i21.i.i.i.i:                         ; preds = %modify_rc.i.i.i.i.i.i
  %49 = add i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp eq i64 %48, -9223372036854775808
  br i1 %50, label %Then1.i.i.i.i.i22.i.i.i.i, label %Effect_effect_after_inner_8634efb476ae985ec72ccf7051aa42f18ce45e45f5a65923b784140dfbeddc.exit.i.i.i

Then1.i.i.i.i.i22.i.i.i.i:                        ; preds = %Then.i.i.i.i.i21.i.i.i.i
  call void @roc_dealloc(i8* %get_rc_ptr.i.i20.i.i.i.i, i32 8) #11
  br label %Effect_effect_after_inner_8634efb476ae985ec72ccf7051aa42f18ce45e45f5a65923b784140dfbeddc.exit.i.i.i

else_block.i.i.i.i.i:                             ; preds = %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i.i.i.i
  %51 = ptrtoint i8* %result_value.i.i11.i.i.sroa.0.0.copyload to i64
  br label %Effect_effect_after_inner_8634efb476ae985ec72ccf7051aa42f18ce45e45f5a65923b784140dfbeddc.exit.i.i.i

Effect_effect_after_inner_8634efb476ae985ec72ccf7051aa42f18ce45e45f5a65923b784140dfbeddc.exit.i.i.i: ; preds = %modify_rc.i.i.i.i.i.i, %Then.i.i.i.i.i21.i.i.i.i, %Then1.i.i.i.i.i22.i.i.i.i, %tag_id_modify6.i.i.i.i.i.i, %else_block.i.i.i.i.i
  %result_value2.i.i10.i.i.sroa.0.0 = phi i8* [ %result_value.i.i.i.i.sroa.0.sroa.0.0.copyload, %else_block.i.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.0.0.copyload, %tag_id_modify6.i.i.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.0.0.copyload, %Then1.i.i.i.i.i22.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.0.0.copyload, %Then.i.i.i.i.i21.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.0.0.copyload, %modify_rc.i.i.i.i.i.i ]
  %result_value2.i.i10.i.i.sroa.5.0 = phi i64 [ %result_value.i.i.i.i.sroa.0.sroa.5.0.copyload, %else_block.i.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.5.0.copyload, %tag_id_modify6.i.i.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.5.0.copyload, %Then1.i.i.i.i.i22.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.5.0.copyload, %Then.i.i.i.i.i21.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.5.0.copyload, %modify_rc.i.i.i.i.i.i ]
  %result_value2.i.i10.i.i.sroa.6.0 = phi i64 [ %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload, %else_block.i.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.6.0.copyload, %tag_id_modify6.i.i.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.6.0.copyload, %Then1.i.i.i.i.i22.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.6.0.copyload, %Then.i.i.i.i.i21.i.i.i.i ], [ %result_value.i.i11.i.i.sroa.6.0.copyload, %modify_rc.i.i.i.i.i.i ]
  %result_value2.i.i10.i.i.sroa.8.0 = phi i8 [ 0, %else_block.i.i.i.i.i ], [ 1, %tag_id_modify6.i.i.i.i.i.i ], [ 1, %Then1.i.i.i.i.i22.i.i.i.i ], [ 1, %Then.i.i.i.i.i21.i.i.i.i ], [ 1, %modify_rc.i.i.i.i.i.i ]
  %result_value2.i.i10.i.i.sroa.7.sroa.12.0 = phi i64 [ %51, %else_block.i.i.i.i.i ], [ undef, %tag_id_modify6.i.i.i.i.i.i ], [ undef, %Then1.i.i.i.i.i22.i.i.i.i ], [ undef, %Then.i.i.i.i.i21.i.i.i.i ], [ undef, %modify_rc.i.i.i.i.i.i ]
  %result_value3.i.i.i.i.sroa.0.0..sroa_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i to i8**
  store i8* %result_value2.i.i10.i.i.sroa.0.0, i8** %result_value3.i.i.i.i.sroa.0.0..sroa_cast, align 8
  %result_value3.i.i.i.i.sroa.4.0..sroa_idx601 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 1, i64 1
  store i64 %result_value2.i.i10.i.i.sroa.5.0, i64* %result_value3.i.i.i.i.sroa.4.0..sroa_idx601, align 8
  %result_value3.i.i.i.i.sroa.5.0..sroa_idx603 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 1, i64 2
  store i64 %result_value2.i.i10.i.i.sroa.6.0, i64* %result_value3.i.i.i.i.sroa.5.0..sroa_idx603, align 8
  %result_value3.i.i.i.i.sroa.6.sroa.0.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 1, i64 3
  %result_value3.i.i.i.i.sroa.6.sroa.0.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_cast = bitcast i64* %result_value3.i.i.i.i.sroa.6.sroa.0.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx to i8*
  store i8 2, i8* %result_value3.i.i.i.i.sroa.6.sroa.0.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_cast, align 8
  %result_value3.i.i.i.i.sroa.6.sroa.4.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 25
  store i8 %load_tag_to_put_in_struct.unpack7.unpack.i.i.i.i, i8* %result_value3.i.i.i.i.sroa.6.sroa.4.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 1
  %result_value3.i.i.i.i.sroa.6.sroa.5.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 26
  store i8 %load_tag_to_put_in_struct.unpack7.unpack15.i.i.i.i, i8* %result_value3.i.i.i.i.sroa.6.sroa.5.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 2
  %result_value3.i.i.i.i.sroa.6.sroa.6.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 27
  store i8 %load_tag_to_put_in_struct.unpack7.unpack17.i.i.i.i, i8* %result_value3.i.i.i.i.sroa.6.sroa.6.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 1
  %result_value3.i.i.i.i.sroa.6.sroa.7.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 28
  store i8 %load_tag_to_put_in_struct.unpack7.unpack19.i.i.i.i, i8* %result_value3.i.i.i.i.sroa.6.sroa.7.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 4
  %result_value3.i.i.i.i.sroa.6.sroa.8.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 29
  store i8 %load_tag_to_put_in_struct.unpack7.unpack21.i.i.i.i, i8* %result_value3.i.i.i.i.sroa.6.sroa.8.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 1
  %result_value3.i.i.i.i.sroa.6.sroa.9.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 30
  store i8 %load_tag_to_put_in_struct.unpack7.unpack23.i.i.i.i, i8* %result_value3.i.i.i.i.sroa.6.sroa.9.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 2
  %result_value3.i.i.i.i.sroa.6.sroa.10.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 31
  store i8 %load_tag_to_put_in_struct.unpack7.unpack25.i.i.i.i, i8* %result_value3.i.i.i.i.sroa.6.sroa.10.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 1
  %result_value3.i.i.i.i.sroa.6.sroa.11.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx752 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 1, i64 4
  store i64 %result_value2.i.i10.i.i.sroa.7.sroa.12.0, i64* %result_value3.i.i.i.i.sroa.6.sroa.11.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx752, align 8
  %result_value3.i.i.i.i.sroa.6.sroa.12.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx754 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 1, i64 5
  store i64 %result_value.i.i11.i.i.sroa.5.0.copyload, i64* %result_value3.i.i.i.i.sroa.6.sroa.12.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx754, align 8
  %result_value3.i.i.i.i.sroa.6.sroa.13.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx756 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 1, i64 6
  store i64 %result_value.i.i11.i.i.sroa.6.0.copyload, i64* %result_value3.i.i.i.i.sroa.6.sroa.13.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx756, align 8
  %result_value3.i.i.i.i.sroa.6.sroa.14.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx758 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 1, i64 7
  store i64 %result_value.i.i11.i.i.sroa.7.sroa.0.0.copyload, i64* %result_value3.i.i.i.i.sroa.6.sroa.14.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx758, align 8
  %result_value3.i.i.i.i.sroa.6.sroa.15.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 1, i64 8
  %result_value3.i.i.i.i.sroa.6.sroa.15.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_cast = bitcast i64* %result_value3.i.i.i.i.sroa.6.sroa.15.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_idx to i8*
  store i8 %result_value.i.i11.i.i.sroa.7.sroa.4.0.copyload, i8* %result_value3.i.i.i.i.sroa.6.sroa.15.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_cast, align 8
  %result_value3.i.i.i.i.sroa.6.sroa.16.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 65
  store i8 %result_value.i.i11.i.i.sroa.7.sroa.5.0.copyload, i8* %result_value3.i.i.i.i.sroa.6.sroa.16.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 1
  %result_value3.i.i.i.i.sroa.6.sroa.17.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 66
  store i8 %result_value.i.i11.i.i.sroa.7.sroa.6.0.copyload, i8* %result_value3.i.i.i.i.sroa.6.sroa.17.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 2
  %result_value3.i.i.i.i.sroa.6.sroa.18.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 67
  store i8 %result_value.i.i11.i.i.sroa.7.sroa.7.0.copyload, i8* %result_value3.i.i.i.i.sroa.6.sroa.18.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 1
  %result_value3.i.i.i.i.sroa.6.sroa.19.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 68
  store i8 %result_value.i.i11.i.i.sroa.7.sroa.8.0.copyload, i8* %result_value3.i.i.i.i.sroa.6.sroa.19.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 4
  %result_value3.i.i.i.i.sroa.6.sroa.20.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 69
  store i8 %result_value.i.i11.i.i.sroa.7.sroa.9.0.copyload, i8* %result_value3.i.i.i.i.sroa.6.sroa.20.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 1
  %result_value3.i.i.i.i.sroa.6.sroa.21.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 70
  store i8 %result_value.i.i11.i.i.sroa.7.sroa.10.0.copyload, i8* %result_value3.i.i.i.i.sroa.6.sroa.21.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 2
  %result_value3.i.i.i.i.sroa.6.sroa.22.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %35, i64 71
  store i8 %result_value.i.i11.i.i.sroa.7.sroa.11.0.copyload, i8* %result_value3.i.i.i.i.sroa.6.sroa.22.0.result_value3.i.i.i.i.sroa.6.0..sroa_cast.sroa_raw_idx, align 1
  %result_value3.i.i.i.i.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i12.i.i, i64 0, i32 2
  store i8 %result_value2.i.i10.i.i.sroa.8.0, i8* %result_value3.i.i.i.i.sroa.7.0..sroa_idx, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37)
  %call.i.i.i = call fastcc %str.RocStr @Task_39_d43bd4d5ddc24336f7aab0060a1d39e7b5f52fc4e1cedc9bc2c942b1634d97({ [0 x i64], [9 x i64], i8, [7 x i8] }* nonnull %result_value.i12.i.i, %str.RocStr* nonnull %load_element.i.i.i)
  %52 = bitcast %str.RocStr* %struct_field.i7.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52)
  %struct_field.repack.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i7.i.i.i, i64 0, i32 0
  %struct_field_access_record_0.elt.i.i.i.i = extractvalue %str.RocStr %call.i.i.i, 0
  store i8* %struct_field_access_record_0.elt.i.i.i.i, i8** %struct_field.repack.i.i.i.i, align 8
  %struct_field.repack2.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i7.i.i.i, i64 0, i32 1
  %struct_field_access_record_0.elt3.i.i.i.i = extractvalue %str.RocStr %call.i.i.i, 1
  store i64 %struct_field_access_record_0.elt3.i.i.i.i, i64* %struct_field.repack2.i.i.i.i, align 8
  %struct_field.repack4.i.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i7.i.i.i, i64 0, i32 2
  %struct_field_access_record_0.elt5.i.i.i.i = extractvalue %str.RocStr %call.i.i.i, 2
  store i64 %struct_field_access_record_0.elt5.i.i.i.i, i64* %struct_field.repack4.i.i.i.i, align 8
  %to_cc_type_ptr.i.i.i8.i.i.i = bitcast %str.RocStr* %struct_field.i7.i.i.i to { i8*, i64, i64 }*
  call void @roc_fx_stdoutLine({ i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i8.i.i.i)
  %load_str_to_stack.i.i.i9.i.i.i.unpack42 = load i64, i64* %struct_field.repack4.i.i.i.i, align 8
  %is_big_str.i.i.i11.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i9.i.i.i.unpack42, 0
  br i1 %is_big_str.i.i.i11.i.i.i, label %modify_rc.i.i.i16.i.i.i, label %Effect_effect_after_inner_e3e412231cd09283fe70a9aeef84ef3f652d4bf84c5b595f8895d7a7da9fe.exit.i.i

modify_rc.i.i.i16.i.i.i:                          ; preds = %Effect_effect_after_inner_8634efb476ae985ec72ccf7051aa42f18ce45e45f5a65923b784140dfbeddc.exit.i.i.i
  %call_builtin.i.i.i12.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i7.i.i.i) #11
  %get_rc_ptr.i.i.i14.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i12.i.i.i, i64 -8
  %53 = bitcast i8* %get_rc_ptr.i.i.i14.i.i.i to i64*
  %54 = load i64, i64* %53, align 8
  %.not.i.i.i.i.i.i15.i.i.i = icmp eq i64 %54, 0
  br i1 %.not.i.i.i.i.i.i15.i.i.i, label %Effect_effect_after_inner_e3e412231cd09283fe70a9aeef84ef3f652d4bf84c5b595f8895d7a7da9fe.exit.i.i, label %Then.i.i.i.i.i.i17.i.i.i

Then.i.i.i.i.i.i17.i.i.i:                         ; preds = %modify_rc.i.i.i16.i.i.i
  %55 = add i64 %54, -1
  store i64 %55, i64* %53, align 8
  %56 = icmp eq i64 %54, -9223372036854775808
  br i1 %56, label %Then1.i.i.i.i.i.i18.i.i.i, label %Effect_effect_after_inner_e3e412231cd09283fe70a9aeef84ef3f652d4bf84c5b595f8895d7a7da9fe.exit.i.i

Then1.i.i.i.i.i.i18.i.i.i:                        ; preds = %Then.i.i.i.i.i.i17.i.i.i
  call void @roc_dealloc(i8* %get_rc_ptr.i.i.i14.i.i.i, i32 8) #11
  br label %Effect_effect_after_inner_e3e412231cd09283fe70a9aeef84ef3f652d4bf84c5b595f8895d7a7da9fe.exit.i.i

Effect_effect_after_inner_e3e412231cd09283fe70a9aeef84ef3f652d4bf84c5b595f8895d7a7da9fe.exit.i.i: ; preds = %modify_rc.i.i.i16.i.i.i, %Then.i.i.i.i.i.i17.i.i.i, %Then1.i.i.i.i.i.i18.i.i.i, %Effect_effect_after_inner_8634efb476ae985ec72ccf7051aa42f18ce45e45f5a65923b784140dfbeddc.exit.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  br label %_68_8f169687ef6ace30b3a1ce6cdbf3d436acb07fc2ecd6e3401a11e7796acbfa60.exit

branch1.i.i:                                      ; preds = %Arg_parseFormatted_a153a8cd6925850a48cb361686545494b38b6b7cf3ec909dae9cdba162313.exit.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %57 = bitcast %str.RocStr* %load_element5.i17.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57)
  %result_value.i.i.sroa.0.sroa.0.0.result_value.i.i.sroa.0.0..sroa_cast77.sroa_idx = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element5.i17.i.i, i64 0, i32 0
  store i8* %result_value.i.i.i.i.sroa.0.sroa.0.0.copyload, i8** %result_value.i.i.sroa.0.sroa.0.0.result_value.i.i.sroa.0.0..sroa_cast77.sroa_idx, align 8
  %result_value.i.i.sroa.0.sroa.5.0.result_value.i.i.sroa.0.0..sroa_cast77.sroa_idx262 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element5.i17.i.i, i64 0, i32 1
  store i64 %result_value.i.i.i.i.sroa.0.sroa.5.0.copyload, i64* %result_value.i.i.sroa.0.sroa.5.0.result_value.i.i.sroa.0.0..sroa_cast77.sroa_idx262, align 8
  %result_value.i.i.sroa.0.sroa.6.0.result_value.i.i.sroa.0.0..sroa_cast77.sroa_idx266 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element5.i17.i.i, i64 0, i32 2
  store i64 %result_value.i.i.i.i.sroa.0.sroa.6.0.copyload, i64* %result_value.i.i.sroa.0.sroa.6.0.result_value.i.i.sroa.0.0..sroa_cast77.sroa_idx266, align 8
  %to_cc_type_ptr.i.i.i.i.i = bitcast %str.RocStr* %load_element5.i17.i.i to { i8*, i64, i64 }*
  call void @roc_fx_stdoutLine({ i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i.i.i)
  %load_str_to_stack.i.i.i19.i.i.unpack33 = load i64, i64* %result_value.i.i.sroa.0.sroa.6.0.result_value.i.i.sroa.0.0..sroa_cast77.sroa_idx266, align 8
  %is_big_str.i.i.i21.i.i = icmp sgt i64 %load_str_to_stack.i.i.i19.i.i.unpack33, 0
  br i1 %is_big_str.i.i.i21.i.i, label %modify_rc.i.i.i26.i.i, label %Effect_effect_map_inner_75c319b9c31612b63e8828b590ba7646d3c13fc9ba8de3f7f7e040fb9721c4.exit.i.i

modify_rc.i.i.i26.i.i:                            ; preds = %branch1.i.i
  %call_builtin.i.i.i22.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_element5.i17.i.i) #11
  %get_rc_ptr.i.i.i24.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i22.i.i, i64 -8
  %58 = bitcast i8* %get_rc_ptr.i.i.i24.i.i to i64*
  %59 = load i64, i64* %58, align 8
  %.not.i.i.i.i.i.i25.i.i = icmp eq i64 %59, 0
  br i1 %.not.i.i.i.i.i.i25.i.i, label %Effect_effect_map_inner_75c319b9c31612b63e8828b590ba7646d3c13fc9ba8de3f7f7e040fb9721c4.exit.i.i, label %Then.i.i.i.i.i.i27.i.i

Then.i.i.i.i.i.i27.i.i:                           ; preds = %modify_rc.i.i.i26.i.i
  %60 = add i64 %59, -1
  store i64 %60, i64* %58, align 8
  %61 = icmp eq i64 %59, -9223372036854775808
  br i1 %61, label %Then1.i.i.i.i.i.i.i.i, label %Effect_effect_map_inner_75c319b9c31612b63e8828b590ba7646d3c13fc9ba8de3f7f7e040fb9721c4.exit.i.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i27.i.i
  call void @roc_dealloc(i8* %get_rc_ptr.i.i.i24.i.i, i32 8) #11
  br label %Effect_effect_map_inner_75c319b9c31612b63e8828b590ba7646d3c13fc9ba8de3f7f7e040fb9721c4.exit.i.i

Effect_effect_map_inner_75c319b9c31612b63e8828b590ba7646d3c13fc9ba8de3f7f7e040fb9721c4.exit.i.i: ; preds = %modify_rc.i.i.i26.i.i, %Then.i.i.i.i.i.i27.i.i, %Then1.i.i.i.i.i.i.i.i, %branch1.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57)
  br label %_68_8f169687ef6ace30b3a1ce6cdbf3d436acb07fc2ecd6e3401a11e7796acbfa60.exit

_68_8f169687ef6ace30b3a1ce6cdbf3d436acb07fc2ecd6e3401a11e7796acbfa60.exit: ; preds = %Effect_effect_after_inner_e3e412231cd09283fe70a9aeef84ef3f652d4bf84c5b595f8895d7a7da9fe.exit.i.i, %Effect_effect_map_inner_75c319b9c31612b63e8828b590ba7646d3c13fc9ba8de3f7f7e040fb9721c4.exit.i.i
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_0_result_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_0_size() local_unnamed_addr #12 {
entry:
  ret i64 56
}

; Function Attrs: nounwind
define void @roc__mainForHost_5_caller({ [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture readonly %0, %str.RocStr* nocapture readonly %1, { %str.RocStr, {} }* nocapture %2) local_unnamed_addr #11 {
entry:
  %call.i = tail call fastcc { %str.RocStr, {} } @Task_39_f5306286e1c526012dd351cae9a70b87111f88aea94bbe6b820df62d315690({ [0 x i64], [9 x i64], i8, [7 x i8] }* %0, %str.RocStr* %1) #11
  %call.i.elt = extractvalue { %str.RocStr, {} } %call.i, 0
  %.repack.repack = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %2, i64 0, i32 0, i32 0
  %call.i.elt.elt = extractvalue %str.RocStr %call.i.elt, 0
  store i8* %call.i.elt.elt, i8** %.repack.repack, align 8
  %.repack.repack3 = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %2, i64 0, i32 0, i32 1
  %call.i.elt.elt4 = extractvalue %str.RocStr %call.i.elt, 1
  store i64 %call.i.elt.elt4, i64* %.repack.repack3, align 8
  %.repack.repack5 = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %2, i64 0, i32 0, i32 2
  %call.i.elt.elt6 = extractvalue %str.RocStr %call.i.elt, 2
  store i64 %call.i.elt.elt6, i64* %.repack.repack5, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_5_result_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_5_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn
define void @roc__mainForHost_13_caller({ [0 x i64], [4 x i64], i8, [7 x i8] }* nocapture readonly %0, { [0 x i64], [3 x i64], i8, [7 x i8] }* nocapture readonly %1, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* nocapture %2) local_unnamed_addr #13 {
entry:
  %load_tag_to_put_in_struct.unpack4.elt.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct.unpack4.unpack.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt.i.i, align 8
  %load_tag_to_put_in_struct.unpack4.elt10.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct.unpack4.unpack11.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt10.i.i, align 8
  %load_tag_to_put_in_struct.unpack4.elt12.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct.unpack4.unpack13.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt12.i.i, align 8
  %load_tag_to_put_in_struct.elt5.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack6.i.i = load i8, i8* %load_tag_to_put_in_struct.elt5.i.i, align 8
  %load_tag_to_put_in_struct.unpack8.elt.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct.unpack8.unpack.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt15.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct.unpack8.unpack16.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt15.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt17.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct.unpack8.unpack18.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt17.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt19.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct.unpack8.unpack20.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt19.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt21.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct.unpack8.unpack22.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt21.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt23.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct.unpack8.unpack24.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt23.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt25.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct.unpack8.unpack26.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt25.i.i, align 1
  %load_tag_to_put_in_struct1.unpack29.elt.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct1.unpack29.unpack.i.i = load i64, i64* %load_tag_to_put_in_struct1.unpack29.elt.i.i, align 8
  %load_tag_to_put_in_struct1.unpack29.elt35.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct1.unpack29.unpack36.i.i = load i64, i64* %load_tag_to_put_in_struct1.unpack29.elt35.i.i, align 8
  %load_tag_to_put_in_struct1.unpack29.elt37.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct1.unpack29.unpack38.i.i = load i64, i64* %load_tag_to_put_in_struct1.unpack29.elt37.i.i, align 8
  %load_tag_to_put_in_struct1.unpack29.elt39.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 3
  %load_tag_to_put_in_struct1.unpack29.unpack40.i.i = load i64, i64* %load_tag_to_put_in_struct1.unpack29.elt39.i.i, align 8
  %load_tag_to_put_in_struct1.elt30.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 2
  %load_tag_to_put_in_struct1.unpack31.i.i = load i8, i8* %load_tag_to_put_in_struct1.elt30.i.i, align 8
  %load_tag_to_put_in_struct1.unpack33.elt.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct1.unpack33.unpack.i.i = load i8, i8* %load_tag_to_put_in_struct1.unpack33.elt.i.i, align 1
  %load_tag_to_put_in_struct1.unpack33.elt42.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct1.unpack33.unpack43.i.i = load i8, i8* %load_tag_to_put_in_struct1.unpack33.elt42.i.i, align 1
  %load_tag_to_put_in_struct1.unpack33.elt44.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct1.unpack33.unpack45.i.i = load i8, i8* %load_tag_to_put_in_struct1.unpack33.elt44.i.i, align 1
  %load_tag_to_put_in_struct1.unpack33.elt46.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct1.unpack33.unpack47.i.i = load i8, i8* %load_tag_to_put_in_struct1.unpack33.elt46.i.i, align 1
  %load_tag_to_put_in_struct1.unpack33.elt48.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct1.unpack33.unpack49.i.i = load i8, i8* %load_tag_to_put_in_struct1.unpack33.elt48.i.i, align 1
  %load_tag_to_put_in_struct1.unpack33.elt50.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct1.unpack33.unpack51.i.i = load i8, i8* %load_tag_to_put_in_struct1.unpack33.elt50.i.i, align 1
  %load_tag_to_put_in_struct1.unpack33.elt52.i.i = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %0, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct1.unpack33.unpack53.i.i = load i8, i8* %load_tag_to_put_in_struct1.unpack33.elt52.i.i, align 1
  %result_value.sroa.0.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 0, i64 0
  store i64 %load_tag_to_put_in_struct.unpack4.unpack.i.i, i64* %result_value.sroa.0.0..sroa_idx, align 8
  %result_value.sroa.2.0..sroa_idx14 = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct.unpack4.unpack11.i.i, i64* %result_value.sroa.2.0..sroa_idx14, align 8
  %result_value.sroa.3.0..sroa_idx15 = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct.unpack4.unpack13.i.i, i64* %result_value.sroa.3.0..sroa_idx15, align 8
  %result_value.sroa.4.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 2
  store i8 %load_tag_to_put_in_struct.unpack6.i.i, i8* %result_value.sroa.4.0..sroa_idx, align 8
  %result_value.sroa.5.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct.unpack8.unpack.i.i, i8* %result_value.sroa.5.0..sroa_idx, align 1
  %result_value.sroa.6.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct.unpack8.unpack16.i.i, i8* %result_value.sroa.6.0..sroa_idx, align 2
  %result_value.sroa.7.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct.unpack8.unpack18.i.i, i8* %result_value.sroa.7.0..sroa_idx, align 1
  %result_value.sroa.8.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct.unpack8.unpack20.i.i, i8* %result_value.sroa.8.0..sroa_idx, align 4
  %result_value.sroa.9.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct.unpack8.unpack22.i.i, i8* %result_value.sroa.9.0..sroa_idx, align 1
  %result_value.sroa.10.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct.unpack8.unpack24.i.i, i8* %result_value.sroa.10.0..sroa_idx, align 2
  %result_value.sroa.11.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 0, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct.unpack8.unpack26.i.i, i8* %result_value.sroa.11.0..sroa_idx, align 1
  %result_value.sroa.12.0..sroa_idx16 = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 0, i64 0
  store i64 %load_tag_to_put_in_struct1.unpack29.unpack.i.i, i64* %result_value.sroa.12.0..sroa_idx16, align 8
  %result_value.sroa.13.0..sroa_idx17 = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 1, i64 1
  store i64 %load_tag_to_put_in_struct1.unpack29.unpack36.i.i, i64* %result_value.sroa.13.0..sroa_idx17, align 8
  %result_value.sroa.14.0..sroa_idx18 = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 1, i64 2
  store i64 %load_tag_to_put_in_struct1.unpack29.unpack38.i.i, i64* %result_value.sroa.14.0..sroa_idx18, align 8
  %result_value.sroa.15.0..sroa_idx19 = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 1, i64 3
  store i64 %load_tag_to_put_in_struct1.unpack29.unpack40.i.i, i64* %result_value.sroa.15.0..sroa_idx19, align 8
  %result_value.sroa.16.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 2
  store i8 %load_tag_to_put_in_struct1.unpack31.i.i, i8* %result_value.sroa.16.0..sroa_idx, align 8
  %result_value.sroa.17.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 3, i64 0
  store i8 %load_tag_to_put_in_struct1.unpack33.unpack.i.i, i8* %result_value.sroa.17.0..sroa_idx, align 1
  %result_value.sroa.18.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 3, i64 1
  store i8 %load_tag_to_put_in_struct1.unpack33.unpack43.i.i, i8* %result_value.sroa.18.0..sroa_idx, align 2
  %result_value.sroa.19.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 3, i64 2
  store i8 %load_tag_to_put_in_struct1.unpack33.unpack45.i.i, i8* %result_value.sroa.19.0..sroa_idx, align 1
  %result_value.sroa.20.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 3, i64 3
  store i8 %load_tag_to_put_in_struct1.unpack33.unpack47.i.i, i8* %result_value.sroa.20.0..sroa_idx, align 4
  %result_value.sroa.21.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 3, i64 4
  store i8 %load_tag_to_put_in_struct1.unpack33.unpack49.i.i, i8* %result_value.sroa.21.0..sroa_idx, align 1
  %result_value.sroa.22.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 3, i64 5
  store i8 %load_tag_to_put_in_struct1.unpack33.unpack51.i.i, i8* %result_value.sroa.22.0..sroa_idx, align 2
  %result_value.sroa.23.0..sroa_idx = getelementptr inbounds { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }, { { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] } }* %2, i64 0, i32 1, i32 3, i64 6
  store i8 %load_tag_to_put_in_struct1.unpack33.unpack53.i.i, i8* %result_value.sroa.23.0..sroa_idx, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_13_result_size() local_unnamed_addr #12 {
entry:
  ret i64 72
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_13_size() local_unnamed_addr #12 {
entry:
  ret i64 32
}

define void @roc__mainForHost_2_caller({}* nocapture readnone %0, { [0 x i64], [10 x i64], i8, [7 x i8] }* nocapture readonly %1, {}* nocapture readnone %2) local_unnamed_addr {
entry:
  %param_alloca.i.i.i = alloca %list.RocList, align 8
  %result_value.i.i12 = alloca { [0 x i64], [5 x i64], i8, [7 x i8] }, align 8
  %struct_field.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %struct_field.i.i.i = alloca %str.RocStr, align 8
  %result_value.i.i = alloca { [0 x i64], [9 x i64], i8, [7 x i8] }, align 8
  %load_element.i.i = alloca %str.RocStr, align 8
  %load_element5.i.i = alloca %str.RocStr, align 8
  %tag_id_ptr.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %1, i64 0, i32 2
  %load_tag_id.i = load i8, i8* %tag_id_ptr.i, align 1
  switch i8 %load_tag_id.i, label %_64_c694f2057f9f1d21f9ea6e96bd773cee28d9c39207bc813e821d413d173dce.exit [
    i8 0, label %branch0.i
    i8 1, label %branch1.i
  ]

branch0.i:                                        ; preds = %entry
  %3 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3)
  %4 = bitcast %str.RocStr* %load_element.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  %get_opaque_data_ptr1.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 7
  %5 = bitcast i64* %get_opaque_data_ptr1.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %4, i8* noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false)
  %load_element5.i3.i.sroa.0.0..sroa_cast = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %1 to i8**
  %load_element5.i3.i.sroa.0.0.copyload = load i8*, i8** %load_element5.i3.i.sroa.0.0..sroa_cast, align 8
  %load_element5.i3.i.sroa.4.0..sroa_idx18 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 1
  %load_element5.i3.i.sroa.4.0.copyload = load i64, i64* %load_element5.i3.i.sroa.4.0..sroa_idx18, align 8
  %load_element5.i3.i.sroa.5.0..sroa_idx20 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 2
  %load_element5.i3.i.sroa.5.0.copyload = load i64, i64* %load_element5.i3.i.sroa.5.0..sroa_idx20, align 8
  %load_element5.i3.i.sroa.6.0..sroa_idx = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 3
  %load_element5.i3.i.sroa.6.0..sroa_cast = bitcast i64* %load_element5.i3.i.sroa.6.0..sroa_idx to i8*
  %6 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %6, i8* noundef nonnull align 8 dereferenceable(32) %load_element5.i3.i.sroa.6.0..sroa_cast, i64 32, i1 false)
  %7 = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7)
  %8 = bitcast %list.RocList* %param_alloca.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %param_alloca.i.i.repack.i = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 0
  store i8* %load_element5.i3.i.sroa.0.0.copyload, i8** %param_alloca.i.i.repack.i, align 8
  %param_alloca.i.i.repack1.i = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 1
  store i64 %load_element5.i3.i.sroa.4.0.copyload, i64* %param_alloca.i.i.repack1.i, align 8
  %param_alloca.i.i.repack3.i = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 2
  store i64 %load_element5.i3.i.sroa.5.0.copyload, i64* %param_alloca.i.i.repack3.i, align 8
  %to_cc_type_ptr.i.i.i = bitcast %list.RocList* %param_alloca.i.i.i to { i8*, i64, i64 }*
  call void @roc_fx_fileReadBytes({ [0 x i64], [5 x i64], i8, [7 x i8] }* nonnull %result_value.i.i12, { i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  %"cap > 0.i.i.not.i" = icmp eq i64 %load_element5.i3.i.sroa.5.0.copyload, 0
  br i1 %"cap > 0.i.i.not.i", label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i, label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %branch0.i
  %9 = ptrtoint i8* %load_element5.i3.i.sroa.0.0.copyload to i64
  %10 = shl i64 %load_element5.i3.i.sroa.5.0.copyload, 1
  %.not.i.i.i.i.i = icmp slt i64 %load_element5.i3.i.sroa.5.0.copyload, 0
  %11 = select i1 %.not.i.i.i.i.i, i64 %10, i64 %9
  %as_usize_ptr.i.i.i = inttoptr i64 %11 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %12 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %12, 0
  br i1 %.not.i.i.i.i.i.i, label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %13 = add i64 %12, -1
  store i64 %13, i64* %get_rc_ptr.i.i.i, align 8
  %14 = icmp eq i64 %12, -9223372036854775808
  br i1 %14, label %Then1.i.i.i.i.i.i, label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %15 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  call void @roc_dealloc(i8* %15, i32 8) #11
  br label %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i

Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i: ; preds = %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modification_list_block.i.i.i, %branch0.i
  %result_value.sroa.0.0..sroa_cast.i = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i12 to i8**
  %result_value.sroa.0.0.copyload.i = load i8*, i8** %result_value.sroa.0.0..sroa_cast.i, align 8
  %result_value.sroa.3.0..sroa_idx34.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i12, i64 0, i32 1, i64 1
  %result_value.sroa.3.0.copyload.i = load i64, i64* %result_value.sroa.3.0..sroa_idx34.i, align 8
  %result_value.sroa.4.0..sroa_idx37.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i12, i64 0, i32 1, i64 2
  %result_value.sroa.4.0.copyload.i = load i64, i64* %result_value.sroa.4.0..sroa_idx37.i, align 8
  %result_value.sroa.5.sroa.0.0.result_value.sroa.5.0..sroa_cast.sroa_idx.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i12, i64 0, i32 1, i64 3
  %result_value.sroa.5.sroa.0.0.copyload.i = load i64, i64* %result_value.sroa.5.sroa.0.0.result_value.sroa.5.0..sroa_cast.sroa_idx.i, align 8
  %result_value.sroa.5.sroa.2.0.result_value.sroa.5.0..sroa_cast.sroa_idx.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i12, i64 0, i32 1, i64 4
  %result_value.sroa.5.sroa.2.0.result_value.sroa.5.0..sroa_cast.sroa_cast.i = bitcast i64* %result_value.sroa.5.sroa.2.0.result_value.sroa.5.0..sroa_cast.sroa_idx.i to i8*
  %result_value.sroa.5.sroa.2.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.2.0.result_value.sroa.5.0..sroa_cast.sroa_cast.i, align 8
  %result_value.sroa.5.sroa.3.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %7, i64 33
  %result_value.sroa.5.sroa.3.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.3.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value.sroa.5.sroa.4.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %7, i64 34
  %result_value.sroa.5.sroa.4.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.4.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 2
  %result_value.sroa.5.sroa.5.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %7, i64 35
  %result_value.sroa.5.sroa.5.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.5.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value.sroa.5.sroa.6.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %7, i64 36
  %result_value.sroa.5.sroa.6.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.6.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 4
  %result_value.sroa.5.sroa.7.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %7, i64 37
  %result_value.sroa.5.sroa.7.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.7.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value.sroa.5.sroa.8.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %7, i64 38
  %result_value.sroa.5.sroa.8.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.8.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 2
  %result_value.sroa.5.sroa.9.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %7, i64 39
  %result_value.sroa.5.sroa.9.0.copyload.i = load i8, i8* %result_value.sroa.5.sroa.9.0.result_value.sroa.5.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value.sroa.543.0..sroa_idx.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i12, i64 0, i32 2
  %result_value.sroa.543.0.copyload.i = load i8, i8* %result_value.sroa.543.0..sroa_idx.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7)
  %eq_u8.i.i = icmp eq i8 %result_value.sroa.543.0.copyload.i, 1
  br i1 %eq_u8.i.i, label %then_block.i.i, label %else_block.i.i

then_block.i.i:                                   ; preds = %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i
  %tag_id_ptr.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 2
  %load_tag_id.i.i.i = load i8, i8* %tag_id_ptr.i.i.i, align 8
  switch i8 %load_tag_id.i.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit [
    i8 0, label %tag_id_modify.i.i.i
    i8 1, label %tag_id_modify1.i.i.i
    i8 2, label %tag_id_modify6.i.i.i
  ]

tag_id_modify.i.i.i:                              ; preds = %then_block.i.i
  %16 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 2
  %field_value.i.i.unpack22.i = load i64, i64* %16, align 8
  %"cap > 0.i.i.i.not.i" = icmp eq i64 %field_value.i.i.unpack22.i, 0
  br i1 %"cap > 0.i.i.i.not.i", label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %modification_list_block.i.i.i.i

modification_list_block.i.i.i.i:                  ; preds = %tag_id_modify.i.i.i
  %field_ptr.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1
  %field_value.i.i.elt.i = bitcast [3 x i64]* %field_ptr.i.i.i to i8**
  %field_value.i.i.unpack.i = load i8*, i8** %field_value.i.i.elt.i, align 8
  %17 = ptrtoint i8* %field_value.i.i.unpack.i to i64
  %18 = shl i64 %field_value.i.i.unpack22.i, 1
  %.not.i.i.i.i.i11.i = icmp slt i64 %field_value.i.i.unpack22.i, 0
  %19 = select i1 %.not.i.i.i.i.i11.i, i64 %18, i64 %17
  %as_usize_ptr.i.i.i.i = inttoptr i64 %19 to i64*
  %get_rc_ptr.i.i.i.i13 = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i, i64 -1
  %20 = load i64, i64* %get_rc_ptr.i.i.i.i13, align 8
  %.not.i.i.i.i.i.i.i14 = icmp eq i64 %20, 0
  br i1 %.not.i.i.i.i.i.i.i14, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %Then.i.i.i.i.i.i.i15

Then.i.i.i.i.i.i.i15:                             ; preds = %modification_list_block.i.i.i.i
  %21 = add i64 %20, -1
  store i64 %21, i64* %get_rc_ptr.i.i.i.i13, align 8
  %22 = icmp eq i64 %20, -9223372036854775808
  br i1 %22, label %Then1.i.i.i.i.i.i.i16, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

Then1.i.i.i.i.i.i.i16:                            ; preds = %Then.i.i.i.i.i.i.i15
  %23 = bitcast i64* %get_rc_ptr.i.i.i.i13 to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i"

tag_id_modify1.i.i.i:                             ; preds = %then_block.i.i
  %24 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 2
  %field_value5.i.i.unpack13.i = load i64, i64* %24, align 8
  %"cap > 0.i.i12.not.i" = icmp eq i64 %field_value5.i.i.unpack13.i, 0
  br i1 %"cap > 0.i.i12.not.i", label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %modification_list_block.i.i18.i

modification_list_block.i.i18.i:                  ; preds = %tag_id_modify1.i.i.i
  %field_ptr2.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1
  %field_value5.i.i.elt.i = bitcast [3 x i64]* %field_ptr2.i.i.i to i8**
  %field_value5.i.i.unpack.i = load i8*, i8** %field_value5.i.i.elt.i, align 8
  %25 = ptrtoint i8* %field_value5.i.i.unpack.i to i64
  %26 = shl i64 %field_value5.i.i.unpack13.i, 1
  %.not.i.i.i.i17.i = icmp slt i64 %field_value5.i.i.unpack13.i, 0
  %27 = select i1 %.not.i.i.i.i17.i, i64 %26, i64 %25
  %as_usize_ptr.i16.i.i = inttoptr i64 %27 to i64*
  %get_rc_ptr.i17.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i16.i.i, i64 -1
  %28 = load i64, i64* %get_rc_ptr.i17.i.i, align 8
  %.not.i.i.i.i18.i.i = icmp eq i64 %28, 0
  br i1 %.not.i.i.i.i18.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %Then.i.i.i.i19.i.i

Then.i.i.i.i19.i.i:                               ; preds = %modification_list_block.i.i18.i
  %29 = add i64 %28, -1
  store i64 %29, i64* %get_rc_ptr.i17.i.i, align 8
  %30 = icmp eq i64 %28, -9223372036854775808
  br i1 %30, label %Then1.i.i.i.i20.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

Then1.i.i.i.i20.i.i:                              ; preds = %Then.i.i.i.i19.i.i
  %31 = bitcast i64* %get_rc_ptr.i17.i.i to i8*
  br label %"#Attr_#dec_28.exit.i.sink.split.i"

tag_id_modify6.i.i.i:                             ; preds = %then_block.i.i
  %32 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.unpack8.i = load i64, i64* %32, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack8.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

modify_rc.i.i.i:                                  ; preds = %tag_id_modify6.i.i.i
  %field_ptr7.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1
  %modify_tag_field9.i.i.i = bitcast [3 x i64]* %field_ptr7.i.i.i to %str.RocStr*
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i) #11
  %get_rc_ptr.i.i20.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %33 = bitcast i8* %get_rc_ptr.i.i20.i to i64*
  %34 = load i64, i64* %33, align 8
  %.not.i.i.i.i15.i.i = icmp eq i64 %34, 0
  br i1 %.not.i.i.i.i15.i.i, label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit, label %Then.i.i.i.i.i21.i

Then.i.i.i.i.i21.i:                               ; preds = %modify_rc.i.i.i
  %35 = add i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %34, -9223372036854775808
  br i1 %36, label %"#Attr_#dec_28.exit.i.sink.split.i", label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

"#Attr_#dec_28.exit.i.sink.split.i":              ; preds = %Then.i.i.i.i.i21.i, %Then1.i.i.i.i20.i.i, %Then1.i.i.i.i.i.i.i16
  %get_rc_ptr.i.i20.sink.i = phi i8* [ %31, %Then1.i.i.i.i20.i.i ], [ %23, %Then1.i.i.i.i.i.i.i16 ], [ %get_rc_ptr.i.i20.i, %Then.i.i.i.i.i21.i ]
  call void @roc_dealloc(i8* %get_rc_ptr.i.i20.sink.i, i32 8) #11
  br label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

else_block.i.i:                                   ; preds = %Effect_effect_closure_fileReadBytes_b9cf741df84adec11846ca14f11eb42e6f34c0799c3ea15df434924934f7c.exit.i
  %37 = ptrtoint i8* %result_value.sroa.0.0.copyload.i to i64
  %load_tag_to_put_in_struct.unpack4.elt.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct.unpack4.unpack.i.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt.i.i.i, align 8
  %load_tag_to_put_in_struct.unpack4.elt10.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct.unpack4.unpack11.i.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt10.i.i.i, align 8
  %load_tag_to_put_in_struct.unpack4.elt12.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct.unpack4.unpack13.i.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt12.i.i.i, align 8
  %load_tag_to_put_in_struct.elt5.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack6.i.i.i = load i8, i8* %load_tag_to_put_in_struct.elt5.i.i.i, align 8
  %load_tag_to_put_in_struct.unpack8.elt.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct.unpack8.unpack.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt15.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct.unpack8.unpack16.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt15.i.i.i, align 2
  %load_tag_to_put_in_struct.unpack8.elt17.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct.unpack8.unpack18.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt17.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt19.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct.unpack8.unpack20.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt19.i.i.i, align 4
  %load_tag_to_put_in_struct.unpack8.elt21.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct.unpack8.unpack22.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt21.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt23.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct.unpack8.unpack24.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt23.i.i.i, align 2
  %load_tag_to_put_in_struct.unpack8.elt25.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %struct_field.i, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct.unpack8.unpack26.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt25.i.i.i, align 1
  %38 = inttoptr i64 %load_tag_to_put_in_struct.unpack4.unpack.i.i.i to i8*
  br label %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit

Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit: ; preds = %then_block.i.i, %tag_id_modify.i.i.i, %modification_list_block.i.i.i.i, %Then.i.i.i.i.i.i.i15, %tag_id_modify1.i.i.i, %modification_list_block.i.i18.i, %Then.i.i.i.i19.i.i, %tag_id_modify6.i.i.i, %modify_rc.i.i.i, %Then.i.i.i.i.i21.i, %"#Attr_#dec_28.exit.i.sink.split.i", %else_block.i.i
  %result_value2.sroa.0.0.i = phi i8* [ %38, %else_block.i.i ], [ %result_value.sroa.0.0.copyload.i, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ %result_value.sroa.0.0.copyload.i, %Then.i.i.i.i.i21.i ], [ %result_value.sroa.0.0.copyload.i, %modify_rc.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %tag_id_modify6.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %Then.i.i.i.i19.i.i ], [ %result_value.sroa.0.0.copyload.i, %modification_list_block.i.i18.i ], [ %result_value.sroa.0.0.copyload.i, %tag_id_modify1.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %Then.i.i.i.i.i.i.i15 ], [ %result_value.sroa.0.0.copyload.i, %modification_list_block.i.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %tag_id_modify.i.i.i ], [ %result_value.sroa.0.0.copyload.i, %then_block.i.i ]
  %result_value2.sroa.3.0.i = phi i64 [ %load_tag_to_put_in_struct.unpack4.unpack11.i.i.i, %else_block.i.i ], [ %result_value.sroa.3.0.copyload.i, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ %result_value.sroa.3.0.copyload.i, %Then.i.i.i.i.i21.i ], [ %result_value.sroa.3.0.copyload.i, %modify_rc.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %tag_id_modify6.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %Then.i.i.i.i19.i.i ], [ %result_value.sroa.3.0.copyload.i, %modification_list_block.i.i18.i ], [ %result_value.sroa.3.0.copyload.i, %tag_id_modify1.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %Then.i.i.i.i.i.i.i15 ], [ %result_value.sroa.3.0.copyload.i, %modification_list_block.i.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %tag_id_modify.i.i.i ], [ %result_value.sroa.3.0.copyload.i, %then_block.i.i ]
  %result_value2.sroa.4.0.i = phi i64 [ %load_tag_to_put_in_struct.unpack4.unpack13.i.i.i, %else_block.i.i ], [ %result_value.sroa.4.0.copyload.i, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ %result_value.sroa.4.0.copyload.i, %Then.i.i.i.i.i21.i ], [ %result_value.sroa.4.0.copyload.i, %modify_rc.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %tag_id_modify6.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %Then.i.i.i.i19.i.i ], [ %result_value.sroa.4.0.copyload.i, %modification_list_block.i.i18.i ], [ %result_value.sroa.4.0.copyload.i, %tag_id_modify1.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %Then.i.i.i.i.i.i.i15 ], [ %result_value.sroa.4.0.copyload.i, %modification_list_block.i.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %tag_id_modify.i.i.i ], [ %result_value.sroa.4.0.copyload.i, %then_block.i.i ]
  %result_value2.sroa.6.0.i = phi i8 [ 0, %else_block.i.i ], [ 1, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ 1, %Then.i.i.i.i.i21.i ], [ 1, %modify_rc.i.i.i ], [ 1, %tag_id_modify6.i.i.i ], [ 1, %Then.i.i.i.i19.i.i ], [ 1, %modification_list_block.i.i18.i ], [ 1, %tag_id_modify1.i.i.i ], [ 1, %Then.i.i.i.i.i.i.i15 ], [ 1, %modification_list_block.i.i.i.i ], [ 1, %tag_id_modify.i.i.i ], [ 1, %then_block.i.i ]
  %result_value2.sroa.5.sroa.0.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack6.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.3.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.4.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack16.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.5.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack18.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.6.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack20.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.7.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack22.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.8.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack24.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.9.0.i = phi i8 [ %load_tag_to_put_in_struct.unpack8.unpack26.i.i.i, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value2.sroa.5.sroa.10.0.i = phi i64 [ %37, %else_block.i.i ], [ undef, %"#Attr_#dec_28.exit.i.sink.split.i" ], [ undef, %Then.i.i.i.i.i21.i ], [ undef, %modify_rc.i.i.i ], [ undef, %tag_id_modify6.i.i.i ], [ undef, %Then.i.i.i.i19.i.i ], [ undef, %modification_list_block.i.i18.i ], [ undef, %tag_id_modify1.i.i.i ], [ undef, %Then.i.i.i.i.i.i.i15 ], [ undef, %modification_list_block.i.i.i.i ], [ undef, %tag_id_modify.i.i.i ], [ undef, %then_block.i.i ]
  %result_value3.sroa.0.0..sroa_cast.i = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i to i8**
  store i8* %result_value2.sroa.0.0.i, i8** %result_value3.sroa.0.0..sroa_cast.i, align 8
  %result_value3.sroa.2.0..sroa_idx151.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 1
  store i64 %result_value2.sroa.3.0.i, i64* %result_value3.sroa.2.0..sroa_idx151.i, align 8
  %result_value3.sroa.3.0..sroa_idx152.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 2
  store i64 %result_value2.sroa.4.0.i, i64* %result_value3.sroa.3.0..sroa_idx152.i, align 8
  %result_value3.sroa.4.sroa.0.0.result_value3.sroa.4.0..sroa_cast.sroa_idx.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 3
  %result_value3.sroa.4.sroa.0.0.result_value3.sroa.4.0..sroa_cast.sroa_cast.i = bitcast i64* %result_value3.sroa.4.sroa.0.0.result_value3.sroa.4.0..sroa_cast.sroa_idx.i to i8*
  store i8 %result_value2.sroa.5.sroa.0.0.i, i8* %result_value3.sroa.4.sroa.0.0.result_value3.sroa.4.0..sroa_cast.sroa_cast.i, align 8
  %result_value3.sroa.4.sroa.2.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 25
  store i8 %result_value2.sroa.5.sroa.3.0.i, i8* %result_value3.sroa.4.sroa.2.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value3.sroa.4.sroa.3.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 26
  store i8 %result_value2.sroa.5.sroa.4.0.i, i8* %result_value3.sroa.4.sroa.3.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 2
  %result_value3.sroa.4.sroa.4.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 27
  store i8 %result_value2.sroa.5.sroa.5.0.i, i8* %result_value3.sroa.4.sroa.4.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value3.sroa.4.sroa.5.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 28
  store i8 %result_value2.sroa.5.sroa.6.0.i, i8* %result_value3.sroa.4.sroa.5.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 4
  %result_value3.sroa.4.sroa.6.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 29
  store i8 %result_value2.sroa.5.sroa.7.0.i, i8* %result_value3.sroa.4.sroa.6.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value3.sroa.4.sroa.7.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 30
  store i8 %result_value2.sroa.5.sroa.8.0.i, i8* %result_value3.sroa.4.sroa.7.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 2
  %result_value3.sroa.4.sroa.8.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 31
  store i8 %result_value2.sroa.5.sroa.9.0.i, i8* %result_value3.sroa.4.sroa.8.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value3.sroa.4.sroa.9.0.result_value3.sroa.4.0..sroa_cast.sroa_idx282.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 4
  store i64 %result_value2.sroa.5.sroa.10.0.i, i64* %result_value3.sroa.4.sroa.9.0.result_value3.sroa.4.0..sroa_cast.sroa_idx282.i, align 8
  %result_value3.sroa.4.sroa.10.0.result_value3.sroa.4.0..sroa_cast.sroa_idx283.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 5
  store i64 %result_value.sroa.3.0.copyload.i, i64* %result_value3.sroa.4.sroa.10.0.result_value3.sroa.4.0..sroa_cast.sroa_idx283.i, align 8
  %result_value3.sroa.4.sroa.11.0.result_value3.sroa.4.0..sroa_cast.sroa_idx284.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 6
  store i64 %result_value.sroa.4.0.copyload.i, i64* %result_value3.sroa.4.sroa.11.0.result_value3.sroa.4.0..sroa_cast.sroa_idx284.i, align 8
  %result_value3.sroa.4.sroa.12.0.result_value3.sroa.4.0..sroa_cast.sroa_idx285.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 7
  store i64 %result_value.sroa.5.sroa.0.0.copyload.i, i64* %result_value3.sroa.4.sroa.12.0.result_value3.sroa.4.0..sroa_cast.sroa_idx285.i, align 8
  %result_value3.sroa.4.sroa.13.0.result_value3.sroa.4.0..sroa_cast.sroa_idx.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 1, i64 8
  %result_value3.sroa.4.sroa.13.0.result_value3.sroa.4.0..sroa_cast.sroa_cast.i = bitcast i64* %result_value3.sroa.4.sroa.13.0.result_value3.sroa.4.0..sroa_cast.sroa_idx.i to i8*
  store i8 %result_value.sroa.5.sroa.2.0.copyload.i, i8* %result_value3.sroa.4.sroa.13.0.result_value3.sroa.4.0..sroa_cast.sroa_cast.i, align 8
  %result_value3.sroa.4.sroa.14.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 65
  store i8 %result_value.sroa.5.sroa.3.0.copyload.i, i8* %result_value3.sroa.4.sroa.14.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value3.sroa.4.sroa.15.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 66
  store i8 %result_value.sroa.5.sroa.4.0.copyload.i, i8* %result_value3.sroa.4.sroa.15.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 2
  %result_value3.sroa.4.sroa.16.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 67
  store i8 %result_value.sroa.5.sroa.5.0.copyload.i, i8* %result_value3.sroa.4.sroa.16.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value3.sroa.4.sroa.17.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 68
  store i8 %result_value.sroa.5.sroa.6.0.copyload.i, i8* %result_value3.sroa.4.sroa.17.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 4
  %result_value3.sroa.4.sroa.18.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 69
  store i8 %result_value.sroa.5.sroa.7.0.copyload.i, i8* %result_value3.sroa.4.sroa.18.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value3.sroa.4.sroa.19.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 70
  store i8 %result_value.sroa.5.sroa.8.0.copyload.i, i8* %result_value3.sroa.4.sroa.19.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 2
  %result_value3.sroa.4.sroa.20.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i = getelementptr inbounds i8, i8* %3, i64 71
  store i8 %result_value.sroa.5.sroa.9.0.copyload.i, i8* %result_value3.sroa.4.sroa.20.0.result_value3.sroa.4.0..sroa_cast.sroa_raw_idx.i, align 1
  %result_value3.sroa.5.0..sroa_idx.i = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %result_value.i.i, i64 0, i32 2
  store i8 %result_value2.sroa.6.0.i, i8* %result_value3.sroa.5.0..sroa_idx.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6)
  %call.i.i = call fastcc %str.RocStr @Task_39_b4bf5ce9bdcdc57d63a119c66bcbe7bb289e57c2a2b6a03c556fcc989fcfa6({ [0 x i64], [9 x i64], i8, [7 x i8] }* nonnull %result_value.i.i, %str.RocStr* nonnull %load_element.i.i)
  %39 = bitcast %str.RocStr* %struct_field.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %struct_field.repack.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i, i64 0, i32 0
  %struct_field_access_record_0.elt.i.i.i = extractvalue %str.RocStr %call.i.i, 0
  store i8* %struct_field_access_record_0.elt.i.i.i, i8** %struct_field.repack.i.i.i, align 8
  %struct_field.repack2.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i, i64 0, i32 1
  %struct_field_access_record_0.elt3.i.i.i = extractvalue %str.RocStr %call.i.i, 1
  store i64 %struct_field_access_record_0.elt3.i.i.i, i64* %struct_field.repack2.i.i.i, align 8
  %struct_field.repack4.i.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i, i64 0, i32 2
  %struct_field_access_record_0.elt5.i.i.i = extractvalue %str.RocStr %call.i.i, 2
  store i64 %struct_field_access_record_0.elt5.i.i.i, i64* %struct_field.repack4.i.i.i, align 8
  %to_cc_type_ptr.i.i.i.i.i = bitcast %str.RocStr* %struct_field.i.i.i to { i8*, i64, i64 }*
  call void @roc_fx_stdoutLine({ i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i.i.i)
  %load_str_to_stack.i.i.i.i.i.unpack10 = load i64, i64* %struct_field.repack4.i.i.i, align 8
  %is_big_str.i.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.i.i.unpack10, 0
  br i1 %is_big_str.i.i.i.i.i, label %modify_rc.i.i.i.i.i, label %Effect_effect_after_inner_421063479bea54b5f9552ebc81d111836aa1d6d998fd79f13a24d234cc9a4e7.exit.i

modify_rc.i.i.i.i.i:                              ; preds = %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit
  %call_builtin.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i) #11
  %get_rc_ptr.i.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i, i64 -8
  %40 = bitcast i8* %get_rc_ptr.i.i.i.i.i to i64*
  %41 = load i64, i64* %40, align 8
  %.not.i.i.i.i.i.i.i.i = icmp eq i64 %41, 0
  br i1 %.not.i.i.i.i.i.i.i.i, label %Effect_effect_after_inner_421063479bea54b5f9552ebc81d111836aa1d6d998fd79f13a24d234cc9a4e7.exit.i, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %modify_rc.i.i.i.i.i
  %42 = add i64 %41, -1
  store i64 %42, i64* %40, align 8
  %43 = icmp eq i64 %41, -9223372036854775808
  br i1 %43, label %Then1.i.i.i.i.i.i.i.i, label %Effect_effect_after_inner_421063479bea54b5f9552ebc81d111836aa1d6d998fd79f13a24d234cc9a4e7.exit.i

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  call void @roc_dealloc(i8* %get_rc_ptr.i.i.i.i.i, i32 8) #11
  br label %Effect_effect_after_inner_421063479bea54b5f9552ebc81d111836aa1d6d998fd79f13a24d234cc9a4e7.exit.i

Effect_effect_after_inner_421063479bea54b5f9552ebc81d111836aa1d6d998fd79f13a24d234cc9a4e7.exit.i: ; preds = %modify_rc.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i, %Effect_effect_after_inner_54465d020d7665d2b9d9aa25c811eb59338a4227f8857b93936ce54acd3e.exit
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  br label %_64_c694f2057f9f1d21f9ea6e96bd773cee28d9c39207bc813e821d413d173dce.exit

branch1.i:                                        ; preds = %entry
  %44 = bitcast %str.RocStr* %load_element5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44)
  %get_opaque_data_ptr2.i.i = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %1, i64 0, i32 1
  %45 = bitcast [10 x i64]* %get_opaque_data_ptr2.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %44, i8* noundef nonnull align 8 dereferenceable(24) %45, i64 24, i1 false)
  %to_cc_type_ptr.i.i.i.i = bitcast %str.RocStr* %load_element5.i.i to { i8*, i64, i64 }*
  call void @roc_fx_stdoutLine({ i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i.i)
  %load_str_to_stack.i.i.i.i.elt4 = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element5.i.i, i64 0, i32 2
  %load_str_to_stack.i.i.i.i.unpack5 = load i64, i64* %load_str_to_stack.i.i.i.i.elt4, align 8
  %is_big_str.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.i.unpack5, 0
  br i1 %is_big_str.i.i.i.i, label %modify_rc.i.i.i.i, label %Effect_effect_map_inner_833c2c42dc146197c7548a3a8bc8f4aac3066e33d641486d3ffbd3a9e7d359.exit.i

modify_rc.i.i.i.i:                                ; preds = %branch1.i
  %call_builtin.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_element5.i.i) #11
  %get_rc_ptr.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i, i64 -8
  %46 = bitcast i8* %get_rc_ptr.i.i.i.i to i64*
  %47 = load i64, i64* %46, align 8
  %.not.i.i.i.i.i.i.i = icmp eq i64 %47, 0
  br i1 %.not.i.i.i.i.i.i.i, label %Effect_effect_map_inner_833c2c42dc146197c7548a3a8bc8f4aac3066e33d641486d3ffbd3a9e7d359.exit.i, label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %modify_rc.i.i.i.i
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = icmp eq i64 %47, -9223372036854775808
  br i1 %49, label %Then1.i.i.i.i.i.i.i, label %Effect_effect_map_inner_833c2c42dc146197c7548a3a8bc8f4aac3066e33d641486d3ffbd3a9e7d359.exit.i

Then1.i.i.i.i.i.i.i:                              ; preds = %Then.i.i.i.i.i.i.i
  call void @roc_dealloc(i8* %get_rc_ptr.i.i.i.i, i32 8) #11
  br label %Effect_effect_map_inner_833c2c42dc146197c7548a3a8bc8f4aac3066e33d641486d3ffbd3a9e7d359.exit.i

Effect_effect_map_inner_833c2c42dc146197c7548a3a8bc8f4aac3066e33d641486d3ffbd3a9e7d359.exit.i: ; preds = %modify_rc.i.i.i.i, %Then.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i, %branch1.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44)
  br label %_64_c694f2057f9f1d21f9ea6e96bd773cee28d9c39207bc813e821d413d173dce.exit

_64_c694f2057f9f1d21f9ea6e96bd773cee28d9c39207bc813e821d413d173dce.exit: ; preds = %entry, %Effect_effect_after_inner_421063479bea54b5f9552ebc81d111836aa1d6d998fd79f13a24d234cc9a4e7.exit.i, %Effect_effect_map_inner_833c2c42dc146197c7548a3a8bc8f4aac3066e33d641486d3ffbd3a9e7d359.exit.i
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_2_result_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_2_size() local_unnamed_addr #12 {
entry:
  ret i64 88
}

define void @roc__mainForHost_14_caller({}* nocapture readnone %0, %list.RocList* nocapture readonly %1, { [0 x i64], [5 x i64], i8, [7 x i8] }* nocapture %2) local_unnamed_addr {
entry:
  %param_alloca.i.i.i = alloca %list.RocList, align 8
  %result_value.i.i = alloca { [0 x i64], [5 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [5 x i64], i8, [7 x i8] }, align 8
  %load_param1.elt = getelementptr inbounds %list.RocList, %list.RocList* %1, i64 0, i32 0
  %load_param1.unpack = load i8*, i8** %load_param1.elt, align 8
  %load_param1.elt2 = getelementptr inbounds %list.RocList, %list.RocList* %1, i64 0, i32 1
  %load_param1.unpack3 = load i64, i64* %load_param1.elt2, align 8
  %load_param1.elt4 = getelementptr inbounds %list.RocList, %list.RocList* %1, i64 0, i32 2
  %load_param1.unpack5 = load i64, i64* %load_param1.elt4, align 8
  %3 = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3)
  %4 = bitcast %list.RocList* %param_alloca.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  %param_alloca.i.i.i.repack = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 0
  store i8* %load_param1.unpack, i8** %param_alloca.i.i.i.repack, align 8
  %param_alloca.i.i.i.repack7 = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 1
  store i64 %load_param1.unpack3, i64* %param_alloca.i.i.i.repack7, align 8
  %param_alloca.i.i.i.repack9 = getelementptr inbounds %list.RocList, %list.RocList* %param_alloca.i.i.i, i64 0, i32 2
  store i64 %load_param1.unpack5, i64* %param_alloca.i.i.i.repack9, align 8
  %to_cc_type_ptr.i.i.i = bitcast %list.RocList* %param_alloca.i.i.i to { i8*, i64, i64 }*
  call void @roc_fx_fileReadBytes({ [0 x i64], [5 x i64], i8, [7 x i8] }* nonnull %result_value.i.i, { i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  %"cap > 0.i.i.i.not" = icmp eq i64 %load_param1.unpack5, 0
  br i1 %"cap > 0.i.i.i.not", label %_61_b05fb4b24fc8745969d2b89de9fcf46ca62e6492d08321798cbb72ee3f55bd0.exit, label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %entry
  %5 = ptrtoint i8* %load_param1.unpack to i64
  %6 = shl i64 %load_param1.unpack5, 1
  %.not.i.i.i.i.i = icmp slt i64 %load_param1.unpack5, 0
  %7 = select i1 %.not.i.i.i.i.i, i64 %6, i64 %5
  %as_usize_ptr.i.i.i = inttoptr i64 %7 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %8 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %8, 0
  br i1 %.not.i.i.i.i.i.i, label %_61_b05fb4b24fc8745969d2b89de9fcf46ca62e6492d08321798cbb72ee3f55bd0.exit, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modification_list_block.i.i.i
  %9 = add i64 %8, -1
  store i64 %9, i64* %get_rc_ptr.i.i.i, align 8
  %10 = icmp eq i64 %8, -9223372036854775808
  br i1 %10, label %Then1.i.i.i.i.i.i, label %_61_b05fb4b24fc8745969d2b89de9fcf46ca62e6492d08321798cbb72ee3f55bd0.exit

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  %11 = bitcast i64* %get_rc_ptr.i.i.i to i8*
  call void @roc_dealloc(i8* %11, i32 8) #11
  br label %_61_b05fb4b24fc8745969d2b89de9fcf46ca62e6492d08321798cbb72ee3f55bd0.exit

_61_b05fb4b24fc8745969d2b89de9fcf46ca62e6492d08321798cbb72ee3f55bd0.exit: ; preds = %modification_list_block.i.i.i, %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i, %entry
  %result_value18 = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %result_value18, i8* noundef nonnull align 8 dereferenceable(48) %3, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3)
  %12 = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %result_value to i8*
  %13 = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %13, i8* noundef nonnull align 8 dereferenceable(48) %12, i64 48, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_14_result_size() local_unnamed_addr #12 {
entry:
  ret i64 48
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_14_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: noreturn nounwind
define void @roc__mainForHost_17_caller({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nocapture readonly %0, {}* nocapture readnone %1, { [0 x i64], [13 x i64], i8, [7 x i8] }* nocapture readnone %2) local_unnamed_addr #14 {
entry:
  tail call fastcc void @_80_7e13231c7e5113e2af88c7f84a596e9bb0c45bbe895fd55aa638a82cdd5bce({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0)
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_17_result_size() local_unnamed_addr #12 {
entry:
  ret i64 112
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_17_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: nounwind
define void @roc__mainForHost_1_caller(%list.RocList* nocapture readonly %0, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nocapture readonly %1, { [0 x i64], [10 x i64], i8, [7 x i8] }* nocapture %2) local_unnamed_addr #11 {
entry:
  %list_alloca.i.i3.i.i.i = alloca %list.RocList, align 8
  %load_element9.i.i.i.i = alloca %str.RocStr, align 8
  %struct_field1.i.i.i = alloca %str.RocStr, align 8
  %struct_field.i.i.i = alloca %str.RocStr, align 8
  %result_value1.i.i6 = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value.i.i7 = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value7.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %load_element6.i = alloca %str.RocStr, align 8
  %load_param.elt = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 0
  %load_param.unpack = load i8*, i8** %load_param.elt, align 8
  %3 = insertvalue %list.RocList undef, i8* %load_param.unpack, 0
  %load_param.elt1 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 1
  %load_param.unpack2 = load i64, i64* %load_param.elt1, align 8
  %4 = insertvalue %list.RocList %3, i64 %load_param.unpack2, 1
  %load_param.elt3 = getelementptr inbounds %list.RocList, %list.RocList* %0, i64 0, i32 2
  %load_param.unpack4 = load i64, i64* %load_param.elt3, align 8
  %load_param5 = insertvalue %list.RocList %4, i64 %load_param.unpack4, 2
  %5 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5)
  %6 = bitcast %str.RocStr* %load_element6.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  %8 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value.i.i7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #11
  %9 = bitcast %str.RocStr* %struct_field1.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %str.RocStr* %struct_field.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = bitcast { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8* noundef nonnull align 8 dereferenceable(24) %11, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.elt21.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i.i, i64 0, i32 2
  %load_str_to_stack.i.i.i.unpack22.i = load i64, i64* %load_str_to_stack.i.i.i.elt21.i, align 8
  %is_big_str.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack22.i, 0
  br i1 %is_big_str.i.i.i.i, label %modify_rc.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i"

modify_rc.i.i.i.i:                                ; preds = %entry
  %call_builtin.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i.i) #11
  %get_rc_ptr.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i, i64 -8
  %12 = bitcast i8* %get_rc_ptr.i.i.i.i to i64*
  %13 = load i64, i64* %12, align 8
  %.not.i.i.i.i.i = icmp eq i64 %13, 0
  br i1 %.not.i.i.i.i.i, label %"#Attr_#inc_4.exit.i.i.i", label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i.i.i
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %12, align 8
  br label %"#Attr_#inc_4.exit.i.i.i"

"#Attr_#inc_4.exit.i.i.i":                        ; preds = %Then.i.i.i.i.i, %modify_rc.i.i.i.i, %entry
  %struct_field_access_record_1.i.i.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %1, i64 0, i32 1
  %15 = bitcast %str.RocStr* %struct_field_access_record_1.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %9, i8* noundef nonnull align 8 dereferenceable(24) %15, i64 24, i1 false) #11
  %load_str_to_stack.i3.i.i.elt26.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i, i64 0, i32 2
  %load_str_to_stack.i3.i.i.unpack27.i = load i64, i64* %load_str_to_stack.i3.i.i.elt26.i, align 8
  %is_big_str.i5.i.i.i = icmp sgt i64 %load_str_to_stack.i3.i.i.unpack27.i, 0
  br i1 %is_big_str.i5.i.i.i, label %modify_rc.i10.i.i.i, label %"#Attr_#inc_4.exit12.i.i.i"

modify_rc.i10.i.i.i:                              ; preds = %"#Attr_#inc_4.exit.i.i.i"
  %call_builtin.i6.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i) #11
  %get_rc_ptr.i8.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i6.i.i.i, i64 -8
  %16 = bitcast i8* %get_rc_ptr.i8.i.i.i to i64*
  %17 = load i64, i64* %16, align 8
  %.not.i.i9.i.i.i = icmp eq i64 %17, 0
  br i1 %.not.i.i9.i.i.i, label %"#Attr_#inc_4.exit12.i.i.i", label %Then.i.i11.i.i.i

Then.i.i11.i.i.i:                                 ; preds = %modify_rc.i10.i.i.i
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8
  br label %"#Attr_#inc_4.exit12.i.i.i"

"#Attr_#inc_4.exit12.i.i.i":                      ; preds = %Then.i.i11.i.i.i, %modify_rc.i10.i.i.i, %"#Attr_#inc_4.exit.i.i.i"
  %struct_field_access_record_2.i.i.i = getelementptr inbounds { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* %1, i64 0, i32 2
  %struct_field2.i.i.i = load { [0 x i64], [12 x i64] }*, { [0 x i64], [12 x i64] }** %struct_field_access_record_2.i.i.i, align 8
  %to_int1.i.i.i.i = ptrtoint { [0 x i64], [12 x i64] }* %struct_field2.i.i.i to i64
  %masked.i.i.i.i = and i64 %to_int1.i.i.i.i, 7
  %cast_to_i8_ptr.i.i.i.i = bitcast { [0 x i64], [12 x i64] }* %struct_field2.i.i.i to i8*
  %get_rc_ptr.i14.i.i.idx.i = sub nuw nsw i64 -8, %masked.i.i.i.i
  %get_rc_ptr.i14.i.i.i = getelementptr inbounds i8, i8* %cast_to_i8_ptr.i.i.i.i, i64 %get_rc_ptr.i14.i.i.idx.i
  %19 = bitcast i8* %get_rc_ptr.i14.i.i.i to i64*
  %20 = load i64, i64* %19, align 8
  %.not.i.i15.i.i.i = icmp eq i64 %20, 0
  br i1 %.not.i.i15.i.i.i, label %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i, label %Then.i.i16.i.i.i

Then.i.i16.i.i.i:                                 ; preds = %"#Attr_#inc_4.exit12.i.i.i"
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i

Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i: ; preds = %Then.i.i16.i.i.i, %"#Attr_#inc_4.exit12.i.i.i"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call fastcc void @Arg_parse_3f95465e904bca7190247a1fbb41e2fb7548d72d51b572257b32d12e6faa67e2({ %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nonnull %1, %list.RocList %load_param5, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value.i.i7) #11
  call fastcc void @Result_mapErr_bd7ee0b61d48f635ca49c34d781c67a50ded34ea29b86dec499286b58b2d4a({ [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value.i.i7, { %str.RocStr, %str.RocStr, { [0 x i64], [12 x i64] }* }* nonnull %1, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value1.i.i6) #11
  %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast.sroa_cast.i = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i6 to i8**
  %result_value.sroa.0.sroa.0.0.copyload.i = load i8*, i8** %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast.sroa_cast.i, align 8
  %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast.sroa_idx51.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i6, i64 0, i32 1, i64 1
  %result_value.sroa.0.sroa.3.0.copyload.i = load i64, i64* %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast.sroa_idx51.i, align 8
  %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast.sroa_idx54.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i6, i64 0, i32 1, i64 2
  %result_value.sroa.0.sroa.4.0.copyload.i = load i64, i64* %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast.sroa_idx54.i, align 8
  %result_value.sroa.3.0..sroa_idx.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value1.i.i6, i64 0, i32 2
  %result_value.sroa.3.0.copyload.i = load i8, i8* %result_value.sroa.3.0..sroa_idx.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #11
  %eq_u8.i = icmp eq i8 %result_value.sroa.3.0.copyload.i, 0
  br i1 %eq_u8.i, label %"#UserApp_24_28472a228e8d485c471dc94b155eeeadf9212bf12345bd6b528f8d5ef8682.exit", label %else_block.i

else_block.i:                                     ; preds = %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i
  %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast36.sroa_idx.i = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i, i64 0, i32 0
  store i8* %result_value.sroa.0.sroa.0.0.copyload.i, i8** %result_value.sroa.0.sroa.0.0.result_value.sroa.0.0..sroa_cast36.sroa_idx.i, align 8
  %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast36.sroa_idx52.i = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i, i64 0, i32 1
  store i64 %result_value.sroa.0.sroa.3.0.copyload.i, i64* %result_value.sroa.0.sroa.3.0.result_value.sroa.0.0..sroa_cast36.sroa_idx52.i, align 8
  %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast36.sroa_idx55.i = getelementptr inbounds %str.RocStr, %str.RocStr* %load_element6.i, i64 0, i32 2
  store i64 %result_value.sroa.0.sroa.4.0.copyload.i, i64* %result_value.sroa.0.sroa.4.0.result_value.sroa.0.0..sroa_cast36.sroa_idx55.i, align 8
  %is_big_str.i.i = icmp sgt i64 %result_value.sroa.0.sroa.4.0.copyload.i, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %tag_id_modify6.i.i.i.i

modify_rc.i.i:                                    ; preds = %else_block.i
  %call_builtin.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %load_element6.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %22 = bitcast i8* %get_rc_ptr.i.i to i64*
  %23 = load i64, i64* %22, align 8
  %.not.i.i.i = icmp eq i64 %23, 0
  br i1 %.not.i.i.i, label %tag_id_modify6.i.i.i.i, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modify_rc.i.i
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %22, align 8
  br label %tag_id_modify6.i.i.i.i

tag_id_modify6.i.i.i.i:                           ; preds = %Then.i.i.i, %modify_rc.i.i, %else_block.i
  %result_value.i12.sroa.0.0..sroa_cast.i = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i to i8**
  store i8* %result_value.sroa.0.sroa.0.0.copyload.i, i8** %result_value.i12.sroa.0.0..sroa_cast.i, align 8
  %result_value.i12.sroa.4.0..sroa_idx103.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 1
  store i64 %result_value.sroa.0.sroa.3.0.copyload.i, i64* %result_value.i12.sroa.4.0..sroa_idx103.i, align 8
  %result_value.i12.sroa.5.0..sroa_idx105.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1, i64 2
  store i64 %result_value.sroa.0.sroa.4.0.copyload.i, i64* %result_value.i12.sroa.5.0..sroa_idx105.i, align 8
  %result_value.i12.sroa.6.0..sroa_idx.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 2
  store i8 2, i8* %result_value.i12.sroa.6.0..sroa_idx.i, align 8
  %25 = ptrtoint i8* %result_value.sroa.0.sroa.0.0.copyload.i to i64
  br i1 %is_big_str.i.i, label %modify_rc.i.i.i.i.i, label %"#Attr_#inc_28.exit.i.thread.i.i"

"#Attr_#inc_28.exit.i.thread.i.i":                ; preds = %tag_id_modify6.i.i.i.i
  %26 = bitcast %str.RocStr* %load_element9.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  br label %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i

modify_rc.i.i.i.i.i:                              ; preds = %tag_id_modify6.i.i.i.i
  %field_ptr7.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1
  %modify_tag_field9.i.i.i.i = bitcast [3 x i64]* %field_ptr7.i.i.i.i to %str.RocStr*
  %call_builtin.i.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i.i) #11
  %get_rc_ptr.i11.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i.i, i64 -8
  %27 = bitcast i8* %get_rc_ptr.i11.i.i.i.i to i64*
  %28 = load i64, i64* %27, align 8
  %.not.i.i12.i.i.i.i = icmp eq i64 %28, 0
  br i1 %.not.i.i12.i.i.i.i, label %"#Attr_#inc_28.exit.i.i.i", label %"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i.i"

"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i.i": ; preds = %modify_rc.i.i.i.i.i
  %29 = add nsw i64 %28, 1
  store i64 %29, i64* %27, align 8
  br label %"#Attr_#inc_28.exit.i.i.i"

"#Attr_#inc_28.exit.i.i.i":                       ; preds = %"#Attr_#inc_28.exit.ithread-pre-split.sink.split.i.i", %modify_rc.i.i.i.i.i
  %30 = bitcast %str.RocStr* %load_element9.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  br label %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i

File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i: ; preds = %"#Attr_#inc_28.exit.i.i.i", %"#Attr_#inc_28.exit.i.thread.i.i"
  %.pre-phi.i.pre-phi.i.pre-phi = bitcast %str.RocStr* %load_element9.i.i.i.i to i8*
  %get_opaque_data_ptr6.i.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value7.i, i64 0, i32 1
  %31 = bitcast [3 x i64]* %get_opaque_data_ptr6.i.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %.pre-phi.i.pre-phi.i.pre-phi, i8* noundef nonnull align 8 dereferenceable(24) %31, i64 24, i1 false) #11
  %32 = bitcast %list.RocList* %list_alloca.i.i3.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  call fastcc void @roc_builtins.str.to_utf8(%list.RocList* noalias nocapture nonnull %list_alloca.i.i3.i.i.i, %str.RocStr* nocapture nonnull readonly %load_element9.i.i.i.i) #11
  %load_list.elt.i.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i.i, i64 0, i32 0
  %load_list.unpack.i.i.i.i.i = load i8*, i8** %load_list.elt.i.i.i.i.i, align 8
  %load_list.elt1.i.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i.i, i64 0, i32 1
  %load_list.unpack2.i.i.i.i.i = load i64, i64* %load_list.elt1.i.i.i.i.i, align 8
  %load_list.elt3.i.i.i.i.i = getelementptr inbounds %list.RocList, %list.RocList* %list_alloca.i.i3.i.i.i, i64 0, i32 2
  %load_list.unpack4.i.i.i.i.i = load i64, i64* %load_list.elt3.i.i.i.i.i, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %.pre-phi.i.pre-phi.i.pre-phi) #11
  br label %"#UserApp_24_28472a228e8d485c471dc94b155eeeadf9212bf12345bd6b528f8d5ef8682.exit"

"#UserApp_24_28472a228e8d485c471dc94b155eeeadf9212bf12345bd6b528f8d5ef8682.exit": ; preds = %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i
  %result_value.i.i.sroa.9.0 = phi i64 [ %25, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ undef, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  %result_value.i.i.sroa.7.0 = phi i64 [ %load_list.unpack4.i.i.i.i.i, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ %result_value.sroa.0.sroa.4.0.copyload.i, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  %result_value.i.i.sroa.5.0 = phi i64 [ %load_list.unpack2.i.i.i.i.i, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ %result_value.sroa.0.sroa.3.0.copyload.i, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  %result_value.i.i.sroa.0.0 = phi i8* [ %load_list.unpack.i.i.i.i.i, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ %result_value.sroa.0.sroa.0.0.copyload.i, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  %.sink.i = phi i8 [ 0, %File_readBytes_cfaffeff17e4f2167952743f8512def7844a0d8c1e369d3619b8f32eccad7c.exit.i ], [ 1, %Arg_parseFormatted_6504ed17d50b4199b5d611a73de6bc58e553c924531f2324ee4a6dc0cd2c.exit.i ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  %result_value.sroa.0.0..sroa_cast = bitcast { [0 x i64], [10 x i64], i8, [7 x i8] }* %2 to i8**
  store i8* %result_value.i.i.sroa.0.0, i8** %result_value.sroa.0.0..sroa_cast, align 8
  %result_value.sroa.2.0..sroa_idx74 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 1
  store i64 %result_value.i.i.sroa.5.0, i64* %result_value.sroa.2.0..sroa_idx74, align 8
  %result_value.sroa.3.0..sroa_idx75 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 2
  store i64 %result_value.i.i.sroa.7.0, i64* %result_value.sroa.3.0..sroa_idx75, align 8
  %result_value.sroa.4.0..sroa_idx76 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 3
  store i64 %result_value.i.i.sroa.9.0, i64* %result_value.sroa.4.0..sroa_idx76, align 8
  %result_value.sroa.5.0..sroa_idx77 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 4
  store i64 %result_value.sroa.0.sroa.3.0.copyload.i, i64* %result_value.sroa.5.0..sroa_idx77, align 8
  %result_value.sroa.6.0..sroa_idx78 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 5
  store i64 %result_value.sroa.0.sroa.4.0.copyload.i, i64* %result_value.sroa.6.0..sroa_idx78, align 8
  %result_value.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 6
  %result_value.sroa.7.0..sroa_cast = bitcast i64* %result_value.sroa.7.0..sroa_idx to i8*
  store i8 2, i8* %result_value.sroa.7.0..sroa_cast, align 8
  %result_value.sroa.15.0..sroa_idx79 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 7
  %result_value.sroa.15.0..sroa_cast = bitcast i64* %result_value.sroa.15.0..sroa_idx79 to i8**
  store i8* %result_value.sroa.0.sroa.0.0.copyload.i, i8** %result_value.sroa.15.0..sroa_cast, align 8
  %result_value.sroa.16.0..sroa_idx80 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 8
  store i64 %result_value.sroa.0.sroa.3.0.copyload.i, i64* %result_value.sroa.16.0..sroa_idx80, align 8
  %result_value.sroa.17.0..sroa_idx81 = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 9
  store i64 %result_value.sroa.0.sroa.4.0.copyload.i, i64* %result_value.sroa.17.0..sroa_idx81, align 8
  %result_value.sroa.18.0..sroa_idx = getelementptr inbounds { [0 x i64], [10 x i64], i8, [7 x i8] }, { [0 x i64], [10 x i64], i8, [7 x i8] }* %2, i64 0, i32 2
  store i8 %.sink.i, i8* %result_value.sroa.18.0..sroa_idx, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_1_result_size() local_unnamed_addr #12 {
entry:
  ret i64 88
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_1_size() local_unnamed_addr #12 {
entry:
  ret i64 56
}

define void @roc__mainForHost_21_caller({}* nocapture readnone %0, {}* nocapture readnone %1, %list.RocList* nocapture %2) local_unnamed_addr {
entry:
  %return_value.i.i.i = alloca %list.RocList, align 8
  %3 = bitcast %list.RocList* %return_value.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @roc_fx_args(%list.RocList* nonnull %return_value.i.i.i)
  %read_result.i.i.i.elt = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i, i64 0, i32 0
  %read_result.i.i.i.unpack = load i8*, i8** %read_result.i.i.i.elt, align 8
  %read_result.i.i.i.elt2 = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i, i64 0, i32 1
  %read_result.i.i.i.unpack3 = load i64, i64* %read_result.i.i.i.elt2, align 8
  %read_result.i.i.i.elt4 = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i, i64 0, i32 2
  %read_result.i.i.i.unpack5 = load i64, i64* %read_result.i.i.i.elt4, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  %.repack = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 0
  store i8* %read_result.i.i.i.unpack, i8** %.repack, align 8
  %.repack7 = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 1
  store i64 %read_result.i.i.i.unpack3, i64* %.repack7, align 8
  %.repack9 = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 2
  store i64 %read_result.i.i.i.unpack5, i64* %.repack9, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_21_result_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_21_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: nounwind
define void @roc__mainForHost_11_caller({ [0 x i64], [5 x i64], i8, [7 x i8] }* nocapture readonly %0, { [0 x i64], [3 x i64], i8, [7 x i8] }* nocapture readonly %1, { [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture %2) local_unnamed_addr #11 {
entry:
  %tag_id_ptr.i.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 2
  %load_tag_id.i.i = load i8, i8* %tag_id_ptr.i.i, align 1
  %eq_u8.i.i = icmp eq i8 %load_tag_id.i.i, 1
  br i1 %eq_u8.i.i, label %then_block.i.i, label %else_block.i.i

then_block.i.i:                                   ; preds = %entry
  %tag_id_ptr.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 2
  %load_tag_id.i.i.i = load i8, i8* %tag_id_ptr.i.i.i, align 1
  switch i8 %load_tag_id.i.i.i, label %"#Attr_#dec_28.exit.i.i" [
    i8 0, label %tag_id_modify.i.i.i
    i8 1, label %tag_id_modify1.i.i.i
    i8 2, label %tag_id_modify6.i.i.i
  ]

tag_id_modify.i.i.i:                              ; preds = %then_block.i.i
  %3 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 2
  %field_value.i.i.i.unpack20 = load i64, i64* %3, align 8
  %"cap > 0.i.i.i.i.not" = icmp eq i64 %field_value.i.i.i.unpack20, 0
  br i1 %"cap > 0.i.i.i.i.not", label %"#Attr_#dec_28.exit.i.i", label %modification_list_block.i.i.i.i

modification_list_block.i.i.i.i:                  ; preds = %tag_id_modify.i.i.i
  %field_ptr.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1
  %field_value.i.i.i.elt = bitcast [3 x i64]* %field_ptr.i.i.i to i8**
  %field_value.i.i.i.unpack = load i8*, i8** %field_value.i.i.i.elt, align 8
  %4 = ptrtoint i8* %field_value.i.i.i.unpack to i64
  %5 = shl i64 %field_value.i.i.i.unpack20, 1
  %.not.i.i.i.i.i.i = icmp slt i64 %field_value.i.i.i.unpack20, 0
  %6 = select i1 %.not.i.i.i.i.i.i, i64 %5, i64 %4
  %as_usize_ptr.i.i.i.i = inttoptr i64 %6 to i64*
  %get_rc_ptr.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i, i64 -1
  %7 = load i64, i64* %get_rc_ptr.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i = icmp eq i64 %7, 0
  br i1 %.not.i.i.i.i.i.i.i, label %"#Attr_#dec_28.exit.i.i", label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %modification_list_block.i.i.i.i
  %8 = add i64 %7, -1
  store i64 %8, i64* %get_rc_ptr.i.i.i.i, align 8
  %9 = icmp eq i64 %7, -9223372036854775808
  br i1 %9, label %Then1.i.i.i.i.i.i.i, label %"#Attr_#dec_28.exit.i.i"

Then1.i.i.i.i.i.i.i:                              ; preds = %Then.i.i.i.i.i.i.i
  %10 = bitcast i64* %get_rc_ptr.i.i.i.i to i8*
  br label %"#Attr_#dec_28.exit.i.i.sink.split"

tag_id_modify1.i.i.i:                             ; preds = %then_block.i.i
  %11 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 2
  %field_value5.i.i.i.unpack11 = load i64, i64* %11, align 8
  %"cap > 0.i.i.i.not" = icmp eq i64 %field_value5.i.i.i.unpack11, 0
  br i1 %"cap > 0.i.i.i.not", label %"#Attr_#dec_28.exit.i.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %tag_id_modify1.i.i.i
  %field_ptr2.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1
  %field_value5.i.i.i.elt = bitcast [3 x i64]* %field_ptr2.i.i.i to i8**
  %field_value5.i.i.i.unpack = load i8*, i8** %field_value5.i.i.i.elt, align 8
  %12 = ptrtoint i8* %field_value5.i.i.i.unpack to i64
  %13 = shl i64 %field_value5.i.i.i.unpack11, 1
  %.not.i.i.i.i.i = icmp slt i64 %field_value5.i.i.i.unpack11, 0
  %14 = select i1 %.not.i.i.i.i.i, i64 %13, i64 %12
  %as_usize_ptr.i16.i.i = inttoptr i64 %14 to i64*
  %get_rc_ptr.i17.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i16.i.i, i64 -1
  %15 = load i64, i64* %get_rc_ptr.i17.i.i, align 8
  %.not.i.i.i.i18.i.i = icmp eq i64 %15, 0
  br i1 %.not.i.i.i.i18.i.i, label %"#Attr_#dec_28.exit.i.i", label %Then.i.i.i.i19.i.i

Then.i.i.i.i19.i.i:                               ; preds = %modification_list_block.i.i.i
  %16 = add i64 %15, -1
  store i64 %16, i64* %get_rc_ptr.i17.i.i, align 8
  %17 = icmp eq i64 %15, -9223372036854775808
  br i1 %17, label %Then1.i.i.i.i20.i.i, label %"#Attr_#dec_28.exit.i.i"

Then1.i.i.i.i20.i.i:                              ; preds = %Then.i.i.i.i19.i.i
  %18 = bitcast i64* %get_rc_ptr.i17.i.i to i8*
  br label %"#Attr_#dec_28.exit.i.i.sink.split"

tag_id_modify6.i.i.i:                             ; preds = %then_block.i.i
  %19 = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.i.unpack6 = load i64, i64* %19, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack6, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#dec_28.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %tag_id_modify6.i.i.i
  %field_ptr7.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1
  %modify_tag_field9.i.i.i = bitcast [3 x i64]* %field_ptr7.i.i.i to %str.RocStr*
  %call_builtin.i.i.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field9.i.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %20 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %21 = load i64, i64* %20, align 8
  %.not.i.i.i.i15.i.i = icmp eq i64 %21, 0
  br i1 %.not.i.i.i.i15.i.i, label %"#Attr_#dec_28.exit.i.i", label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %22 = add i64 %21, -1
  store i64 %22, i64* %20, align 8
  %23 = icmp eq i64 %21, -9223372036854775808
  br i1 %23, label %"#Attr_#dec_28.exit.i.i.sink.split", label %"#Attr_#dec_28.exit.i.i"

"#Attr_#dec_28.exit.i.i.sink.split":              ; preds = %Then.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i, %Then1.i.i.i.i20.i.i
  %get_rc_ptr.i.i.i.sink = phi i8* [ %18, %Then1.i.i.i.i20.i.i ], [ %10, %Then1.i.i.i.i.i.i.i ], [ %get_rc_ptr.i.i.i, %Then.i.i.i.i.i.i ]
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i.sink, i32 8) #11
  br label %"#Attr_#dec_28.exit.i.i"

"#Attr_#dec_28.exit.i.i":                         ; preds = %"#Attr_#dec_28.exit.i.i.sink.split", %tag_id_modify6.i.i.i, %Then.i.i.i.i.i.i, %modify_rc.i.i.i, %tag_id_modify1.i.i.i, %Then.i.i.i.i19.i.i, %modification_list_block.i.i.i, %tag_id_modify.i.i.i, %Then.i.i.i.i.i.i.i, %modification_list_block.i.i.i.i, %then_block.i.i
  %get_opaque_data_ptr.i.i = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 1
  %load_element.elt.i.i = bitcast [5 x i64]* %get_opaque_data_ptr.i.i to i8**
  %load_element.unpack.i.i = load i8*, i8** %load_element.elt.i.i, align 8
  %24 = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 1
  %25 = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 2
  br label %_34_341ccc9e684ff160ef339cda44e40d88a8d2f3db55a38e77a50cf6765aaf4.exit

else_block.i.i:                                   ; preds = %entry
  %load_element6.i.i.sroa.0.0..sroa_idx = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 0, i64 0
  %load_element6.i.i.sroa.0.0.copyload = load i64, i64* %load_element6.i.i.sroa.0.0..sroa_idx, align 8
  %load_element6.i.i.sroa.4.0..sroa_idx30 = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 1
  %load_element6.i.i.sroa.4.0.copyload = load i64, i64* %load_element6.i.i.sroa.4.0..sroa_idx30, align 8
  %load_element6.i.i.sroa.5.0..sroa_idx32 = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 2
  %load_element6.i.i.sroa.5.0.copyload = load i64, i64* %load_element6.i.i.sroa.5.0..sroa_idx32, align 8
  %load_element6.i.i.sroa.6.0..sroa_idx34 = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 3
  %load_element6.i.i.sroa.6.0.copyload = load i64, i64* %load_element6.i.i.sroa.6.0..sroa_idx34, align 8
  %load_element6.i.i.sroa.7.0..sroa_idx = getelementptr inbounds { [0 x i64], [5 x i64], i8, [7 x i8] }, { [0 x i64], [5 x i64], i8, [7 x i8] }* %0, i64 0, i32 1, i64 4
  %load_element6.i.i.sroa.7.0..sroa_cast = bitcast i64* %load_element6.i.i.sroa.7.0..sroa_idx to i8*
  %load_element6.i.i.sroa.7.0.copyload = load i8, i8* %load_element6.i.i.sroa.7.0..sroa_cast, align 8
  %load_element6.i.i.sroa.8.0..sroa_raw_cast = bitcast { [0 x i64], [5 x i64], i8, [7 x i8] }* %0 to i8*
  %load_element6.i.i.sroa.8.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.i.i.sroa.8.0..sroa_raw_cast, i64 33
  %load_element6.i.i.sroa.8.0.copyload = load i8, i8* %load_element6.i.i.sroa.8.0..sroa_raw_idx, align 1
  %load_element6.i.i.sroa.9.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.i.i.sroa.8.0..sroa_raw_cast, i64 34
  %load_element6.i.i.sroa.9.0.copyload = load i8, i8* %load_element6.i.i.sroa.9.0..sroa_raw_idx, align 2
  %load_element6.i.i.sroa.10.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.i.i.sroa.8.0..sroa_raw_cast, i64 35
  %load_element6.i.i.sroa.10.0.copyload = load i8, i8* %load_element6.i.i.sroa.10.0..sroa_raw_idx, align 1
  %load_element6.i.i.sroa.11.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.i.i.sroa.8.0..sroa_raw_cast, i64 36
  %load_element6.i.i.sroa.11.0.copyload = load i8, i8* %load_element6.i.i.sroa.11.0..sroa_raw_idx, align 4
  %load_element6.i.i.sroa.12.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.i.i.sroa.8.0..sroa_raw_cast, i64 37
  %load_element6.i.i.sroa.12.0.copyload = load i8, i8* %load_element6.i.i.sroa.12.0..sroa_raw_idx, align 1
  %load_element6.i.i.sroa.13.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.i.i.sroa.8.0..sroa_raw_cast, i64 38
  %load_element6.i.i.sroa.13.0.copyload = load i8, i8* %load_element6.i.i.sroa.13.0..sroa_raw_idx, align 2
  %load_element6.i.i.sroa.14.0..sroa_raw_idx = getelementptr inbounds i8, i8* %load_element6.i.i.sroa.8.0..sroa_raw_cast, i64 39
  %load_element6.i.i.sroa.14.0.copyload = load i8, i8* %load_element6.i.i.sroa.14.0..sroa_raw_idx, align 1
  %load_tag_to_put_in_struct.unpack4.elt.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 0
  %load_tag_to_put_in_struct.unpack4.unpack.i.i.i = load i64, i64* %load_tag_to_put_in_struct.unpack4.elt.i.i.i, align 8
  %load_tag_to_put_in_struct.unpack4.elt10.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 1
  %load_tag_to_put_in_struct.unpack4.elt12.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 1, i64 2
  %load_tag_to_put_in_struct.elt5.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 2
  %load_tag_to_put_in_struct.unpack6.i.i.i = load i8, i8* %load_tag_to_put_in_struct.elt5.i.i.i, align 8
  %load_tag_to_put_in_struct.unpack8.elt.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 0
  %load_tag_to_put_in_struct.unpack8.unpack.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt15.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 1
  %load_tag_to_put_in_struct.unpack8.unpack16.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt15.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt17.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 2
  %load_tag_to_put_in_struct.unpack8.unpack18.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt17.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt19.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 3
  %load_tag_to_put_in_struct.unpack8.unpack20.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt19.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt21.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 4
  %load_tag_to_put_in_struct.unpack8.unpack22.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt21.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt23.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 5
  %load_tag_to_put_in_struct.unpack8.unpack24.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt23.i.i.i, align 1
  %load_tag_to_put_in_struct.unpack8.elt25.i.i.i = getelementptr inbounds { [0 x i64], [3 x i64], i8, [7 x i8] }, { [0 x i64], [3 x i64], i8, [7 x i8] }* %1, i64 0, i32 3, i64 6
  %load_tag_to_put_in_struct.unpack8.unpack26.i.i.i = load i8, i8* %load_tag_to_put_in_struct.unpack8.elt25.i.i.i, align 1
  %26 = inttoptr i64 %load_tag_to_put_in_struct.unpack4.unpack.i.i.i to i8*
  br label %_34_341ccc9e684ff160ef339cda44e40d88a8d2f3db55a38e77a50cf6765aaf4.exit

_34_341ccc9e684ff160ef339cda44e40d88a8d2f3db55a38e77a50cf6765aaf4.exit: ; preds = %"#Attr_#dec_28.exit.i.i", %else_block.i.i
  %result_value.i.sroa.0.0 = phi i8* [ %load_element.unpack.i.i, %"#Attr_#dec_28.exit.i.i" ], [ %26, %else_block.i.i ]
  %result_value.i.sroa.5.0.in = phi i64* [ %24, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack4.elt10.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.6.0.in = phi i64* [ %25, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack4.elt12.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.8.0 = phi i8 [ 1, %"#Attr_#dec_28.exit.i.i" ], [ 0, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.0.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack6.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.5.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack8.unpack.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.6.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack8.unpack16.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.7.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack8.unpack18.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.8.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack8.unpack20.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.9.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack8.unpack22.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.10.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack8.unpack24.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.11.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_tag_to_put_in_struct.unpack8.unpack26.i.i.i, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.12.0 = phi i64 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.0.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.13.0 = phi i64 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.4.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.14.0 = phi i64 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.5.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.15.0 = phi i64 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.6.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.16.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.7.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.17.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.8.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.18.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.9.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.19.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.10.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.20.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.11.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.21.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.12.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.22.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.13.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.7.sroa.23.0 = phi i8 [ undef, %"#Attr_#dec_28.exit.i.i" ], [ %load_element6.i.i.sroa.14.0.copyload, %else_block.i.i ]
  %result_value.i.sroa.6.0 = load i64, i64* %result_value.i.sroa.6.0.in, align 8
  %result_value.i.sroa.5.0 = load i64, i64* %result_value.i.sroa.5.0.in, align 8
  %result_value.sroa.0.0..sroa_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %2 to i8**
  store i8* %result_value.i.sroa.0.0, i8** %result_value.sroa.0.0..sroa_cast, align 8
  %result_value.sroa.2.0..sroa_idx148 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 1
  store i64 %result_value.i.sroa.5.0, i64* %result_value.sroa.2.0..sroa_idx148, align 8
  %result_value.sroa.3.0..sroa_idx149 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 2
  store i64 %result_value.i.sroa.6.0, i64* %result_value.sroa.3.0..sroa_idx149, align 8
  %result_value.sroa.4.sroa.0.0.result_value.sroa.4.0..sroa_cast.sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 3
  %result_value.sroa.4.sroa.0.0.result_value.sroa.4.0..sroa_cast.sroa_cast = bitcast i64* %result_value.sroa.4.sroa.0.0.result_value.sroa.4.0..sroa_cast.sroa_idx to i8*
  store i8 %result_value.i.sroa.7.sroa.0.0, i8* %result_value.sroa.4.sroa.0.0.result_value.sroa.4.0..sroa_cast.sroa_cast, align 8
  %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %2 to i8*
  %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 25
  store i8 %result_value.i.sroa.7.sroa.5.0, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.sroa.4.sroa.3.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 26
  store i8 %result_value.i.sroa.7.sroa.6.0, i8* %result_value.sroa.4.sroa.3.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 2
  %result_value.sroa.4.sroa.4.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 27
  store i8 %result_value.i.sroa.7.sroa.7.0, i8* %result_value.sroa.4.sroa.4.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.sroa.4.sroa.5.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 28
  store i8 %result_value.i.sroa.7.sroa.8.0, i8* %result_value.sroa.4.sroa.5.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 4
  %result_value.sroa.4.sroa.6.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 29
  store i8 %result_value.i.sroa.7.sroa.9.0, i8* %result_value.sroa.4.sroa.6.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.sroa.4.sroa.7.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 30
  store i8 %result_value.i.sroa.7.sroa.10.0, i8* %result_value.sroa.4.sroa.7.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 2
  %result_value.sroa.4.sroa.8.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 31
  store i8 %result_value.i.sroa.7.sroa.11.0, i8* %result_value.sroa.4.sroa.8.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.sroa.4.sroa.9.0.result_value.sroa.4.0..sroa_cast.sroa_idx289 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 4
  store i64 %result_value.i.sroa.7.sroa.12.0, i64* %result_value.sroa.4.sroa.9.0.result_value.sroa.4.0..sroa_cast.sroa_idx289, align 8
  %result_value.sroa.4.sroa.10.0.result_value.sroa.4.0..sroa_cast.sroa_idx290 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 5
  store i64 %result_value.i.sroa.7.sroa.13.0, i64* %result_value.sroa.4.sroa.10.0.result_value.sroa.4.0..sroa_cast.sroa_idx290, align 8
  %result_value.sroa.4.sroa.11.0.result_value.sroa.4.0..sroa_cast.sroa_idx291 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 6
  store i64 %result_value.i.sroa.7.sroa.14.0, i64* %result_value.sroa.4.sroa.11.0.result_value.sroa.4.0..sroa_cast.sroa_idx291, align 8
  %result_value.sroa.4.sroa.12.0.result_value.sroa.4.0..sroa_cast.sroa_idx292 = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 7
  store i64 %result_value.i.sroa.7.sroa.15.0, i64* %result_value.sroa.4.sroa.12.0.result_value.sroa.4.0..sroa_cast.sroa_idx292, align 8
  %result_value.sroa.4.sroa.13.0.result_value.sroa.4.0..sroa_cast.sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 1, i64 8
  %result_value.sroa.4.sroa.13.0.result_value.sroa.4.0..sroa_cast.sroa_cast = bitcast i64* %result_value.sroa.4.sroa.13.0.result_value.sroa.4.0..sroa_cast.sroa_idx to i8*
  store i8 %result_value.i.sroa.7.sroa.16.0, i8* %result_value.sroa.4.sroa.13.0.result_value.sroa.4.0..sroa_cast.sroa_cast, align 8
  %result_value.sroa.4.sroa.14.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 65
  store i8 %result_value.i.sroa.7.sroa.17.0, i8* %result_value.sroa.4.sroa.14.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.sroa.4.sroa.15.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 66
  store i8 %result_value.i.sroa.7.sroa.18.0, i8* %result_value.sroa.4.sroa.15.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 2
  %result_value.sroa.4.sroa.16.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 67
  store i8 %result_value.i.sroa.7.sroa.19.0, i8* %result_value.sroa.4.sroa.16.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.sroa.4.sroa.17.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 68
  store i8 %result_value.i.sroa.7.sroa.20.0, i8* %result_value.sroa.4.sroa.17.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 4
  %result_value.sroa.4.sroa.18.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 69
  store i8 %result_value.i.sroa.7.sroa.21.0, i8* %result_value.sroa.4.sroa.18.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.sroa.4.sroa.19.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 70
  store i8 %result_value.i.sroa.7.sroa.22.0, i8* %result_value.sroa.4.sroa.19.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 2
  %result_value.sroa.4.sroa.20.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx = getelementptr inbounds i8, i8* %result_value.sroa.4.sroa.2.0.result_value.sroa.4.0..sroa_cast.sroa_raw_cast, i64 71
  store i8 %result_value.i.sroa.7.sroa.23.0, i8* %result_value.sroa.4.sroa.20.0.result_value.sroa.4.0..sroa_cast.sroa_raw_idx, align 1
  %result_value.sroa.5.0..sroa_idx = getelementptr inbounds { [0 x i64], [9 x i64], i8, [7 x i8] }, { [0 x i64], [9 x i64], i8, [7 x i8] }* %2, i64 0, i32 2
  store i8 %result_value.i.sroa.8.0, i8* %result_value.sroa.5.0..sroa_idx, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_11_result_size() local_unnamed_addr #12 {
entry:
  ret i64 80
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_11_size() local_unnamed_addr #12 {
entry:
  ret i64 32
}

define void @roc__mainForHost_6_caller({}* nocapture readnone %0, { %str.RocStr, {} }* nocapture readonly %1, {}* nocapture readnone %2) local_unnamed_addr {
entry:
  %struct_field.i.i = alloca %str.RocStr, align 8
  %load_param1.unpack.elt = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %1, i64 0, i32 0, i32 0
  %load_param1.unpack.unpack = load i8*, i8** %load_param1.unpack.elt, align 8
  %load_param1.unpack.elt5 = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %1, i64 0, i32 0, i32 1
  %load_param1.unpack.unpack6 = load i64, i64* %load_param1.unpack.elt5, align 8
  %load_param1.unpack.elt7 = getelementptr inbounds { %str.RocStr, {} }, { %str.RocStr, {} }* %1, i64 0, i32 0, i32 2
  %load_param1.unpack.unpack8 = load i64, i64* %load_param1.unpack.elt7, align 8
  %3 = bitcast %str.RocStr* %struct_field.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  %struct_field.repack.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 0
  store i8* %load_param1.unpack.unpack, i8** %struct_field.repack.i.i, align 8
  %struct_field.repack2.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 1
  store i64 %load_param1.unpack.unpack6, i64* %struct_field.repack2.i.i, align 8
  %struct_field.repack4.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i.i, i64 0, i32 2
  store i64 %load_param1.unpack.unpack8, i64* %struct_field.repack4.i.i, align 8
  %to_cc_type_ptr.i.i.i.i = bitcast %str.RocStr* %struct_field.i.i to { i8*, i64, i64 }*
  call void @roc_fx_stdoutLine({ i8*, i64, i64 }* nonnull %to_cc_type_ptr.i.i.i.i)
  %load_str_to_stack.i.i.i.i.unpack13 = load i64, i64* %struct_field.repack4.i.i, align 8
  %is_big_str.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.i.unpack13, 0
  br i1 %is_big_str.i.i.i.i, label %modify_rc.i.i.i.i, label %_74_5511f8d95e3814de4aaa94de1daf7d8822be8573b3f3a8babb828851581a55.exit

modify_rc.i.i.i.i:                                ; preds = %entry
  %call_builtin.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i.i) #11
  %get_rc_ptr.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i, i64 -8
  %4 = bitcast i8* %get_rc_ptr.i.i.i.i to i64*
  %5 = load i64, i64* %4, align 8
  %.not.i.i.i.i.i.i.i = icmp eq i64 %5, 0
  br i1 %.not.i.i.i.i.i.i.i, label %_74_5511f8d95e3814de4aaa94de1daf7d8822be8573b3f3a8babb828851581a55.exit, label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %modify_rc.i.i.i.i
  %6 = add i64 %5, -1
  store i64 %6, i64* %4, align 8
  %7 = icmp eq i64 %5, -9223372036854775808
  br i1 %7, label %Then1.i.i.i.i.i.i.i, label %_74_5511f8d95e3814de4aaa94de1daf7d8822be8573b3f3a8babb828851581a55.exit

Then1.i.i.i.i.i.i.i:                              ; preds = %Then.i.i.i.i.i.i.i
  call void @roc_dealloc(i8* %get_rc_ptr.i.i.i.i, i32 8) #11
  br label %_74_5511f8d95e3814de4aaa94de1daf7d8822be8573b3f3a8babb828851581a55.exit

_74_5511f8d95e3814de4aaa94de1daf7d8822be8573b3f3a8babb828851581a55.exit: ; preds = %modify_rc.i.i.i.i, %Then.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i, %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_6_result_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_6_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: nounwind
define void @roc__mainForHost_16_caller({ %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nocapture readonly %0, %str.RocStr* nocapture readonly %1, { [0 x i64], [13 x i64], i8, [7 x i8] }* nocapture %2) local_unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i.i = alloca %str.RocStr, align 8
  %result_value.i.i.i.i.i.i = alloca { [0 x i64], [1 x i64], i8, [7 x i8] }, align 8
  %result_value.i.i.i.i = alloca { [0 x i64], [3 x i64], i8, [7 x i8] }, align 8
  %result_value1.i.i = alloca { [0 x i64], [7 x i64], i8, [7 x i8] }, align 8
  %result_value.i.i = alloca { [0 x i64], [4 x i64], i8, [7 x i8] }, align 8
  %result_value = alloca { [0 x i64], [13 x i64], i8, [7 x i8] }, align 8
  %3 = bitcast { [0 x i64], [7 x i64], i8, [7 x i8] }* %result_value1.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #11
  %4 = bitcast { [0 x i64], [4 x i64], i8, [7 x i8] }* %result_value.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  %struct_field.elt.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 0, i32 0
  %struct_field.unpack.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field.elt1.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 0, i32 1
  %struct_field.unpack2.i = load i64, i64* %struct_field.elt1.i, align 8
  %struct_field.elt3.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 0, i32 2
  %struct_field.unpack4.i = load i64, i64* %struct_field.elt3.i, align 8
  %5 = bitcast %str.RocStr* %incrementing_element_loop_load.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %"cap > 0.not.i.i" = icmp eq i64 %struct_field.unpack4.i, 0
  br i1 %"cap > 0.not.i.i", label %"#Attr_#inc_17.exit.i", label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %entry
  %cast_basic_basic.i.i = bitcast i8* %struct_field.unpack.i to %str.RocStr*
  %bounds_check.not.i.i = icmp eq i64 %struct_field.unpack2.i, 0
  br i1 %bounds_check.not.i.i, label %after_loop.i.i, label %loop.preheader.i.i

loop.preheader.i.i:                               ; preds = %modification_list_block.i.i
  %load_str_to_stack.i.elt7.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i.i, i64 0, i32 2
  br label %loop.i.i

loop.i.i:                                         ; preds = %"#Attr_#inc_4.exit.i.i", %loop.preheader.i.i
  %next_index10.i.i = phi i64 [ 0, %loop.preheader.i.i ], [ %next_index.i.i, %"#Attr_#inc_4.exit.i.i" ]
  %next_index.i.i = add nuw i64 %next_index10.i.i, 1
  %load_index.i.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i.i, i64 %next_index10.i.i
  %6 = bitcast %str.RocStr* %load_index.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack8.i.i = load i64, i64* %load_str_to_stack.i.elt7.i.i, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.unpack8.i.i, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %"#Attr_#inc_4.exit.i.i"

modify_rc.i.i.i:                                  ; preds = %loop.i.i
  %call_builtin.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i.i) #11
  %get_rc_ptr.i.i33.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %7 = bitcast i8* %get_rc_ptr.i.i33.i to i64*
  %8 = load i64, i64* %7, align 8
  %.not.i.i2.i.i = icmp eq i64 %8, 0
  br i1 %.not.i.i2.i.i, label %"#Attr_#inc_4.exit.i.i", label %Then.i.i.i34.i

Then.i.i.i34.i:                                   ; preds = %modify_rc.i.i.i
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8
  br label %"#Attr_#inc_4.exit.i.i"

"#Attr_#inc_4.exit.i.i":                          ; preds = %Then.i.i.i34.i, %modify_rc.i.i.i, %loop.i.i
  %exitcond.not.i = icmp eq i64 %next_index.i.i, %struct_field.unpack2.i
  br i1 %exitcond.not.i, label %after_loop.i.i, label %loop.i.i

after_loop.i.i:                                   ; preds = %"#Attr_#inc_4.exit.i.i", %modification_list_block.i.i
  %10 = ptrtoint i8* %struct_field.unpack.i to i64
  %11 = shl i64 %struct_field.unpack4.i, 1
  %.not.i.i.i35.i = icmp slt i64 %struct_field.unpack4.i, 0
  %12 = select i1 %.not.i.i.i35.i, i64 %11, i64 %10
  %as_usize_ptr.i.i = inttoptr i64 %12 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %13 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i = icmp eq i64 %13, 0
  br i1 %.not.i.i.i, label %"#Attr_#inc_17.exit.i", label %Then.i.i.i

Then.i.i.i:                                       ; preds = %after_loop.i.i
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %get_rc_ptr.i.i, align 8
  br label %"#Attr_#inc_17.exit.i"

"#Attr_#inc_17.exit.i":                           ; preds = %Then.i.i.i, %after_loop.i.i, %entry
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  %struct_field1.sroa.237.0..sroa_idx38.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 0, i32 2
  %struct_field1.sroa.237.0.copyload.i = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i, align 8
  %struct_field1.sroa.3.0..sroa_idx39.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 1, i32 0
  %struct_field1.sroa.3.0.copyload.i = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i, align 8
  %struct_field1.sroa.441.0..sroa_idx42.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 1, i32 2
  %struct_field1.sroa.441.0.copyload.i = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i, align 8
  %struct_field1.sroa.5.0..sroa_idx43.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 2, i32 0
  %struct_field1.sroa.5.0.copyload.i = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i, align 8
  %struct_field1.sroa.645.0..sroa_idx46.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 2, i32 2
  %struct_field1.sroa.645.0.copyload.i = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i, align 8
  %"cap > 0.i.i.not.i" = icmp eq i64 %struct_field1.sroa.237.0.copyload.i, 0
  br i1 %"cap > 0.i.i.not.i", label %"#Attr_#inc_9.exit.i.i", label %modification_list_block.i.i.i

modification_list_block.i.i.i:                    ; preds = %"#Attr_#inc_17.exit.i"
  %struct_field1.sroa.0.0..sroa_idx.i = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 0, i32 0
  %struct_field1.sroa.0.0.copyload.i = load i8*, i8** %struct_field1.sroa.0.0..sroa_idx.i, align 8
  %15 = ptrtoint i8* %struct_field1.sroa.0.0.copyload.i to i64
  %16 = shl i64 %struct_field1.sroa.237.0.copyload.i, 1
  %.not.i.i.i.i.i = icmp slt i64 %struct_field1.sroa.237.0.copyload.i, 0
  %17 = select i1 %.not.i.i.i.i.i, i64 %16, i64 %15
  %as_usize_ptr.i.i.i = inttoptr i64 %17 to i64*
  %get_rc_ptr.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i, i64 -1
  %18 = load i64, i64* %get_rc_ptr.i.i.i, align 8
  %.not.i.i.i.i = icmp eq i64 %18, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#inc_9.exit.i.i", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %modification_list_block.i.i.i
  %19 = add nsw i64 %18, 1
  store i64 %19, i64* %get_rc_ptr.i.i.i, align 8
  br label %"#Attr_#inc_9.exit.i.i"

"#Attr_#inc_9.exit.i.i":                          ; preds = %Then.i.i.i.i, %modification_list_block.i.i.i, %"#Attr_#inc_17.exit.i"
  %"cap > 0.i18.i.not.i" = icmp eq i64 %struct_field1.sroa.441.0.copyload.i, 0
  br i1 %"cap > 0.i18.i.not.i", label %"#Attr_#inc_10.exit.i.i", label %modification_list_block.i27.i.i

modification_list_block.i27.i.i:                  ; preds = %"#Attr_#inc_9.exit.i.i"
  %20 = ptrtoint i8* %struct_field1.sroa.3.0.copyload.i to i64
  %21 = shl i64 %struct_field1.sroa.441.0.copyload.i, 1
  %.not.i.i.i23.i.i = icmp slt i64 %struct_field1.sroa.441.0.copyload.i, 0
  %22 = select i1 %.not.i.i.i23.i.i, i64 %21, i64 %20
  %as_usize_ptr.i24.i.i = inttoptr i64 %22 to i64*
  %get_rc_ptr.i25.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i, i64 -1
  %23 = load i64, i64* %get_rc_ptr.i25.i.i, align 8
  %.not.i.i26.i.i = icmp eq i64 %23, 0
  br i1 %.not.i.i26.i.i, label %"#Attr_#inc_10.exit.i.i", label %Then.i.i28.i.i

Then.i.i28.i.i:                                   ; preds = %modification_list_block.i27.i.i
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %get_rc_ptr.i25.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i"

"#Attr_#inc_10.exit.i.i":                         ; preds = %Then.i.i28.i.i, %modification_list_block.i27.i.i, %"#Attr_#inc_9.exit.i.i"
  %"cap > 0.i5.i.not.i" = icmp eq i64 %struct_field1.sroa.645.0.copyload.i, 0
  br i1 %"cap > 0.i5.i.not.i", label %"#Attr_#inc_16.exit", label %modification_list_block.i14.i.i

modification_list_block.i14.i.i:                  ; preds = %"#Attr_#inc_10.exit.i.i"
  %25 = ptrtoint i8* %struct_field1.sroa.5.0.copyload.i to i64
  %26 = shl i64 %struct_field1.sroa.645.0.copyload.i, 1
  %.not.i.i.i10.i.i = icmp slt i64 %struct_field1.sroa.645.0.copyload.i, 0
  %27 = select i1 %.not.i.i.i10.i.i, i64 %26, i64 %25
  %as_usize_ptr.i11.i.i = inttoptr i64 %27 to i64*
  %get_rc_ptr.i12.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i, i64 -1
  %28 = load i64, i64* %get_rc_ptr.i12.i.i, align 8
  %.not.i.i13.i.i = icmp eq i64 %28, 0
  br i1 %.not.i.i13.i.i, label %"#Attr_#inc_16.exit", label %Then.i.i15.i.i

Then.i.i15.i.i:                                   ; preds = %modification_list_block.i14.i.i
  %29 = add nsw i64 %28, 1
  store i64 %29, i64* %get_rc_ptr.i12.i.i, align 8
  br label %"#Attr_#inc_16.exit"

"#Attr_#inc_16.exit":                             ; preds = %"#Attr_#inc_10.exit.i.i", %modification_list_block.i14.i.i, %Then.i.i15.i.i
  %30 = bitcast { [0 x i64], [3 x i64], i8, [7 x i8] }* %result_value.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %struct_field.i.i.i.i.sroa.0.0..sroa_idx = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 0, i32 0
  %struct_field.i.i.i.i.sroa.6.0..sroa_idx64 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 0, i32 1
  %struct_field.i.i.i.i.sroa.13.0..sroa_idx70 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 1, i32 1
  %struct_field.i.i.i.i.sroa.20.0..sroa_idx76 = getelementptr inbounds { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* %0, i64 0, i32 1, i32 2, i32 1
  %31 = bitcast { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i.i to i8*
  %tag_id_ptr10.i.i.i.i.i.i = getelementptr inbounds { [0 x i64], [1 x i64], i8, [7 x i8] }, { [0 x i64], [1 x i64], i8, [7 x i8] }* %result_value.i.i.i.i.i.i, i64 0, i32 2
  br label %joinpointcont.i.i.i.i

joinpointcont.i.i.i.i:                            ; preds = %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.i.i.i, %"#Attr_#inc_16.exit"
  %joinpointarg.i.i.i.i = phi i64 [ 0, %"#Attr_#inc_16.exit" ], [ %operation_result.i.i.i.i.i, %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.i.i.i ]
  %struct_field.i.i.i.i.sroa.0.0.copyload = load i8*, i8** %struct_field.i.i.i.i.sroa.0.0..sroa_idx, align 8
  %struct_field.i.i.i.i.sroa.6.0.copyload = load i64, i64* %struct_field.i.i.i.i.sroa.6.0..sroa_idx64, align 8
  %struct_field.i.i.i.i.sroa.7.0.copyload = load i64, i64* %struct_field1.sroa.237.0..sroa_idx38.i, align 8
  %struct_field.i.i.i.i.sroa.10.0.copyload = load i8*, i8** %struct_field1.sroa.3.0..sroa_idx39.i, align 8
  %struct_field.i.i.i.i.sroa.13.0.copyload = load i64, i64* %struct_field.i.i.i.i.sroa.13.0..sroa_idx70, align 8
  %struct_field.i.i.i.i.sroa.14.0.copyload = load i64, i64* %struct_field1.sroa.441.0..sroa_idx42.i, align 8
  %struct_field.i.i.i.i.sroa.17.0.copyload = load i8*, i8** %struct_field1.sroa.5.0..sroa_idx43.i, align 8
  %struct_field.i.i.i.i.sroa.20.0.copyload = load i64, i64* %struct_field.i.i.i.i.sroa.20.0..sroa_idx76, align 8
  %struct_field.i.i.i.i.sroa.21.0.copyload = load i64, i64* %struct_field1.sroa.645.0..sroa_idx46.i, align 8
  %"cap > 0.i.i.i.i.i.i.not" = icmp eq i64 %struct_field.i.i.i.i.sroa.7.0.copyload, 0
  br i1 %"cap > 0.i.i.i.i.i.i.not", label %"#Attr_#inc_9.exit.i.i.i.i.i", label %modification_list_block.i.i.i.i.i.i

modification_list_block.i.i.i.i.i.i:              ; preds = %joinpointcont.i.i.i.i
  %32 = ptrtoint i8* %struct_field.i.i.i.i.sroa.0.0.copyload to i64
  %33 = shl i64 %struct_field.i.i.i.i.sroa.7.0.copyload, 1
  %.not.i.i.i.i.i.i.i.i = icmp slt i64 %struct_field.i.i.i.i.sroa.7.0.copyload, 0
  %34 = select i1 %.not.i.i.i.i.i.i.i.i, i64 %33, i64 %32
  %as_usize_ptr.i.i.i.i.i.i = inttoptr i64 %34 to i64*
  %get_rc_ptr.i.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i.i.i, i64 -1
  %35 = load i64, i64* %get_rc_ptr.i.i.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i = icmp eq i64 %35, 0
  br i1 %.not.i.i.i.i.i.i.i, label %"#Attr_#inc_9.exit.i.i.i.i.i", label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %modification_list_block.i.i.i.i.i.i
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %get_rc_ptr.i.i.i.i.i.i, align 8
  br label %"#Attr_#inc_9.exit.i.i.i.i.i"

"#Attr_#inc_9.exit.i.i.i.i.i":                    ; preds = %Then.i.i.i.i.i.i.i, %modification_list_block.i.i.i.i.i.i, %joinpointcont.i.i.i.i
  %"cap > 0.i18.i.i.i.i.i.not" = icmp eq i64 %struct_field.i.i.i.i.sroa.14.0.copyload, 0
  br i1 %"cap > 0.i18.i.i.i.i.i.not", label %"#Attr_#inc_10.exit.i.i.i.i.i", label %modification_list_block.i27.i.i.i.i.i

modification_list_block.i27.i.i.i.i.i:            ; preds = %"#Attr_#inc_9.exit.i.i.i.i.i"
  %37 = ptrtoint i8* %struct_field.i.i.i.i.sroa.10.0.copyload to i64
  %38 = shl i64 %struct_field.i.i.i.i.sroa.14.0.copyload, 1
  %.not.i.i.i23.i.i.i.i.i = icmp slt i64 %struct_field.i.i.i.i.sroa.14.0.copyload, 0
  %39 = select i1 %.not.i.i.i23.i.i.i.i.i, i64 %38, i64 %37
  %as_usize_ptr.i24.i.i.i.i.i = inttoptr i64 %39 to i64*
  %get_rc_ptr.i25.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i24.i.i.i.i.i, i64 -1
  %40 = load i64, i64* %get_rc_ptr.i25.i.i.i.i.i, align 8
  %.not.i.i26.i.i.i.i.i = icmp eq i64 %40, 0
  br i1 %.not.i.i26.i.i.i.i.i, label %"#Attr_#inc_10.exit.i.i.i.i.i", label %Then.i.i28.i.i.i.i.i

Then.i.i28.i.i.i.i.i:                             ; preds = %modification_list_block.i27.i.i.i.i.i
  %41 = add nsw i64 %40, 1
  store i64 %41, i64* %get_rc_ptr.i25.i.i.i.i.i, align 8
  br label %"#Attr_#inc_10.exit.i.i.i.i.i"

"#Attr_#inc_10.exit.i.i.i.i.i":                   ; preds = %Then.i.i28.i.i.i.i.i, %modification_list_block.i27.i.i.i.i.i, %"#Attr_#inc_9.exit.i.i.i.i.i"
  %"cap > 0.i5.i.i.i.i.i.not" = icmp eq i64 %struct_field.i.i.i.i.sroa.21.0.copyload, 0
  br i1 %"cap > 0.i5.i.i.i.i.i.not", label %"#Attr_#inc_18.exit.i.i.i.i", label %modification_list_block.i14.i.i.i.i.i

modification_list_block.i14.i.i.i.i.i:            ; preds = %"#Attr_#inc_10.exit.i.i.i.i.i"
  %42 = ptrtoint i8* %struct_field.i.i.i.i.sroa.17.0.copyload to i64
  %43 = shl i64 %struct_field.i.i.i.i.sroa.21.0.copyload, 1
  %.not.i.i.i10.i.i.i.i.i = icmp slt i64 %struct_field.i.i.i.i.sroa.21.0.copyload, 0
  %44 = select i1 %.not.i.i.i10.i.i.i.i.i, i64 %43, i64 %42
  %as_usize_ptr.i11.i.i.i.i.i = inttoptr i64 %44 to i64*
  %get_rc_ptr.i12.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i11.i.i.i.i.i, i64 -1
  %45 = load i64, i64* %get_rc_ptr.i12.i.i.i.i.i, align 8
  %.not.i.i13.i.i.i.i.i = icmp eq i64 %45, 0
  br i1 %.not.i.i13.i.i.i.i.i, label %"#Attr_#inc_18.exit.i.i.i.i", label %Then.i.i15.i.i.i.i.i

Then.i.i15.i.i.i.i.i:                             ; preds = %modification_list_block.i14.i.i.i.i.i
  %46 = add nsw i64 %45, 1
  store i64 %46, i64* %get_rc_ptr.i12.i.i.i.i.i, align 8
  br label %"#Attr_#inc_18.exit.i.i.i.i"

"#Attr_#inc_18.exit.i.i.i.i":                     ; preds = %Then.i.i15.i.i.i.i.i, %modification_list_block.i14.i.i.i.i.i, %"#Attr_#inc_10.exit.i.i.i.i.i"
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %47 = insertvalue %list.RocList undef, i8* %struct_field.i.i.i.i.sroa.0.0.copyload, 0
  %48 = insertvalue %list.RocList %47, i64 %struct_field.i.i.i.i.sroa.6.0.copyload, 1
  %struct_field17.i.i.i.i.i.i = insertvalue %list.RocList %48, i64 %struct_field.i.i.i.i.sroa.7.0.copyload, 2
  %49 = insertvalue %list.RocList undef, i8* %struct_field.i.i.i.i.sroa.10.0.copyload, 0
  %50 = insertvalue %list.RocList %49, i64 %struct_field.i.i.i.i.sroa.13.0.copyload, 1
  %struct_field122.i.i.i.i.i.i = insertvalue %list.RocList %50, i64 %struct_field.i.i.i.i.sroa.14.0.copyload, 2
  %51 = insertvalue %list.RocList undef, i8* %struct_field.i.i.i.i.sroa.17.0.copyload, 0
  %52 = insertvalue %list.RocList %51, i64 %struct_field.i.i.i.i.sroa.20.0.copyload, 1
  %struct_field227.i.i.i.i.i.i = insertvalue %list.RocList %52, i64 %struct_field.i.i.i.i.sroa.21.0.copyload, 2
  %int_bitwise_or.i14.i.i = tail call i64 @llvm.fshl.i64(i64 %joinpointarg.i.i.i.i, i64 %joinpointarg.i.i.i.i, i64 32) #11
  %int_bitwise_xor.i.i.i.i = xor i64 %int_bitwise_or.i14.i.i, -1800455987208640293
  %inc_cast.i.i.i26.i.i.i = zext i64 %int_bitwise_xor.i.i.i.i to i128
  %int_bitwise_xor.i24.i.i.i = xor i64 %joinpointarg.i.i.i.i, xor (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64), i64 -6884282663029611473)
  %inc_cast.i9.i.i27.i.i.i = zext i64 %int_bitwise_xor.i24.i.i.i to i128
  %call.i.i.i28.i.i.i = mul nuw i128 %inc_cast.i.i.i26.i.i.i, %inc_cast.i9.i.i27.i.i.i
  %call.i.i.i28.i.i.masked.i = and i128 %call.i.i.i28.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i33.i.i.i = lshr i128 %call.i.i.i28.i.i.i, 64
  %inc_cast.i9.i.i12.i.i.i = xor i128 %call.i.i.i28.i.i.masked.i, %int_shift_right_zf.i.i.i33.i.i.i
  %call.i.i.i13.i.i.i = mul nuw i128 %inc_cast.i9.i.i12.i.i.i, 16646288086500911315
  %call.i.i.i13.i.i.masked.i = and i128 %call.i.i.i13.i.i.i, 18446744073709551615
  %int_shift_right_zf.i.i.i18.i.i.i = lshr i128 %call.i.i.i13.i.i.i, 64
  %inc_cast.i9.i.i.i.i.i = xor i128 %call.i.i.i13.i.i.masked.i, %int_shift_right_zf.i.i.i18.i.i.i
  %call.i.i.i.i.i.i = mul nuw i128 %inc_cast.i9.i.i.i.i.i, zext (i64 ptrtoint (i64 ()* @roc_builtins.utils.dict_pseudo_seed to i64) to i128)
  %int_shift_right_zf.i.i.i.i.i.i = lshr i128 %call.i.i.i.i.i.i, 64
  %int_bitwise_xor.i.i.i.i3.i = xor i128 %int_shift_right_zf.i.i.i.i.i.i, %call.i.i.i.i.i.i
  %int_bitwise_xor.i.i.i.i.i = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i64
  %int_shift_right_zf.i.i.i.i.i.i.i.i = lshr i64 %int_bitwise_xor.i.i.i.i.i, 7
  %53 = trunc i128 %int_bitwise_xor.i.i.i.i3.i to i8
  %inc_cast.i.i.i.i.i.i.i.i = and i8 %53, 127
  %int_shift_right_zf.i.i29.i.i.i.i.i.i = lshr i64 %struct_field.i.i.i.i.sroa.20.0.copyload, 3
  %call.i.i.i.i.i.i.i.i = tail call i64 @llvm.usub.sat.i64(i64 %int_shift_right_zf.i.i29.i.i.i.i.i.i, i64 1) #11
  %int_bitwise_and.i.i.i.i.i.i.i.i = and i64 %int_shift_right_zf.i.i.i.i.i.i.i.i, %call.i.i.i.i.i.i.i.i
  %insert_record_field.i28.i.i.i.i.i.i = insertvalue { i64, i64, i64 } zeroinitializer, i64 %call.i.i.i.i.i.i.i.i, 0
  %insert_record_field3.i.i.i.i.i.i.i = insertvalue { i64, i64, i64 } %insert_record_field.i28.i.i.i.i.i.i, i64 1, 1
  %insert_record_field4.i.i.i.i.i.i.i = insertvalue { i64, i64, i64 } %insert_record_field3.i.i.i.i.i.i.i, i64 %int_bitwise_and.i.i.i.i.i.i.i.i, 2
  call fastcc void @Dict_findIndexHelper_e47c9feb62d02dbc5afe27826eafa0261cd425616a549be729759631e1bdb82c(%list.RocList %struct_field227.i.i.i.i.i.i, %list.RocList %struct_field122.i.i.i.i.i.i, %list.RocList %struct_field17.i.i.i.i.i.i, i8 %inc_cast.i.i.i.i.i.i.i.i, i64 %joinpointarg.i.i.i.i, { i64, i64, i64 } %insert_record_field4.i.i.i.i.i.i.i, { [0 x i64], [1 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i.i.i) #11
  %load_tag_id.i.i.i.i.i.i = load i8, i8* %tag_id_ptr10.i.i.i.i.i.i, align 8
  %eq_u8.i.i.i.i.i.i = icmp eq i8 %load_tag_id.i.i.i.i.i.i, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br i1 %eq_u8.i.i.i.i.i.i, label %then_block.i.i.i.i, label %else_block.i.i.i.i

then_block.i.i.i.i:                               ; preds = %"#Attr_#inc_18.exit.i.i.i.i"
  %call.i.i.i.i.i = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %joinpointarg.i.i.i.i, i64 1) #11
  %has_overflowed.i.i.i.i.i = extractvalue { i64, i1 } %call.i.i.i.i.i, 1
  br i1 %has_overflowed.i.i.i.i.i, label %throw_block.i.i.i.i.i, label %Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.i.i.i

throw_block.i.i.i.i.i:                            ; preds = %then_block.i.i.i.i
  tail call fastcc void @throw_on_overflow() #11
  unreachable

Num_add_6c763c7e11e76d19bdce8bedd93ae12e7eca17fe7e641c1adddce72c5b366.exit.i.i.i.i: ; preds = %then_block.i.i.i.i
  %operation_result.i.i.i.i.i = extractvalue { i64, i1 } %call.i.i.i.i.i, 0
  br label %joinpointcont.i.i.i.i

else_block.i.i.i.i:                               ; preds = %"#Attr_#inc_18.exit.i.i.i.i"
  %struct_field3.unpack.i.i.i.i = load i8*, i8** %struct_field.elt.i, align 8
  %struct_field3.unpack6.i.i.i.i = load i64, i64* %struct_field.elt1.i, align 8
  %struct_field3.unpack8.i.i.i.i = load i64, i64* %struct_field.elt3.i, align 8
  br i1 %"cap > 0.i.i.i.i.i.i.not", label %"#Attr_#dec_18.exit.i.i.i.i", label %modification_list_block.i.i22.i.i.i.i

modification_list_block.i.i22.i.i.i.i:            ; preds = %else_block.i.i.i.i
  %54 = ptrtoint i8* %struct_field.i.i.i.i.sroa.0.0.copyload to i64
  %55 = shl i64 %struct_field.i.i.i.i.sroa.7.0.copyload, 1
  %.not.i.i.i.i19.i.i.i.i = icmp slt i64 %struct_field.i.i.i.i.sroa.7.0.copyload, 0
  %56 = select i1 %.not.i.i.i.i19.i.i.i.i, i64 %55, i64 %54
  %as_usize_ptr.i.i20.i.i.i.i = inttoptr i64 %56 to i64*
  %get_rc_ptr.i.i21.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i20.i.i.i.i, i64 -1
  %57 = load i64, i64* %get_rc_ptr.i.i21.i.i.i.i, align 8
  %.not.i.i.i.i.i.i.i.i.i = icmp eq i64 %57, 0
  br i1 %.not.i.i.i.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i.i.i.i", label %Then.i.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i.i:                           ; preds = %modification_list_block.i.i22.i.i.i.i
  %58 = add i64 %57, -1
  store i64 %58, i64* %get_rc_ptr.i.i21.i.i.i.i, align 8
  %59 = icmp eq i64 %57, -9223372036854775808
  br i1 %59, label %Then1.i.i.i.i.i.i.i.i.i, label %"#Attr_#dec_18.exit.i.i.i.i"

Then1.i.i.i.i.i.i.i.i.i:                          ; preds = %Then.i.i.i.i.i.i.i.i.i
  %60 = bitcast i64* %get_rc_ptr.i.i21.i.i.i.i to i8*
  tail call void @roc_dealloc(i8* %60, i32 8) #11
  br label %"#Attr_#dec_18.exit.i.i.i.i"

"#Attr_#dec_18.exit.i.i.i.i":                     ; preds = %modification_list_block.i.i22.i.i.i.i, %Then.i.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i.i, %else_block.i.i.i.i
  br i1 %"cap > 0.i18.i.i.i.i.i.not", label %"#Attr_#dec_10.exit.i.i.i.i", label %modification_list_block.i40.i.i.i.i

modification_list_block.i40.i.i.i.i:              ; preds = %"#Attr_#dec_18.exit.i.i.i.i"
  %61 = ptrtoint i8* %struct_field.i.i.i.i.sroa.10.0.copyload to i64
  %62 = shl i64 %struct_field.i.i.i.i.sroa.14.0.copyload, 1
  %.not.i.i.i36.i.i.i.i = icmp slt i64 %struct_field.i.i.i.i.sroa.14.0.copyload, 0
  %63 = select i1 %.not.i.i.i36.i.i.i.i, i64 %62, i64 %61
  %as_usize_ptr.i37.i.i.i.i = inttoptr i64 %63 to i64*
  %get_rc_ptr.i38.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i37.i.i.i.i, i64 -1
  %64 = load i64, i64* %get_rc_ptr.i38.i.i.i.i, align 8
  %.not.i.i.i.i39.i.i.i.i = icmp eq i64 %64, 0
  br i1 %.not.i.i.i.i39.i.i.i.i, label %"#Attr_#dec_10.exit.i.i.i.i", label %Then.i.i.i.i41.i.i.i.i

Then.i.i.i.i41.i.i.i.i:                           ; preds = %modification_list_block.i40.i.i.i.i
  %65 = add i64 %64, -1
  store i64 %65, i64* %get_rc_ptr.i38.i.i.i.i, align 8
  %66 = icmp eq i64 %64, -9223372036854775808
  br i1 %66, label %Then1.i.i.i.i42.i.i.i.i, label %"#Attr_#dec_10.exit.i.i.i.i"

Then1.i.i.i.i42.i.i.i.i:                          ; preds = %Then.i.i.i.i41.i.i.i.i
  %67 = bitcast i64* %get_rc_ptr.i38.i.i.i.i to i8*
  tail call void @roc_dealloc(i8* %67, i32 8) #11
  br label %"#Attr_#dec_10.exit.i.i.i.i"

"#Attr_#dec_10.exit.i.i.i.i":                     ; preds = %modification_list_block.i40.i.i.i.i, %Then.i.i.i.i41.i.i.i.i, %Then1.i.i.i.i42.i.i.i.i, %"#Attr_#dec_18.exit.i.i.i.i"
  br i1 %"cap > 0.i5.i.i.i.i.i.not", label %_46_2f925d7a7345a0d0d7b6216be4677183f7df6c1374cc9a7f73fd76448a9373.exit, label %modification_list_block.i.i.i.i.i

modification_list_block.i.i.i.i.i:                ; preds = %"#Attr_#dec_10.exit.i.i.i.i"
  %68 = ptrtoint i8* %struct_field.i.i.i.i.sroa.17.0.copyload to i64
  %69 = shl i64 %struct_field.i.i.i.i.sroa.21.0.copyload, 1
  %.not.i.i.i27.i.i.i.i = icmp slt i64 %struct_field.i.i.i.i.sroa.21.0.copyload, 0
  %70 = select i1 %.not.i.i.i27.i.i.i.i, i64 %69, i64 %68
  %as_usize_ptr.i.i.i.i.i = inttoptr i64 %70 to i64*
  %get_rc_ptr.i.i.i.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i.i.i.i, i64 -1
  %71 = load i64, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %.not.i.i.i.i28.i.i.i.i = icmp eq i64 %71, 0
  br i1 %.not.i.i.i.i28.i.i.i.i, label %_46_2f925d7a7345a0d0d7b6216be4677183f7df6c1374cc9a7f73fd76448a9373.exit, label %Then.i.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i.i:                             ; preds = %modification_list_block.i.i.i.i.i
  %72 = add i64 %71, -1
  store i64 %72, i64* %get_rc_ptr.i.i.i.i.i, align 8
  %73 = icmp eq i64 %71, -9223372036854775808
  br i1 %73, label %Then1.i.i.i.i.i.i.i.i, label %_46_2f925d7a7345a0d0d7b6216be4677183f7df6c1374cc9a7f73fd76448a9373.exit

Then1.i.i.i.i.i.i.i.i:                            ; preds = %Then.i.i.i.i.i.i.i.i
  %74 = bitcast i64* %get_rc_ptr.i.i.i.i.i to i8*
  tail call void @roc_dealloc(i8* %74, i32 8) #11
  br label %_46_2f925d7a7345a0d0d7b6216be4677183f7df6c1374cc9a7f73fd76448a9373.exit

_46_2f925d7a7345a0d0d7b6216be4677183f7df6c1374cc9a7f73fd76448a9373.exit: ; preds = %modification_list_block.i.i.i.i.i, %Then.i.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i.i, %"#Attr_#dec_10.exit.i.i.i.i"
  %75 = insertvalue %list.RocList undef, i8* %struct_field3.unpack.i.i.i.i, 0
  %76 = insertvalue %list.RocList %75, i64 %struct_field3.unpack6.i.i.i.i, 1
  %struct_field39.i.i.i.i = insertvalue %list.RocList %76, i64 %struct_field3.unpack8.i.i.i.i, 2
  call fastcc void @List_get_bda8b2e07052b2efc66a1e9f03e76f797cb87da45d821543a55583177338ade(%list.RocList %struct_field39.i.i.i.i, i64 %joinpointarg.i.i.i.i, { [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i) #11
  call fastcc void @Result_map_90b3fe129c388e5d6dcedb8e3da106e44c6f17686c9c54922c20c8b7ff65b0({ [0 x i64], [3 x i64], i8, [7 x i8] }* nonnull %result_value.i.i.i.i, i64 %joinpointarg.i.i.i.i, { [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i.i) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  call fastcc void @Result_mapErr_f3717d8d695ceecc8bdf05d2fa68cfb4e9074a591f91410b8cf55b1598d641({ [0 x i64], [4 x i64], i8, [7 x i8] }* nonnull %result_value.i.i, %str.RocStr* %1, { [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i.i) #11
  call fastcc void @Result_map_7df4baa6084d5ea4d0b2321a71ef6e3fe3e391864b9e2614493ae69a133e7({ [0 x i64], [7 x i64], i8, [7 x i8] }* nonnull %result_value1.i.i, { %list.RocList, { %list.RocList, %list.RocList, %list.RocList, i64 } }* nonnull %0, { [0 x i64], [13 x i64], i8, [7 x i8] }* nonnull %result_value) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  %77 = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %result_value to i8*
  %78 = bitcast { [0 x i64], [13 x i64], i8, [7 x i8] }* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(112) %78, i8* noundef nonnull align 8 dereferenceable(112) %77, i64 112, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_16_result_size() local_unnamed_addr #12 {
entry:
  ret i64 112
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_16_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn
define void @roc__mainForHost_12_caller({}* nocapture readnone %0, { [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture readonly %1, { [0 x i64], [9 x i64], i8, [7 x i8] }* nocapture %2) local_unnamed_addr #13 {
entry:
  %3 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %1 to i8*
  %4 = bitcast { [0 x i64], [9 x i64], i8, [7 x i8] }* %2 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(80) %4, i8* noundef nonnull align 8 dereferenceable(80) %3, i64 80, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_12_result_size() local_unnamed_addr #12 {
entry:
  ret i64 80
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_12_size() local_unnamed_addr #12 {
entry:
  ret i64 80
}

define void @roc__mainForHost_19_caller({}* nocapture readnone %0, { {}, {} }* nocapture readnone %1, %list.RocList* nocapture %2) local_unnamed_addr {
entry:
  %return_value.i.i.i.i = alloca %list.RocList, align 8
  %3 = bitcast %list.RocList* %return_value.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  call void @roc_fx_args(%list.RocList* nonnull %return_value.i.i.i.i)
  %read_result.i.i.i.i.elt = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i.i, i64 0, i32 0
  %read_result.i.i.i.i.unpack = load i8*, i8** %read_result.i.i.i.i.elt, align 8
  %read_result.i.i.i.i.elt2 = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i.i, i64 0, i32 1
  %read_result.i.i.i.i.unpack3 = load i64, i64* %read_result.i.i.i.i.elt2, align 8
  %read_result.i.i.i.i.elt4 = getelementptr inbounds %list.RocList, %list.RocList* %return_value.i.i.i.i, i64 0, i32 2
  %read_result.i.i.i.i.unpack5 = load i64, i64* %read_result.i.i.i.i.elt4, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3)
  %.repack = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 0
  store i8* %read_result.i.i.i.i.unpack, i8** %.repack, align 8
  %.repack7 = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 1
  store i64 %read_result.i.i.i.i.unpack3, i64* %.repack7, align 8
  %.repack9 = getelementptr inbounds %list.RocList, %list.RocList* %2, i64 0, i32 2
  store i64 %read_result.i.i.i.i.unpack5, i64* %.repack9, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_19_result_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_19_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: noreturn nounwind
define void @roc__mainForHost_18_caller({}* nocapture readnone %0, {}* nocapture readnone %1, %str.RocStr* nocapture readnone %2) local_unnamed_addr #14 {
entry:
  tail call fastcc void @_90_b3bb49567cdbb595b49369de8e1c42d7de76b24d02ede68adab215437b96c61()
  unreachable
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_18_result_size() local_unnamed_addr #12 {
entry:
  ret i64 24
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn
define i64 @roc__mainForHost_18_size() local_unnamed_addr #12 {
entry:
  ret i64 0
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_12"(%list.RocList %"#arg1") unnamed_addr #11 {
entry:
  %list_capacity_or_ref_ptr = extractvalue %list.RocList %"#arg1", 2
  %"cap > 0.not" = icmp eq i64 %list_capacity_or_ref_ptr, 0
  br i1 %"cap > 0.not", label %modify_rc_list_cont, label %modification_list_block

modification_list_block:                          ; preds = %entry
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0
  %0 = ptrtoint i8* %"#arg1.elt" to i64
  %1 = shl i64 %list_capacity_or_ref_ptr, 1
  %.not.i.i = icmp slt i64 %list_capacity_or_ref_ptr, 0
  %2 = select i1 %.not.i.i, i64 %1, i64 %0
  %as_usize_ptr = inttoptr i64 %2 to i64*
  %get_rc_ptr = getelementptr inbounds i64, i64* %as_usize_ptr, i64 -1
  %3 = load i64, i64* %get_rc_ptr, align 8
  %.not.i.i.i = icmp eq i64 %3, 0
  br i1 %.not.i.i.i, label %modify_rc_list_cont, label %Then.i.i.i

Then.i.i.i:                                       ; preds = %modification_list_block
  %4 = add i64 %3, -1
  store i64 %4, i64* %get_rc_ptr, align 8
  %5 = icmp eq i64 %3, -9223372036854775808
  br i1 %5, label %Then1.i.i.i, label %modify_rc_list_cont

Then1.i.i.i:                                      ; preds = %Then.i.i.i
  %6 = bitcast i64* %get_rc_ptr to i8*
  tail call void @roc_dealloc(i8* %6, i32 8) #11
  br label %modify_rc_list_cont

modify_rc_list_cont:                              ; preds = %Then1.i.i.i, %Then.i.i.i, %modification_list_block, %entry
  ret void
}

declare void @roc_fx_stdoutLine({ i8*, i64, i64 }*) local_unnamed_addr

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_33"({ [0 x i64], [4 x i64], i8, [7 x i8] }* nocapture readonly %"#arg1") unnamed_addr #11 {
entry:
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %cond = icmp eq i8 %load_tag_id, 1
  br i1 %cond, label %tag_id_modify, label %modify_rc_union_merge

modify_rc_union_merge:                            ; preds = %tag_id_modify, %Then1.i.i.i.i.i, %Then.i.i.i.i.i, %modification_list_block.i.i, %entry
  ret void

tag_id_modify:                                    ; preds = %entry
  %0 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 3
  %field_value.unpack2.unpack7 = load i64, i64* %0, align 8
  %"cap > 0.i.i.not" = icmp eq i64 %field_value.unpack2.unpack7, 0
  br i1 %"cap > 0.i.i.not", label %modify_rc_union_merge, label %modification_list_block.i.i

modification_list_block.i.i:                      ; preds = %tag_id_modify
  %field_value.elt1 = getelementptr inbounds { [0 x i64], [4 x i64], i8, [7 x i8] }, { [0 x i64], [4 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 1
  %field_value.unpack2.elt = bitcast i64* %field_value.elt1 to i8**
  %field_value.unpack2.unpack = load i8*, i8** %field_value.unpack2.elt, align 8
  %1 = ptrtoint i8* %field_value.unpack2.unpack to i64
  %2 = shl i64 %field_value.unpack2.unpack7, 1
  %.not.i.i.i.i = icmp slt i64 %field_value.unpack2.unpack7, 0
  %3 = select i1 %.not.i.i.i.i, i64 %2, i64 %1
  %as_usize_ptr.i.i = inttoptr i64 %3 to i64*
  %get_rc_ptr.i.i = getelementptr inbounds i64, i64* %as_usize_ptr.i.i, i64 -1
  %4 = load i64, i64* %get_rc_ptr.i.i, align 8
  %.not.i.i.i.i.i = icmp eq i64 %4, 0
  br i1 %.not.i.i.i.i.i, label %modify_rc_union_merge, label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modification_list_block.i.i
  %5 = add i64 %4, -1
  store i64 %5, i64* %get_rc_ptr.i.i, align 8
  %6 = icmp eq i64 %4, -9223372036854775808
  br i1 %6, label %Then1.i.i.i.i.i, label %modify_rc_union_merge

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  %7 = bitcast i64* %get_rc_ptr.i.i to i8*
  tail call void @roc_dealloc(i8* %7, i32 8) #11
  br label %modify_rc_union_merge
}

; Function Attrs: nounwind
define private fastcc void @"#Attr_#dec_35"({ [0 x i64], [8 x i64], i8, [7 x i8] }* nocapture readonly %"#arg1") unnamed_addr #11 {
entry:
  %incrementing_element_loop_load.i62 = alloca %str.RocStr, align 8
  %incrementing_element_loop_load.i = alloca %str.RocStr, align 8
  %struct_field.i46.i.i = alloca %str.RocStr, align 8
  %struct_field1.i.i.i = alloca %str.RocStr, align 8
  %tag_id_ptr = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 2
  %load_tag_id = load i8, i8* %tag_id_ptr, align 1
  %cond = icmp eq i8 %load_tag_id, 1
  br i1 %cond, label %tag_id_modify, label %modify_rc_union_merge

modify_rc_union_merge:                            ; preds = %tag_id_modify, %tag_id_modify9.i.i, %Then1.i.i.i.i43.i.i, %Then.i.i.i.i42.i.i, %modify_rc.i41.i.i, %tag_id_modify5.i.i, %Then1.i.i.i.i31.i.i, %Then.i.i.i.i30.i.i, %modify_rc.i29.i.i, %tag_id_modify1.i.i, %Then1.i.i.i.i.i.i, %Then.i.i.i.i.i.i, %modify_rc.i.i.i, %"#Attr_#dec_39.exit.i.i", %"#Attr_#dec_17.exit90", %"#Attr_#dec_38.exit.i.i", %tag_id_modify.i, %modify_rc.i.i, %Then.i.i.i.i.i, %Then1.i.i.i.i.i, %tag_id_modify1.i, %entry
  ret void

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1
  %tag_id_ptr.i = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 7
  %0 = bitcast i64* %tag_id_ptr.i to i8*
  %load_tag_id.i = load i8, i8* %0, align 1
  switch i8 %load_tag_id.i, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify.i
    i8 1, label %tag_id_modify1.i
  ]

tag_id_modify.i:                                  ; preds = %tag_id_modify
  %tag_id_ptr.i.i = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 6
  %1 = bitcast i64* %tag_id_ptr.i.i to i8*
  %load_tag_id.i.i = load i8, i8* %1, align 1
  switch i8 %load_tag_id.i.i, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify.i.i
    i8 1, label %tag_id_modify1.i.i
    i8 2, label %tag_id_modify5.i.i
    i8 3, label %tag_id_modify9.i.i
    i8 4, label %tag_id_modify13.i.i
    i8 5, label %tag_id_modify17.i.i
  ]

tag_id_modify.i.i:                                ; preds = %tag_id_modify.i
  %2 = bitcast %str.RocStr* %struct_field1.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #11
  %struct_field.i.i.i.elt = bitcast [8 x i64]* %field_ptr to i8**
  %struct_field.i.i.i.unpack = load i8*, i8** %struct_field.i.i.i.elt, align 8
  %3 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 1
  %struct_field.i.i.i.unpack46 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 2
  %struct_field.i.i.i.unpack48 = load i64, i64* %4, align 8
  %5 = bitcast %str.RocStr* %incrementing_element_loop_load.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %"cap > 0.not.i" = icmp eq i64 %struct_field.i.i.i.unpack48, 0
  br i1 %"cap > 0.not.i", label %"#Attr_#dec_17.exit", label %modification_list_block.i

modification_list_block.i:                        ; preds = %tag_id_modify.i.i
  %cast_basic_basic.i = bitcast i8* %struct_field.i.i.i.unpack to %str.RocStr*
  %bounds_check.not.i = icmp eq i64 %struct_field.i.i.i.unpack46, 0
  br i1 %bounds_check.not.i, label %after_loop.i, label %loop.preheader.i

loop.preheader.i:                                 ; preds = %modification_list_block.i
  %load_str_to_stack.i.elt9.i = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i, i64 0, i32 2
  br label %loop.i

loop.i:                                           ; preds = %"#Attr_#dec_4.exit.i", %loop.preheader.i
  %next_index12.i = phi i64 [ 0, %loop.preheader.i ], [ %next_index.i, %"#Attr_#dec_4.exit.i" ]
  %next_index.i = add nuw i64 %next_index12.i, 1
  %load_index.i = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i, i64 %next_index12.i
  %6 = bitcast %str.RocStr* %load_index.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %5, i8* noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i = load i64, i64* %load_str_to_stack.i.elt9.i, align 8
  %is_big_str.i.i55 = icmp sgt i64 %load_str_to_stack.i.unpack10.i, 0
  br i1 %is_big_str.i.i55, label %modify_rc.i.i59, label %"#Attr_#dec_4.exit.i"

modify_rc.i.i59:                                  ; preds = %loop.i
  %call_builtin.i.i56 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i) #11
  %get_rc_ptr.i.i57 = getelementptr inbounds i8, i8* %call_builtin.i.i56, i64 -8
  %7 = bitcast i8* %get_rc_ptr.i.i57 to i64*
  %8 = load i64, i64* %7, align 8
  %.not.i.i.i.i.i58 = icmp eq i64 %8, 0
  br i1 %.not.i.i.i.i.i58, label %"#Attr_#dec_4.exit.i", label %Then.i.i.i.i.i60

Then.i.i.i.i.i60:                                 ; preds = %modify_rc.i.i59
  %9 = add i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %8, -9223372036854775808
  br i1 %10, label %Then1.i.i.i.i.i61, label %"#Attr_#dec_4.exit.i"

Then1.i.i.i.i.i61:                                ; preds = %Then.i.i.i.i.i60
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i57, i32 8) #11
  br label %"#Attr_#dec_4.exit.i"

"#Attr_#dec_4.exit.i":                            ; preds = %Then1.i.i.i.i.i61, %Then.i.i.i.i.i60, %modify_rc.i.i59, %loop.i
  %exitcond.not = icmp eq i64 %next_index.i, %struct_field.i.i.i.unpack46
  br i1 %exitcond.not, label %after_loop.i, label %loop.i

after_loop.i:                                     ; preds = %"#Attr_#dec_4.exit.i", %modification_list_block.i
  %11 = ptrtoint i8* %struct_field.i.i.i.unpack to i64
  %12 = shl i64 %struct_field.i.i.i.unpack48, 1
  %.not.i.i.i = icmp slt i64 %struct_field.i.i.i.unpack48, 0
  %13 = select i1 %.not.i.i.i, i64 %12, i64 %11
  %as_usize_ptr.i = inttoptr i64 %13 to i64*
  %get_rc_ptr.i = getelementptr inbounds i64, i64* %as_usize_ptr.i, i64 -1
  %14 = load i64, i64* %get_rc_ptr.i, align 8
  %.not.i.i.i.i = icmp eq i64 %14, 0
  br i1 %.not.i.i.i.i, label %"#Attr_#dec_17.exit", label %Then.i.i.i.i

Then.i.i.i.i:                                     ; preds = %after_loop.i
  %15 = add i64 %14, -1
  store i64 %15, i64* %get_rc_ptr.i, align 8
  %16 = icmp eq i64 %14, -9223372036854775808
  br i1 %16, label %Then1.i.i.i.i, label %"#Attr_#dec_17.exit"

Then1.i.i.i.i:                                    ; preds = %Then.i.i.i.i
  %17 = bitcast i64* %get_rc_ptr.i to i8*
  tail call void @roc_dealloc(i8* %17, i32 8) #11
  br label %"#Attr_#dec_17.exit"

"#Attr_#dec_17.exit":                             ; preds = %tag_id_modify.i.i, %after_loop.i, %Then.i.i.i.i, %Then1.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  %struct_field_access_record_1.i.i.i = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 3
  %18 = bitcast i64* %struct_field_access_record_1.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %2, i8* noundef nonnull align 8 dereferenceable(24) %18, i64 24, i1 false) #11
  %load_str_to_stack.i.i.i.i.elt52 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field1.i.i.i, i64 0, i32 2
  %load_str_to_stack.i.i.i.i.unpack53 = load i64, i64* %load_str_to_stack.i.i.i.i.elt52, align 8
  %is_big_str.i.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.i.unpack53, 0
  br i1 %is_big_str.i.i.i.i, label %modify_rc.i.i.i.i, label %"#Attr_#dec_38.exit.i.i"

modify_rc.i.i.i.i:                                ; preds = %"#Attr_#dec_17.exit"
  %call_builtin.i.i.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field1.i.i.i) #11
  %get_rc_ptr.i.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i.i, i64 -8
  %19 = bitcast i8* %get_rc_ptr.i.i.i.i to i64*
  %20 = load i64, i64* %19, align 8
  %.not.i.i.i.i.i.i.i = icmp eq i64 %20, 0
  br i1 %.not.i.i.i.i.i.i.i, label %"#Attr_#dec_38.exit.i.i", label %Then.i.i.i.i.i.i.i

Then.i.i.i.i.i.i.i:                               ; preds = %modify_rc.i.i.i.i
  %21 = add i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %20, -9223372036854775808
  br i1 %22, label %Then1.i.i.i.i.i.i.i, label %"#Attr_#dec_38.exit.i.i"

Then1.i.i.i.i.i.i.i:                              ; preds = %Then.i.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i.i, i32 8) #11
  br label %"#Attr_#dec_38.exit.i.i"

"#Attr_#dec_38.exit.i.i":                         ; preds = %modify_rc.i.i.i.i, %Then.i.i.i.i.i.i.i, %Then1.i.i.i.i.i.i.i, %"#Attr_#dec_17.exit"
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #11
  br label %modify_rc_union_merge

tag_id_modify1.i.i:                               ; preds = %tag_id_modify.i
  %23 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.i.unpack43 = load i64, i64* %23, align 8
  %is_big_str.i.i.i = icmp sgt i64 %load_str_to_stack.i.i.i.unpack43, 0
  br i1 %is_big_str.i.i.i, label %modify_rc.i.i.i, label %modify_rc_union_merge

modify_rc.i.i.i:                                  ; preds = %tag_id_modify1.i.i
  %modify_tag_field4.i.i = bitcast [8 x i64]* %field_ptr to %str.RocStr*
  %call_builtin.i.i.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field4.i.i) #11
  %get_rc_ptr.i.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i.i, i64 -8
  %24 = bitcast i8* %get_rc_ptr.i.i.i to i64*
  %25 = load i64, i64* %24, align 8
  %.not.i.i.i.i.i.i = icmp eq i64 %25, 0
  br i1 %.not.i.i.i.i.i.i, label %modify_rc_union_merge, label %Then.i.i.i.i.i.i

Then.i.i.i.i.i.i:                                 ; preds = %modify_rc.i.i.i
  %26 = add i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %25, -9223372036854775808
  br i1 %27, label %Then1.i.i.i.i.i.i, label %modify_rc_union_merge

Then1.i.i.i.i.i.i:                                ; preds = %Then.i.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i.i, i32 8) #11
  br label %modify_rc_union_merge

tag_id_modify5.i.i:                               ; preds = %tag_id_modify.i
  %28 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 2
  %load_str_to_stack.i22.i.i.unpack38 = load i64, i64* %28, align 8
  %is_big_str.i24.i.i = icmp sgt i64 %load_str_to_stack.i22.i.i.unpack38, 0
  br i1 %is_big_str.i24.i.i, label %modify_rc.i29.i.i, label %modify_rc_union_merge

modify_rc.i29.i.i:                                ; preds = %tag_id_modify5.i.i
  %modify_tag_field8.i.i = bitcast [8 x i64]* %field_ptr to %str.RocStr*
  %call_builtin.i25.i.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field8.i.i) #11
  %get_rc_ptr.i27.i.i = getelementptr inbounds i8, i8* %call_builtin.i25.i.i, i64 -8
  %29 = bitcast i8* %get_rc_ptr.i27.i.i to i64*
  %30 = load i64, i64* %29, align 8
  %.not.i.i.i.i28.i.i = icmp eq i64 %30, 0
  br i1 %.not.i.i.i.i28.i.i, label %modify_rc_union_merge, label %Then.i.i.i.i30.i.i

Then.i.i.i.i30.i.i:                               ; preds = %modify_rc.i29.i.i
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %30, -9223372036854775808
  br i1 %32, label %Then1.i.i.i.i31.i.i, label %modify_rc_union_merge

Then1.i.i.i.i31.i.i:                              ; preds = %Then.i.i.i.i30.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i27.i.i, i32 8) #11
  br label %modify_rc_union_merge

tag_id_modify9.i.i:                               ; preds = %tag_id_modify.i
  %33 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 2
  %load_str_to_stack.i34.i.i.unpack33 = load i64, i64* %33, align 8
  %is_big_str.i36.i.i = icmp sgt i64 %load_str_to_stack.i34.i.i.unpack33, 0
  br i1 %is_big_str.i36.i.i, label %modify_rc.i41.i.i, label %modify_rc_union_merge

modify_rc.i41.i.i:                                ; preds = %tag_id_modify9.i.i
  %modify_tag_field12.i.i = bitcast [8 x i64]* %field_ptr to %str.RocStr*
  %call_builtin.i37.i.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field12.i.i) #11
  %get_rc_ptr.i39.i.i = getelementptr inbounds i8, i8* %call_builtin.i37.i.i, i64 -8
  %34 = bitcast i8* %get_rc_ptr.i39.i.i to i64*
  %35 = load i64, i64* %34, align 8
  %.not.i.i.i.i40.i.i = icmp eq i64 %35, 0
  br i1 %.not.i.i.i.i40.i.i, label %modify_rc_union_merge, label %Then.i.i.i.i42.i.i

Then.i.i.i.i42.i.i:                               ; preds = %modify_rc.i41.i.i
  %36 = add i64 %35, -1
  store i64 %36, i64* %34, align 8
  %37 = icmp eq i64 %35, -9223372036854775808
  br i1 %37, label %Then1.i.i.i.i43.i.i, label %modify_rc_union_merge

Then1.i.i.i.i43.i.i:                              ; preds = %Then.i.i.i.i42.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i39.i.i, i32 8) #11
  br label %modify_rc_union_merge

tag_id_modify13.i.i:                              ; preds = %tag_id_modify.i
  %field_value.i.i.elt = bitcast [8 x i64]* %field_ptr to i8**
  %field_value.i.i.unpack = load i8*, i8** %field_value.i.i.elt, align 8
  %38 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 1
  %field_value.i.i.unpack26 = load i64, i64* %38, align 8
  %39 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 2
  %field_value.i.i.unpack28 = load i64, i64* %39, align 8
  %40 = bitcast %str.RocStr* %incrementing_element_loop_load.i62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  %"cap > 0.not.i63" = icmp eq i64 %field_value.i.i.unpack28, 0
  br i1 %"cap > 0.not.i63", label %"#Attr_#dec_17.exit90", label %modification_list_block.i66

modification_list_block.i66:                      ; preds = %tag_id_modify13.i.i
  %cast_basic_basic.i64 = bitcast i8* %field_value.i.i.unpack to %str.RocStr*
  %bounds_check.not.i65 = icmp eq i64 %field_value.i.i.unpack26, 0
  br i1 %bounds_check.not.i65, label %after_loop.i87, label %loop.preheader.i68

loop.preheader.i68:                               ; preds = %modification_list_block.i66
  %load_str_to_stack.i.elt9.i67 = getelementptr inbounds %str.RocStr, %str.RocStr* %incrementing_element_loop_load.i62, i64 0, i32 2
  br label %loop.i74

loop.i74:                                         ; preds = %"#Attr_#dec_4.exit.i82", %loop.preheader.i68
  %next_index12.i69 = phi i64 [ 0, %loop.preheader.i68 ], [ %next_index.i70, %"#Attr_#dec_4.exit.i82" ]
  %next_index.i70 = add nuw i64 %next_index12.i69, 1
  %load_index.i71 = getelementptr inbounds %str.RocStr, %str.RocStr* %cast_basic_basic.i64, i64 %next_index12.i69
  %41 = bitcast %str.RocStr* %load_index.i71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %40, i8* noundef nonnull align 8 dereferenceable(24) %41, i64 24, i1 false) #11
  %load_str_to_stack.i.unpack10.i72 = load i64, i64* %load_str_to_stack.i.elt9.i67, align 8
  %is_big_str.i.i73 = icmp sgt i64 %load_str_to_stack.i.unpack10.i72, 0
  br i1 %is_big_str.i.i73, label %modify_rc.i.i78, label %"#Attr_#dec_4.exit.i82"

modify_rc.i.i78:                                  ; preds = %loop.i74
  %call_builtin.i.i75 = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %incrementing_element_loop_load.i62) #11
  %get_rc_ptr.i.i76 = getelementptr inbounds i8, i8* %call_builtin.i.i75, i64 -8
  %42 = bitcast i8* %get_rc_ptr.i.i76 to i64*
  %43 = load i64, i64* %42, align 8
  %.not.i.i.i.i.i77 = icmp eq i64 %43, 0
  br i1 %.not.i.i.i.i.i77, label %"#Attr_#dec_4.exit.i82", label %Then.i.i.i.i.i79

Then.i.i.i.i.i79:                                 ; preds = %modify_rc.i.i78
  %44 = add i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp eq i64 %43, -9223372036854775808
  br i1 %45, label %Then1.i.i.i.i.i80, label %"#Attr_#dec_4.exit.i82"

Then1.i.i.i.i.i80:                                ; preds = %Then.i.i.i.i.i79
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i76, i32 8) #11
  br label %"#Attr_#dec_4.exit.i82"

"#Attr_#dec_4.exit.i82":                          ; preds = %Then1.i.i.i.i.i80, %Then.i.i.i.i.i79, %modify_rc.i.i78, %loop.i74
  %exitcond91.not = icmp eq i64 %next_index.i70, %field_value.i.i.unpack26
  br i1 %exitcond91.not, label %after_loop.i87, label %loop.i74

after_loop.i87:                                   ; preds = %"#Attr_#dec_4.exit.i82", %modification_list_block.i66
  %46 = ptrtoint i8* %field_value.i.i.unpack to i64
  %47 = shl i64 %field_value.i.i.unpack28, 1
  %.not.i.i.i83 = icmp slt i64 %field_value.i.i.unpack28, 0
  %48 = select i1 %.not.i.i.i83, i64 %47, i64 %46
  %as_usize_ptr.i84 = inttoptr i64 %48 to i64*
  %get_rc_ptr.i85 = getelementptr inbounds i64, i64* %as_usize_ptr.i84, i64 -1
  %49 = load i64, i64* %get_rc_ptr.i85, align 8
  %.not.i.i.i.i86 = icmp eq i64 %49, 0
  br i1 %.not.i.i.i.i86, label %"#Attr_#dec_17.exit90", label %Then.i.i.i.i88

Then.i.i.i.i88:                                   ; preds = %after_loop.i87
  %50 = add i64 %49, -1
  store i64 %50, i64* %get_rc_ptr.i85, align 8
  %51 = icmp eq i64 %49, -9223372036854775808
  br i1 %51, label %Then1.i.i.i.i89, label %"#Attr_#dec_17.exit90"

Then1.i.i.i.i89:                                  ; preds = %Then.i.i.i.i88
  %52 = bitcast i64* %get_rc_ptr.i85 to i8*
  tail call void @roc_dealloc(i8* %52, i32 8) #11
  br label %"#Attr_#dec_17.exit90"

"#Attr_#dec_17.exit90":                           ; preds = %tag_id_modify13.i.i, %after_loop.i87, %Then.i.i.i.i88, %Then1.i.i.i.i89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  br label %modify_rc_union_merge

tag_id_modify17.i.i:                              ; preds = %tag_id_modify.i
  %.elt = bitcast [8 x i64]* %field_ptr to i8**
  %.unpack = load i8*, i8** %.elt, align 8
  %53 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 1
  %.unpack12 = load i64, i64* %53, align 8
  %54 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 2
  %.unpack14 = load i64, i64* %54, align 8
  %55 = bitcast %str.RocStr* %struct_field.i46.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  %struct_field.i46.i.i.repack = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i46.i.i, i64 0, i32 0
  store i8* %.unpack, i8** %struct_field.i46.i.i.repack, align 8
  %struct_field.i46.i.i.repack16 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i46.i.i, i64 0, i32 1
  store i64 %.unpack12, i64* %struct_field.i46.i.i.repack16, align 8
  %struct_field.i46.i.i.repack18 = getelementptr inbounds %str.RocStr, %str.RocStr* %struct_field.i46.i.i, i64 0, i32 2
  store i64 %.unpack14, i64* %struct_field.i46.i.i.repack18, align 8
  %is_big_str.i.i50.i.i = icmp sgt i64 %.unpack14, 0
  br i1 %is_big_str.i.i50.i.i, label %modify_rc.i.i55.i.i, label %"#Attr_#dec_39.exit.i.i"

modify_rc.i.i55.i.i:                              ; preds = %tag_id_modify17.i.i
  %call_builtin.i.i51.i.i = call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %struct_field.i46.i.i) #11
  %get_rc_ptr.i.i53.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i51.i.i, i64 -8
  %56 = bitcast i8* %get_rc_ptr.i.i53.i.i to i64*
  %57 = load i64, i64* %56, align 8
  %.not.i.i.i.i.i54.i.i = icmp eq i64 %57, 0
  br i1 %.not.i.i.i.i.i54.i.i, label %"#Attr_#dec_39.exit.i.i", label %Then.i.i.i.i.i56.i.i

Then.i.i.i.i.i56.i.i:                             ; preds = %modify_rc.i.i55.i.i
  %58 = add i64 %57, -1
  store i64 %58, i64* %56, align 8
  %59 = icmp eq i64 %57, -9223372036854775808
  br i1 %59, label %Then1.i.i.i.i.i57.i.i, label %"#Attr_#dec_39.exit.i.i"

Then1.i.i.i.i.i57.i.i:                            ; preds = %Then.i.i.i.i.i56.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i53.i.i, i32 8) #11
  br label %"#Attr_#dec_39.exit.i.i"

"#Attr_#dec_39.exit.i.i":                         ; preds = %modify_rc.i.i55.i.i, %Then.i.i.i.i.i56.i.i, %Then1.i.i.i.i.i57.i.i, %tag_id_modify17.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  br label %modify_rc_union_merge

tag_id_modify1.i:                                 ; preds = %tag_id_modify
  %60 = getelementptr inbounds { [0 x i64], [8 x i64], i8, [7 x i8] }, { [0 x i64], [8 x i64], i8, [7 x i8] }* %"#arg1", i64 0, i32 1, i64 2
  %load_str_to_stack.i.i.unpack9 = load i64, i64* %60, align 8
  %is_big_str.i.i = icmp sgt i64 %load_str_to_stack.i.i.unpack9, 0
  br i1 %is_big_str.i.i, label %modify_rc.i.i, label %modify_rc_union_merge

modify_rc.i.i:                                    ; preds = %tag_id_modify1.i
  %modify_tag_field4.i = bitcast [8 x i64]* %field_ptr to %str.RocStr*
  %call_builtin.i.i = tail call fastcc i8* @roc_builtins.str.refcount_ptr(%str.RocStr* nocapture nonnull readonly %modify_tag_field4.i) #11
  %get_rc_ptr.i.i = getelementptr inbounds i8, i8* %call_builtin.i.i, i64 -8
  %61 = bitcast i8* %get_rc_ptr.i.i to i64*
  %62 = load i64, i64* %61, align 8
  %.not.i.i.i.i.i = icmp eq i64 %62, 0
  br i1 %.not.i.i.i.i.i, label %modify_rc_union_merge, label %Then.i.i.i.i.i

Then.i.i.i.i.i:                                   ; preds = %modify_rc.i.i
  %63 = add i64 %62, -1
  store i64 %63, i64* %61, align 8
  %64 = icmp eq i64 %62, -9223372036854775808
  br i1 %64, label %Then1.i.i.i.i.i, label %modify_rc_union_merge

Then1.i.i.i.i.i:                                  ; preds = %Then.i.i.i.i.i
  tail call void @roc_dealloc(i8* %get_rc_ptr.i.i, i32 8) #11
  br label %modify_rc_union_merge
}

declare void @roc_fx_args(%list.RocList* sret(%list.RocList)) local_unnamed_addr

attributes #0 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nobuiltin nounwind "target-cpu"="generic" "target-features"="-a65,-a76,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-apple-a12,-apple-a13,-apple-a7,-arith-bcc-fusion,-arith-cbz-fusion,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-a78c,-cortex-r82,-crc,-crypto,-custom-cheap-as-move,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,+ete,-exynos-cheap-as-move,-exynosm4,-f32mm,-f64mm,-fgt,-flagm,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hcx,-i8mm,-jsconv,-lor,-ls64,-lse,-lsl-fast,-mpam,-mte,+neon,-neoversee1,-neoversen1,-neoversen2,-neoversev1,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,+perfmon,-pmu,-predictable-select-expensive,-predres,-rand,-ras,-rcpc,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme-f64,-sme-i64,-spe,-spe-eef,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-tagged-globals,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8r,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #3 = { nobuiltin nofree norecurse nosync nounwind readonly "target-cpu"="generic" "target-features"="-a65,-a76,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-apple-a12,-apple-a13,-apple-a7,-arith-bcc-fusion,-arith-cbz-fusion,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-a78c,-cortex-r82,-crc,-crypto,-custom-cheap-as-move,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,+ete,-exynos-cheap-as-move,-exynosm4,-f32mm,-f64mm,-fgt,-flagm,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hcx,-i8mm,-jsconv,-lor,-ls64,-lse,-lsl-fast,-mpam,-mte,+neon,-neoversee1,-neoversen1,-neoversen2,-neoversev1,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,+perfmon,-pmu,-predictable-select-expensive,-predres,-rand,-ras,-rcpc,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme-f64,-sme-i64,-spe,-spe-eef,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-tagged-globals,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8r,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #4 = { mustprogress nobuiltin nofree norecurse nosync nounwind readonly willreturn "target-cpu"="generic" "target-features"="-a65,-a76,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-apple-a12,-apple-a13,-apple-a7,-arith-bcc-fusion,-arith-cbz-fusion,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-a78c,-cortex-r82,-crc,-crypto,-custom-cheap-as-move,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,+ete,-exynos-cheap-as-move,-exynosm4,-f32mm,-f64mm,-fgt,-flagm,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hcx,-i8mm,-jsconv,-lor,-ls64,-lse,-lsl-fast,-mpam,-mte,+neon,-neoversee1,-neoversen1,-neoversen2,-neoversev1,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,+perfmon,-pmu,-predictable-select-expensive,-predres,-rand,-ras,-rcpc,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme-f64,-sme-i64,-spe,-spe-eef,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-tagged-globals,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8r,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #5 = { mustprogress nobuiltin nofree norecurse nosync nounwind readnone willreturn "target-cpu"="generic" "target-features"="-a65,-a76,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-apple-a12,-apple-a13,-apple-a7,-arith-bcc-fusion,-arith-cbz-fusion,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-a78c,-cortex-r82,-crc,-crypto,-custom-cheap-as-move,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,+ete,-exynos-cheap-as-move,-exynosm4,-f32mm,-f64mm,-fgt,-flagm,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hcx,-i8mm,-jsconv,-lor,-ls64,-lse,-lsl-fast,-mpam,-mte,+neon,-neoversee1,-neoversen1,-neoversen2,-neoversev1,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,+perfmon,-pmu,-predictable-select-expensive,-predres,-rand,-ras,-rcpc,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme-f64,-sme-i64,-spe,-spe-eef,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-tagged-globals,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8r,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #6 = { nobuiltin noreturn nounwind "target-cpu"="generic" "target-features"="-a65,-a76,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-apple-a12,-apple-a13,-apple-a7,-arith-bcc-fusion,-arith-cbz-fusion,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-a78c,-cortex-r82,-crc,-crypto,-custom-cheap-as-move,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,+ete,-exynos-cheap-as-move,-exynosm4,-f32mm,-f64mm,-fgt,-flagm,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hcx,-i8mm,-jsconv,-lor,-ls64,-lse,-lsl-fast,-mpam,-mte,+neon,-neoversee1,-neoversen1,-neoversen2,-neoversev1,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,+perfmon,-pmu,-predictable-select-expensive,-predres,-rand,-ras,-rcpc,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme-f64,-sme-i64,-spe,-spe-eef,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-tagged-globals,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8r,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #7 = { nobuiltin nofree nosync nounwind "target-cpu"="generic" "target-features"="-a65,-a76,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-apple-a12,-apple-a13,-apple-a7,-arith-bcc-fusion,-arith-cbz-fusion,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-a78c,-cortex-r82,-crc,-crypto,-custom-cheap-as-move,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,+ete,-exynos-cheap-as-move,-exynosm4,-f32mm,-f64mm,-fgt,-flagm,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hcx,-i8mm,-jsconv,-lor,-ls64,-lse,-lsl-fast,-mpam,-mte,+neon,-neoversee1,-neoversen1,-neoversen2,-neoversev1,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,+perfmon,-pmu,-predictable-select-expensive,-predres,-rand,-ras,-rcpc,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme-f64,-sme-i64,-spe,-spe-eef,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-tagged-globals,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8r,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #8 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #9 = { inaccessiblememonly mustprogress nofree nosync nounwind willreturn }
attributes #10 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #11 = { nounwind }
attributes #12 = { mustprogress nofree norecurse nosync nounwind readnone willreturn }
attributes #13 = { mustprogress nofree nosync nounwind willreturn }
attributes #14 = { noreturn nounwind }
attributes #15 = { cold noinline noreturn nounwind }
attributes #16 = { mustprogress nofree norecurse nosync nounwind willreturn }

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 2, !"Dwarf Version", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"str.strConcat: argument 0"}
!6 = distinct !{!6, !"str.strConcat"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"str.RocStr.reallocate: argument 0"}
!9 = distinct !{!9, !"str.RocStr.reallocate"}
!10 = !{!8, !5}
!11 = !{!12}
!12 = distinct !{!12, !13, !"str.RocStr.allocate: argument 0"}
!13 = distinct !{!13, !"str.RocStr.allocate"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"str.RocStr.allocateBig: argument 0"}
!16 = distinct !{!16, !"str.RocStr.allocateBig"}
!17 = !{!15, !12, !18, !8, !5}
!18 = distinct !{!18, !19, !"str.RocStr.reallocateFresh: argument 0"}
!19 = distinct !{!19, !"str.RocStr.reallocateFresh"}
!20 = !{!15, !12}
!21 = !{!18, !8, !5}
!22 = !{!23}
!23 = distinct !{!23, !24, !"str.RocStr.allocate: argument 0"}
!24 = distinct !{!24, !"str.RocStr.allocate"}
!25 = !{!26, !8, !5}
!26 = distinct !{!26, !27, !"str.RocStr.reallocateFresh: argument 0"}
!27 = distinct !{!27, !"str.RocStr.reallocateFresh"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"str.RocStr.allocateBig: argument 0"}
!30 = distinct !{!30, !"str.RocStr.allocateBig"}
!31 = !{!29, !23, !26, !8, !5}
!32 = !{!29, !23}
!33 = !{!34}
!34 = distinct !{!34, !35, !"str.strJoinWith: argument 0"}
!35 = distinct !{!35, !"str.strJoinWith"}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.isvectorized", i32 1}
!38 = !{!39, !34}
!39 = distinct !{!39, !40, !"str.RocStr.empty: argument 0"}
!40 = distinct !{!40, !"str.RocStr.empty"}
!41 = distinct !{!41, !37}
!42 = !{!43}
!43 = distinct !{!43, !44, !"str.RocStr.allocate: argument 0"}
!44 = distinct !{!44, !"str.RocStr.allocate"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"str.RocStr.allocateBig: argument 0"}
!47 = distinct !{!47, !"str.RocStr.allocateBig"}
!48 = !{!46, !43, !34}
!49 = !{!46, !43}
!50 = !{!51}
!51 = distinct !{!51, !52, !"str.strToBytes: argument 0"}
!52 = distinct !{!52, !"str.strToBytes"}
!53 = !{!54, !51}
!54 = distinct !{!54, !55, !"list.RocList.empty: argument 0"}
!55 = distinct !{!55, !"list.RocList.empty"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"str.fromUtf8Range: argument 0"}
!58 = distinct !{!58, !"str.fromUtf8Range"}
!59 = !{!60, !57}
!60 = distinct !{!60, !61, !"str.RocStr.empty: argument 0"}
!61 = distinct !{!61, !"str.RocStr.empty"}
!62 = !{!63, !57}
!63 = distinct !{!63, !64, !"std.unicode.utf8Decode: argument 0"}
!64 = distinct !{!64, !"std.unicode.utf8Decode"}
!65 = !{!66, !57}
!66 = distinct !{!66, !67, !"std.unicode.utf8Decode3: argument 0"}
!67 = distinct !{!67, !"std.unicode.utf8Decode3"}
!68 = !{!69, !57}
!69 = distinct !{!69, !70, !"std.unicode.utf8Decode4: argument 0"}
!70 = distinct !{!70, !"std.unicode.utf8Decode4"}
!71 = !{!72, !57}
!72 = distinct !{!72, !73, !"str.RocStr.fromSubListUnsafe: argument 0"}
!73 = distinct !{!73, !"str.RocStr.fromSubListUnsafe"}
!74 = !{!75, !77, !57}
!75 = distinct !{!75, !76, !"str.numberOfNextCodepointBytes: argument 0"}
!76 = distinct !{!76, !"str.numberOfNextCodepointBytes"}
!77 = distinct !{!77, !78, !"str.errorToProblem: argument 0"}
!78 = distinct !{!78, !"str.errorToProblem"}
!79 = !{!80, !75, !77, !57}
!80 = distinct !{!80, !81, !"std.unicode.utf8Decode: argument 0"}
!81 = distinct !{!81, !"std.unicode.utf8Decode"}
!82 = !{!83, !75, !77, !57}
!83 = distinct !{!83, !84, !"std.unicode.utf8Decode3: argument 0"}
!84 = distinct !{!84, !"std.unicode.utf8Decode3"}
!85 = !{!86, !75, !77, !57}
!86 = distinct !{!86, !87, !"std.unicode.utf8Decode4: argument 0"}
!87 = distinct !{!87, !"std.unicode.utf8Decode4"}
!88 = !{!89, !57}
!89 = distinct !{!89, !90, !"str.RocStr.empty: argument 0"}
!90 = distinct !{!90, !"str.RocStr.empty"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"str.RocStr.allocate: argument 0"}
!93 = distinct !{!93, !"str.RocStr.allocate"}
!94 = !{!95}
!95 = distinct !{!95, !96, !"str.RocStr.allocateBig: argument 0"}
!96 = distinct !{!96, !"str.RocStr.allocateBig"}
!97 = !{!95, !92}
!98 = !{i64 0, i64 65}
!99 = !{!100}
!100 = distinct !{!100, !101, !"libc.musl.memcpy.fallback_memcpy: argument 0"}
!101 = distinct !{!101, !"libc.musl.memcpy.fallback_memcpy"}
!102 = !{!103}
!103 = distinct !{!103, !101, !"libc.musl.memcpy.fallback_memcpy: argument 1"}
!104 = distinct !{!104, !37}
!105 = distinct !{!105, !106, !37}
!106 = !{!"llvm.loop.unroll.runtime.disable"}
!107 = !{!108, !110}
!108 = distinct !{!108, !109, !"list.RocList.reallocate: argument 0"}
!109 = distinct !{!109, !"list.RocList.reallocate"}
!110 = distinct !{!110, !111, !"roc_builtins.list.reserve: argument 0"}
!111 = distinct !{!111, !"roc_builtins.list.reserve"}
!112 = !{!113, !115, !108, !110}
!113 = distinct !{!113, !114, !"list.RocList.allocate: argument 0"}
!114 = distinct !{!114, !"list.RocList.allocate"}
!115 = distinct !{!115, !116, !"list.RocList.reallocateFresh: argument 0"}
!116 = distinct !{!116, !"list.RocList.reallocateFresh"}
!117 = !{!115, !108, !110}
!118 = !{!119, !108, !110}
!119 = distinct !{!119, !120, !"list.RocList.allocate: argument 0"}
!120 = distinct !{!120, !"list.RocList.allocate"}
!121 = !{!122, !124}
!122 = distinct !{!122, !123, !"list.RocList.makeUnique: argument 0"}
!123 = distinct !{!123, !"list.RocList.makeUnique"}
!124 = distinct !{!124, !125, !"roc_builtins.list.replace: argument 0"}
!125 = distinct !{!125, !"roc_builtins.list.replace"}
!126 = !{!127, !122, !124}
!127 = distinct !{!127, !128, !"list.RocList.allocate: argument 0"}
!128 = distinct !{!128, !"list.RocList.allocate"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"roc_builtins.list.reserve: argument 0"}
!131 = distinct !{!131, !"roc_builtins.list.reserve"}
!132 = !{!133, !130}
!133 = distinct !{!133, !134, !"list.RocList.reallocate: argument 0"}
!134 = distinct !{!134, !"list.RocList.reallocate"}
!135 = !{!136, !138, !133, !130}
!136 = distinct !{!136, !137, !"list.RocList.allocate: argument 0"}
!137 = distinct !{!137, !"list.RocList.allocate"}
!138 = distinct !{!138, !139, !"list.RocList.reallocateFresh: argument 0"}
!139 = distinct !{!139, !"list.RocList.reallocateFresh"}
!140 = !{!138, !133, !130}
!141 = !{!142, !133, !130}
!142 = distinct !{!142, !143, !"list.RocList.allocate: argument 0"}
!143 = distinct !{!143, !"list.RocList.allocate"}
!144 = !{!145, !147}
!145 = distinct !{!145, !146, !"list.RocList.makeUnique: argument 0"}
!146 = distinct !{!146, !"list.RocList.makeUnique"}
!147 = distinct !{!147, !148, !"roc_builtins.list.replace: argument 0"}
!148 = distinct !{!148, !"roc_builtins.list.replace"}
!149 = !{!150, !145, !147}
!150 = distinct !{!150, !151, !"list.RocList.allocate: argument 0"}
!151 = distinct !{!151, !"list.RocList.allocate"}
!152 = !{!153, !155}
!153 = distinct !{!153, !154, !"list.RocList.makeUnique: argument 0"}
!154 = distinct !{!154, !"list.RocList.makeUnique"}
!155 = distinct !{!155, !156, !"roc_builtins.list.replace: argument 0"}
!156 = distinct !{!156, !"roc_builtins.list.replace"}
!157 = !{!158, !153, !155}
!158 = distinct !{!158, !159, !"list.RocList.allocate: argument 0"}
!159 = distinct !{!159, !"list.RocList.allocate"}
!160 = !{!161, !163}
!161 = distinct !{!161, !162, !"list.RocList.allocate: argument 0"}
!162 = distinct !{!162, !"list.RocList.allocate"}
!163 = distinct !{!163, !164, !"roc_builtins.list.map: argument 0"}
!164 = distinct !{!164, !"roc_builtins.list.map"}
!165 = !{!163}
!166 = !{!167, !169}
!167 = distinct !{!167, !168, !"list.RocList.allocate: argument 0"}
!168 = distinct !{!168, !"list.RocList.allocate"}
!169 = distinct !{!169, !170, !"roc_builtins.list.map: argument 0"}
!170 = distinct !{!170, !"roc_builtins.list.map"}
!171 = !{!169}
!172 = !{!173, !175}
!173 = distinct !{!173, !174, !"list.RocList.allocate: argument 0"}
!174 = distinct !{!174, !"list.RocList.allocate"}
!175 = distinct !{!175, !176, !"roc_builtins.list.map: argument 0"}
!176 = distinct !{!176, !"roc_builtins.list.map"}
!177 = !{!175}
!178 = !{!179, !181}
!179 = distinct !{!179, !180, !"list.RocList.allocate: argument 0"}
!180 = distinct !{!180, !"list.RocList.allocate"}
!181 = distinct !{!181, !182, !"roc_builtins.list.map: argument 0"}
!182 = distinct !{!182, !"roc_builtins.list.map"}
!183 = !{!181}
!184 = !{!185, !187}
!185 = distinct !{!185, !186, !"list.RocList.reallocate: argument 0"}
!186 = distinct !{!186, !"list.RocList.reallocate"}
!187 = distinct !{!187, !188, !"roc_builtins.list.reserve: argument 0"}
!188 = distinct !{!188, !"roc_builtins.list.reserve"}
!189 = !{!190, !192, !185, !187}
!190 = distinct !{!190, !191, !"list.RocList.allocate: argument 0"}
!191 = distinct !{!191, !"list.RocList.allocate"}
!192 = distinct !{!192, !193, !"list.RocList.reallocateFresh: argument 0"}
!193 = distinct !{!193, !"list.RocList.reallocateFresh"}
!194 = !{!192, !185, !187}
!195 = !{!196, !185, !187}
!196 = distinct !{!196, !197, !"list.RocList.allocate: argument 0"}
!197 = distinct !{!197, !"list.RocList.allocate"}
!198 = !{!199}
!199 = distinct !{!199, !200, !"roc_builtins.list.append_unsafe: argument 0"}
!200 = distinct !{!200, !"roc_builtins.list.append_unsafe"}
!201 = !{!202, !204}
!202 = distinct !{!202, !203, !"list.RocList.reallocate: argument 0"}
!203 = distinct !{!203, !"list.RocList.reallocate"}
!204 = distinct !{!204, !205, !"roc_builtins.list.reserve: argument 0"}
!205 = distinct !{!205, !"roc_builtins.list.reserve"}
!206 = !{!207, !209, !202, !204}
!207 = distinct !{!207, !208, !"list.RocList.allocate: argument 0"}
!208 = distinct !{!208, !"list.RocList.allocate"}
!209 = distinct !{!209, !210, !"list.RocList.reallocateFresh: argument 0"}
!210 = distinct !{!210, !"list.RocList.reallocateFresh"}
!211 = !{!209, !202, !204}
!212 = !{!213, !202, !204}
!213 = distinct !{!213, !214, !"list.RocList.allocate: argument 0"}
!214 = distinct !{!214, !"list.RocList.allocate"}
!215 = !{!216}
!216 = distinct !{!216, !217, !"roc_builtins.list.append_unsafe: argument 0"}
!217 = distinct !{!217, !"roc_builtins.list.append_unsafe"}
!218 = !{!219, !221}
!219 = distinct !{!219, !220, !"list.RocList.allocate: argument 0"}
!220 = distinct !{!220, !"list.RocList.allocate"}
!221 = distinct !{!221, !222, !"roc_builtins.list.map: argument 0"}
!222 = distinct !{!222, !"roc_builtins.list.map"}
!223 = !{!221}
!224 = !{!225, !227}
!225 = distinct !{!225, !226, !"list.RocList.reallocate: argument 0"}
!226 = distinct !{!226, !"list.RocList.reallocate"}
!227 = distinct !{!227, !228, !"roc_builtins.list.reserve: argument 0"}
!228 = distinct !{!228, !"roc_builtins.list.reserve"}
!229 = !{!230, !232, !225, !227}
!230 = distinct !{!230, !231, !"list.RocList.allocate: argument 0"}
!231 = distinct !{!231, !"list.RocList.allocate"}
!232 = distinct !{!232, !233, !"list.RocList.reallocateFresh: argument 0"}
!233 = distinct !{!233, !"list.RocList.reallocateFresh"}
!234 = !{!232, !225, !227}
!235 = !{!236, !225, !227}
!236 = distinct !{!236, !237, !"list.RocList.allocate: argument 0"}
!237 = distinct !{!237, !"list.RocList.allocate"}
!238 = !{!239}
!239 = distinct !{!239, !240, !"roc_builtins.list.append_unsafe: argument 0"}
!240 = distinct !{!240, !"roc_builtins.list.append_unsafe"}
!241 = distinct !{!241, !242}
!242 = !{!"llvm.loop.peeled.count", i32 1}
!243 = !{!244, !246, !248, !250}
!244 = distinct !{!244, !245, !"list.RocList.allocate: argument 0"}
!245 = distinct !{!245, !"list.RocList.allocate"}
!246 = distinct !{!246, !247, !"list.RocList.reallocate: argument 0"}
!247 = distinct !{!247, !"list.RocList.reallocate"}
!248 = distinct !{!248, !249, !"roc_builtins.list.reserve: argument 0"}
!249 = distinct !{!249, !"roc_builtins.list.reserve"}
!250 = distinct !{!250, !251, !"roc_builtins.list.with_capacity: argument 0"}
!251 = distinct !{!251, !"roc_builtins.list.with_capacity"}
!252 = !{!248}
!253 = !{!254, !256, !258, !260}
!254 = distinct !{!254, !255, !"list.RocList.allocate: argument 0"}
!255 = distinct !{!255, !"list.RocList.allocate"}
!256 = distinct !{!256, !257, !"list.RocList.reallocate: argument 0"}
!257 = distinct !{!257, !"list.RocList.reallocate"}
!258 = distinct !{!258, !259, !"roc_builtins.list.reserve: argument 0"}
!259 = distinct !{!259, !"roc_builtins.list.reserve"}
!260 = distinct !{!260, !261, !"roc_builtins.list.with_capacity: argument 0"}
!261 = distinct !{!261, !"roc_builtins.list.with_capacity"}
!262 = !{!258}
!263 = distinct !{!263, !242}
!264 = !{!265, !267, !269, !271}
!265 = distinct !{!265, !266, !"list.RocList.allocate: argument 0"}
!266 = distinct !{!266, !"list.RocList.allocate"}
!267 = distinct !{!267, !268, !"list.RocList.reallocate: argument 0"}
!268 = distinct !{!268, !"list.RocList.reallocate"}
!269 = distinct !{!269, !270, !"roc_builtins.list.reserve: argument 0"}
!270 = distinct !{!270, !"roc_builtins.list.reserve"}
!271 = distinct !{!271, !272, !"roc_builtins.list.with_capacity: argument 0"}
!272 = distinct !{!272, !"roc_builtins.list.with_capacity"}
!273 = !{!269}
!274 = !{!275, !277}
!275 = distinct !{!275, !276, !"list.RocList.allocate: argument 0"}
!276 = distinct !{!276, !"list.RocList.allocate"}
!277 = distinct !{!277, !278, !"roc_builtins.list.map: argument 0"}
!278 = distinct !{!278, !"roc_builtins.list.map"}
!279 = !{!277}
!280 = !{!281, !283}
!281 = distinct !{!281, !282, !"list.RocList.reallocate: argument 0"}
!282 = distinct !{!282, !"list.RocList.reallocate"}
!283 = distinct !{!283, !284, !"roc_builtins.list.reserve: argument 0"}
!284 = distinct !{!284, !"roc_builtins.list.reserve"}
!285 = !{!286, !288, !281, !283}
!286 = distinct !{!286, !287, !"list.RocList.allocate: argument 0"}
!287 = distinct !{!287, !"list.RocList.allocate"}
!288 = distinct !{!288, !289, !"list.RocList.reallocateFresh: argument 0"}
!289 = distinct !{!289, !"list.RocList.reallocateFresh"}
!290 = !{!288, !281, !283}
!291 = !{!292, !281, !283}
!292 = distinct !{!292, !293, !"list.RocList.allocate: argument 0"}
!293 = distinct !{!293, !"list.RocList.allocate"}
!294 = !{!295}
!295 = distinct !{!295, !296, !"roc_builtins.list.append_unsafe: argument 0"}
!296 = distinct !{!296, !"roc_builtins.list.append_unsafe"}
!297 = !{!298, !300}
!298 = distinct !{!298, !299, !"list.RocList.reallocate: argument 0"}
!299 = distinct !{!299, !"list.RocList.reallocate"}
!300 = distinct !{!300, !301, !"roc_builtins.list.reserve: argument 0"}
!301 = distinct !{!301, !"roc_builtins.list.reserve"}
!302 = !{!303, !305, !298, !300}
!303 = distinct !{!303, !304, !"list.RocList.allocate: argument 0"}
!304 = distinct !{!304, !"list.RocList.allocate"}
!305 = distinct !{!305, !306, !"list.RocList.reallocateFresh: argument 0"}
!306 = distinct !{!306, !"list.RocList.reallocateFresh"}
!307 = !{!305, !298, !300}
!308 = !{!309, !298, !300}
!309 = distinct !{!309, !310, !"list.RocList.allocate: argument 0"}
!310 = distinct !{!310, !"list.RocList.allocate"}
!311 = !{!312}
!312 = distinct !{!312, !313, !"roc_builtins.list.append_unsafe: argument 0"}
!313 = distinct !{!313, !"roc_builtins.list.append_unsafe"}
!314 = !{!315, !317}
!315 = distinct !{!315, !316, !"list.RocList.allocate: argument 0"}
!316 = distinct !{!316, !"list.RocList.allocate"}
!317 = distinct !{!317, !318, !"roc_builtins.list.map: argument 0"}
!318 = distinct !{!318, !"roc_builtins.list.map"}
!319 = !{!317}
!320 = !{!321, !323}
!321 = distinct !{!321, !322, !"list.RocList.allocate: argument 0"}
!322 = distinct !{!322, !"list.RocList.allocate"}
!323 = distinct !{!323, !324, !"roc_builtins.list.map: argument 0"}
!324 = distinct !{!324, !"roc_builtins.list.map"}
!325 = !{!323}
!326 = !{!327, !329, !331, !333}
!327 = distinct !{!327, !328, !"list.RocList.allocate: argument 0"}
!328 = distinct !{!328, !"list.RocList.allocate"}
!329 = distinct !{!329, !330, !"list.RocList.reallocate: argument 0"}
!330 = distinct !{!330, !"list.RocList.reallocate"}
!331 = distinct !{!331, !332, !"roc_builtins.list.reserve: argument 0"}
!332 = distinct !{!332, !"roc_builtins.list.reserve"}
!333 = distinct !{!333, !334, !"roc_builtins.list.with_capacity: argument 0"}
!334 = distinct !{!334, !"roc_builtins.list.with_capacity"}
!335 = !{!331}
!336 = !{!337, !339, !341, !343}
!337 = distinct !{!337, !338, !"list.RocList.allocate: argument 0"}
!338 = distinct !{!338, !"list.RocList.allocate"}
!339 = distinct !{!339, !340, !"list.RocList.reallocate: argument 0"}
!340 = distinct !{!340, !"list.RocList.reallocate"}
!341 = distinct !{!341, !342, !"roc_builtins.list.reserve: argument 0"}
!342 = distinct !{!342, !"roc_builtins.list.reserve"}
!343 = distinct !{!343, !344, !"roc_builtins.list.with_capacity: argument 0"}
!344 = distinct !{!344, !"roc_builtins.list.with_capacity"}
!345 = !{!341}
!346 = !{!347, !349, !351, !353}
!347 = distinct !{!347, !348, !"list.RocList.allocate: argument 0"}
!348 = distinct !{!348, !"list.RocList.allocate"}
!349 = distinct !{!349, !350, !"list.RocList.reallocate: argument 0"}
!350 = distinct !{!350, !"list.RocList.reallocate"}
!351 = distinct !{!351, !352, !"roc_builtins.list.reserve: argument 0"}
!352 = distinct !{!352, !"roc_builtins.list.reserve"}
!353 = distinct !{!353, !354, !"roc_builtins.list.with_capacity: argument 0"}
!354 = distinct !{!354, !"roc_builtins.list.with_capacity"}
!355 = !{!351}
!356 = !{!357, !359, !361, !363}
!357 = distinct !{!357, !358, !"list.RocList.allocate: argument 0"}
!358 = distinct !{!358, !"list.RocList.allocate"}
!359 = distinct !{!359, !360, !"list.RocList.reallocate: argument 0"}
!360 = distinct !{!360, !"list.RocList.reallocate"}
!361 = distinct !{!361, !362, !"roc_builtins.list.reserve: argument 0"}
!362 = distinct !{!362, !"roc_builtins.list.reserve"}
!363 = distinct !{!363, !364, !"roc_builtins.list.with_capacity: argument 0"}
!364 = distinct !{!364, !"roc_builtins.list.with_capacity"}
!365 = !{!361}
!366 = !{!367, !369}
!367 = distinct !{!367, !368, !"list.RocList.makeUnique: argument 0"}
!368 = distinct !{!368, !"list.RocList.makeUnique"}
!369 = distinct !{!369, !370, !"roc_builtins.list.replace: argument 0"}
!370 = distinct !{!370, !"roc_builtins.list.replace"}
!371 = !{!372, !367, !369}
!372 = distinct !{!372, !373, !"list.RocList.allocate: argument 0"}
!373 = distinct !{!373, !"list.RocList.allocate"}
!374 = !{!375, !377}
!375 = distinct !{!375, !376, !"list.RocList.makeUnique: argument 0"}
!376 = distinct !{!376, !"list.RocList.makeUnique"}
!377 = distinct !{!377, !378, !"roc_builtins.list.replace: argument 0"}
!378 = distinct !{!378, !"roc_builtins.list.replace"}
!379 = !{!380, !375, !377}
!380 = distinct !{!380, !381, !"list.RocList.allocate: argument 0"}
!381 = distinct !{!381, !"list.RocList.allocate"}
!382 = !{!383}
!383 = distinct !{!383, !384, !"roc_builtins.list.reserve: argument 0"}
!384 = distinct !{!384, !"roc_builtins.list.reserve"}
!385 = !{!386, !383}
!386 = distinct !{!386, !387, !"list.RocList.reallocate: argument 0"}
!387 = distinct !{!387, !"list.RocList.reallocate"}
!388 = !{!389, !391, !386, !383}
!389 = distinct !{!389, !390, !"list.RocList.allocate: argument 0"}
!390 = distinct !{!390, !"list.RocList.allocate"}
!391 = distinct !{!391, !392, !"list.RocList.reallocateFresh: argument 0"}
!392 = distinct !{!392, !"list.RocList.reallocateFresh"}
!393 = !{!391, !386, !383}
!394 = !{!395, !386, !383}
!395 = distinct !{!395, !396, !"list.RocList.allocate: argument 0"}
!396 = distinct !{!396, !"list.RocList.allocate"}
!397 = !{!398}
!398 = distinct !{!398, !399, !"roc_builtins.list.sublist: argument 0"}
!399 = distinct !{!399, !"roc_builtins.list.sublist"}
!400 = !{!401}
!401 = distinct !{!401, !402, !"roc_builtins.list.sublist: argument 0"}
!402 = distinct !{!402, !"roc_builtins.list.sublist"}
!403 = !{!404, !406, !408, !410}
!404 = distinct !{!404, !405, !"list.RocList.allocate: argument 0"}
!405 = distinct !{!405, !"list.RocList.allocate"}
!406 = distinct !{!406, !407, !"list.RocList.reallocate: argument 0"}
!407 = distinct !{!407, !"list.RocList.reallocate"}
!408 = distinct !{!408, !409, !"roc_builtins.list.reserve: argument 0"}
!409 = distinct !{!409, !"roc_builtins.list.reserve"}
!410 = distinct !{!410, !411, !"roc_builtins.list.with_capacity: argument 0"}
!411 = distinct !{!411, !"roc_builtins.list.with_capacity"}
!412 = !{!408}
!413 = !{!414, !416, !418, !420}
!414 = distinct !{!414, !415, !"list.RocList.allocate: argument 0"}
!415 = distinct !{!415, !"list.RocList.allocate"}
!416 = distinct !{!416, !417, !"list.RocList.reallocate: argument 0"}
!417 = distinct !{!417, !"list.RocList.reallocate"}
!418 = distinct !{!418, !419, !"roc_builtins.list.reserve: argument 0"}
!419 = distinct !{!419, !"roc_builtins.list.reserve"}
!420 = distinct !{!420, !421, !"roc_builtins.list.with_capacity: argument 0"}
!421 = distinct !{!421, !"roc_builtins.list.with_capacity"}
!422 = !{!418}
!423 = !{!424, !426, !428, !430}
!424 = distinct !{!424, !425, !"list.RocList.allocate: argument 0"}
!425 = distinct !{!425, !"list.RocList.allocate"}
!426 = distinct !{!426, !427, !"list.RocList.reallocate: argument 0"}
!427 = distinct !{!427, !"list.RocList.reallocate"}
!428 = distinct !{!428, !429, !"roc_builtins.list.reserve: argument 0"}
!429 = distinct !{!429, !"roc_builtins.list.reserve"}
!430 = distinct !{!430, !431, !"roc_builtins.list.with_capacity: argument 0"}
!431 = distinct !{!431, !"roc_builtins.list.with_capacity"}
!432 = !{!428}
!433 = !{!434, !436, !438, !440}
!434 = distinct !{!434, !435, !"list.RocList.allocate: argument 0"}
!435 = distinct !{!435, !"list.RocList.allocate"}
!436 = distinct !{!436, !437, !"list.RocList.reallocate: argument 0"}
!437 = distinct !{!437, !"list.RocList.reallocate"}
!438 = distinct !{!438, !439, !"roc_builtins.list.reserve: argument 0"}
!439 = distinct !{!439, !"roc_builtins.list.reserve"}
!440 = distinct !{!440, !441, !"roc_builtins.list.with_capacity: argument 0"}
!441 = distinct !{!441, !"roc_builtins.list.with_capacity"}
!442 = !{!438}
!443 = !{!444}
!444 = distinct !{!444, !445, !"roc_builtins.list.reserve: argument 0"}
!445 = distinct !{!445, !"roc_builtins.list.reserve"}
!446 = !{!447, !444}
!447 = distinct !{!447, !448, !"list.RocList.reallocate: argument 0"}
!448 = distinct !{!448, !"list.RocList.reallocate"}
!449 = !{!450, !452, !447, !444}
!450 = distinct !{!450, !451, !"list.RocList.allocate: argument 0"}
!451 = distinct !{!451, !"list.RocList.allocate"}
!452 = distinct !{!452, !453, !"list.RocList.reallocateFresh: argument 0"}
!453 = distinct !{!453, !"list.RocList.reallocateFresh"}
!454 = !{!452, !447, !444}
!455 = !{!456, !447, !444}
!456 = distinct !{!456, !457, !"list.RocList.allocate: argument 0"}
!457 = distinct !{!457, !"list.RocList.allocate"}
!458 = !{!459}
!459 = distinct !{!459, !460, !"roc_builtins.list.append_unsafe: argument 0"}
!460 = distinct !{!460, !"roc_builtins.list.append_unsafe"}
!461 = !{!462}
!462 = distinct !{!462, !463, !"roc_builtins.list.reserve: argument 0"}
!463 = distinct !{!463, !"roc_builtins.list.reserve"}
!464 = !{!465, !462}
!465 = distinct !{!465, !466, !"list.RocList.reallocate: argument 0"}
!466 = distinct !{!466, !"list.RocList.reallocate"}
!467 = !{!468, !470, !465, !462}
!468 = distinct !{!468, !469, !"list.RocList.allocate: argument 0"}
!469 = distinct !{!469, !"list.RocList.allocate"}
!470 = distinct !{!470, !471, !"list.RocList.reallocateFresh: argument 0"}
!471 = distinct !{!471, !"list.RocList.reallocateFresh"}
!472 = !{!470, !465, !462}
!473 = !{!474, !465, !462}
!474 = distinct !{!474, !475, !"list.RocList.allocate: argument 0"}
!475 = distinct !{!475, !"list.RocList.allocate"}
!476 = !{!477}
!477 = distinct !{!477, !478, !"roc_builtins.list.append_unsafe: argument 0"}
!478 = distinct !{!478, !"roc_builtins.list.append_unsafe"}
!479 = !{!480}
!480 = distinct !{!480, !481, !"roc_builtins.list.reserve: argument 0"}
!481 = distinct !{!481, !"roc_builtins.list.reserve"}
!482 = !{!483, !480}
!483 = distinct !{!483, !484, !"list.RocList.reallocate: argument 0"}
!484 = distinct !{!484, !"list.RocList.reallocate"}
!485 = !{!486, !488, !483, !480}
!486 = distinct !{!486, !487, !"list.RocList.allocate: argument 0"}
!487 = distinct !{!487, !"list.RocList.allocate"}
!488 = distinct !{!488, !489, !"list.RocList.reallocateFresh: argument 0"}
!489 = distinct !{!489, !"list.RocList.reallocateFresh"}
!490 = !{!488, !483, !480}
!491 = !{!492, !483, !480}
!492 = distinct !{!492, !493, !"list.RocList.allocate: argument 0"}
!493 = distinct !{!493, !"list.RocList.allocate"}
!494 = !{!495}
!495 = distinct !{!495, !496, !"roc_builtins.list.append_unsafe: argument 0"}
!496 = distinct !{!496, !"roc_builtins.list.append_unsafe"}
!497 = !{!498}
!498 = distinct !{!498, !499, !"roc_builtins.list.reserve: argument 0"}
!499 = distinct !{!499, !"roc_builtins.list.reserve"}
!500 = !{!501, !498}
!501 = distinct !{!501, !502, !"list.RocList.reallocate: argument 0"}
!502 = distinct !{!502, !"list.RocList.reallocate"}
!503 = !{!504, !506, !501, !498}
!504 = distinct !{!504, !505, !"list.RocList.allocate: argument 0"}
!505 = distinct !{!505, !"list.RocList.allocate"}
!506 = distinct !{!506, !507, !"list.RocList.reallocateFresh: argument 0"}
!507 = distinct !{!507, !"list.RocList.reallocateFresh"}
!508 = !{!506, !501, !498}
!509 = !{!510, !501, !498}
!510 = distinct !{!510, !511, !"list.RocList.allocate: argument 0"}
!511 = distinct !{!511, !"list.RocList.allocate"}
!512 = !{!513}
!513 = distinct !{!513, !514, !"roc_builtins.list.append_unsafe: argument 0"}
!514 = distinct !{!514, !"roc_builtins.list.append_unsafe"}
!515 = !{!516}
!516 = distinct !{!516, !517, !"roc_builtins.list.reserve: argument 0"}
!517 = distinct !{!517, !"roc_builtins.list.reserve"}
!518 = !{!519, !516}
!519 = distinct !{!519, !520, !"list.RocList.reallocate: argument 0"}
!520 = distinct !{!520, !"list.RocList.reallocate"}
!521 = !{!522, !524, !519, !516}
!522 = distinct !{!522, !523, !"list.RocList.allocate: argument 0"}
!523 = distinct !{!523, !"list.RocList.allocate"}
!524 = distinct !{!524, !525, !"list.RocList.reallocateFresh: argument 0"}
!525 = distinct !{!525, !"list.RocList.reallocateFresh"}
!526 = !{!524, !519, !516}
!527 = !{!528, !519, !516}
!528 = distinct !{!528, !529, !"list.RocList.allocate: argument 0"}
!529 = distinct !{!529, !"list.RocList.allocate"}
!530 = !{!531}
!531 = distinct !{!531, !532, !"roc_builtins.list.append_unsafe: argument 0"}
!532 = distinct !{!532, !"roc_builtins.list.append_unsafe"}
!533 = !{!534}
!534 = distinct !{!534, !535, !"roc_builtins.list.reserve: argument 0"}
!535 = distinct !{!535, !"roc_builtins.list.reserve"}
!536 = !{!537, !534}
!537 = distinct !{!537, !538, !"list.RocList.reallocate: argument 0"}
!538 = distinct !{!538, !"list.RocList.reallocate"}
!539 = !{!540, !542, !537, !534}
!540 = distinct !{!540, !541, !"list.RocList.allocate: argument 0"}
!541 = distinct !{!541, !"list.RocList.allocate"}
!542 = distinct !{!542, !543, !"list.RocList.reallocateFresh: argument 0"}
!543 = distinct !{!543, !"list.RocList.reallocateFresh"}
!544 = !{!542, !537, !534}
!545 = !{!546, !537, !534}
!546 = distinct !{!546, !547, !"list.RocList.allocate: argument 0"}
!547 = distinct !{!547, !"list.RocList.allocate"}
!548 = !{!549}
!549 = distinct !{!549, !550, !"roc_builtins.list.append_unsafe: argument 0"}
!550 = distinct !{!550, !"roc_builtins.list.append_unsafe"}
!551 = !{!552}
!552 = distinct !{!552, !553, !"roc_builtins.list.reserve: argument 0"}
!553 = distinct !{!553, !"roc_builtins.list.reserve"}
!554 = !{!555, !552}
!555 = distinct !{!555, !556, !"list.RocList.reallocate: argument 0"}
!556 = distinct !{!556, !"list.RocList.reallocate"}
!557 = !{!558, !560, !555, !552}
!558 = distinct !{!558, !559, !"list.RocList.allocate: argument 0"}
!559 = distinct !{!559, !"list.RocList.allocate"}
!560 = distinct !{!560, !561, !"list.RocList.reallocateFresh: argument 0"}
!561 = distinct !{!561, !"list.RocList.reallocateFresh"}
!562 = !{!560, !555, !552}
!563 = !{!564, !555, !552}
!564 = distinct !{!564, !565, !"list.RocList.allocate: argument 0"}
!565 = distinct !{!565, !"list.RocList.allocate"}
!566 = !{!567}
!567 = distinct !{!567, !568, !"roc_builtins.list.append_unsafe: argument 0"}
!568 = distinct !{!568, !"roc_builtins.list.append_unsafe"}
!569 = !{!570, !572}
!570 = distinct !{!570, !571, !"list.RocList.reallocate: argument 0"}
!571 = distinct !{!571, !"list.RocList.reallocate"}
!572 = distinct !{!572, !573, !"roc_builtins.list.reserve: argument 0"}
!573 = distinct !{!573, !"roc_builtins.list.reserve"}
!574 = !{!575, !577, !570, !572}
!575 = distinct !{!575, !576, !"list.RocList.allocate: argument 0"}
!576 = distinct !{!576, !"list.RocList.allocate"}
!577 = distinct !{!577, !578, !"list.RocList.reallocateFresh: argument 0"}
!578 = distinct !{!578, !"list.RocList.reallocateFresh"}
!579 = !{!577, !570, !572}
!580 = !{!581, !570, !572}
!581 = distinct !{!581, !582, !"list.RocList.allocate: argument 0"}
!582 = distinct !{!582, !"list.RocList.allocate"}
!583 = !{!584}
!584 = distinct !{!584, !585, !"roc_builtins.list.reserve: argument 0"}
!585 = distinct !{!585, !"roc_builtins.list.reserve"}
!586 = !{!587, !584}
!587 = distinct !{!587, !588, !"list.RocList.reallocate: argument 0"}
!588 = distinct !{!588, !"list.RocList.reallocate"}
!589 = !{!590, !592, !587, !584}
!590 = distinct !{!590, !591, !"list.RocList.allocate: argument 0"}
!591 = distinct !{!591, !"list.RocList.allocate"}
!592 = distinct !{!592, !593, !"list.RocList.reallocateFresh: argument 0"}
!593 = distinct !{!593, !"list.RocList.reallocateFresh"}
!594 = !{!592, !587, !584}
!595 = !{!596, !587, !584}
!596 = distinct !{!596, !597, !"list.RocList.allocate: argument 0"}
!597 = distinct !{!597, !"list.RocList.allocate"}
!598 = !{!599}
!599 = distinct !{!599, !600, !"roc_builtins.list.append_unsafe: argument 0"}
!600 = distinct !{!600, !"roc_builtins.list.append_unsafe"}
!601 = !{!602, !604}
!602 = distinct !{!602, !603, !"list.RocList.allocate: argument 0"}
!603 = distinct !{!603, !"list.RocList.allocate"}
!604 = distinct !{!604, !605, !"roc_builtins.list.map: argument 0"}
!605 = distinct !{!605, !"roc_builtins.list.map"}
!606 = !{!604}
!607 = !{!608, !610}
!608 = distinct !{!608, !609, !"list.RocList.allocate: argument 0"}
!609 = distinct !{!609, !"list.RocList.allocate"}
!610 = distinct !{!610, !611, !"roc_builtins.list.map: argument 0"}
!611 = distinct !{!611, !"roc_builtins.list.map"}
!612 = !{!610}
!613 = !{!614, !616}
!614 = distinct !{!614, !615, !"list.RocList.allocate: argument 0"}
!615 = distinct !{!615, !"list.RocList.allocate"}
!616 = distinct !{!616, !617, !"roc_builtins.list.map: argument 0"}
!617 = distinct !{!617, !"roc_builtins.list.map"}
!618 = !{!616}
!619 = !{!620, !622}
!620 = distinct !{!620, !621, !"list.RocList.allocate: argument 0"}
!621 = distinct !{!621, !"list.RocList.allocate"}
!622 = distinct !{!622, !623, !"roc_builtins.list.map: argument 0"}
!623 = distinct !{!623, !"roc_builtins.list.map"}
!624 = !{!622}
!625 = !{!626, !628}
!626 = distinct !{!626, !627, !"list.RocList.allocate: argument 0"}
!627 = distinct !{!627, !"list.RocList.allocate"}
!628 = distinct !{!628, !629, !"roc_builtins.list.map: argument 0"}
!629 = distinct !{!629, !"roc_builtins.list.map"}
!630 = !{!628}
!631 = !{!632, !634}
!632 = distinct !{!632, !633, !"list.RocList.allocate: argument 0"}
!633 = distinct !{!633, !"list.RocList.allocate"}
!634 = distinct !{!634, !635, !"roc_builtins.list.map: argument 0"}
!635 = distinct !{!635, !"roc_builtins.list.map"}
!636 = !{!634}
!637 = !{!638, !640}
!638 = distinct !{!638, !639, !"list.RocList.allocate: argument 0"}
!639 = distinct !{!639, !"list.RocList.allocate"}
!640 = distinct !{!640, !641, !"roc_builtins.list.map: argument 0"}
!641 = distinct !{!641, !"roc_builtins.list.map"}
!642 = !{!640}
!643 = !{!644, !646}
!644 = distinct !{!644, !645, !"list.RocList.allocate: argument 0"}
!645 = distinct !{!645, !"list.RocList.allocate"}
!646 = distinct !{!646, !647, !"roc_builtins.list.map: argument 0"}
!647 = distinct !{!647, !"roc_builtins.list.map"}
!648 = !{!646}
!649 = !{!650, !652, !654, !656}
!650 = distinct !{!650, !651, !"list.RocList.allocate: argument 0"}
!651 = distinct !{!651, !"list.RocList.allocate"}
!652 = distinct !{!652, !653, !"list.RocList.reallocate: argument 0"}
!653 = distinct !{!653, !"list.RocList.reallocate"}
!654 = distinct !{!654, !655, !"roc_builtins.list.reserve: argument 0"}
!655 = distinct !{!655, !"roc_builtins.list.reserve"}
!656 = distinct !{!656, !657, !"roc_builtins.list.with_capacity: argument 0"}
!657 = distinct !{!657, !"roc_builtins.list.with_capacity"}
!658 = !{!654}
